{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_plus.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_calendar_today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_double_left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_double_right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_price_move.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/items.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/native_select.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow_equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range_slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick_steps.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number_selector.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_date_time","forEach","_logout","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_calendar_today","_icon_calendar","_icon_chevron_double_left","_icon_chevron_double_right","_icon_chevron_left","_icon_chevron_right","_icon_clear","_icon_close","_icon_exclamation","_icon_minus","_icon_plus","Button","_ref$className","className","has_effect","id","is_disabled","onClick","tabIndex","text","wrapperClassName","classes","button","_react2","default","disabled","wrapper","string","bool","func","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_Date","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","trading_times","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","isTimeValid","split","_ref2","_slicedToArray","toMoment","ServerTime","getTradingTimes","_ref3","trading_times_response","submarkets","symbols","symbol","underlying","abrupt","sent","markets","echo_req","times","close","_x2","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","clone","add","isSameOrBefore","getExpiryTime","expiry_time","market_close_times","start_time","end_time","market_close_time","end_moment","expiry_sessions","open","minDate","diff","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getContractCategories","contract_types_list","Tooltip","message","alignment","icon","icon_name","icon_class","_classnames2","data-tooltip","data-tooltip-pos","node","Fieldset","header","is_center","onMouseEnter","onMouseLeave","tooltip","fieldset_class","field_left_class","_tooltip2","array","InputField","checked","data_tip","data_value","error_messages","fractional_digits","helper","is_float","is_incrementable","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","label","max_length","max_value","min_value","onChange","placeholder","prefix","required","has_error","has_valid_length","max_is_disabled","min_is_disabled","incrementValue","decrementValue","input","data-for","data-value","data-tip","maxLength","onKeyDown","keyCode","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","readOnly","input_increment","_button2","IconPlus","IconMinus","htmlFor","MobxPropTypes","arrayOrObservableArray","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","loading_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","_fill_template","Localize","str","replacers","localized","fillTemplate","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","duration","payout","theme","is_dark_mode_on","portfolio_drawer","is_portfolio_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","unit","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","some","CalendarPanelTypes","calendar_date","calendar_view","date_format","isPeriodDisabled","max_date","min_date","selected_date","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","ASIANU","ASIAND","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","second","unix","session","isBetween","_icon_trade_types","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","week_headers_abbr","getDecade","moment_date","year","getCentury","_icon_maximize","_icon_quick_portfolio","_icon_settings","_ui","_connect","RemainingTime","_ref$end_time","remaining_time","formatDuration","getDiffDuration","isRequired","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconClose","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","_PopConfirm","_Types","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","stake","IconTradeType","returns","_money2","is_purchase_error","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","has_increased","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","renderCards","TimePickerDropdown","selectOption","_this$props$value$spl","_this$props$value$spl2","prev_hour","prev_minute","is_type_selected","setState","last_updated_type","stopPropagation","resetValues","state","is_hour_selected","is_minute_selected","prevProps","prevState","_state","toggle","_props","preClass","start_moment_clone","_value$split","_value$split2","is_clearable","saveHourRef","is_enabled","saveMinuteRef","mm","TimePicker","toggleDropDown","is_open","handleChange","arg","saveRef","nodeName","wrapper_ref","target_element","handleClickOutside","contains","_props2","is_align_right","padding","prefix_class","_input_field2","value_split","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","_toggle_button2","toggled","ToggleButton","toggle_style","_icon_logout","InkBar","inkbar_style","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","ContractTypeCell","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","upgrade_info","getBasicUpgradeInfo","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCryptocurrency","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","epochToMoment","epoch","isValid","isUTC","moment_obj","setTime","convertToUnix","formatDate","daysFromTodayTo","startOf","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","addDays","num_of_days","addMonths","num_of_months","addYears","num_of_years","subDays","subMonths","subYears","date_1","date_2","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor34","changeDurationValidationRules","changeAllowEquals","delay","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_equal_checked","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","getProposalInfo","setChartBarrier","query_params","duration_options","hasCallPutEqual","check_callput_equal_duration","contract_type_list","contract_duration_list","rise_fall_equal","hasDurationForCallPutEqual","is_allow_equal","_ref6","_callee4","_context4","refresh","prepareTradeStore","_x3","runInAction","_callee6","_context6","_this9","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","_proposal_response$ec","Duration","StartDate","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeStartDate","onChangeExpiry","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_type","obj_expiry_date","obj_market_close_times","obj_expiry_time","obj_duration_min_max","createProposalRequestForContract","ask_price","display_value","contract_basis","obj_contract_basis","toFixed","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_theme_wrapper2","_header2","_error_boundary2","_app_contents2","_routes2","_PortfolioDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","_ttReactCustomScrollbars","PortfolioDrawer","toggleDrawer","body_content","_empty_portfolio_message2","_portfolio_drawer_card2","portfolio-drawer--open","Scrollbars","autoHide","togglePortfolioDrawer","IconArrow","IconBack","IconCalendarToday","fillOpacity","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","transform","IconBell","stroke","IconCashier","rx","IconHamburger","strokeLinecap","IconTrade","PortfolioDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","SmartChart","form_wrapper_class","Suspense","fallback","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","setWrapperRef","is_dialog_open","getDisplayText","_this$props","findInArray","getStyles","container_classes","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","ContractTypeItem","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","_icon_price_move","ContractInfo","IconPriceMove","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_DropDown2","is_alignment_left","_allow_equals2","observableObject","Dropdown","list_ref","createRef","curr_index","getItemFromValue","is_list_visible","onKeyPressed","is_single_option","getValueFromIndex","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","_native_select2","left_alignment_style","list_width","isArrayLike","dropdown-container--left","dropdown-container--show","dropdown-container--disabled","dropdown__display--clicked","select-arrow--left","enter","enterDone","exit","onEntered","offsetWidth","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","renderThumbHorizontal","_items2","highlightedIdx","items","Items","list__item--selected","list__item--highlighted","NativeSelect","isArray","AllowEquals","expiry_list","is_24_hours_contract","expiry_time_sessions","max_date_duration","min_date_expiry","max_duration","min_duration","max_daily_duration","daily","moment_contract_start_date_time","has_intraday_duration_unit","isSame","expiry_date_time","expiry_date_market_close","is_expired_next_day","duration_unit_text","has_end_time","expiry","pop","endtime_container_class","has-time","_RangeSlider2","_DatePicker2","has_today_btn","disabled_selector","_time_picker2","DatePicker","is_datepicker_visible","is_clear_btn_visible","onClickOutside","mainNode","updateDatePickerValue","onSelectCalendar","onChangeInput","clearDatePickerInput","calendar","resetCalendar","new_date","current_date","_this$props2","renderInputField","_this$props3","nativeEvent","defaultValue","datepicker__icon--is-hidden","datepicker__picker--show","_Calendar2","onSelect","defaultProps","Calendar","_initialiseProps","_calendar_header2","navigateTo","switchView","_calendar_body2","updateSelected","_calendar_footer2","setToday","view","updateSelectedDate","dataset","is_before","is_after","formatted_date","month","decade","_props3","default_date","_props4","now","_props5","start_of_period","endOf","_panels","CalendarBody","calendar_body","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","days","dates","moment_today","moment_cur_date","daysInMonth","moment_month_start","moment_month_end","moment_selected","padLeft","start_of_next_month","moment_start_date","is_active","is_today","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--disabled","calendar__cell--other","data-date","getDays","moment_selected_date","data-month","_helper","_getDecade$split","_getDecade$split2","start_of_decade","end_of_decade","years","is_other_decade","data-year","decades","min_year","_decade$split","_decade$split2","is_other_century","data-decade","CalendarFooter","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","century","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","_calendar_button2","calendar__nav--disabled","is_hidden","calendar__btn--disabled","CalendarButton","RangeSlider","first_tick","is_error","steps","_tick_steps2","TickSteps","arr_ticks","ticks__step--active","ticks__step--marked","arr_five","_number_selector2","arr_arr_numbers","selected_number","NumberSelector","getAttribute","arr_numbers","arrayOf","current_date_config","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","msg","_localize3","_icon_error2","shape","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","last","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","SellInfo","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","_close_button2","CloseButton","ToastMessage","toast","_ToastMessage2","AppContents","app-contents--show-portfolio-drawer","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","NetworkStatus","_server_time2","TogglePortfolio","ToggleFullScreen","ToggleSettings","is_settings_visible","is_language_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_portfolio","_toggle_settings","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconQuickPortfolio","IconSettings","toggle_portfolio_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","LoginButton","ToggleNotificationsDrawer","account_title","_account_info","_install_pwa_button","_login_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","_localize2","AccountSwitcher","_account_switcher","_upgrade_button","_Drawer","accounts_toggle_btn","doSwitch","UpgradeButton","IconLogout","account_switcher","prompt","userChoice","choice_result","outcome","_InkBar2","_inkbar","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","active_el","Switch","_route_with_sub_routes2","LoginPrompt","onSignup","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","Notifications","_notifications","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","_Routes2","virtual_account_loginid","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,aAAA,GAGAZ,KAQA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAA,SAAAhC,GACA,IAAAiC,KAKAC,EAAA3B,EAAAP,GACA,OAAAkC,EAGA,GAAAA,EACAD,EAAAzB,KAAA0B,EAAA,QACK,CAEL,IAAAC,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACAJ,EAAA3B,EAAAP,IAAAqC,EAAAC,KAEAL,EAAAzB,KAAA0B,EAAA,GAAAC,GAGA,IAEAI,EAFAC,EAAAC,SAAAC,qBAAA,WACAC,EAAAF,SAAAG,cAAA,UAGAD,EAAAE,QAAA,QACAF,EAAAG,QAAA,IACArB,EAAAsB,IACAJ,EAAAK,aAAA,QAAAvB,EAAAsB,IAEAJ,EAAAM,IA3DA,SAAAjD,GACA,OAAAyB,EAAAyB,EAAA,KAAyCC,IAAA,MAAAC,iBAAA,mBAAAC,SAAA,WAAAC,uBAAA,yBAAAC,iBAAA,mBAAAC,SAAA,WAAAC,qBAAA,uBAAAC,OAAA,SAAAC,cAAA,gBAAAC,iBAAA,mBAAAC,UAAA,YAAAC,eAAA,iBAAAC,SAAA,WAAAC,UAAA,YAAAC,sBAAA,sBAAAC,YAAA,eAA4elE,OAAA,KAA6BmD,IAAA,uBAAAC,iBAAA,uBAAAC,SAAA,uBAAAC,uBAAA,uBAAAC,iBAAA,uBAAAC,SAAA,uBAAAC,qBAAA,uBAAAC,OAAA,uBAAAC,cAAA,uBAAAC,iBAAA,uBAAAC,UAAA,uBAAAC,eAAA,uBAAAC,SAAA,uBAAAC,UAAA,uBAAAC,sBAAA,uBAAAC,YAAA,wBAAsmBlE,GAAA,MA0DxpCmE,CAAAnE,GAEAuC,EAAA,SAAA6B,GAEAzB,EAAA0B,QAAA1B,EAAA2B,OAAA,KACAC,aAAAzB,GACA,IAAA0B,EAAAjE,EAAAP,GACA,OAAAwE,EAAA,CACA,GAAAA,EAAA,CACA,IAAAC,EAAAL,IAAA,SAAAA,EAAAM,KAAA,UAAAN,EAAAM,MACAC,EAAAP,KAAAQ,QAAAR,EAAAQ,OAAA3B,IACA4B,EAAA,IAAAC,MAAA,iBAAA9E,EAAA,cAAAyE,EAAA,KAAAE,EAAA,KACAE,EAAAH,KAAAD,EACAI,EAAAE,QAAAJ,EACAH,EAAA,GAAAK,GAEAtE,EAAAP,QAAAgF,IAGA,IAAAlC,EAAAmC,WAAA,WACA1C,GAAwBmC,KAAA,UAAAE,OAAAjC,KAClB,MACNA,EAAA0B,QAAA1B,EAAA2B,OAAA/B,EACAC,EAAA0C,YAAAvC,GAGA,OAAAP,QAAA+C,IAAAlD,IAIAR,EAAA2D,EAAAvE,EAGAY,EAAA4D,EAAA1D,EAGAF,EAAA6D,EAAA,SAAAzD,EAAA0D,EAAAC,GACA/D,EAAAgE,EAAA5D,EAAA0D,IACA9E,OAAAiF,eAAA7D,EAAA0D,GAA0CI,YAAA,EAAAC,IAAAJ,KAK1C/D,EAAAoE,EAAA,SAAAhE,GACA,oBAAAiE,eAAAC,aACAtF,OAAAiF,eAAA7D,EAAAiE,OAAAC,aAAwDC,MAAA,WAExDvF,OAAAiF,eAAA7D,EAAA,cAAiDmE,OAAA,KAQjDvE,EAAAwE,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAvE,EAAAuE,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAA3F,OAAA4F,OAAA,MAGA,GAFA5E,EAAAoE,EAAAO,GACA3F,OAAAiF,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAvE,EAAA6D,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIA3E,EAAA+E,EAAA,SAAA1E,GACA,IAAA0D,EAAA1D,KAAAqE,WACA,WAA2B,OAAArE,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAA6D,EAAAE,EAAA,IAAAA,GACAA,GAIA/D,EAAAgE,EAAA,SAAAgB,EAAAC,GAAsD,OAAAjG,OAAAC,UAAAC,eAAAC,KAAA6F,EAAAC,IAGtDjF,EAAAyB,EAAA,WAGAzB,EAAAkF,GAAA,SAAAC,GAA8D,MAApBC,QAAAhC,MAAA+B,GAAoBA,GAE9D,IAAAE,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAtG,KAAA+F,KAAAO,GACAA,EAAAtG,KAAAX,EACAiH,IAAAG,QACA,QAAA7G,EAAA,EAAgBA,EAAA0G,EAAAxG,OAAuBF,IAAAP,EAAAiH,EAAA1G,IACvC,IAAAU,EAAAkG,EAIAhG,EAAAR,MAAA,4CAEAU,iiBCzNAgG,EAAAzF,EAAA,QAIAA,EAAA,QACAA,EAAA,mnBAEA,IAAM0F,GAAuBC,UAAU,EAAMd,KAAK,EAAMe,KAAK,KAEhDC,6IAAqBC,yDAE1B,IAAMC,KAGAC,EAAaC,KAAKC,QAAQC,WAChC,GAAIH,EACA,IAAK,IAAMnB,KAAOmB,EACdD,EAAOlB,GAAOmB,EAAWnB,GAKjC,IAAK,IAAMA,KAAOoB,KAAKG,MAAMC,MACpBX,EAAmBb,KACpBkB,EAAOlB,GAAOoB,KAAKG,MAAMC,MAAMxB,IAIvC,OAAAyB,GACIH,WAAYJ,GACTA,cAIJQ,mBACHJ,WAAYK,UAAUxB,OACtByB,OAAYD,UAAUxB,OACtB0B,OAAYF,UAAUxB,OACtB5F,QAAYoH,UAAUxB,OACtB2B,GAAYH,UAAUxB,WAMjB4B,UAAU,SAACC,EAAYC,GAAb,OAAwB,SAAAC,GAC3C,IAAKD,EACD,OAJqB,SAACA,GAAD,OAAY,SAAAC,GAAA,OAAa,EAAAtB,EAAAuB,QAAOF,EAAP,EAAe,EAAArB,EAAAwB,UAASF,KAI/DG,CAAqBL,EAArBK,CAAiCH,GAG5C,IAAMI,GAAW,EAAA1B,EAAAwB,UAASF,GAEpBK,EAPkD,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,EAAAC,EAAAxB,KAAAmB,GAAA,QAAAM,EAAAC,UAAA9I,OAAA+I,EAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAP,EAAAC,EAAAO,EAAA9B,MAAAqB,EAAAF,EAAAY,WAAAhJ,OAAAiJ,eAAAb,IAAAjI,KAAAK,MAAA8H,GAAArB,MAAAiC,OAAAN,KAAAJ,EAQpDnB,MAAQ,IAAIQ,EARwCW,EAqBpDW,WACIxC,SAAUa,UAAUxB,QAtB4B+C,EAAAP,EAAAD,GAAA,OAAAa,EAAAhB,EAO1BL,GAP0BsB,EAAAjB,IAAAvC,IAAA,SAAAN,MAAA,WAWhD,OAAO+D,UAAMnH,cACTgG,EADGb,KAGIL,KAAKG,OACRC,MAAOJ,KAAKI,QAEhBJ,KAAKG,MAAMT,cAjBiCyB,EAAA,GA0BlDmB,EAAqBxB,EAAUyB,aAC9BzB,EAAUjD,MACTiD,EAAU0B,aAAe1B,EAAU0B,YAAY3E,MAChD,UAGP,OAFAsD,EAAgBoB,YAAhB,SAAuCD,GAEhC,EAAA9C,EAAAuB,QAAOF,EAAP,CAAeM,sGC7E1BpI,OAAA0J,KAAAC,GAAAC,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwE,EAAA9D,wJCAA7F,OAAA0J,KAAAG,GAAAD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0E,EAAAhE,yFACOiE,gCACAC,yGCFP/J,OAAA0J,KAAAM,GAAAJ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6E,EAAAnE,qBACA7F,OAAA0J,KAAAO,GAAAL,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA8E,EAAApE,qBACA7F,OAAA0J,KAAAQ,GAAAN,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+E,EAAArE,qBACA7F,OAAA0J,KAAAS,GAAAP,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAgF,EAAAtE,qBACA7F,OAAA0J,KAAAU,GAAAR,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAiF,EAAAvE,qBACA7F,OAAA0J,KAAAW,GAAAT,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAkF,EAAAxE,qBACA7F,OAAA0J,KAAAY,GAAAV,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAmF,EAAAzE,qBACA7F,OAAA0J,KAAAa,GAAAX,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAoF,EAAA1E,qBACA7F,OAAA0J,KAAAc,GAAAZ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAqF,EAAA3E,qBACA7F,OAAA0J,KAAAe,GAAAb,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAsF,EAAA5E,qBACA7F,OAAA0J,KAAAgB,GAAAd,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAuF,EAAA7E,qBACA7F,OAAA0J,KAAAiB,GAAAf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwF,EAAA9E,qBACA7F,OAAA0J,KAAAkB,GAAAhB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAyF,EAAA/E,gGCZA,QAAA7E,EAAA,QACAA,EAAA,uDAEA,IAAM6J,EAAS,SAAAvC,GAUT,IATF3B,EASE2B,EATF3B,SASEmE,EAAAxC,EARFyC,iBAQExG,IAAAuG,EARU,GAQVA,EAPFE,EAOE1C,EAPF0C,WACAC,EAME3C,EANF2C,GACAC,EAKE5C,EALF4C,YACAC,EAIE7C,EAJF6C,QACAC,EAGE9C,EAHF8C,SACAC,EAEE/C,EAFF+C,KACAC,EACEhD,EADFgD,iBAEMC,SAAgBP,EAAa,UAAY,IAAzC,IAA+CD,EAC/CS,EACFC,EAAAC,QAAAvJ,cAAA,UACI8I,GAAIA,EACJF,UAAWQ,EACXJ,QAASA,QAAW5G,EACpBoH,SAAUT,EACVE,SAAUA,GAAY,KAEtBK,EAAAC,QAAAvJ,cAAA,YAAOkJ,GACN1E,GAGHiF,EAAWH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWO,GAAmBE,GAEpD,OAAOF,EAAmBM,EAAUJ,GAGxCX,EAAO1B,WACHxC,SAAkBa,UAAUxB,OAC5B+E,UAAkBvD,UAAUqE,OAC5Bb,WAAkBxD,UAAUsE,KAC5Bb,GAAkBzD,UAAUqE,OAC5BX,YAAkB1D,UAAUsE,KAC5BX,QAAkB3D,UAAUuE,KAC5BV,KAAkB7D,UAAUqE,OAC5BP,iBAAkB9D,UAAUqE,kBAGjBhB,ohBC3CfmB,EAAAhL,EAAA,GAOAiL,EAAAjL,EAAA,uDACAA,EAAA,MACAkL,EAAAlL,EAAA,mtBAOqBmL,KAsOhBC,SAAOC,QA2BPD,SAAOC,QAQPD,SAAOC,qBA7OR,SAAAF,IAA0B,IAAdG,EAAc3D,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,mGAAAF,CAAAxB,KAAAkF,GAAAI,EAAAtF,KAAA,oBAAAuF,EAAAvF,MAAAsF,EAAAtF,KAAA,mBAAAwF,EAAAxF,WAZ1ByF,sBAAwB,KAYEzF,KAX1B0F,wBAA0B,KAWA,IAElBC,EAIAN,EAJAM,WACAC,EAGAP,EAHAO,yBACAC,EAEAR,EAFAQ,2BACAC,EACAT,EADAS,iBAGJ/M,OAAOiF,eAAegC,KAAM,cACxB/B,YAAY,EACZ8H,UAAY,IAEhBhN,OAAOiF,eAAegC,KAAM,4BACxB/B,YAAY,EACZ8H,UAAY,IAEhBhN,OAAOiF,eAAegC,KAAM,8BACxB/B,YAAY,EACZ8H,UAAY,IAGhB/F,KAAK2F,WAA6BA,EAClC3F,KAAK4F,yBAA6BA,MAClC5F,KAAK6F,2BAA6BA,MAClC7F,KAAKgG,mBAAmBF,GAExB9F,KAAKiG,+BACLjG,KAAKkG,iCACLlG,KAAKmG,oEAUGC,GACR,IAAIC,GAAW,EAAAtB,EAAAuB,MAAKtG,MAapB,OAXK,EAAAgF,EAAAuB,eAAcvG,KAAK2F,cACpBU,EAASV,WAAa3F,KAAK2F,YAG3BS,GAAcA,EAAWxN,SACzByN,EAAWD,EAAWI,OAClB,SAAC/M,EAAQ+B,GAAT,OAAezC,OAAO0N,OAAOhN,EAAdiN,KAAyBlL,EAAI6K,EAAS7K,WAKtD6K,yDAQoB,IAAAM,EAAA3G,KACvBA,KAAK4F,yBAAyBhN,SAC9B,EAAAmM,EAAA6B,UACI,kBAAMD,EAAKf,yBAAyBiB,IAAI,SAAAnO,GAAA,OAAKiO,EAAKjO,MAClD,kBAAMiO,EAAKG,cAAcH,EAAKf,yBAA0BV,EAAU6B,SAASC,0EAUtD,IAAAzF,EAAAvB,KACzBA,KAAK6F,2BAA2BjN,SAChC,EAAAmM,EAAA6B,UACI,kBAAMrF,EAAKsE,2BAA2BgB,IAAI,SAAAnO,GAAA,OAAK6I,EAAK7I,MACpD,kBAAM6I,EAAKuF,cAAcvF,EAAKsE,2BAA4BX,EAAU6B,SAASE,yDAY3Eb,EAAYc,GACtB,IAAMb,EAAWc,KAAKC,UAAUpH,KAAKqH,YAAYjB,GAAa,SAACxH,EAAKN,GAChE,GAAc,OAAVA,EAAgB,OAAOA,IAI3B4I,IAAYhC,EAAU6B,SAASC,cAC/BM,aAAaC,QAAQvH,KAAKwC,YAAY3E,KAAMwI,GACrCa,IAAYhC,EAAU6B,SAASE,iBACtCO,eAAeD,QAAQvH,KAAKwC,YAAY3E,KAAMwI,iDAShC,IAAAoB,EAAAzH,KACZ0H,EAA2BP,KAAKQ,MAAML,aAAaM,QAAQ5H,KAAKwC,YAAY3E,UAC5EgK,EAA2BV,KAAKQ,MAAMH,eAAeI,QAAQ5H,KAAKwC,YAAY3E,UAE9EwI,OAAgBqB,EAA2BG,GAEjD9O,OAAO0J,KAAK4D,GAAU1D,QAAQ,SAACmF,GAAD,OAAOL,EAAKK,GAAKzB,EAASyB,wDAWjCC,EAAcC,GACrChI,KAAKiI,kBAAkBF,GAAgBC,+CAUZ,IAAAE,EAAAlI,KAAZmI,EAAYzG,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MAC3B3I,OAAO0J,KAAK0F,GAAOxF,QAAQ,SAAA/D,GACvBsJ,EAAKE,QAAQxJ,EAAKuJ,EAAMvJ,sCAYxBI,EAAUmJ,GAAO,IAAAE,EAAArI,KACrBA,KAAK8F,iBAAiB9G,GAAYmJ,GAElC,EAAApD,EAAAuD,WAAUtI,KAAMhB,EAAU,SAAAuJ,GAEtB,OADAF,EAAKG,iBAAiBxJ,EAAUuJ,EAAOE,UAChCF,6CAYEvJ,EAAUV,GAAO,IAAAoK,EAAA1I,KACxB2I,EAAmB3I,KAAK8F,iBAAiB9G,GAAU2J,QACnDC,OAAsB5J,OAAqB1B,IAAVgB,EAAsBA,EAAQ0B,KAAKhB,IACpE8G,OAAsB9G,EAAYgB,KAAK8F,iBAAiB9G,GAAUmJ,WAElEQ,GAAW5P,OAAOE,eAAeC,KAAK8G,KAAM2I,KAC9CC,EAAOD,GAAqB3I,KAAK2I,GACjC7C,EAAiB6C,GAAW3I,KAAK8F,iBAAiB6C,GAASR,WAG/D,IAAMU,EAAY,IAAIC,UAClBF,EACA9C,EACA9F,MAGJ6I,EAAUE,WAEVhQ,OAAO0J,KAAKmG,GAAQjG,QAAQ,SAAA/D,GACxB8J,EAAKM,2BAA2BpK,EAAKiK,EAAUI,OAAO/K,IAAIU,sDAS1C,IAAAsK,EAAAlJ,KACpBA,KAAKiI,qBACLlP,OAAO0J,KAAKzC,KAAK8F,kBAAkBnD,QAAQ,SAAAnH,GACvC0N,EAAKV,iBAAiBhN,EAAG0N,EAAK1N,8CAKtB2N,GAAU,IAAAC,EAAApJ,KACtBA,KAAKyF,uBAAwB,EAAAV,EAAAsE,MACzB,kBAAMD,EAAKzD,WAAWnF,OAAO8I,2SADJC,CAAAC,mBAAAC,KAEzB,SAAAC,IAAA,IAAAjQ,EAAA,OAAA+P,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,IAEcpQ,EAAS2P,EAAK1D,6BACNjM,EAAOsQ,MAA+B,mBAAhBtQ,EAAOsQ,KAHnD,CAAAH,EAAAE,KAAA,QAIYrQ,EAAOsQ,KAAK,WACRX,EAAKzD,WAAWnF,OAAOwJ,kBACvBZ,EAAKa,gBAAgBb,EAAK1D,2BAN1CkE,EAAAE,KAAA,qBASkB,IAAI1M,MAAM,iEAT5B,OAAAwM,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,UAca,EAAA3E,EAAAkF,iBACDhL,QAAQhC,MAARyM,EAAAM,IAfZ,yBAAAN,EAAAQ,SAAAV,EAAAN,IAAA,WAoBJpJ,KAAK0F,wBAA0ByD,iDAKW,mBAA/BnJ,KAAKyF,uBACZzF,KAAKyF,wBAETzF,KAAK0F,wBAA0B,yCAK/B1F,KAAKqK,kCAtQFtD,SAAWhO,OAAOuR,QACrBtD,cAAiB5I,OAAO,iBACxB6I,gBAAiB7I,OAAO,8DAG3BmM,oGAGAA,qGA0HApF,sIAiBAA,qIAWAA,kHAcAA,gHAiBAA,8HA4BAA,ubA9NgBD,qFChBrB,QAAAnL,EAAA,QACAA,EAAA,IACAyQ,EAAAzQ,EAAA,uDAEA,IAAM0Q,EAAQ,SAAApJ,GAKR,IAJFqJ,EAIErJ,EAJFqJ,OAIEC,EAAAtJ,EAHFuJ,gBAGEtN,IAAAqN,EAHS,MAGTA,EAFFE,EAEExJ,EAFFwJ,SAEEC,EAAAzJ,EADF0J,oBACEzN,IAAAwN,KACEE,EAAO,IACNN,IAAWA,EAAS,GAAKG,KAC1BG,EAAON,EAAS,EAAI,IAAM,KAG9B,IAAMO,EAAYC,KAAKC,IAAIT,GACrBU,EAAeL,GAAe,EAAAP,EAAAa,aAAYT,EAAUK,GAAW,GAAQA,EAE7E,OACIzG,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACKN,EACDxG,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAA,WAAsB8G,EAASW,gBACpCH,IAKbX,EAAMvI,WACFwI,OAAQnK,UAAUiL,WACdjL,UAAUkL,OACVlL,UAAUqE,SAEdgG,SAAcrK,UAAUqE,OACxBiG,SAActK,UAAUsE,KACxBkG,aAAcxK,UAAUsE,gBAGb4F,8FCrCf1R,OAAA0J,KAAAiJ,GAAA/I,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwN,EAAA9M,qBACA7F,OAAA0J,KAAAkJ,GAAAhJ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAyN,EAAA/M,qBACA7F,OAAA0J,KAAAmJ,GAAAjJ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0N,EAAAhN,qBACA7F,OAAA0J,KAAAoJ,GAAAlJ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2N,EAAAjN,qBACA7F,OAAA0J,KAAAqJ,GAAAnJ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4N,EAAAlN,qBACA7F,OAAA0J,KAAAsJ,GAAApJ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6N,EAAAnN,gDCKA,IAAMoN,GACFC,aAAc,EACdC,YAAc,OAGZC,EAAyB,kBAC3BpT,OAAO0J,KAAKuJ,GAAgBI,KAAK,SAAAC,GAAA,OAAU,IAAIC,OAAJ,IAAeD,EAAf,IAA0B,KAAKE,KAAKlN,OAAOmN,SAASC,aAE7FtC,EAAe,WACjB,IAAMuC,EAAc3T,OAAO0J,KAAKuJ,GAAgBnF,IAAI,SAAAwF,GAAA,eAAmBA,EAAOM,QAAQ,IAAK,SAC3F,OAAO,IAAIL,OAAJ,KAAgBI,EAAYE,KAAK,KAAjC,KAA2C,KAAKL,KAAKlN,OAAOmN,SAASC,WAK1EI,EAAW,WACb,IAAIC,EAAS,KAEPC,EAAgB1N,OAAOiI,aAAaM,QAAQ,iBAC5CoF,EAAgB,UAAUT,KAAKlN,OAAOmN,SAASS,UAsBrD,OArBIF,EACAD,EAASC,EACF,eAAeR,KAAKlN,OAAOmN,SAASU,OAAS7N,OAAOiI,aAAaM,QAAQ,0BAChFvI,OAAOiI,aAAa6F,WAAW,yBAC/B9N,OAAOiI,aAAaC,QAAQ,wBAAyB,GACrDuF,EAZsB,OAaf,wBAAwBP,KAAKlN,OAAOmN,SAASC,WACpDpN,OAAOiI,aAAa6F,WAAW,yBAC/BL,EAAS,MAXS,GAYClU,QACnByG,OAAOiI,aAAaC,QAAQ,wBAbV,IAclBuF,EAdkB,IAeX,aAAaP,KAAKlN,OAAOmN,SAASC,UACzCK,EAAS,KACFE,GACP3N,OAAOiI,aAAa6F,WAAW,yBAC/BL,EAAS,QAETzN,OAAOiI,aAAa6F,WAAW,yBAC/BL,EAASd,EAAeG,MAA6B,GAElDW,GA+CX1S,EAAOD,SACHgS,yBACAhC,eACA0C,WACAO,YAhDgB,kBA/BU,QA+BHP,KAiDvBQ,aA/CiB,WACjB,IAAIC,EAAajO,OAAOiI,aAAaM,QAAQ,qBAC7C,IAAK0F,EAAY,CA+Bb,IAAMC,EAAgBlO,OAAOiI,aAAaM,QAAQ,kBAC5C4F,EAAgBD,IAAY,OAAOhB,KAAKgB,GAG9CD,GAFsBnD,KAAkBqD,EAAU,QAAU,QAE5D,gBAEJ,eAAgBF,EAAhB,86BC/FJvT,EAAA,KACA0T,EAAA1T,EAAA,GACAiL,EAAAjL,EAAA,GAGA2T,EAAA3T,EAAA,IACA4T,EAAA5T,EAAA,IAIA6T,EAAA7T,EAAA,KACA8T,EAAA9T,EAAA,KAGA+T,EAAA/T,EAAA,KAGAgU,EAAAhU,EAAA,6HAKA,IAAMiU,EAAgB,WAClB,IAAIC,KACAC,KACAC,SACEC,KAiGAC,EAAwB,SAACvS,GAA+B,IAArBwS,EAAqB5M,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MAE1D,OADA4M,EAAYxS,EAASyS,eAAiBzS,EAAS0S,iBACxCF,GAGLG,EAAuB,SAACC,EAAgBpQ,GAAjB,OACU,IAAnCoQ,EAAeC,QAAQrQ,GAAgBA,EAAQoQ,EAAe,IAqC5DE,EAAgB,SAACC,GAAD,OAAeC,iBAAkB,WAAY,UAA9B7M,OAAA8M,EAA2CZ,EAAeU,GAAQG,eAEjGC,EAAuB,SAACV,EAAeW,GAAhB,OACzBC,qBAAqB,EAAAnK,EAAAoK,kBAAiBnB,GAA2BM,EAAe,SAAU,YAAa,gBAAiBW,UAGtHG,EAAkB,SAACC,EAAef,EAAeW,GACnD,IACMK,KAKN,QANuB,EAAAvK,EAAAoK,kBAAiBnB,GAA2BM,EAAe,SAAU,YAAa,gBAAiBW,SAE3GvM,QAAQ,SAAA6M,GACnBD,EAAUzW,KAAK0W,EAAIlR,UAInBgR,cAAeb,EAAqBc,EAAWD,KAIjDG,EAAoB,SAAClB,EAAeW,EAAqBQ,GAC3D,IAAIC,GAAmB,EAAA3K,EAAAoK,kBAAiBnB,GAA2BM,EAAe,SAAU,YAAa,UAAWW,QAMpH,OAJIQ,IACAC,EAAmBA,EAAiBD,SAG/BC,qBAKPC,EAAe,SAACC,GAAD,OAEjBX,oBAAqBW,IAAeC,OAAO,GAAK,OAAS,YAGvDC,EAAgB,SAACxB,EAAeyB,GAClC,IAAMC,GAAmB,EAAAjL,EAAAoK,kBAAiBnB,GAA2BM,EAAe,WAC9E2B,KAaN,OAXID,EAAOE,UAEPD,EAAiBpX,MAAOsL,MAAM,EAAAqJ,EAAA2C,UAAS,OAAQ9R,MAAOwR,OAAO,KAE7DG,EAAOI,wBACPH,EAAiBpX,KAAjBS,MAAA2W,EAAAnB,EAAyBkB,EAAOI,0BAM3BR,WAHUK,EAAiB9D,KAAK,SAAAkE,GAAA,OAAQA,EAAKhS,QAAU0R,IAC5DA,EAAqBE,EAAiB,GAAG5R,MAExB4R,qBAUnBK,KAAUtO,OAAA8M,EAAInN,MAAM,IAAIa,SAAQoE,IAAI,SAAC2J,GAAD,OAAK,IAAIA,GAAIjR,OAAO,KACxDkR,KAAUxO,OAAA8M,EAAInN,MAAM,IAAIa,SAAQoE,IAAI,SAAC2J,GAAD,OAAK,IAAQ,EAAJA,GAAQjR,OAAO,KAE5DmR,EAAe,SAACC,EAAUC,EAAgBC,GAW5C,OAVIF,KAAa,EAAA7C,EAAAgD,oBAAmBH,EAAUC,KAE1CA,EAAeG,OAAON,EAAQrE,KAAK,SAAA1O,GAAA,OAAK,EAAAoQ,EAAAgD,oBAAmBH,EAAUC,EAAeG,OAAOrT,OAAQkT,EAAeI,OAAO,QAEpH,EAAAlD,EAAAgD,oBAAmBH,EAAUC,KAC9BA,EAAeG,OAAO,GACtBH,EAAeK,KAAKV,EAAMnE,KAAK,SAAA8E,GAAA,OAAK,EAAApD,EAAAgD,oBAAmBH,EAAUC,EAAeK,KAAKC,GAAIL,GAAc,MAAUD,EAAeI,OAAO,OACvIJ,EAAeG,OAAON,EAAQrE,KAAK,SAAA1O,GAAA,OAAK,EAAAoQ,EAAAgD,oBAAmBH,EAAUC,EAAeG,OAAOrT,OAAQkT,EAAeI,OAAO,SAG1HJ,EAAeI,OAAO,UAG3BG,EAAc,SAACC,EAAMC,GAAS,IAAAhQ,GACP,EAAAsM,EAAA2D,aAAYD,GAAQA,EAAKE,MAAM,MAAQ,EAAG,GADnCC,EAAAC,EAAApQ,EAAA,GACxB4P,EADwBO,EAAA,GAClBT,EADkBS,EAAA,GAEhC,OAAO,EAAA7D,EAAA+D,UAASN,GAAQO,UAAWzT,OAAO+S,KAAKA,GAAMF,OAAOA,IAO1Da,aAAA,IAAAC,2RAAAtI,CAAAC,mBAAAC,KAAkB,SAAAC,EAAO0H,GAAP,IAAAU,EAAApZ,EAAAqZ,EAAAnY,EAAAoY,EAAAlK,EAAAmK,EAAaC,EAAbxQ,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAA0B,KAA1B,OAAA8H,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACfsH,EADe,CAAAxH,EAAAE,KAAA,eAAAF,EAAAuI,OAAA,uBAKdf,KAAQhD,EALM,CAAAxE,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAMqBhH,KAAG8O,gBAAgBR,GANxC,OAQhB,GAFMU,EANUlI,EAAAwI,MAQZ,EAAApN,EAAAoK,kBAAiB0C,GAAyB,gBAAiB,YAC3D,IAASpZ,EAAI,EAAGA,EAAIoZ,EAAuB1D,cAAciE,QAAQzZ,OAAQF,IAErE,GADMqZ,EAAaD,EAAuB1D,cAAciE,QAAQ3Z,GAAGqZ,WAE/D,IAASnY,EAAI,EAAGA,EAAImY,EAAWnZ,OAAQgB,IAEnC,GADMoY,EAAUD,EAAWnY,GAAGoY,QAE1B,IAASlK,EAAI,EAAGA,EAAIkK,EAAQpZ,OAAQkP,IAC1BmK,EAASD,EAAQlK,GAClBsG,EAAc0D,EAAuBQ,SAASlE,iBAC/CA,EAAc0D,EAAuBQ,SAASlE,mBAElDA,EAAc0D,EAAuBQ,SAASlE,eAAe6D,EAAOA,QAChEA,EAAOM,MAAMC,MArBzB,cAAA5I,EAAAuI,OAAA,SA8BbD,EAAa9D,EAAcgD,GAAMc,GAAc9D,EAAcgD,IA9BhD,wBAAAxH,EAAAQ,SAAAV,OAAApM,MAAlB,gBAAAmV,GAAA,OAAAZ,EAAAtY,MAAAyG,KAAA0B,YAAAkQ,GAsHAc,EAAgB,SAACnE,GAAD,OAClBD,aAAa,EAAAtJ,EAAAoK,kBAAiBnB,GAA2BM,EAAe,SAAU,kBAGhFoE,EAAc,SAACpE,EAAeqE,GAChC,IAAMC,GAAiB,EAAA7N,EAAAoK,kBAAiBnB,GAA2BM,EAAe,SAAU,iBACtFuE,EAAiBD,EAASD,OAC1BG,EAAiBD,EAAeE,SAAWF,EAAeG,cAAgB,GAC1EC,EAAiBJ,EAAeK,aAAe,GACrD,OACIC,cAAeP,EAASQ,OAAS,EACjCN,UAAeA,EAAUO,WACzBJ,UAAeA,EAAUI,aAI3BC,EAAW,SAAChF,EAAeiF,GAC7B,IAAMC,GAAa,EAAAzO,EAAAoK,kBAAiBnB,GAA2BM,EAAe,cACxEmF,GAAkB,EAAA3F,EAAA4F,qBAKxB,OACIC,WALeH,EAAUjN,OAAO,SAACqN,EAAKC,GAAN,SAAA7R,OAAA8M,EAC5B8E,KAAOzP,KAAMsP,EAAgBI,GAAMxV,MAAOwV,UAK9CN,MAAO/E,EAAqBgF,EAAWD,KAI/C,OACIO,yBApX6B,SAAC9B,GAAD,OAAYnP,KAAGkR,aAAa/B,GAAQlI,KAAK,SAAA5L,GACtE,IAAM8V,GAAsB,EAAAlG,EAAAmG,+BAC5B/F,GAAiB,EAAAJ,EAAAoG,0BAEjBlG,KACAC,GAAuB,EAAAlJ,EAAAoP,aAAYH,GAEnC9V,EAAEkW,cAAcC,UAAU3R,QAAQ,SAAC7G,GAC/B,IAAMkB,EAAOjE,OAAO0J,KAAK0L,GAAgB/B,KAAK,SAAAxN,GAAA,OAC2B,IAArEuP,EAAevP,GAAK0P,YAAYK,QAAQ7S,EAASyS,sBACH,IAAtCJ,EAAevP,GAAKwU,gBAAkCjF,EAAevP,GAAKwU,gBAAkBtX,EAAS+W,YAGjH,GAAK7V,EAAL,CAiDA,IAAKiR,EAAyBjR,GAAO,CAEjC,IAAMuX,EAAWrG,EAAqBnV,OAAO0J,KAAKyL,GAC7C9B,KAAK,SAAAxN,GAAA,OAAoD,IAA7CsP,EAAqBtP,GAAK+P,QAAQ3R,MAEnD,IAAKuX,EAAU,OAEfA,EAASA,EAAS5F,QAAQ3R,KAAWsB,MAAOtB,EAAMoH,KAAM+J,EAAenR,GAAMwX,OAG7EvG,EAAyBjR,IAAQ,EAAAgI,EAAAoP,aAAYjG,EAAenR,IAEhE,IAAMiT,EAAShC,EAAyBjR,GAAMiT,WAG9CA,EAAOE,SAAyBF,EAAOE,UAAoC,SAAxBrU,EAAS2Y,WAC5DxE,EAAOyE,WAAyB,EAAA7G,EAAA8G,qBAAoB7Y,EAAUmU,EAAOyE,WACrEzE,EAAO3B,YAAyBD,EAAsBvS,EAAUmU,EAAO3B,aACvE2B,EAAO4C,UAAyB,EAAAjF,EAAAgH,qBAAoB9Y,EAAUmU,EAAO4C,UACrE5C,EAAOI,wBAAyB,EAAAvC,EAAA+G,4BAA2B/Y,EAAUmU,EAAOI,wBAE5EpC,EAAyBjR,GAAMiT,OAASA,KAI5ClX,OAAO0J,KAAKyL,GAAsBvL,QAAQ,SAAC/D,GACvCsP,EAAqBtP,GAAOsP,EAAqBtP,GAAKkW,OAAO,SAAAxE,GAAA,MAAwB,iBAAhB,IAAOA,EAAP,YAAAyE,EAAOzE,MACnC,IAArCpC,EAAqBtP,GAAKhG,eACnBsV,EAAqBtP,QA2RpC+T,cACAqC,gBApPoB,SAACC,EAAM1G,GAC3B,IAAM2G,EAAWnc,OAAO0J,KAAKwS,OACxBzO,OAAO,SAACsB,EAAGzN,GAAJ,SAAA4H,OAAA8M,EAAejH,GAAfiH,EAAqBkG,EAAK5a,GAAGwM,IAAI,SAAAsO,GAAA,OAAMA,EAAG7W,eACtD,OACIiQ,cAAeE,EAAqByG,EAAU3G,KAiPlD6G,kBA/QsB,SAAChV,GAAU,IACzBsP,EAA0EtP,EAA1EsP,qBAAsBnB,EAAoDnO,EAApDmO,cAAeiF,EAAqCpT,EAArCoT,MAAOlE,EAA8BlP,EAA9BkP,cAAeO,EAAezP,EAAfyP,WAC7Df,EAAoBF,EAAcL,GAClC8G,EAAoB9B,EAAShF,EAAeiF,GAC5C8B,EAAoB5C,EAAcnE,GAClCgH,EAAoBxF,EAAcxB,EAAesB,GACjD2F,EAAoB5F,EAAa2F,EAAgB1F,YACjD4F,EAAoB9C,EAAYpE,EAAemB,GAC/CgG,EAAoBrG,EAAgBC,EAAef,EAAeiH,EAAetG,qBAEjFyG,EAA6B1G,EAAqBV,EAAeiH,EAAetG,qBAChF0G,EAA6BnG,EAAkBlB,EAAeiH,EAAetG,qBAEnF,OAAA7O,KACOyO,EACAuG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IA0PPnG,oBACAJ,kBACAJ,uBACA4G,qBArNyB,kBAAM5H,GAsN/B6H,cAnHkB,SAAC3G,EAAqB4G,EAAanD,EAAa/C,GAClE,IAAImG,EAAqB,KAEzB,GAAoB,YAAhBpD,EAA2B,CAC3B,IAAMqD,GAAgB,EAAAtI,EAAA+D,UAAS7B,GACzBqG,GAAgB,EAAAvI,EAAA+D,UAASqE,GAS3BC,GAPC,EAAAnI,EAAAsI,yBAAwBhH,IAMrB+G,EAAcE,SAASH,EAAc,QAAWpG,GAAcqG,EAAcG,QAAQJ,EAAaK,QAAQC,IAAI,EAAG,QACjFN,EAAeC,GAAelF,OAAO,eANrDkF,EAAcM,eAAeP,EAAc,OAC3BA,EAAaK,QAAQC,IAAI,EAAG,OAASL,GAAelF,OAAO,cAStG,OAAS+E,YAAaC,IAkGtBS,cA5FkB,SAClBV,EACAW,EACA9D,EACA+D,EACAhG,EACAd,EACA+G,GAEA,IAAIC,EAAW,KAEf,GAAoB,YAAhBjE,EAA2B,CAC3B,IAAIkE,EAAoB,WAQxB,GANIH,GAAsBA,EAAmB/d,QAAoC,OAA1B+d,EAAmB,KAEtEG,EAAoBH,EAAmBpX,OAAO,GAAG,KAIhDsQ,GAAc8B,UAAWzT,MAAMkY,SAASjF,EAAY4E,GAAc,OACnEc,EAAWC,MACR,CACH,IAAMjG,EAAehB,EAAasB,EAAYtB,EAAY+G,GAAcjF,UAAWzT,MAC7E6Y,EAAe5F,EAAY4E,EAAaW,GAE9CG,EAAWE,EAAW/F,OAAO,SAG7B,IAAMgG,IACFC,KAAOpG,EAAayF,QAAQC,IAAI,EAAG,UACnC/D,OAAO,EAAA7E,EAAAuJ,SAAQrG,EAAayF,QAAQC,IAAI,GAAI,QAASpF,EAAY4E,EAAae,MAMlF,IAHK,EAAAhJ,EAAAgD,oBAAmBkG,EAAiBD,KACrCF,EAAWnG,EAAasG,EAAiBD,EAAWT,QAASzF,EAAayF,UAE1ES,EAAWP,eAAe3F,IAAiBkG,EAAWI,KAAKtG,EAAc,UAAY,EAAG,CACxF,IAAMuG,EAAkD,KAA9BvG,EAAa3S,IAAI,UAAmB2S,EAAa3S,IAAI,WAAa,GACtFmZ,EAAoB1G,KAAa,EAAA7C,EAAAgD,oBAAmBH,EAAUE,EAAayF,QAAQC,IAAI,EAAG,YAChGM,EAAWhG,EAAayF,QAAQC,IAAKa,GAAiBC,EAAqB,EAAI,EAAG,WAAWrG,OAAO,SAIvF,UAAb6F,GAAwBhG,EAAauF,SAASW,EAAY,SAC1DF,EAAWhG,EAAayF,QAAQgB,SAAS,EAAG,UAAUtG,OAAO,WAKzE,OAAS0F,YAAaG,IA2CtBU,cA7HkB,SAACpI,EAAqByD,GACxC,OAAIzD,GAAsD,IAA/BA,EAAoBvW,QAAiD,MAAjCuW,EAAoB,GAAG7Q,OACzEsU,YAAa,aAGjBA,gBAyHT4E,YAhMgB,SAACjJ,EAAesB,GAIhC,OAASc,aAHQ,EAAA3L,EAAAoK,kBAAiBnB,GAA2BM,EAAe,gBAEzD8B,4BAA8BjE,KAAK,SAAAqL,GAAA,OAAUA,EAAOnZ,QAAUuR,SAAmBc,WA8LpG+G,aApKiB,SAAC/G,EAAUd,EAAY+G,GAAvB,OACjBA,WAAY/G,EAAaa,EAAaC,EAAUQ,EAAYtB,EAAY+G,IAAe,OAoKvFhH,eACAgC,kBACA+F,sBAAuB,kBAASC,oBAAqB1J,KAzYvC,aA6YPF,iFCnaf,QAAAjU,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM8d,EAAU,SAAAxW,GAKV,IAJFyW,EAIEzW,EAJFyW,QACAC,EAGE1W,EAHF0W,UACArY,EAEE2B,EAFF3B,SACAsY,EACE3W,EADF2W,KAEMC,EAAsB,aAATD,GAAgC,SAATA,EAAmBA,EAAO,WAC9DE,GAAa,EAAAC,EAAA1T,SAAWwT,GAC9B,OACIzT,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,UAAUsU,eAAcN,EAASO,mBAAkBN,GAC9DC,EACGxT,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAWoU,IAEdxY,IAMhBmY,EAAQ3V,WACJ6V,UAAWxX,UAAUqE,OACrBlF,SAAWa,UAAU+X,KACrBN,KAAWzX,UAAUqE,OACrBkT,QAAWvX,UAAUqE,kBAGViT,sFC9Bf,QAAA9d,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,wDAEA,IAAMwe,EAAW,SAAAlX,GASX,IARF3B,EAQE2B,EARF3B,SACAoE,EAOEzC,EAPFyC,UACA0U,EAMEnX,EANFmX,OACAR,EAKE3W,EALF2W,KACAS,EAIEpX,EAJFoX,UACAC,EAGErX,EAHFqX,aACAC,EAEEtX,EAFFsX,aACAC,EACEvX,EADFuX,QAEMC,GAAmB,EAAAV,EAAA1T,SAAW,kBAAmBgU,EAAY,cAAgB,IAC7EK,GAAmB,EAAAX,EAAA1T,SAAW,cAAgBuT,QAAQA,EAAMS,EAAY,SAAW,QAEzF,OACIjU,EAAAC,QAAAvJ,cAAA,YAAU4I,UAAWA,EAAY4U,aAAcA,EAAcC,aAAcA,KACpEH,GACChU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAW+U,GACZrU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAWgV,GAAmBN,MAGzCI,GACCpU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,oBACZU,EAAAC,QAAAvJ,cAAC6d,EAAAtU,SACGsT,UAAU,OACVC,KAAK,OACLF,QAASc,GAAW,wBAI/BlZ,IASb6Y,EAASrW,WACLxC,SAAUa,UAAUiL,WAChBjL,UAAUyY,MACVzY,UAAUxB,SAEd+E,UAAcvD,UAAUqE,OACxB4T,OAAcjY,UAAUqE,OACxBoT,KAAczX,UAAUqE,OACxB8T,aAAcnY,UAAUuE,KACxB6T,aAAcpY,UAAUuE,KACxB8T,QAAcrY,UAAUqE,kBAGb2T,iFCxDf,QAAAxe,EAAA,IACAyF,EAAAzF,EAAA,QAGAA,EAAA,QACAA,EAAA,IACA2J,EAAA3J,EAAA,KACA4J,EAAA5J,EAAA,SACAA,EAAA,SACAA,EAAA,wDAEA,IAAMkf,EAAa,SAAA5X,GA0Bb,IAzBF6X,EAyBE7X,EAzBF6X,QACApV,EAwBEzC,EAxBFyC,UACAqV,EAuBE9X,EAvBF8X,SACAC,EAsBE/X,EAtBF+X,WACAC,EAqBEhY,EArBFgY,eACAC,EAoBEjY,EApBFiY,kBACAC,EAmBElY,EAnBFkY,OACAvV,EAkBE3C,EAlBF2C,GACAC,EAiBE5C,EAjBF4C,YACAuV,EAgBEnY,EAhBFmY,SACAC,EAeEpY,EAfFoY,iBAeEC,EAAArY,EAdFsY,oBAcErc,IAAAoc,KAAAE,EAAAvY,EAbFwY,iBAaEvc,IAAAsc,KAZFE,EAYEzY,EAZFyY,MACAC,EAWE1Y,EAXF0Y,WACAC,EAUE3Y,EAVF2Y,UACAC,EASE5Y,EATF4Y,UACApc,EAQEwD,EARFxD,KACAqc,EAOE7Y,EAPF6Y,SACAhW,EAME7C,EANF6C,QACAiW,EAKE9Y,EALF8Y,YACAC,EAIE/Y,EAJF+Y,OACAC,EAGEhZ,EAHFgZ,SACArd,EAEEqE,EAFFrE,KACAsB,EACE+C,EADF/C,MAEMgc,EAAYjB,GAAkBA,EAAezgB,OAC/C2hB,GAAmB,EACjBC,EAAkBR,IAAc1b,IAAU0b,EAC1CS,EAAkBR,IAAc3b,IAAU2b,EAqC1CS,EAAiB,WACdF,GAGLN,GAAWhd,QAAUoB,OADKA,EAAS,EACUT,WAG3C8c,EAAiB,WACdrc,IAASmc,GAGdP,GAAWhd,QAAUoB,OADKA,EAAS,EACUT,WAQ3C+c,EACFpW,EAAAC,QAAAvJ,cAAA,SACIge,QAASA,EAAU,UAAY,GAC/BpV,WAAW,EAAAqU,EAAA1T,UAAatH,MAAOmd,IAC/B5V,SAAUT,EACV4W,WAAA,iBAA2Bhd,EAC3Bid,aAAY1B,EACZ2B,WAAU5B,EACVnV,GAAIA,EACJgX,UAAW1B,EAAoBS,EAAaT,EAAoB,EAAIS,EACpElc,KAAMA,EACNod,UAAWxB,EAhBE,SAACnf,GACA,KAAdA,EAAE4gB,SAAgBR,IACJ,KAAdpgB,EAAE4gB,SAAgBP,UAc2Brd,EAC7C4c,SAlEY,SAAC5f,GACjB,GAAa,WAAT0C,EAAmB,CACnB,IAAMme,GAAY7gB,EAAE4C,OAAOoB,OAA4B,KAAnBhE,EAAE4C,OAAOoB,MACvC8c,EAAevB,EAAY,8BAAgC,IAE3DwB,EAAY,IAAI/O,OAAU8O,EAAd,WAAoC5B,EAAW,aAAe,IAA9D,KACbjN,KAAKjS,EAAE4C,OAAOoB,OAEbgd,EAA0B9B,GAAY,IAAIlN,OAAU8O,EAAd,mBACvC7O,KAAKjS,EAAE4C,OAAOoB,OAGbid,EAAkB,IAAIjP,OAAU8O,EAAd,0BACnB7O,KAAKjS,EAAE4C,OAAOoB,OAEbkd,EAAyB,IAAIjP,KAAJ,KAAajS,EAAE4C,OAAOoB,OAOrD,GALIyb,GAAcT,IACdiB,EAAmB,IAAIjO,OAAU8O,EAAd,UAAoCrB,EAApC,eAA6DT,EAA7D,QACd/M,KAAKjS,EAAE4C,OAAOoB,SAGlB+c,GAAaF,IAAaZ,EAC3BjgB,EAAE4C,OAAOoB,MAAQ6c,GAAYtB,GAAa0B,GAAmBC,EACvDlhB,EAAE4C,OAAOoB,OACRhE,EAAE4C,OAAOoB,WACb,IAAKgd,EAER,YADAhhB,EAAE4C,OAAOoB,MAAQA,GAKzB4b,EAAS5f,IAmCL4J,QAASA,EACTiW,YAAaA,QAAe7c,EAC5Bme,SAAU9B,EACVU,SAAUA,QAAY/c,EACtBN,KAAe,WAATA,EAAoB,OAASA,EACnCsB,MAAOA,GAAS,KAGlBod,EACFlX,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,iBACXU,EAAAC,QAAAvJ,cAACygB,EAAAlX,SACGX,UAAW,yDACXG,YAAauW,EACbtW,QAASwW,EACTvW,SAAS,MAETK,EAAAC,QAAAvJ,cAACyI,EAAAiY,UAAS9X,UAAW,gDAAkDG,YAAauW,KAExFhW,EAAAC,QAAAvJ,cAACygB,EAAAlX,SACGX,UAAW,yDACXG,YAAawW,EACbvW,QAASyW,EACTxW,SAAS,MAETK,EAAAC,QAAAvJ,cAACwI,EAAAmY,WAAU/X,UAAW,iDAAkDG,YAAawW,KAEvFG,GAGV,OACIpW,EAAAC,QAAAvJ,cAAA,OACI4I,UAAA,gBAA0BA,GAAa,KAEvCU,EAAAC,QAAAvJ,cAAC6d,EAAAtU,SAAQsT,UAAU,OAAOD,QAASwC,EAAYjB,EAAe,GAAK,QAC5DS,GACCtV,EAAAC,QAAAvJ,cAAA,SAAO4gB,QAASje,EAAMiG,UAAU,eAAegW,KAEhDM,GACC5V,EAAAC,QAAAvJ,cAAA,SAAGsJ,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAA,WAAsBsW,EAAO7O,mBAEvCgO,GACC/U,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,gBAAgByV,GAEnCE,GAA+B,WAATzc,EAAoB0e,EAAkBd,KAS7E3B,EAAW/W,WACPgX,QAAmB3Y,UAAUkL,OAC7B3H,UAAmBvD,UAAUqE,OAC7ByU,eAAmB0C,YAAcC,uBACjC1C,kBAAmB/Y,UAAUkL,OAC7B8N,OAAmBhZ,UAAUqE,OAC7BZ,GAAmBzD,UAAUqE,OAC7BX,YAAmB1D,UAAUqE,OAC7B4U,SAAmBjZ,UAAUsE,KAC7B4U,iBAAmBlZ,UAAUsE,KAC7B8U,aAAmBpZ,UAAUsE,KAC7BgV,UAAmBtZ,UAAUsE,KAC7BiV,MAAmBvZ,UAAUqE,OAC7BmV,WAAmBxZ,UAAUkL,OAC7B5N,KAAmB0C,UAAUqE,OAC7BsV,SAAmB3Z,UAAUuE,KAC7BZ,QAAmB3D,UAAUuE,KAC7BqV,YAAmB5Z,UAAUqE,OAC7BwV,OAAmB7Z,UAAUqE,OAC7ByV,SAAmB9Z,UAAUsE,KAC7B7H,KAAmBuD,UAAUqE,OAC7BtG,MAAmBiC,UAAUiL,WACzBjL,UAAUkL,OACVlL,UAAUqE,qBAIH,EAAApF,EAAAwB,UAASiY,qGC5LpBgD,SAAkB,OAClBvgB,iBAAkB,6BAClBwgB,KAAkB,iBAClBrgB,iBAAkB,6BAClBC,SAAkB,yBAClBqgB,UAAkB,sBAClBC,UAAkB,sBAClBC,QAAkB,oBAClBC,MAAkB,SAClBtgB,OAAkB,mBAClBugB,SAAkB,qBAClBpgB,UAAkB,aAClBqgB,KAAkB,IAClBngB,SAAkB,YAClBC,UAAkB,aAClBmgB,MAAkB,kBAClBC,MAAkB,0FCjBtB,QAAA3iB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM4iB,EAAW,SAAAtb,GAAmB,IAAhByC,EAAgBzC,EAAhByC,UACV8Y,GAAgB,EAAAzE,EAAA1T,SAAW,UAAWX,GAC5C,OACIU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,YACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAW8Y,GACZpY,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,WACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,WAAW+Y,QAAQ,eAC9BrY,EAAAC,QAAAvJ,cAAA,UAAQ4I,UAAU,OAAOgZ,GAAG,KAAKC,GAAG,KAAK5e,EAAE,KAAK6e,KAAK,OAAOC,YAAY,IAAIC,iBAAiB,YAQrHP,EAASza,WACL4B,UAAWvD,UAAUqE,kBAGV+X,iFCvBf,QAAA5iB,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACAojB,EAAApjB,EAAA,wDAEA,IAAMqjB,EAAW,SAAA/b,GAAwB,IAArBgc,EAAqBhc,EAArBgc,IAAKC,EAAgBjc,EAAhBic,UACfC,GAAY,EAAA9P,EAAA2C,UAASiN,GAE3B,MAAK,WAAW9Q,KAAKgR,GAKjB/Y,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,MACK,EAAA6R,EAAAK,cAAaD,EAAWD,IALtB9Y,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KAAiBiS,IAUhCH,EAASlb,WACLob,UAAW/c,UAAUxB,OACrBse,IAAW9c,UAAUqE,kBAGVwY,+TCxBfrjB,EAAA,MAEA,IAAM0jB,EAmCFpd,KACOqd,WACHC,iBApCqB,SAACC,EAAejY,GACrC,IAAMvN,GACFsE,MAAU,eACVmhB,OAAU,MACV/hB,UACI4O,OAAekT,EAAclT,OAC7BoT,SAAeF,EAAc5K,QAC7B+K,SAAeH,EAAcG,SAC7BvK,MAAeoK,EAAcpK,MAC7BwK,UAAeJ,EAAcI,UAC7BzP,cAAeqP,EAAcrP,cAC7B3D,SAAegT,EAAchT,SAC7BqT,YAAeL,EAAcK,YAC7BC,WAAeN,EAAcM,WAC7BC,SAAeP,EAAcO,SAC7B7O,cAAesO,EAActO,cAC7B8O,OAAeR,EAAcQ,OAC7BnM,OAAe2L,EAAc3L,QAEjC5V,UACIgiB,MAAkB1Y,EAAWjF,GAAG4d,gBAAkB,OAAS,QAC3DC,iBAAkB5Y,EAAWjF,GAAG8d,uBAAyB,OAAS,SAClEC,iBAAkB9Y,EAAWjF,GAAGge,uBAAyB,UAAY,WACrEC,OACIC,iBAAkBjZ,EAAWjF,GAAGme,wBAA0B,SAAW,OACrEC,iBAAkBnZ,EAAWjF,GAAGqe,4BAA8B,UAAY,SAC1EC,WAAkBrZ,EAAWxM,QAAQqD,YAAYwiB,WACjDC,YAAkBtZ,EAAWxM,QAAQqD,YAAYyiB,eAI7DvB,UAAQwB,cAAc9mB,gBASfqlB,qMC3Cf,IAAAhQ,EAAA1T,EAAA,GACA4T,EAAA5T,EAAA,IAEA,IAAMolB,EAAkB,kBACpB5gB,GAAK6gB,SAAS,EAAA3R,EAAA2C,UAAS,SAAYiP,MAAO,GAC1CrlB,GAAKolB,SAAS,EAAA3R,EAAA2C,UAAS,WAAYiP,MAAO,EAAGC,UAAW,GACxD5hB,GAAK0hB,SAAS,EAAA3R,EAAA2C,UAAS,WAAYiP,MAAO,EAAGC,UAAW,IACxDpO,GAAKkO,SAAS,EAAA3R,EAAA2C,UAAS,SAAYiP,MAAO,EAAGC,UAAW,MACxD1hB,GAAKwhB,SAAS,EAAA3R,EAAA2C,UAAS,QAAYiP,MAAO,EAAGC,UAAW,SA+C/CC,GA5CA5K,sBAAsB,SAAC7Y,GAA6D,IAAnD4Y,EAAmDhT,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAArC8d,WAAaC,kBACrE/K,EAAU8K,QAAQ1jB,EAAS2Y,YAAoBC,EAAU8K,QAAQ1jB,EAAS2Y,gBAC1EC,EAAU+K,cAAc3jB,EAAS2Y,YAAcC,EAAU+K,cAAc3jB,EAAS2Y,gBAEhF,IAAMiL,EAAUC,EAAsB7jB,EAAS8jB,uBACzCC,EAAUF,EAAsB7jB,EAASgkB,uBAE/CpL,EAAU8K,QAAQ1jB,EAAS2Y,YAAY3Y,EAAS8W,cAC5CmN,IAAKR,EAAoBG,EAAQvB,SAAUuB,EAAQM,KAAM,KACzDC,IAAKV,EAAoBM,EAAQ1B,SAAU0B,EAAQG,KAAM,MAG7D,IAAMzQ,KACNmF,EAAU+K,cAAc3jB,EAAS2Y,YAAY9R,QAAQ,SAAA6M,GACjDD,EAAUzW,KAAK0W,EAAIlR,SAGvB,IAAM4hB,EAAgBf,IAwBtB,MAtBI,eAAe5S,KAAKzQ,EAAS8W,cACY,IAArCrD,EAAUZ,QAAQ+Q,EAAQM,OAC1BzQ,EAAUzW,KAAK4mB,EAAQM,MAG3BjnB,OAAO0J,KAAKyd,GAAevd,QAAQ,SAAAwd,GAErB,MAANA,IAC0B,IAA1B5Q,EAAUZ,QAAQwR,IAClBD,EAAcC,GAAGd,OAASa,EAAcR,EAAQM,MAAMX,OACtDa,EAAcC,GAAGd,OAASa,EAAcL,EAAQG,MAAMX,OACtD9P,EAAUzW,KAAKqnB,KAK3BzL,EAAU+K,cAAc3jB,EAAS2Y,YAAclF,EAC1C6Q,KAAK,SAAC5P,EAAG6P,GAAJ,OAAWH,EAAc1P,GAAG6O,MAAQa,EAAcG,GAAGhB,MAAQ,GAAK,IACvE7Y,OAAO,SAACzI,EAAGJ,GAAJ,SAAAsE,6HAAA8M,CACAhR,KAAKqG,KAAM8b,EAAcviB,GAAGyhB,QAAS9gB,MAAOX,UAGjD+W,GAGE6K,sBAAsB,SAACjhB,EAAOgiB,EAAWC,GAClD,IAAKjiB,IAAUgiB,IAAcC,GAAWC,MAAMC,SAASniB,IACnD,OAAO,KAGX,IAAM4hB,EAAgBf,IAEtB,OAAImB,IAAcC,GAAa,cAAeL,EAAcI,GAIpDhiB,EAAQ4hB,EAAcI,GAAWhB,UAAaY,EAAcK,GAASjB,UAHlEhhB,IAMTqhB,EAAwB,SAACe,GAC3B,IAAMvC,EAAWuC,EAAgBpN,WAAWqN,MAAM,qBAClD,OACIxC,SAAUA,EAAS,GACnB6B,KAAU7B,EAAS,KAuCdhI,GAnCAoB,gBAAgB,SAACnX,GAAU,IAC5BkP,EAAiElP,EAAjEkP,cAAeyG,EAAkD3V,EAAlD2V,YAAanD,EAAqCxS,EAArCwS,YAAazD,EAAwB/O,EAAxB+O,oBAC3CyR,EAAcxgB,EAAMuF,WAAWlF,OAAOmgB,YAEtCC,EAAwC,aAAhBjO,GAAgD,MAAlBtD,EACtDwR,EAAwC,YAAhBlO,KAA8B,EAAAjF,EAAA+D,UAASqE,GAAaM,SAAQ,EAAA1I,EAAA+D,UAASkP,GAAc,SAC5GzK,EAAwBhH,IAEzBO,EAAuB,QAK3B,OAJKmR,GAAoBC,IACrBpR,EAAyC,MAAlBJ,EAAwB,OAAS,YAGrDI,GAGEqR,uBAAuB,SAACziB,EAAO0hB,GACxC,KAAM1hB,GAAS,GAAO0hB,GAASlQ,OAAOkR,UAAU1iB,IAC5C,OAAO,KAGX,GAAa,MAAT0hB,EAAc,CACd,IAAMjP,EAASzS,EAAQ,GACvB,OAAOyS,GAAU,EAAI7F,KAAK+V,MAAMlQ,GAAU,EACvC,GAAa,MAATiP,EAAc,CACrB,IAAM/O,EAAO3S,OACb,OAAO2S,GAAQ,EAAI/F,KAAK+V,MAAMhQ,GAAQ,EACnC,GAAa,MAAT+O,EAAc,CACrB,IAAMkB,EAAM5iB,QACZ,OAAO4iB,GAAO,EAAIhW,KAAK+V,MAAMC,GAAO,EAGxC,OAAO5iB,GAGE6X,0BAA0B,SAAChH,GAAD,OACnCA,EAAoBgS,KAAK,SAAAnB,GAAA,OAA4C,KAAnC,IAAK,KAAKrR,QAAQqR,EAAK1hB,sHCjH7D,wDAAAvE,EAAA,IAEaqnB,sBACTC,cAAkB9gB,UAAUqE,OAC5B0c,cAAkB/gB,UAAUqE,OAC5B2c,YAAkBhhB,UAAUqE,OAC5B4c,iBAAkBjhB,UAAUuE,KAC5B2c,SAAkBlhB,UAAUiL,WACxBjL,UAAUxB,OACVwB,UAAUqE,SAEd8c,SAAUnhB,UAAUiL,WAChBjL,UAAUxB,OACVwB,UAAUqE,SAEdV,QAAe3D,UAAUxB,OACzB4iB,cAAephB,UAAUqE,oGChB7B7L,OAAA0J,KAAAmf,GAAAjf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0jB,EAAAhjB,qBACA7F,OAAA0J,KAAAof,GAAAlf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2jB,EAAAjjB,qBACA7F,OAAA0J,KAAAqf,GAAAnf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4jB,EAAAljB,qBACA7F,OAAA0J,KAAAsf,GAAApf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6jB,EAAAnjB,qBACA7F,OAAA0J,KAAAuf,GAAArf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA8jB,EAAApjB,qBACA7F,OAAA0J,KAAAwf,GAAAtf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+jB,EAAArjB,oLCLA,IAAAsjB,EAAAnoB,EAAA,wDACAA,EAAA,KAEaooB,gBAAgB,SAACC,GAAD,MAAU,MAAM7V,KAAK6V,GAAQA,EAAnB,KAA8BA,GAAQ,KAEhEC,kBAAkB,SAAlBA,EAAmBD,EAAME,GAClC,IAAI7oB,SAaJ,OAXA6oB,EAAcnB,KAAK,SAACoB,GAChB,OAAI,EAAAL,EAAAM,WAAUJ,EAAMG,IAChB9oB,EAAS8oB,GACF,KACAA,EAAWE,SAClBhpB,EAAS4oB,EAAgBD,EAAMG,EAAWE,WAM3ChpB,GAGEipB,iBAAiB,SAACC,EAAOC,GAAR,QACxBD,GAASA,EAAME,mBAAqBD,IApBnC,IAsBME,YAAU,SAACC,GAAD,IAAaC,EAAbthB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,aACnB3I,OAAO0J,KAAKugB,GAAQxc,OAChB,SAAChL,EAAGqC,GAAJ,OAAarC,EAAEmR,QAAF,IAAc9O,EAAQmlB,EAAOnlB,KAC1CklB,IAIKE,kBAAkB,SAACC,GAAD,OAAiBJ,EAAQL,UAAO3mB,UAAYonB,6KC7B3EnqB,OAAA0J,KAAA0gB,GAAAxgB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAilB,EAAAvkB,iHAHOwkB,uBACAC,uBACA5e,oBAEA6e,qTCJPvpB,EAAA,SACAA,EAAA,MACAiL,EAAAjL,EAAA,sDAEA,IAAM+I,GAoFEygB,cAnFkB,kBAClBC,UAAaC,MAAOC,eAAgB,WAmFpCC,IAjFQ,SAACC,EAAaC,GAAd,OACRL,UAAaC,MAAOE,IAAKC,EAAaC,WAiFtC7P,aA/EiB,SAAC/B,GAAD,OACjBuR,UAAaC,MAAOpP,cAAepC,KA+EnC6R,iBA7EqB,kBACrBN,UAAaC,MAAOM,mBAAoB,KA6ExCC,iBA3EqB,kBACrBR,UAAaC,MAAOQ,mBAAoB,KA2ExCC,YAzEgB,kBAChBV,UAAaC,MAAOU,aAAc,KAyElCvS,gBAvEoB,SAACR,GAAD,OACpBoS,UAAaC,MAAOrV,cAAegD,KAuEnCgT,eArEmB,SAACC,GAAD,OACnBb,UAAaC,MAAOa,gBAAiBD,KAqErCE,OAnEW,kBACXf,UAAaC,MAAOc,OAAQ,KAmE5BC,aAjEiB,kBACjBhB,UAAaC,MAAOgB,eAAgB,KAiEpCC,UA/Dc,kBACdlB,UAAaC,MAAOkB,WAAY,KA+DhCxoB,UA1Dc,kBACdqnB,UAAaC,MAAOtnB,UAAW,KA0D/ByoB,iBA9DqB,kBACrBpB,UAAaC,MAAOoB,kBAAmB,KA8DvCC,qBAzDyB,SAAC5B,GAAD,OACzBM,UAAaC,MAAOsB,uBAAwB,EAAG7B,iBAyD/C8B,KAvDS,SAAC9B,EAAaW,GAAd,OACTL,UAAaC,MAAOuB,KAAM9B,EAAaW,WAuDvCoB,YArDgB,kBAChBzB,UAAaC,MAAOyB,aAAc,KAqDlCC,YAnDgB,SAACC,GAAD,OAChB1qB,QAAQC,SAAS,EAAAqK,EAAAuB,eAAc6e,MAAkB5B,UAAaC,KAAK2B,KAmDnE9oB,UAjDc,SAAC+oB,EAAOC,EAAQC,GAAhB,OACd/B,UAAaC,KAAbpjB,GAAoB/D,UAAW,EAAGkpB,YAAa,EAAGH,QAAOC,UAAWC,KAmDpEE,OAhDW,SAACC,EAAUC,EAAIC,GAAf,OACXC,UAAoBJ,OAAOC,EAAUC,EAAIC,IAgDzCE,UA9Cc,kBACdD,UAAoBC,UAApBvsB,MAAAwsB,EAAAthB,QAAA/C,YA8CAskB,iBA5CqB,SAACL,GAAD,OACrBE,UAAoBI,UAAU,WAAaC,QAAS,EAAGD,UAAW,GAAKN,IA4CvEQ,kBA1CsB,SAACC,EAAKT,EAAIU,GAAV,OACtBR,UAAoBI,UAAU,WAAYG,EAAKT,EAAIU,IA0CnDC,8BAxCkC,eAACpD,EAADxhB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAe,KAAMikB,EAArBjkB,UAAA,GAAyB2kB,EAAzB3kB,UAAA,UAClCmkB,UAAoBI,UAAU,yBAA9B5lB,GAA0D0kB,uBAAwB,EAAGkB,UAAW,GAAO/C,IAAiBA,gBAAkByC,EAAIU,IAwC9IE,eAtCmB,SAACtU,EAAQ0T,EAAIU,GAAb,OACnBR,UAAoBI,UAAU,SAAWO,MAAOvU,EAAQgU,UAAW,GAAKN,EAAIU,IAsC5EI,sBApC0B,SAACrB,EAAgBO,EAAIU,GAArB,OAC1BR,UAAoBI,UAAU,gBAAiBb,EAAgBO,EAAIU,IAoCnEK,qBAlCyB,SAACf,EAAIU,GAAL,OACzBR,UAAoBI,UAAU,eAAiBU,YAAa,EAAGV,UAAW,GAAKN,EAAIU,IAkCnFO,uBAhC2B,SAACjB,GAAD,OAC3BE,UAAoBI,UAAU,kBAAoBY,eAAgB,EAAGZ,UAAW,GAAKN,eAmC9E7iB,kFCxHFgkB,mBACTC,KAAa,QACbC,IAAa,QACbC,YAAa,UACbC,WAAa,UACbC,MAAa,UACbC,SAAa,UACbC,SAAa,cACbC,QAAa,eAIJC,kBACTC,EAAG,cACHC,EAAG,eAGMC,kBACTC,MAAO,QACPC,IAAO,OAGEC,uBACTC,OAAQ,SACRC,OAAQ,SACRC,MAAQ,wFCzBZ,IAAAxoB,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMkuB,EAAW,kBACbzjB,EAAAC,QAAAvJ,cAAA,OAAKgtB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACnErY,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,kBACR4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAckZ,KAAK,OAAOqL,SAAS,UAAUzqB,EAAE,2WAK3EqqB,EAAS/lB,WACLomB,MAAO/nB,UAAUqE,mBAGN,EAAApF,EAAAwB,UAASinB,kHCjBxB,IAAAxa,EAAA1T,EAAA,GAEawuB,yBAAyB,kBAClCC,QAAc,EAAA/a,EAAA2C,UAAS,YACvBqY,QAAc,EAAAhb,EAAA2C,UAAS,cACvB2W,MAAc,EAAAtZ,EAAA2C,UAAS,UACvBsY,OAAc,EAAAjb,EAAA2C,UAAS,mBACvB4W,KAAc,EAAAvZ,EAAA2C,UAAS,SACvBuY,MAAc,EAAAlb,EAAA2C,UAAS,kBACvBwY,YAAc,EAAAnb,EAAA2C,UAAS,iBACvByY,WAAc,EAAApb,EAAA2C,UAAS,iBACvB0Y,UAAc,EAAArb,EAAA2C,UAAS,aACvB2Y,WAAc,EAAAtb,EAAA2C,UAAS,cACvB4Y,WAAc,EAAAvb,EAAA2C,UAAS,cACvB6Y,YAAc,EAAAxb,EAAA2C,UAAS,eACvB8W,YAAc,EAAAzZ,EAAA2C,UAAS,gBACvB6W,aAAc,EAAAxZ,EAAA2C,UAAS,gBACvB8Y,cAAc,EAAAzb,EAAA2C,UAAS,gBACvB+Y,aAAc,EAAA1b,EAAA2C,UAAS,aACvBgZ,YAAc,EAAA3b,EAAA2C,UAAS,cACvBiZ,WAAc,EAAA5b,EAAA2C,UAAS,YACvB+W,OAAc,EAAA1Z,EAAA2C,UAAS,iBACvBgX,UAAc,EAAA3Z,EAAA2C,UAAS,gBACvBiX,UAAc,EAAA5Z,EAAA2C,UAAS,WACvBkX,SAAc,EAAA7Z,EAAA2C,UAAS,mGCxBdkZ,iBAAiB,SAACC,GAC3B,IAAMC,EAAQD,EAAcrL,WACtBuL,EAAQF,EAActL,YACtBgB,EAAcyK,EAAqBD,EAAMD,GAE/C,OACIvK,cACAD,WAAaC,EAAc,SAAW,WACtC0K,UAAaF,GAASxK,GAAe,GACrC2K,YAAaJ,GAASvK,GAAe,KATtC,IAaD4K,IACD,EAAS,IACT,EAAS,MACT,EAAS,MACT,GAAS,MACT,IAAS,OACT,IAAS,QAERH,EAAuB,SAACvL,GAAD,OACxB0L,EAAwBzd,KAAK,SAAA1O,GAAA,OAAKygB,GAAmB,KAAPzgB,EAAE,OAAe,KAAM,QAAQ,IAoBrEosB,GAlBAC,mBAAmB,SAACR,GAC7B,IAAIS,EAAS,YAIb,OAHIC,EAAQV,KACRS,EAAST,EAAcW,QAAU,EAAI,MAAQ,QAE1CF,GAKEG,aAAa,SAACZ,GAAD,OACtBA,EAAca,kBAAoBb,EAAcc,UAAYd,EAAce,WAGjEC,iBAAiB,SAAChB,GAAD,OAC1BA,EAAca,kBAAoBb,EAAciB,eAAiBjB,EAAckB,gBAGtEX,gBAAgB,SAACP,GAAD,QACvBA,EAAcmB,YAAcnB,EAAcoB,aASnCV,GANAW,qBAAqB,SAACrB,GAAD,OAC9BO,EAAcP,IAAkBU,EAAQV,GACpCO,EAAcP,IACZA,EAAcoB,WAAa,MAGxBV,UAAU,SAACV,GAAD,SAClBA,EAAcS,QAAmC,SAAzBT,EAAcS,QACvCT,EAAcsB,YACdtB,EAAcuB,iBAWLC,GARAC,oBAAoB,SAACzB,GAAD,OAC7BA,EAAc0B,YAAc1B,EAAc0B,WAAa1B,EAAcrL,YAG5DgN,YAAY,SAAC3B,GAAD,OACpBA,EAAc4B,qBAAuB5B,EAAc6B,kBAAoB7B,EAAcrL,YAG7E6M,aAAa,SAACxB,GAAD,MACG,SAAzBA,EAAcS,SAGLqB,gBAAgB,SAAC9B,GAAD,OACxBU,EAAQV,KAAmBwB,EAAWxB,IAAsD,IAAnCA,EAAc+B,0JCvE5E,wDAAAvxB,EAAA,KACA4T,EAAA5T,EAAA,IAEa8a,6BAA6B,SAAC/Y,EAAUuU,GACjD,IAAMkb,KAkBN,OAhBKzvB,EAAS0vB,8BAAgC5yB,QAC1CkD,EAAS0vB,yBAAyB7oB,QAAQ,SAAA8U,GACtC,IAAMgU,EAAoBF,EAAwBnf,KAAK,SAAAsf,GAAA,OAAOA,EAAIptB,QAAUmiB,SAAShJ,EAAOrG,QACtFua,GAAsB1U,MAAM,EAAAtJ,EAAA+D,UAAS+F,EAAOR,MAAOzE,OAAO,EAAA7E,EAAA+D,UAAS+F,EAAOjF,QAC5EiZ,EACAA,EAAkB9a,SAAS7X,KAAK6yB,GAEhCJ,EAAwBzyB,MACpBsL,MAAU,EAAAuJ,EAAA+D,UAAS+F,EAAOrG,MAAMJ,OAAO,sBACvC1S,MAAUmiB,SAAShJ,EAAOrG,MAC1BT,UAAWgb,OAMpBJ,EAAwB3yB,OAAS2yB,EAA0Blb,GAnB/D,IAuBDub,EAAe,SAAChb,EAAgBC,EAAcgb,GAChD,IAAMC,GAAa,EAAAne,EAAA+D,UAASb,GAI5B,OAHIgb,GACAC,EAAW/a,OAAO,GAAGgb,OAAO,GAEzBnb,EAAewF,SAAS0V,IAAeA,EAAWE,SAAWpb,EAAeob,QAG1Elb,qBAAqB,eAC9BH,EAD8BjP,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MAE9BkP,EAF8BlP,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAEL,EAAAiM,EAAA+D,UAASC,UAAWzT,OAC7C2S,EAH8BnP,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAGL,EAAAiM,EAAA+D,UAASC,UAAWzT,OAC7C2tB,EAJ8BnqB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,IAAAA,UAAA,WAM7BkqB,EAAahb,EAAgBe,UAAWzT,MAAO2tB,IAC/CD,EAAahb,EAAgBC,EAAcgb,IACtClb,EAAS/X,SACL+X,EAASvE,KAAK,SAAA6f,GAAA,OACZrb,EAAesb,UAAUD,EAAQhV,KAAMgV,EAAQzZ,MAAOqZ,EAAyB,OAAS,KAAM,uGC5C9G9yB,OAAA0J,KAAA0pB,GAAAxpB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAiuB,EAAAvtB,0KCAO6F,2JCAP,IAAAgJ,EAAA1T,EAAA,GAEaqyB,iBACTC,KAAK,EAAA5e,EAAA2C,UAAS,OACdkc,KAAK,EAAA7e,EAAA2C,UAAS,OACdmc,KAAK,EAAA9e,EAAA2C,UAAS,OACdoc,KAAK,EAAA/e,EAAA2C,UAAS,OACdqc,KAAK,EAAAhf,EAAA2C,UAAS,OACdsc,KAAK,EAAAjf,EAAA2C,UAAS,OACduc,KAAK,EAAAlf,EAAA2C,UAAS,OACdwc,KAAK,EAAAnf,EAAA2C,UAAS,OACdyc,KAAK,EAAApf,EAAA2C,UAAS,OACd0c,KAAK,EAAArf,EAAA2C,UAAS,OACd2c,KAAK,EAAAtf,EAAA2C,UAAS,OACd4c,KAAK,EAAAvf,EAAA2C,UAAS,QAGL6c,gBACTC,QAAW,EAAAzf,EAAA2C,UAAS,UACpB+c,SAAW,EAAA1f,EAAA2C,UAAS,WACpBgd,WAAW,EAAA3f,EAAA2C,UAAS,aACpBid,UAAW,EAAA5f,EAAA2C,UAAS,YACpBkd,QAAW,EAAA7f,EAAA2C,UAAS,UACpBmd,UAAW,EAAA9f,EAAA2C,UAAS,YACpBod,QAAW,EAAA/f,EAAA2C,UAAS,WAGXqd,qBACTP,QAAW,EAAAzf,EAAA2C,UAAS,KACpB+c,SAAW,EAAA1f,EAAA2C,UAAS,KACpBgd,WAAW,EAAA3f,EAAA2C,UAAS,KACpBid,UAAW,EAAA5f,EAAA2C,UAAS,KACpBkd,QAAW,EAAA7f,EAAA2C,UAAS,KACpBmd,UAAW,EAAA9f,EAAA2C,UAAS,KACpBod,QAAW,EAAA/f,EAAA2C,UAAS,qHClCxB,IAAAzC,EAAA5T,EAAA,IAEa2zB,YAAY,SAACC,GAAD,OAAoB,EAAAhgB,EAAA+D,UAASic,GAAaC,OAA1C,KAAoD,EAAAjgB,EAAA+D,UAASic,GAAapX,IAAI,EAAG,SAASqX,QAEtGC,aAAa,SAACF,GAAD,OAAoB,EAAAhgB,EAAA+D,UAASic,GAAaC,OAA1C,KAAoD,EAAAjgB,EAAA+D,UAASic,GAAapX,IAAI,GAAI,SAASqX,oGCJrH70B,OAAA0J,KAAAqrB,GAAAnrB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4vB,EAAAlvB,qBACA7F,OAAA0J,KAAAsrB,GAAAprB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6vB,EAAAnvB,qBACA7F,OAAA0J,KAAAurB,GAAArrB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA8vB,EAAApvB,uHCFA7F,OAAA0J,KAAAsL,GAAApL,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6P,EAAAnP,qBAEA7F,OAAA0J,KAAAwrB,GAAAtrB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+vB,EAAArvB,yEADO6jB,gGCDP,QAAA1oB,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,IACA4T,EAAA5T,EAAA,uDAIA,IAAMo0B,EAAgB,SAAA9sB,GAGhB,IAAA+sB,EAAA/sB,EAFFwV,gBAEEvZ,IAAA8wB,EAFS,KAETA,EADFxX,EACEvV,EADFuV,WAEA,KAAMC,GAAYD,EAAWoV,QAAUnV,EACnC,MAAO,GAGX,IAAMwX,GAAiB,EAAA1gB,EAAA2gB,iBAAe,EAAA3gB,EAAA4gB,iBAAgB3X,EAAWoV,OAAQnV,IAEzE,OACIrS,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBAAkBuqB,IAIzCF,EAAcjsB,WACV2U,SAAUtW,UAAUiL,WAChBjL,UAAUkL,OACVlL,UAAUqE,SACX4pB,WACH5X,WAAYrW,UAAUxB,mBAGX,EAAAmvB,EAAAvtB,SACX,SAAA6Q,GAAA,OACIoF,WADJpF,EAAG/Q,OACoBmgB,cAFZ,CAIbuN,qKClCK1pB,4JCAP,QAAA1K,EAAA,SACAA,EAAA,MACA00B,EAAA10B,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEa20B,gBAAgB,WACzB5rB,UAAGyhB,SAASxa,KAAK4kB,IADd,IAIDA,EAAW,SAACC,GACU,IAApBA,EAASrK,SACb9G,UAAIyB,eAAgBxiB,MAAO,aAC3B,EAAA+xB,EAAAI,eAAc,kBAAmB,sBACjCC,UAAOC,mBACPD,UAAOE,IAAI,UAAW,IACtBC,UAAYC,QACZ7vB,OAAOmN,SAAS2iB,wGCjBpBp2B,OAAA0J,KAAA2sB,GAAAzsB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAkxB,EAAAxwB,+PCAaywB,kBAAkB,SAAC9gB,GAAD,MAAmB,SAAShC,KAAKgC,IAEnD+gB,eAAe,SAACC,EAAahG,GACtC,IAAM3S,GAAc2S,EAAciG,gBAClC,IAAK5Y,EAAY,SAEjB,IAAM6Y,EAAQ7Y,KAAc2Y,KACxBG,EAAgBnG,EAAeA,EAAcoG,WAAY/Y,GAEvDgZ,GAAmBrG,EAAc6B,kBACjCyE,GAAmBtG,EAAckB,eAGjCqF,EAAWF,KAAaL,GAFNM,GAAaD,EAAYC,KAG7CH,EAAgBnG,EAAeA,EAAcwG,aAAcH,GAE/D,OAAAvvB,KACOovB,EACAK,IAlBJ,IAsBDJ,EAAkB,SAACnG,EAAeyG,EAAMJ,GAC1C,IAAMK,IAAS,GAAGD,GAAOzwB,OAAO,GAEhC,6HAAAmH,KACMkpB,GACEK,QACAC,OAASC,EAAM5G,EAAe0G,GAC9BG,QAASR,KAAerG,EAAckB,kBAK5C0F,EAAQ,SAAC5G,EAAeuG,GAAhB,OACTO,EAAY9G,EAAchb,gBAAmB,eAAYgb,EAAcvW,QAAS8c,IAE/EO,GACFzH,WAAY,SAAC5V,EAAS8c,GAAV,OAAsBA,IAAY9c,GAC9C6V,UAAY,SAAC7V,EAAS8c,GAAV,OAAsBA,IAAY9c,GAC9C8V,SAAY,SAAC9V,EAAS8c,GAAV,OAAsBA,EAAU,GAC5C/G,UAAY,SAAC/V,EAAS8c,GAAV,QAAwBA,EAAU,IAC9C9G,UAAY,SAAChW,EAAS8c,GAAV,OAAsBA,EAAU9c,GAC5CiW,WAAY,SAACjW,EAAS8c,GAAV,OAAsBA,EAAU9c,0JC3ChD,IAAAjO,EAAAhL,EAAA,GACAiL,EAAAjL,EAAA,GACAu2B,EAAAv2B,EAAA,KAEaw2B,qBAAqB,SAAChiB,GAAD,OAAmBA,KAAiBuY,mBAEzD0J,mBAAmB,SAACC,GAAD,QAAAhvB,EAAAC,UAAA9I,OAAiB83B,EAAjB9uB,MAAAH,EAAA,EAAAA,EAAA,KAAAkvB,EAAA,EAAAA,EAAAlvB,EAAAkvB,IAAiBD,EAAjBC,EAAA,GAAAjvB,UAAAivB,GAAA,OAAmCD,EAAc7pB,IAC7E,SAAAmM,GAAA,OAAcyd,IAAgB,QAAQlkB,KAAKyG,GAAW,IAAM,IAAKA,KAGxD4d,wBAAwB,SAAC/d,GAAD,OACjC9Z,OAAO0J,KAAKoQ,OACPhM,IAAI,SAAAjI,GAAA,OAAO,EAAAmG,EAAAuB,MAAKuM,EAASjU,MACzBkW,OAAO,SAAAxE,GAAA,QAAS,EAAAtL,EAAAuB,eAAc+J,0OCbvC,wDAAAvW,EAAA,6HAGa82B,kCACT,SACA,YACA,YACA,QACA,sBACA,gBACA,WACA,gBACA,cACA,cACA,mBACA,aACA,aACA,aACA,UAGSC,qCAAqC,SAAC1wB,GAC/C,IAAM2wB,GACF,sBACA,eAGJ,IAAK3wB,EAAO,OAAO2wB,EANsC,IAQjD7hB,EAAwBlB,UAAa4B,aAAaxP,EAAMyP,YAAxDX,oBACA0D,EAAgBxS,EAAhBwS,YACR,SAAA3Q,OACO8uB,EADPhiB,EAEgC,YAAxBG,GAAqC,kBAF7CH,EAGgC,YAAxB6D,GAAqC,qBAIpCoe,yCACThe,QAAa,SAAAie,GAAA,OAAYA,EAAW,aAAe,aACnDlT,SAAa,YACbE,YAAa,cACbC,WAAa,cAGJgT,iCACT,WACA,cACA,WACA,SACA,4FClDSC,mBAAmB,IACnBC,mBAAmB,yGCDhC,QAAAr3B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMs3B,EAAY,SAAAhwB,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACdU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYokB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACpHrY,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAckZ,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,mLAI1EyzB,EAAUnvB,WACN4B,UAAWvD,UAAUqE,UAGhBysB,8GCdT,QAAAt3B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM8hB,EAAY,SAAAxa,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAWG,EAAd5C,EAAc4C,YAAd,OACdO,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAWX,GAAaY,SAAUT,IAAgBikB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aAChIrY,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,qBAIlDie,EAAU3Z,WACN4B,UAAavD,UAAUqE,OACvBX,YAAa1D,UAAUsE,QAGlBgX,6GCfT,QAAA9hB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM6hB,EAAW,SAAAva,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAWG,EAAd5C,EAAc4C,YAAd,OACbO,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAWX,GAAaY,SAAUT,IAAgBikB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aAChIrY,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,oDAKlDge,EAAS1Z,WACL4B,UAAavD,UAAUqE,OACvBX,YAAa1D,UAAUsE,QAGlB+W,sQChBT7hB,EAAA,QACAA,EAAA,IACAu3B,EAAAv3B,EAAA,IACAopB,EAAAppB,EAAA,SAGAA,EAAA,yDAKA,IAAMqpB,EAAa,SAAA/hB,GAAgC,IAA7BkwB,EAA6BlwB,EAA7BkwB,GAAI7xB,EAAyB2B,EAAzB3B,SAAaS,yHAAYqxB,CAAAnwB,GAAA,kBACzC+gB,GAAQ,EAAAe,EAAAhB,eAAcoP,GACtB5O,GAAQ,EAAAQ,EAAAd,iBAAgBD,GAAM,EAAAqP,EAAAhtB,YAEpC,IAAKke,EACD,MAAM,IAAIvlB,MAAJ,oBAA8Bm0B,GAGxC,OACIA,EACI/sB,EAAAC,QAAAvJ,cAACo2B,EAAAI,QAADrxB,GAASkxB,GAAInP,EAAMuP,gBAAgB,SAASC,MAAOjP,EAAMiP,OAAWzxB,GAC/DT,GAGL8E,EAAAC,QAAAvJ,cAAA,IAAAmF,GAAG6M,KAAK,gBAAmB/M,GACtBT,IAKjB0jB,EAAWlhB,WACPxC,SAAUa,UAAUxB,OACpBwyB,GAAUhxB,UAAUqE,kBAGTwe,iFCpCf,IAAAyO,EAAA93B,EAAA,GACAu3B,EAAAv3B,EAAA,IACA0T,EAAA1T,EAAA,GACA+3B,EAAA/3B,EAAA,KAEAg4B,EAAAh4B,EAAA,wDAIAA,EAAA,MAEA,IAAMi4B,GAAkB,EAAAH,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,YAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eAC7BqzB,GAAkB,EAAAL,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,aAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eAC7BszB,GAAkB,EAAAN,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,YAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eAC7BuzB,GAAkB,EAAAP,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,aAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eAG7BwzB,GAAyB,EAAAR,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,oBAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eACpCyzB,GAAyB,EAAAT,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,YAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eACpC0zB,GAAyB,EAAAV,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,0BAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eACpC2zB,GAAyB,EAAAX,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,oBAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eACpC4zB,GAAyB,EAAAZ,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,wBAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eACpC6zB,GAAyB,EAAAb,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,UAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eACpC8zB,GAAyB,EAAAd,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,iBAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eACpC+zB,GAAyB,EAAAf,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,oBAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eACpCg0B,GAAyB,EAAAhB,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,kBAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eAGpCi0B,GAAU,EAAAjB,EAAAI,MAAK,kBAAMl4B,EAAAO,EAAA,OAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eA4BvByjB,SAGEyQ,GAAmBC,UAAWF,EAASte,OAAO,EAAA/G,EAAA2C,UAAS,wBAErC,WAKpB,OAJKkS,IACDA,IAhCFF,KAAMK,SAAO3mB,SAAWk3B,UAAWhB,EAAiBxd,OAAO,EAAA/G,EAAA2C,UAAS,oBAAsByS,kBAAkB,IAC5GT,KAAMK,SAAOnG,MAAW0W,UAAWC,WAAiBze,MAAO,GAA+B+c,GAAI,WAC9FnP,KAAMK,SAAOtmB,UAAW62B,UAAWd,EAAiB1d,OAAO,EAAA/G,EAAA2C,UAAS,aAAsByS,kBAAkB,EAAMqQ,eAAgBC,kBAClI/Q,KAAMK,SAAOjG,KAAWwW,UAAWC,WAAiBze,MAAO,GAA+Bod,OAAO,EAAML,GAAI,WAC3GnP,KAAMK,SAAOnmB,UAAW02B,UAAWZ,EAAiB5d,OAAO,EAAA/G,EAAA2C,UAAS,aAAsByS,kBAAkB,EAAMqQ,eAAgBE,kBAClIhR,KAAMK,SAAO/F,MAAWsW,UAAWK,UAAiB7e,OAAO,EAAA/G,EAAA2C,UAAS,SAAsBwhB,OAAO,IAE/FxP,KAAkBK,SAAOpmB,SACzB22B,UAAkBb,EAClBtP,kBAAkB,EAClBJ,SACML,KAAMK,SAAOlG,SAAkByW,UAAWJ,EAAwBpe,OAAO,EAAA/G,EAAA2C,UAAS,sBAClFgS,KAAMK,SAAOrG,UAAkB4W,UAAWP,EAAwBje,OAAO,EAAA/G,EAAA2C,UAAS,0BAClFgS,KAAMK,SAAO/mB,iBAAkBs3B,UAAWX,EAAwB7d,OAAO,EAAA/G,EAAA2C,UAAS,sBAClFgS,KAAMK,SAAO5mB,iBAAkBm3B,UAAWR,EAAwBhe,OAAO,EAAA/G,EAAA2C,UAAS,sBAClFgS,KAAMK,SAAOtG,UAAkB6W,UAAWH,EAAwBre,OAAO,EAAA/G,EAAA2C,UAAS,oBAClFgS,KAAMK,SAAOzmB,OAAkBg3B,UAAWN,EAAwBle,OAAO,EAAA/G,EAAA2C,UAAS,oBAClFgS,KAAMK,SAAOpG,QAAkB2W,UAAWL,EAAwBne,OAAO,EAAA/G,EAAA2C,UAAS,mBAClFgS,KAAMK,SAAOhG,MAAkBuW,UAAWV,EAAwB9d,OAAO,EAAA/G,EAAA2C,UAAS,eAClFgS,KAAMK,SAAOvG,KAAkB8W,UAAWT,EAAwB/d,OAAO,EAAA/G,EAAA2C,UAAS,+BAG1FgS,KAAMK,SAAOxG,SAAU+W,UAAWF,EAASte,OAAO,EAAA/G,EAAA2C,UAAS,gBAY7DkS,EAAcxpB,KAAKi6B,GACZzQ,sFClEX,QAAAvoB,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,QACAA,EAAA,yDAEA,IAAMu5B,EAAW,SAAAjyB,GAAA,IACbkN,EADalN,EACbkN,cACAqJ,EAFavW,EAEbuW,oBACAsC,EAHa7Y,EAGb6Y,SACAqZ,EAJalyB,EAIbkyB,UAJa,OAMb/uB,EAAAC,QAAAvJ,cAACs4B,EAAA/uB,SACG5G,KAAK,gBACLoX,KAAM2C,EACNtZ,MAAOiQ,EACP2L,SAAUA,EACVqZ,UAAWA,KAInBD,EAASpxB,WACLqM,cAAqBhO,UAAUqE,OAC/BgT,oBAAqBrX,UAAUxB,OAC/Bw0B,UAAqBhzB,UAAUsE,KAC/BqV,SAAqB3Z,UAAUuE,iBAGpB,EAAAopB,EAAAvtB,SACX,SAAA6Q,GAAA,IAAGrY,EAAHqY,EAAGrY,QAASuH,EAAZ8Q,EAAY9Q,GAAZ,OACI6N,cAAqBpV,EAAQujB,MAAMnO,cACnCqJ,oBAAqBze,EAAQujB,MAAM9E,oBACnCsC,SAAqB/gB,EAAQujB,MAAMxC,SACnCqZ,UAAqB7yB,EAAG6yB,YALjB,CAObD,+FClCFv6B,OAAA0J,KAAAgxB,GAAA9wB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAu1B,EAAA70B,uFCAA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA25B,EAAA35B,EAAA,uDAEA,IAAM45B,EAAmB,SAACxzB,GAAU,IACxBqU,EAA6BrU,EAA7BqU,MAAOof,EAAsBzzB,EAAtByzB,QAASl0B,EAAaS,EAAbT,SAoCxB,OAjCQS,EAAMyzB,SACN74B,SAAS84B,KAAKC,UAAUvd,IAAI,aAC5Bxb,SAASg5B,eAAe,cAAcD,UAAUvd,IAAI,eAEpDxb,SAAS84B,KAAKC,UAAUE,OAAO,aAC/Bj5B,SAASg5B,eAAe,cAAcD,UAAUE,OAAO,cA6B3DxvB,EAAAC,QAAAvJ,cAAA,OACI4I,WAAW,EAAAqU,EAAA1T,SAAW,qBAClBwvB,0BAA2BL,IAE/B1vB,QAnBY,SAAC5J,GACjB,GAAyB,UAArBA,EAAE4C,OAAOg3B,SAAyC,WAAlB55B,EAAE4C,OAAOF,KAAmB,CAC5D,IAAMm3B,EAZU,SAACC,EAAQC,GAC7B,IAAMC,EAAkBD,EAAGE,wBAE3B,GADeD,EAAgBE,IAAMH,EAAGI,aAAe,GAAKp1B,OAAOq1B,YACvD,CACR,IAAMC,GAAct1B,OAAOq1B,YAAcL,EAAGI,cAAgB,EAC5DL,EAAOQ,WAAaN,EAAgBE,IAAMG,GAOnBE,CAAgBv6B,EAAEw6B,cAAex6B,EAAE4C,QAC1DmC,OAAO01B,iBAAiB,SAAUZ,GAAgB,GAGlD90B,OAAO9B,WAAW,WACd8B,OAAO21B,oBAAoB,SAAUb,GAAgB,IACtD,QAaH3vB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,6BACXU,EAAAC,QAAAvJ,cAAA,MAAI4I,UAAU,4BACT0Q,GAELhQ,EAAAC,QAAAvJ,cAAA,OACI4I,UAAU,+CACVI,QAAS/D,EAAM80B,SAEfzwB,EAAAC,QAAAvJ,cAACw4B,EAAArC,WAAUvtB,UAAU,eAG7BU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,2CACfU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,qCACfU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,8BACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wBACVpE,MAOrBi0B,EAAiBzxB,WACbxC,SAAUa,UAAU20B,IACpBD,QAAU10B,UAAUuE,KACpB0P,MAAUjU,UAAUqE,OACpBgvB,QAAUrzB,UAAUsE,gBAGT8uB,iFC9Ef,QAAA55B,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACAiL,EAAAjL,EAAA,OACAA,EAAA,KACAo7B,EAAAp7B,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KACAq7B,EAAAr7B,EAAA,KACAm0B,EAAAn0B,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMs7B,EAAW,SAAAh0B,GAAA,IACbuJ,EADavJ,EACbuJ,SACA0qB,EAFaj0B,EAEbi0B,2BACA5W,EAHard,EAGbqd,uBACA6W,EAJal0B,EAIbk0B,oBACAC,EALan0B,EAKbm0B,mBACAC,EANap0B,EAMbo0B,iBACAC,EAPar0B,EAObq0B,gBACAC,EARat0B,EAQbs0B,gBACAC,EATav0B,EASbu0B,mBACAC,EAVax0B,EAUbw0B,cACAC,EAXaz0B,EAWby0B,cACAC,EAZa10B,EAYb00B,cACAznB,EAbajN,EAabiN,YAba,OAebvV,OAAO0J,KAAK6L,GAAazH,IAAI,SAAC7J,EAAMg5B,GAChC,IAAMC,EAAcH,EAAc94B,OAC5BiH,IAAesxB,GAAwBE,GAAqBQ,EAAKjyB,IAAOsxB,GAExEY,EACF1xB,EAAAC,QAAAvJ,cAACygB,EAAAlX,SACGR,YAAaA,EACbD,GAAA,YAAgBhH,EAChB8G,UAAU,6BACVC,YAAA,EACAG,QAAS,WAAQwxB,EAAgBO,EAAKjyB,GAAIiyB,EAAKE,MAAOn5B,IACtDqH,iBAAiB,kBAEjBG,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,8BACfU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gCACfU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,yBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,4BACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eAAcp5B,KAAMA,EAAKuO,gBAC1B/G,EAAAC,QAAAvJ,cAAA,aAAO,EAAAuS,EAAA2C,UAAS,OAAQ9B,EAAYtR,OAG5CwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,sBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wBAAwBG,EAAc,QAAUgyB,EAAKI,SACpE7xB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wBACVG,EAAc,QAAUO,EAAAC,QAAAvJ,cAACo7B,EAAA7xB,SAAMiG,OAAQurB,EAAK/L,OAAQtf,SAAUA,QAO7E2rB,IAAsB,EAAAvxB,EAAAuB,eAAcwvB,IAAkBA,EAAczjB,SAASqR,MAAQsS,EAAKjyB,GAEhG,OACIQ,EAAAC,QAAAvJ,cAACs7B,EAAA/xB,SACGX,UAAU,kBACVlF,IAAKo3B,EACLtd,aAAc,WAAQid,GAAgB,EAAM34B,IAC5C2b,aAAc,WAAQgd,GAAgB,KAEpCH,GAA8B,IAARQ,GACxBxxB,EAAAC,QAAAvJ,cAACu7B,EAAAhyB,SAAaP,QAAS0xB,IAErBW,EACE/xB,EAAAC,QAAAvJ,cAACw7B,EAAAjyB,SACGsxB,cAAeA,EACf7xB,QAAS2xB,EACTjrB,SAAUA,IAGdpG,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,MACOiqB,GAA+B,IAARS,GAC1BxxB,EAAAC,QAAAvJ,cAACy7B,EAAAlyB,QAAD,MAEAD,EAAAC,QAAAvJ,cAAC07B,EAAAnyB,SACGmG,SAAUA,EACVkrB,cAAeG,EACfY,cAAeZ,EAAKY,gBAEvBnY,EACGla,EAAAC,QAAAvJ,cAACi6B,EAAA2B,YACG/e,UAAU,OACVgf,aAAa,EAAAtpB,EAAA2C,UAAS,UACtB4mB,cAAc,EAAAvpB,EAAA2C,UAAS,YACvB0H,SAAS,EAAArK,EAAA2C,UAAS,qDAEjB8lB,GAGLA,OAS5Bb,EAASnzB,WACL0I,SAA4BrK,UAAUqE,OACtC0wB,2BAA4B/0B,UAAUsE,KACtC6Z,uBAA4Bne,UAAUsE,KACtC0wB,oBAA4Bh1B,UAAUsE,KACtC2wB,mBAA4Bj1B,UAAUsE,KACtC4wB,iBAA4Bl1B,UAAUsE,KACtC6wB,gBAA4Bn1B,UAAUuE,KACtC6wB,gBAA4Bp1B,UAAUuE,KACtCgxB,cAA4Bv1B,UAAUxB,OACtCg3B,cAA4Bx1B,UAAUxB,OACtC82B,cAA4Bt1B,UAAUuE,KACtC8wB,mBAA4Br1B,UAAUuE,KACtCwJ,YAA4B/N,UAAUxB,mBAG3B,EAAAmvB,EAAAvtB,SACX,SAAA6Q,GAAA,IAAGhR,EAAHgR,EAAGhR,OAAQrH,EAAXqY,EAAWrY,QAASuH,EAApB8Q,EAAoB9Q,GAApB,OACIkK,SAA4BpK,EAAOoK,SACnC0qB,2BAA4B90B,EAAO80B,2BACnCC,oBAA4Bp8B,EAAQujB,MAAM6Y,oBAC1CE,iBAA4Bt8B,EAAQujB,MAAM+Y,iBAC1CC,gBAA4Bv8B,EAAQujB,MAAMua,WAC1CtB,gBAA4Bx8B,EAAQujB,MAAMiZ,gBAC1CE,cAA4B18B,EAAQujB,MAAMwa,gBAC1CpB,cAA4B38B,EAAQujB,MAAMoZ,cAC1CC,cAA4B58B,EAAQujB,MAAMqZ,cAC1CznB,YAA4BnV,EAAQujB,MAAMpO,YAC1CoQ,uBAA4Bhe,EAAGge,uBAC/B8W,mBAA4B90B,EAAGy2B,oBAC/BvB,mBAA4Bl1B,EAAGk1B,qBAdxB,CAgBbP,6GC7IF,QAAAt7B,EAAA,QACAA,EAAA,QACAA,EAAA,IACA25B,EAAA35B,EAAA,uDAEA,IAAMq9B,EAAoB,SAAA/1B,GASpB,IARF0W,EAQE1W,EARF0W,UACAgf,EAOE11B,EAPF01B,YACAC,EAME31B,EANF21B,aACAK,EAKEh2B,EALFg2B,WACAvf,EAIEzW,EAJFyW,QACAmd,EAGE5zB,EAHF4zB,QACAqC,EAEEj2B,EAFFi2B,UACAC,EACEl2B,EADFk2B,WAEMC,GAAmB,EAAArf,EAAA1T,SAAW,aAAcsT,GAC9Cd,KAAQogB,IAEZ,OACI7yB,EAAAC,QAAAvJ,cAAA,OAAKyE,IAAK43B,EAAYzzB,UAAW0zB,GAC7BhzB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACw4B,EAAA+D,gBAAD,MACAjzB,EAAAC,QAAAvJ,cAAA,UAAK4c,IAETtT,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,sBACXU,EAAAC,QAAAvJ,cAAA,OACI4I,UAAU,kBACVI,QAAS+wB,GAETzwB,EAAAC,QAAAvJ,cAAA,YAAO67B,IAEXvyB,EAAAC,QAAAvJ,cAAA,OACI4I,UAAU,kBACVI,QAASozB,GAET9yB,EAAAC,QAAAvJ,cAAA,YAAO87B,OAO3BI,EAAkBl1B,WACd6V,UAAcxX,UAAUqE,OACxBmyB,YAAcx2B,UAAUqE,OACxBoyB,aAAcz2B,UAAUqE,OACxByyB,WAAc92B,UAAUsE,KACxBiT,QAAcvX,UAAUqE,OACxBqwB,QAAc10B,UAAUuE,KACxBwyB,UAAc/2B,UAAUuE,KACxByyB,WAAch3B,UAAUuE,QAGnBsyB,ggBCrDT53B,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,IACAk0B,EAAAl0B,EAAA,KACA29B,EAAA39B,EAAA,4DAEM49B,grBAAoBt1B,UAAMvB,gDAClB82B,GACN,OAAO53B,KAAKG,MAAM2O,gBAAgB+oB,SAASD,yCAGjC,IAAAr2B,EAAAvB,KACV,OAAO8O,kBACFgG,OAAO,SAAAzT,GAAA,IAAGxD,EAAHwD,EAAGxD,KAAH,OAAc0D,EAAKu2B,UAAUj6B,KACpCgJ,IAAI,SAAA2K,GAAA,IAAG3T,EAAH2T,EAAG3T,KAAMiD,EAAT0Q,EAAS1Q,UAAT,OACD0D,EAAAC,QAAAvJ,cAAC4F,EAADT,GACIzB,IAAKf,EACLk6B,aAAcx2B,EAAKpB,MAAM43B,aACzBC,gBAAiBz2B,EAAKpB,MAAM63B,kBACxB,EAAAN,EAAAO,wBACAn3B,EACAS,EAAKpB,MAAM+3B,aAEPtX,YAAarf,EAAKpB,MAAMygB,aAE5Brf,EAAKpB,MAAMg4B,mDAO3B,OAAOn4B,KAAKo4B,uBAIpBT,EAAYz1B,WACRi2B,aAAiB53B,UAAUxB,OAC3B+P,gBAAiBiN,YAAcC,uBAC/B+b,aAAiBx3B,UAAUsE,KAC3BmzB,gBAAiBz3B,UAAUsE,KAC3B+b,YAAiBrgB,UAAUxB,OAC3Bm5B,YAAiB33B,UAAUxB,mBAGhB,EAAAmvB,EAAAvtB,SACX,SAAAkR,GAAA,IAAGrR,EAAHqR,EAAGrR,OAAQC,EAAXoR,EAAWpR,OAAQtH,EAAnB0Y,EAAmB1Y,QAAnB,OACIg/B,aAAiB33B,EACjBogB,YAAiBngB,EAAOmgB,YACxB9R,gBAAiB3V,EAAQujB,MAAM5N,gBAC/BopB,YAAiB/+B,EAAQujB,QALlB,CAObib,07BCrDFn4B,EAAAzF,EAAA,QAGAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACA+T,EAAA/T,EAAA,KACA4T,EAAA5T,EAAA,QACAA,EAAA,gvBAEMs+B,cACF,SAAAA,EAAYl4B,GAAOqB,EAAAxB,KAAAq4B,GAAA,IAAA1xB,EAAA7E,EAAA9B,MAAAq4B,EAAAt2B,WAAAhJ,OAAAiJ,eAAAq2B,IAAAn/B,KAAA8G,KACTG,IADS,OAAAwG,EAgCnB2xB,aAAe,SAACt7B,EAAMsB,GAClB,MAD+CoD,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,KAAAA,UAAA,KAC7BiF,EAAKxG,MAAM7B,MAAO,KAAAi6B,EACG5xB,EAAKxG,MAAM7B,MAAMiT,MAAM,KAD1BinB,EAAA/mB,EAAA8mB,EAAA,GACxBE,EADwBD,EAAA,GACbE,EADaF,EAAA,GAEhC,GAAc,MAATx7B,GAAgBsB,IAAUm6B,GAAwB,MAATz7B,GAAgBsB,IAAUo6B,EAAc,CAClF,IAAMC,EAA4B,MAAT37B,EAAe,mBAAqB,qBAC7D2J,EAAKiyB,+HAALlyB,EACImyB,kBAAoB77B,GACnB27B,GAAmB,IAExBhyB,EAAKxG,MAAM+Z,UAAqB,MAATld,EAAesB,EAAQm6B,GAA9C,KAAoE,MAATz7B,EAAesB,EAAQo6B,OAzC3E/xB,EA8CnBuoB,MAAQ,SAACxyB,GACLA,EAAMo8B,kBACNnyB,EAAKoyB,cACLpyB,EAAKxG,MAAM+Z,SAAS,KA/CpBvT,EAAK4J,SAAWtO,OAAA8M,EAAInN,MAAM,IAAIa,SAAQoE,IAAI,SAAC2J,GAAD,OAAK,IAAIA,GAAIjR,OAAO,KAC9DoH,EAAK8J,WAAWxO,OAAA8M,EAAInN,MAAM,IAAIa,SAAQoE,IAAI,SAAC2J,GAAD,OAAK,IAAQ,EAAJA,GAAQjR,OAAO,KAClEoH,EAAKqyB,OACDC,kBAAoB,EACpBC,oBAAoB,EACpBL,kBAAoB,MAPTlyB,aADUtE,UAAMvB,yDAYhBq4B,EAAWC,GAAW,IAAAC,EACYr5B,KAAKg5B,MAA9CC,EAD6BI,EAC7BJ,iBAAkBC,EADWG,EACXH,mBACtBD,GAAoBC,IACpBl5B,KAAK+4B,cACL/4B,KAAKG,MAAMm5B,UAEVH,EAAUr1B,WAAsC,WAAzB9D,KAAKG,MAAM2D,WACnC9D,KAAK+4B,cAELK,EAAUP,oBAAsB74B,KAAKg5B,MAAMH,mBAAqB74B,KAAKg5B,MAAMH,mBAC3E74B,KAAK44B,UAAWC,kBAAmB,6CAKvC74B,KAAK44B,UACDK,kBAAoB,EACpBC,oBAAoB,qCAwBnB,IAAA33B,EAAAvB,KAAAu5B,EACqDv5B,KAAKG,MAAvDq5B,EADHD,EACGC,SAAUl7B,EADbi7B,EACaj7B,MAAOg7B,EADpBC,EACoBD,OAAQzpB,EAD5B0pB,EAC4B1pB,WAAYc,EADxC4oB,EACwC5oB,SACvCE,GAAqB,EAAAlD,EAAA+D,UAAS7B,GAC9B4pB,EAAqB5oB,EAAayF,QAAQvF,OAAO,GAAGgb,OAAO,GAH5D2N,EAIsBp7B,EAAMiT,MAAM,KAJlCooB,EAAAloB,EAAAioB,EAAA,GAIGzoB,EAJH0oB,EAAA,GAIS5oB,EAJT4oB,EAAA,GAKL,OACIn1B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAc01B,EAAd,aAAmCx5B,KAAKG,MAAM2D,WAC/CU,EAAAC,QAAAvJ,cAAA,OACI4I,UAAc01B,EAAd,SACAt1B,QAASo1B,GAET90B,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAWxF,EAAQ,GAAK,eAAgBA,IAAS,EAAAmP,EAAA2C,UAAS,mBAC5D,iBAAkBpQ,KAAKG,QAAUH,KAAKG,MAAMy5B,eAC5Cp1B,EAAAC,QAAAvJ,cAAA,QACI4I,UAAc01B,EAAd,SACAt1B,QAASlE,KAAKkvB,SAI1B1qB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAc01B,EAAd,aACDh1B,EAAAC,QAAAvJ,cAAA,OACIyE,IAAKK,KAAK65B,YACV/1B,UAAc01B,EAAd,UAEAh1B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,0BAAyBU,EAAAC,QAAAvJ,cAAA,eAAS,EAAAuS,EAAA2C,UAAS,UAC1D5L,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBACV9D,KAAKuQ,MAAM1J,IAAI,SAACqK,EAAGtS,GAChB66B,EAAmBxoB,KAAKC,GACxB,IAAM4oB,GAAa,EAAAhsB,EAAAgD,oBAAmBH,EAAU8oB,EAAoB5oB,GAAc,GAClF,OACIrM,EAAAC,QAAAvJ,cAAA,OACI4I,UAAA,aAAuBmN,IAASC,EAAI,YAAc,KAAK4oB,EAAa,GAAK,aACzEl7B,IAAKA,EACLsF,QAAS,WAAQ3C,EAAK+2B,aAAa,IAAKpnB,EAAG4oB,KAE1C5oB,OAMrB1M,EAAAC,QAAAvJ,cAAA,OACIyE,IAAKK,KAAK+5B,cACVj2B,UAAc01B,EAAd,YAEAh1B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,0BAAyBU,EAAAC,QAAAvJ,cAAA,eAAS,EAAAuS,EAAA2C,UAAS,YAC1D5L,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBACV9D,KAAKyQ,QAAQ5J,IAAI,SAACmzB,EAAIp7B,GACnB66B,EAAmBxoB,KAAKA,GAAMF,OAAOipB,GACrC,IAAMF,GAAa,EAAAhsB,EAAAgD,oBAAmBH,EAAU8oB,EAAoB5oB,GACpE,OACIrM,EAAAC,QAAAvJ,cAAA,OACI4I,UAAA,aAAuBiN,IAAWipB,EAAK,YAAc,KAAKF,EAAa,GAAK,aAC5El7B,IAAKA,EACLsF,QAAS,WAAQ3C,EAAK+2B,aAAa,IAAK0B,EAAIF,KAC9CE,kBAYhCC,cACF,SAAAA,EAAa95B,GAAOqB,EAAAxB,KAAAi6B,GAAA,IAAAxyB,EAAA3F,EAAA9B,MAAAi6B,EAAAl4B,WAAAhJ,OAAAiJ,eAAAi4B,IAAA/gC,KAAA8G,KACVG,IADU,OAAAsH,EAgBpByyB,eAAiB,WACbzyB,EAAKmxB,UAAWuB,SAAU1yB,EAAKuxB,MAAMmB,WAjBrB1yB,EAoBpB2yB,aAAe,SAACC,GAEZ,IAAM/7B,EAAuB,iBAAf,IAAO+7B,EAAP,YAAAtlB,EAAOslB,IAAmBA,EAAIn9B,OAAOoB,MAAQ+7B,EAEvD/7B,IAAUmJ,EAAKtH,MAAM7B,OACrBmJ,EAAKtH,MAAM+Z,UAAWhd,QAAUW,KAAM4J,EAAKtH,MAAMtC,KAAMS,YAzB3CmJ,EA6BpB6yB,QAAU,SAAChiB,GACFA,IACiB,UAAlBA,EAAKiiB,SAIT9yB,EAAK+yB,YAAcliB,EAHf7Q,EAAKgzB,eAAiBniB,IAhCV7Q,EAsCpBizB,mBAAqB,SAACh+B,GACd+K,EAAK+yB,cAAgB/yB,EAAK+yB,YAAYG,SAASj+B,EAAMQ,SACjDuK,EAAKuxB,MAAMmB,SACX1yB,EAAKmxB,UAAWuB,SAAS,KAvCjC1yB,EAAKuxB,OACDmB,SAAS,EACT77B,MAAS,IAJGmJ,aADCpF,UAAMvB,0DAUvB/F,SAASg6B,iBAAiB,YAAa/0B,KAAK06B,mEAI5C3/B,SAASi6B,oBAAoB,YAAah1B,KAAK06B,qDAkC/C,IADKE,EAWD56B,KAAKG,MARL63B,EAHC4C,EAGD5C,gBACA15B,EAJCs8B,EAIDt8B,MACAT,EALC+8B,EAKD/8B,KACAg9B,EANCD,EAMDC,eACA1gB,EAPCygB,EAODzgB,YACAtK,EARC+qB,EAQD/qB,WACAc,EATCiqB,EASDjqB,SACA1I,EAVC2yB,EAUD3yB,kBAEJ,OACIzD,EAAAC,QAAAvJ,cAAA,OACIyE,IAAKK,KAAKs6B,QACVx2B,UAda,eAcgB9D,KAAKG,MAAM26B,QAAU,WAAa,KAAK96B,KAAKg5B,MAAMmB,QAAU,UAAY,KAGjGnC,EACMxzB,EAAAC,QAAAvJ,cAAA,SACE8B,KAAK,OACLgH,GAAO+2B,oBACPz8B,MAAOA,EACP4b,SAAUla,KAAKo6B,aACfv8B,KAAMA,IAGN2G,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAC8/B,EAAAv2B,SACG4U,eAAgBpR,EAChBjL,KAAK,OACL2c,cAAA,EACA3V,GAAO+2B,oBACPj3B,UAAci3B,sBAAsB/6B,KAAKg5B,MAAMmB,QAAU,SAAW,IACpE77B,MAAOA,EACP4F,QAASlE,KAAKk6B,eACdr8B,KAAMA,EACNsc,YAAaA,IAEjB3V,EAAAC,QAAAvJ,cAACm9B,GACGv0B,WAAc9D,KAAKg5B,MAAMmB,QAAU,SAAW,KAAKU,EAAiB,cAAgB,IACpFvB,OAAQt5B,KAAKk6B,eACbhgB,SAAUla,KAAKo6B,aACfZ,SA1CP,cA2CO3pB,WAAYA,EACZvR,MAAOA,EACPqS,SAAUA,EACVipB,aAAc55B,KAAKG,MAAMy5B,0BAU7DK,EAAW/3B,WACP24B,eAAiBt6B,UAAUsE,KAC3B+0B,aAAiBr5B,UAAUsE,KAC3BmzB,gBAAiBz3B,UAAUsE,KAC3BhH,KAAiB0C,UAAUqE,OAC3BsV,SAAiB3Z,UAAUuE,KAC3Bg2B,QAAiBv6B,UAAUqE,OAC3BuV,YAAiB5Z,UAAUqE,OAC3B+L,SAAiBoL,YAAcC,uBAC/BnM,WAAiBtP,UAAUkL,OAC3BnN,MAAiBiC,UAAUqE,QAG/ByzB,EAAmBn2B,WACf4B,UAAcvD,UAAUqE,OACxBg1B,aAAcr5B,UAAUsE,KACxBqV,SAAc3Z,UAAUuE,KACxB00B,SAAcj5B,UAAUqE,OACxB+L,SAAcoL,YAAcC,uBAC5BnM,WAActP,UAAUkL,OACxB6tB,OAAc/4B,UAAUuE,KACxBxG,MAAciC,UAAUqE,OACxBq2B,YAAc16B,UAAUsE,iBAGb,EAAArF,EAAAwB,UAASi5B,kFCnQxB,IAAAz6B,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEA,IAAMmhC,EAAiB,SAAA75B,GAKjB,IAJFkoB,EAIEloB,EAJFkoB,cAIE4R,EAAA95B,EAHF+5B,gBAGE99B,IAAA69B,KAAAE,EAAAh6B,EAFFi6B,sBAEEh+B,IAAA+9B,KAAAE,EAAAl6B,EADFm6B,iBACEl+B,IAAAi+B,OAEE3wB,EAGA2e,EAHA3e,SACAsf,EAEAX,EAFAW,OACAuR,EACAlS,EADAkS,kBAGEC,GAAqBD,EAAoB,EAAI,IAAM,IAAKA,EAAxD,IAEN,OACIj3B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAA,YAAsBomB,EAAS,EAAI,MAAQ,SAC1CsR,EAAUG,gBACRn3B,EAAAC,QAAAvJ,cAAC0gC,EAAAn3B,SAAS8kB,cAAeA,EAAeiS,UAAWA,IAErDJ,GACE52B,EAAAC,QAAAvJ,cAAC2gC,EAAAp3B,QAAD,MAEJD,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,YAAM,EAAAuS,EAAA2C,UAAS,eAAf,KACA5L,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,YACXU,EAAAC,QAAAvJ,cAACo7B,EAAA7xB,SAAMiG,OAAQwf,EAAQtf,SAAUA,EAAUC,UAAA,IACzCywB,GACE92B,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAhB,IAA+B43B,EAA/B,SAQxBR,EAAeh5B,WACXqnB,cAAgBhpB,UAAUxB,OAC1Bq8B,SAAgB76B,UAAUsE,KAC1By2B,eAAgB/6B,UAAUsE,KAC1B22B,UAAgBj7B,UAAUxB,mBAGf,EAAAS,EAAAwB,UAASk6B,gHCjDxBniC,OAAA0J,KAAAq5B,GAAAn5B,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA49B,EAAAl9B,0EADO6F,iGCAMs3B,gBAAgB,IAEhBC,aACTC,SAAe,kBACfC,UAAe,mBACfC,WAAe,oBACfC,YAAe,qBACfC,aAAe,sBACfC,cAAe,wBAGNC,SACTC,MAAS,qBACTC,KAAS,oBACTC,QAAS,uBACTC,QAAS,yXCfb5iC,EAAA,QACAA,EAAA,IACA6iC,EAAA7iC,EAAA,4DAEM8iC,cACF,SAAAA,EAAY18B,gGAAOqB,CAAAxB,KAAA68B,GAAA,IAAAl2B,mKAAA7E,CAAA9B,MAAA68B,EAAA96B,WAAAhJ,OAAAiJ,eAAA66B,IAAA3jC,KAAA8G,KACTG,IADS,OAAAwG,EAiBnBm2B,SAAW,WACP,IAAMC,EAAap2B,EAAK6V,KAAK+X,wBACvByI,KACNjkC,OAAO0J,KAAKkE,EAAKs2B,KAAKt6B,QAAQ,SAAC/D,GAC3B,IACMs+B,EADKv2B,EAAKs2B,IAAIr+B,GACF21B,wBAEZ4I,EAAOD,EAAOC,KAAOJ,EAAWI,KAChCC,EAAQL,EAAWK,MAAQF,EAAOE,MAExCJ,EAAMp+B,IAASu+B,OAAMC,WAEzBz2B,EAAKiyB,UAAWoE,WA7BDr2B,EAgCnB02B,kBAAoB,WAChB,GAAyB,MAArB12B,EAAKxG,MAAMm9B,QAA2D,IAAzCvkC,OAAO0J,KAAKkE,EAAKqyB,MAAMgE,OAAOpkC,OAC3D,OAASukC,KAAM,IAAKC,MAAO,QAE/B,IAAMG,EAAO52B,EAAKqyB,MAAMgE,MAAMr2B,EAAKxG,MAAMm9B,QACzC,OACIH,KAAeI,EAAKJ,KAApB,KACAC,MAAeG,EAAKH,MAApB,KACAI,WAAY,2BAtChB72B,EAAKqyB,OACDgE,UAEJr2B,EAAKs2B,OALUt2B,qUADGtE,UAAMo7B,8DAUxBz9B,KAAK88B,WACLz9B,OAAO01B,iBAAiB,SAAU/0B,KAAK88B,yDAIvCz9B,OAAO21B,oBAAoB,SAAUh1B,KAAK88B,2CA8BrC,IAAAv7B,EAAAvB,KACL,OACIwE,EAAAC,QAAAvJ,cAAA,OACI4I,UAAU,cACVnE,IAAK,SAAA00B,GAAA,OAAM9yB,EAAKib,KAAO6X,IAEvB7vB,EAAAC,QAAAvJ,cAAC0hC,EAAAc,UACGJ,OAAQt9B,KAAKG,MAAMm9B,OACnBpjB,SAAUla,KAAKG,MAAM+Z,SACrByjB,SAAU39B,KAAKi9B,KAEdj9B,KAAKG,MAAMT,UAEhB8E,EAAAC,QAAAvJ,cAAA,OACI4I,UAAU,gBACV85B,MAAO59B,KAAKq9B,gCAOhCR,EAAY36B,WACRo7B,OAAc/8B,UAAUqE,OACxBlF,SAAca,UAAU+X,KACxB4B,SAAc3Z,UAAUuE,KACxB+4B,aAAct9B,UAAUuE,QAGnB+3B,+GC9ET,QAAA9iC,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM2jC,EAAW,SAAAr8B,GAAA,IACbi8B,EADaj8B,EACbi8B,OACA59B,EAFa2B,EAEb3B,SACAi+B,EAHat8B,EAGbs8B,SACAzjB,EAJa7Y,EAIb6Y,SAJa,OAMb7X,UAAMy7B,SAASj3B,IAAInH,EAAU,SAACq+B,GAC1B,IAAMC,GAAY,EAAA7lB,EAAA1T,SACd,OACEw5B,cAAeF,EAAMn/B,MAAQ0+B,IAEnC,OACI94B,EAAAC,QAAAvJ,cAAA,OACI4I,UAAWk6B,EACXr+B,IAAK,SAAA00B,GAAA,OAAMsJ,EAASI,EAAMn/B,KAAOy1B,GACjCnwB,QAAS,WACLgW,EAAS6jB,EAAMn/B,OAGlBm/B,MAMjBL,EAASx7B,WACLo7B,OAAU/8B,UAAUqE,OACpBlF,SAAUa,UAAU+X,KACpBqlB,SAAUp9B,UAAUxB,OACpBmb,SAAU3Z,UAAUuE,QAGf44B,0FCpCT,QAAA3jC,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAMmkC,EAAkB,SAAA78B,GAAA,IACpB3B,EADoB2B,EACpB3B,SACA7B,EAFoBwD,EAEpBxD,KACAqG,EAHoB7C,EAGpB6C,QACA05B,EAJoBv8B,EAIpBu8B,MACAO,EALoB98B,EAKpB88B,UACA7E,EANoBj4B,EAMpBi4B,OANoB,OAQpB90B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,eAAeI,QAASo1B,GAAUp1B,GAC7CM,EAAAC,QAAAvJ,cAAA,YAAO2C,GACNy7B,EACG90B,EAAAC,QAAAvJ,cAACkjC,EAAA35B,SACG45B,QAASF,EACTP,MAAOA,IAGXl+B,IAKZw+B,EAAgBh8B,WACZxC,SAAWa,UAAU+X,KACrBza,KAAW0C,UAAUqE,OACrBV,QAAW3D,UAAUuE,KACrB84B,MAAWr9B,UAAUqE,OACrBu5B,UAAW59B,UAAUsE,KACrBy0B,OAAW/4B,UAAUuE,gBAGVo5B,iFClCf,QAAAnkC,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMukC,EAAe,SAAAj9B,GAAwB,IAArBu8B,EAAqBv8B,EAArBu8B,MAAOS,EAAch9B,EAAdg9B,QACrBE,EAAeX,GAAS,gBACxB1lB,GAAa,EAAAC,EAAA1T,SAAW85B,GAC1BF,QAAWA,IAGf,OACI75B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWoU,KAIxBomB,EAAap8B,WACT07B,MAASr9B,UAAUqE,OACnBy5B,QAAS99B,UAAUsE,gBAGRy5B,8FCpBfvlC,OAAA0J,KAAA+7B,GAAA77B,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAsgC,EAAA5/B,uGCAA,QAAA7E,EAAA,QACAA,EAAA,uDAEA,IAAM0kC,EAAS,SAAAp9B,GAAqB,IAC1Bq9B,GACFvB,KAF4B97B,EAAlB87B,KAGVhV,MAH4B9mB,EAAZ8mB,OAMpB,OACI3jB,EAAAC,QAAAvJ,cAAA,QAAM0iC,MAAOc,EAAc56B,UAAU,YAI7C26B,EAAOv8B,WACHi7B,KAAO58B,UAAUkL,OACjB0c,MAAO5nB,UAAUkL,UAGZgzB,oQCnBT1kC,EAAA,IACAu3B,EAAAv3B,EAAA,IAGA4kC,EAAA5kC,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,MACA6kC,EAAA7kC,EAAA,kEAE2B,SAAA4oB,GA2BvB,OAAOne,EAAAC,QAAAvJ,cAACo2B,EAAAuN,OACJjN,MAAOjP,EAAMiP,MACbxP,KAAMO,EAAMP,KACZ0c,OA7BkB,SAAA3+B,GAClB,IAAI1G,EAAS,KACb,GAAIkpB,EAAMqQ,YAAcC,WAAU,CAC9B,IAAI1B,EAAK5O,EAAM4O,GAGX5O,EAAMP,OAASK,UAAOnG,QAEtBiV,EADqBpxB,EAAbqM,SACMS,SAAS1B,cAAcoB,QAAQgW,EAAMP,KAAM,KAE7D3oB,EAAS+K,EAAAC,QAAAvJ,cAACo2B,EAAA2B,UAAS1B,GAAIA,SAEvB93B,EACKkpB,EAAME,mBAAqBF,EAAMC,aAC9Bpe,EAAAC,QAAAvJ,cAAC6jC,EAAAt6B,SAAYu6B,cAAerc,EAAMuQ,eAAgB+L,QAASC,oBAE3D16B,EAAAC,QAAAvJ,cAACynB,EAAMqQ,UAAP3yB,KAAqBF,GAAOsiB,OAAQE,EAAMF,UAItD,IAAMjO,EAAQmO,EAAMnO,MAAWmO,EAAMnO,MAAvB,MAAoC,GAGlD,OAFAzZ,SAASyZ,MAAT,GAAqBA,EAAU2qB,gBAC/B1hB,UAAIyB,eAAgBxiB,MAAO,cACpBjD,2GClCf,QAAAM,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACA25B,EAAA35B,EAAA,wDAEaqlC,eAAe,SAAA/9B,GAGtB,IAFF0W,EAEE1W,EAFF0W,UACAsnB,EACEh+B,EADFg+B,SAEMC,GAAsB,EAAAnnB,EAAA1T,SAAW,gBAAiBsT,GACxD,OACIvT,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACKyM,GAA2B,UAAdA,EACVvT,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWw7B,GACZ96B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBAAkBI,QAASm7B,GACtC76B,EAAAC,QAAAvJ,cAACw4B,EAAArC,UAAD,OAEJ7sB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wBACXU,EAAAC,QAAAvJ,cAAA,WAAK,EAAAuS,EAAA2C,UAAS,wBAItB5L,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWw7B,GACZ96B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBAAkBI,QAASm7B,GACtC76B,EAAAC,QAAAvJ,cAACw4B,EAAArC,UAAD,OAEJ7sB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,aAQ1B5B,WACT6V,UAAWxX,UAAUqE,OACrBy6B,SAAW9+B,UAAUuE,sWCtCzB/K,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,IACAwlC,EAAAxlC,EAAA,+NAEMylC,6SACFC,kBAAoB,WAChB94B,EAAKxG,MAAMu/B,cACP/4B,EAAKxG,MAAMw/B,eACXh5B,EAAKxG,MAAMw/B,2VAJEt9B,UAAMvB,+CAQlB,IAAAy4B,EAC0Cv5B,KAAKG,MAA5Cy/B,EADHrG,EACGqG,QAASx7B,EADZm1B,EACYn1B,KAAM4T,EADlBuhB,EACkBvhB,KAAM6nB,EADxBtG,EACwBsG,cAE7B,OACIr7B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,cAAcI,QAASlE,KAAKy/B,mBACtCI,EACGr7B,EAAAC,QAAAvJ,cAAA,KAAGgS,KAAK,eAAehJ,QAAS27B,GAC5Br7B,EAAAC,QAAAvJ,cAAA,YAAO8c,EAAM5T,IAGjBI,EAAAC,QAAAvJ,cAACqkC,EAAAnc,YAAWmO,GAAIqO,GACZp7B,EAAAC,QAAAvJ,cAAA,YAAO8c,EAAM5T,cAQrCo7B,EAAWt9B,WACPy9B,cAAep/B,UAAUuE,KACzB+6B,cAAet/B,UAAUuE,KACzB46B,YAAen/B,UAAUuE,KACzBoI,KAAe3M,UAAUqE,OACzBoT,KAAezX,UAAU+X,KACzBsnB,QAAer/B,UAAUqE,OACzBR,KAAe7D,UAAUqE,QAG7B,IAAMk7B,GAAwB,EAAA5R,EAAAvtB,SAAQ,SAAA6Q,GAAA,OAClCkuB,YADkCluB,EAAG9Q,GACrBg/B,cADU,CAE1BF,KAE8BA,WAAzBM,8VC9CT/lC,EAAA,QACAA,EAAA,QACAA,EAAA,IACAgmC,EAAAhmC,EAAA,IACAm0B,EAAAn0B,EAAA,IACA6nB,EAAA7nB,EAAA,+NAEMimC,6SACFhH,OACIiH,mBAAmB,KAGvBC,OAAS,SAAC5nB,GACN3R,EAAKhH,IAAM2Y,KAkBf6nB,KAAO,WACHx5B,EAAKy5B,cAAa,GAClBz5B,EAAKxG,MAAMu/B,iBAGfhF,mBAAqB,SAACh+B,GACdiK,EAAKqyB,MAAMiH,mBACPt5B,EAAKhH,MAAQgH,EAAKhH,IAAIg7B,SAASj+B,EAAMQ,SACrCyJ,EAAKw5B,kVAhCA99B,UAAMvB,mDASVk4B,GACTh5B,KAAKm6B,QAAUnB,EACfj+B,SAAS84B,KAAKC,UAAUwF,OAAO,YAAat5B,KAAKm6B,0CA0B5C,IACG8F,EAAsBjgC,KAAKg5B,MAA3BiH,kBADH1G,EAEqCv5B,KAAKG,MAAvC4X,EAFHwhB,EAEGxhB,UAAWsnB,EAFd9F,EAEc8F,SAAU3/B,EAFxB65B,EAEwB75B,SAEvB2gC,GAAkB,EAAAloB,EAAA1T,SAAW,aAC/B67B,KAAQL,IAENM,GAAe,EAAApoB,EAAA1T,SAAW,SAAUsT,GAE1C,OACIvT,EAAAC,QAAAvJ,cAAC6kC,EAAAS,eACGC,GAAIR,EACJ7kC,QAAS,IACTslC,WAAW,mBACXC,eAAA,GAEAn8B,EAAAC,QAAAvJ,cAAA,SAAO4I,UAAU,oBACbU,EAAAC,QAAAvJ,cAAA,OACI4I,UAAWu8B,EACXn8B,QAASlE,KAAK06B,oBAEdl2B,EAAAC,QAAAvJ,cAAA,OACIyE,IAAKK,KAAKkgC,OACVp8B,UAAWy8B,GAEX/7B,EAAAC,QAAAvJ,cAAC0mB,EAAAwd,cACGrnB,UAAWA,EACXsnB,SAAUA,IAEb3/B,yDApDOS,EAAO64B,GAOnC,MANwB,SAApB74B,EAAM4X,UACNihB,EAAMiH,kBAAoB9/B,EAAMygC,kBACL,UAApBzgC,EAAM4X,YACbihB,EAAMiH,kBAAoB9/B,EAAM0gC,4BAG7B7H,WAsDfgH,EAAO99B,WACH6V,UAAWxX,UAAUqE,OACrBlF,SAAWa,UAAUiL,WACjBjL,UAAUyY,MACVzY,UAAUxB,SAEdsgC,SAA4B9+B,UAAUuE,KACtCg8B,OAA4BvgC,UAAUuE,KACtC46B,YAA4Bn/B,UAAUuE,KACtCoT,WAA4B3X,UAAUqE,OACtCm8B,UAA4BxgC,UAAUqE,OACtCg8B,kBAA4BrgC,UAAUsE,KACtCg8B,2BAA4BtgC,UAAUsE,MAG1C,IAAMm8B,GAAmB,EAAA9S,EAAAvtB,SACrB,SAAA6Q,GAAA,IAAG9Q,EAAH8Q,EAAG9Q,GAAH,OACIkgC,kBAA4BlgC,EAAGkgC,kBAC/BC,2BAA4BngC,EAAGmgC,2BAC/BnB,YAA4Bh/B,EAAGg/B,cAJd,CAMvBM,KAE2BA,OAApBgB,oFCzGT,wDAAAjnC,EAAA,IACA0T,EAAA1T,EAAA,GACAg4B,EAAAh4B,EAAA,cAE8B,kBAE1ByK,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,mBACXU,EAAAC,QAAAvJ,cAAC62B,EAAAoB,eAAcrvB,UAAU,0BACzBU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,0BAAyB,EAAA2J,EAAA2C,UAAS,wGCR1D,QAAArW,EAAA,QACAA,EAAA,IACAgU,EAAAhU,EAAA,KACAq7B,EAAAr7B,EAAA,wDAEA,IAAMknC,EAAmB,SAAA5/B,GAAA,IAAGrE,EAAHqE,EAAGrE,KAAH,OACrBwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,iBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eAAcp5B,KAAMA,EAAKuO,cAAezH,UAAU,UAEvDU,EAAAC,QAAAvJ,cAAA,aACK,EAAA6S,EAAAwa,0BAAyBvrB,IAAS,MAK/CikC,EAAiB/+B,WACblF,KAAMuD,UAAUqE,kBAGLq8B,oKCpBRx8B,8VCAP1K,EAAA,QACAA,EAAA,IACAu3B,EAAAv3B,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,SACAA,EAAA,KACAm0B,EAAAn0B,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,6DAEMi4B,grBAAwB3vB,UAAMvB,0DACVd,KAAKG,MAAM+gC,QAAQlhC,KAAKG,MAAM+iB,4DAE3BljB,KAAKG,MAAMghC,6CAE3B,IAAAC,EAKDphC,KAAKG,MAAMopB,cAHXrG,EAFCke,EAEDle,YACAme,EAHCD,EAGDC,SACAC,EAJCF,EAIDE,gBAGJ,OAAIpe,IAAgBljB,KAAKG,MAAMma,UAEvB9V,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,sBACXU,EAAAC,QAAAvJ,cAACqmC,EAAA98B,SAAculB,OAAQhqB,KAAKG,MAAMqhC,iBAClCh9B,EAAAC,QAAAvJ,cAACumC,EAAAh9B,SACGi9B,OAAQJ,EAAgB3d,IACxBge,eAAgB3hC,KAAKG,MAAMwhC,eAC3BC,aAAc5hC,KAAKG,MAAMyhC,aACzBP,SAAUA,IAEd78B,EAAAC,QAAAvJ,cAACo2B,EAAAuQ,MACG/9B,UAAU,uBACVytB,GAAI9O,UAAO/F,MACXxY,QAASlE,KAAKG,MAAM2hC,iBAEpBt9B,EAAAC,QAAAvJ,cAAA,aAAO,EAAAuS,EAAA2C,UAAS,yBAKxB8S,GAAgBljB,KAAKG,MAAMma,UAMnC9V,EAAAC,QAAAvJ,cAAC6mC,EAAAt9B,SAAeqT,QAAS9X,KAAKG,MAAM6hC,gBAJhCx9B,EAAAC,QAAAvJ,cAACy7B,EAAAlyB,QAAD,eAUhButB,EAAgB9vB,WACZghB,YAAiB3iB,UAAUqE,OAC3B2kB,cAAiBhpB,UAAUxB,OAC3B4iC,eAAiBphC,UAAUxB,OAC3B6iC,aAAiBrhC,UAAUxB,OAC3ByiC,eAAiBjhC,UAAUqE,OAC3Bo9B,cAAiBzhC,UAAUqE,OAC3B0V,UAAiB/Z,UAAUsE,KAC3Bi9B,gBAAiBvhC,UAAUuE,KAC3Bo8B,QAAiB3gC,UAAUuE,KAC3Bq8B,UAAiB5gC,UAAUuE,iBAGhB,EAAAopB,EAAAvtB,SACX,SAAAU,GAAA,IAAGlI,EAAHkI,EAAGlI,QAAH,OACIowB,cAAgBpwB,EAAQ2C,SAASytB,cACjCqY,aAAgBzoC,EAAQ2C,SAAS8lC,aACjCD,eAAgBxoC,EAAQ2C,SAAS6lC,eACjCH,eAAgBroC,EAAQ2C,SAAS0lC,eACjCQ,cAAgB7oC,EAAQ2C,SAASkmC,cACjC1nB,UAAgBnhB,EAAQ2C,SAASwe,UACjC4mB,QAAgB/nC,EAAQ2C,SAASolC,QACjCC,UAAgBhoC,EAAQ2C,SAASqlC,YAT1B,CAWbnP,kFChFF,QAAAj4B,EAAA,QACAA,EAAA,QACAA,EAAA,IAEAm0B,EAAAn0B,EAAA,IACAkoC,EAAAloC,EAAA,KACAmoC,EAAAnoC,EAAA,SACAA,EAAA,MACAooC,EAAApoC,EAAA,wDAKA,IAAMqoC,EAAU,SAAA/gC,GAOV,IALFkoB,EAKEloB,EALFkoB,cACAgG,EAIEluB,EAJFkuB,YACA8S,EAGEhhC,EAHFghC,cACAC,EAEEjhC,EAFFihC,YACA9G,EACEn6B,EADFm6B,UAEMvK,GAAW,EAAAgR,EAAA5S,iBAAgB9F,EAAchb,eACzCg0B,GAAW,EAAAL,EAAAjY,SAAQV,GACnBiZ,GAAY,EAAArqB,EAAA1T,SAAW,YACzBg+B,MAASF,IAGTG,EAAWH,EAAWrH,iBAAiByH,iBAK3C,OAJI1R,GAAYoR,IACZK,EAAWE,gBAWXp+B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,sBACTylB,EAAchb,eACZ/J,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAW0+B,GACZh+B,EAAAC,QAAAvJ,cAACwnC,GACGnZ,cAAeA,EACfgG,YAAaA,EACbgT,SAAUA,EACV/G,UAAWA,KAIvBh3B,EAAAC,QAAAvJ,cAAC2nC,EAAAp+B,SACGqT,QAAS0jB,EAAUwG,cACnBc,aAAcR,MAO9BF,EAAQlgC,WACJqnB,cAAehpB,UAAUxB,OACzBwwB,YAAehvB,UAAUxB,OAEzBsjC,cAAe9hC,UAAUsE,KACzBy9B,YAAe/hC,UAAUuE,KACzB02B,UAAej7B,UAAUxB,mBAGd,EAAAmvB,EAAAvtB,SACX,SAAA6Q,GAAA,IAAGrY,EAAHqY,EAAGrY,QAAH,OACIowB,cAAepwB,EAAQ2C,SAASytB,cAChCgG,YAAep2B,EAAQ2C,SAASyzB,YAChC+S,YAAenpC,EAAQ2C,SAASinC,gBAChCvH,UAAeriC,EAAQ2C,SAAS0/B,YALzB,CAQb4G,iCC7EFroC,EAAA,KACAA,EAAA,KAEA,IAAAipC,EAAAjpC,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEAsF,OAAO4jC,kBAAoBC,mBAE3B,EAAAC,EAAA1+B,YACA,EAAA2+B,EAAA3+B,2OCVA,IAAAoC,GACAw8B,OAAA,IACAC,UAAA,KAIA,SAAAC,EAAAnd,GACA,IAAApiB,EAAAw/B,EAAApd,GACA,OAAArsB,EAAAiK,GAEA,SAAAw/B,EAAApd,GACA,IAAApiB,EAAA6C,EAAAuf,GACA,KAAApiB,EAAA,IACA,IAAA1J,EAAA,IAAA8C,MAAA,uBAAAgpB,EAAA,KAEA,MADA9rB,EAAAmpC,KAAA,mBACAnpC,EAEA,OAAA0J,EAEAu/B,EAAA9gC,KAAA,WACA,OAAA1J,OAAA0J,KAAAoE,IAEA08B,EAAA5oC,QAAA6oC,EACAppC,EAAAD,QAAAopC,EACAA,EAAAv/B,GAAA,qFCxBA,IAAAe,EAAAhL,EAAA,OACAA,EAAA,IACA2pC,EAAA3pC,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,MACA00B,EAAA10B,EAAA,SACAA,EAAA,0DAEA,EAAAgL,EAAA4+B,YAAYC,gBAAgB,cAEZ,WACZ9U,UAAO+U,QAEP,EAAApV,EAAAqV,oBAEA,IAAMn+B,EAAa,IAAIo+B,UAEvBC,UAAeH,KAAKl+B,GACpBs+B,UAAgBJ,KAAKl+B,GACrBA,EAAWnF,OAAOqjC,OAClBl+B,EAAWxM,QAAQujB,MAAMmnB,OAEzB,IAAMK,EAAMnpC,SAASg5B,eAAe,cAEhCmQ,IACA,EAAAR,EAAA5E,QAAOt6B,EAAAC,QAAAvJ,cAACkoC,EAAA3+B,SAAIkB,WAAYA,IAAgBu+B,uFC3BhD,IAAAn/B,EAAAhL,EAAA,uDACAA,EAAA,MACAoqC,EAAApqC,EAAA,IAEA,IAAIqqC,SAEEJ,EAAkB,WACpB,IAKMK,GAAc,EAAAt/B,EAAAI,QAAO,SAAC6kB,EAAQsa,GAC5BF,IACAA,EAAaG,eAAoBva,EACjCoa,EAAaI,kBAAoBF,KAIzC,OACIT,KAbS,SAACzjC,GACVqkC,UAAmBZ,KAAKhhC,sBAAoBghC,KAAKzjC,GAAQikC,GACzDD,EAAehkC,EAAMK,SAHL,aAkBTujC,oFCxBf,IAAAj/B,EAAAhL,EAAA,GACAyQ,EAAAzQ,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KACA00B,EAAA10B,EAAA,IACAiL,EAAAjL,EAAA,GACA6I,EAAA7I,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEA,IAAIo+B,SACAiM,SAGEvhC,EAAuB,WACzB,IAAM6hC,EAAe,WACjBN,EAAaO,mBAAkB,IAG7BC,EAAS,SAACC,GAEZ,GAAIA,EAAU,CACV,IAAKC,UAAMC,eAAgB,CACvB,IAAK5M,EAAa6M,eAEd,YADA,EAAApiC,EAAA8rB,iBAGJ5rB,UAAG8jB,uBAAuBqe,EAAiBC,eAE/CvzB,UAAWkyB,MAAK,EAAA9+B,EAAAI,QAAO,UAAW,WAAQi/B,EAAaxjB,YAAcjP,UAAWzT,SAChFkmC,EAAaO,mBAAkB,KAIjCQ,EAAY,SAACvW,GAGf,OAFAwW,EAAYxW,GAEJA,EAASlJ,UACb,IAAK,YACD,GAAIkJ,EAASzxB,MAAO,CAChB,IAAMkoC,EAAyD,MAAzC79B,eAAeI,QAAQ,cACS,mBAAlD,EAAA5C,EAAAoK,kBAAiBwf,GAAW,QAAS,UAAgCyW,GACrE79B,eAAe2F,WAAW,eAG9B,EAAAvK,EAAA8rB,sBACQoW,UAAMC,gBAAmB,YAAYx4B,KAAK+4B,QAAMpnC,IAAI,oBACxD0wB,EAAS2W,UAAUh4B,UAAY4qB,EAAa5qB,SAC5C,EAAA3K,EAAA8rB,kBAEAyJ,EAAaqN,kBAAkB5W,GAC/B9rB,UAAGkjB,iBAAiBif,EAAiB/e,SACrCpjB,UAAGohB,cACHphB,UAAGghB,mBACHhhB,UAAG8hB,mBACH9hB,UAAG0hB,eACHihB,EACI7W,EAAS2W,UAAUG,SACnBvN,EAAawN,SAASxN,EAAa5qB,SAAS8W,WAE3C8T,EAAayN,YACd9iC,UAAGkhB,mBAEPR,UAAaqiB,eACT,OAAOt5B,KAAKqiB,EAAS2W,UAAU36B,WAAcutB,EAAawN,SAASxN,EAAa5qB,SAASu4B,eAYrG,MACJ,IAAK,kBAGL,IAAK,qBAED,MACJ,IAAK,eACGlX,EAASzK,eACTshB,EAAa7W,EAASzK,aAAa4hB,cACnC5N,EAAa6N,SAASpX,EAASzK,aAAa8hB,QAMhD,MACJ,IAAK,oBACD9N,EAAa+N,yBAAyBtX,EAAS/J,mBAC/C,MACJ,IAAK,cACDpH,UAAI0oB,oBAAoBvX,GAAY/Q,OAAQ,UAMlD4nB,EAAe,SAACphB,GACdA,IACA8T,EAAasN,aAAaphB,GAC1BvhB,UAAGshB,eAAeC,KASpB+gB,EAAc,SAACxW,GACjB,IAAMlJ,EAAakJ,EAASlJ,SAE5B,QADmB,EAAA1gB,EAAAoK,kBAAiBwf,GAAW,QAAS,UAEpD,IAAK,gBACL,IAAK,sBACL,IAAK,yBACgB,mBAAblJ,GACA0e,EAAagC,UAAS,GAAQtuB,QAAS8W,EAASzxB,MAAM2a,UAE1D,MAEJ,IAAK,YACgB,qBAAb4N,GACA0e,EAAagC,UAAS,GAAQtuB,QAAS,8EAE3C,MACJ,IAAK,eAGL,IAAK,iBACDssB,EAAagC,UAAS,GAAQtuB,QAAS8W,EAASzxB,MAAM2a,YAiBlE,OACI+rB,KAZS,SAACzjC,GAIV,OAHA+3B,EAAe/3B,EAAMI,OACrB4jC,EAAehkC,EAAMK,QAGjBikC,eACAE,SACAO,cAMJkB,YA7Ce,EAAAthC,EAAAuhC,MAAA98B,mBAAAC,KAAK,SAAAC,EAAWwc,GAAX,OAAA1c,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACd0Z,UAAa+iB,KAAK,kBADJ,OAEpBpO,EAAakO,WAAWngB,GAFJ,wBAAAtc,EAAAQ,SAAAV,EAAA1J,UAhGC,aAiJd6C,EAEf,IAAMoiC,EAAoB,WACtB,IAAIuB,GAAe,EAwBnB,OACItB,cAxBkB,SAACtW,GACnB,GAAIA,EAAS/H,eAAgB,CAEzB,IADA2f,EAAe,QAAQj6B,KAAKqiB,EAAS/H,eAAe4f,gBAC/BjjB,UAAakjB,eAE9B,YADArnC,OAAOmN,SAAS2iB,SAGhBP,EAAS/H,eAAe/O,QAK5B0L,UAAakjB,aAAaF,IAC1B,EAAAh8B,EAAAm8B,eAAc/X,EAAS/H,kBAY3BX,QARY,SAAC0I,GACRA,EAASzxB,OACV0F,EAAoBwjC,WAAWzX,EAAS1I,QAAQA,WArBlC,kFClK1B,IAAAnhB,EAAAhL,EAAA,GAEIqqC,SAEEH,EAAmB,WACrB,IAsBMI,GAAc,EAAAt/B,EAAAI,QAAO,YAAa,WAChCi/B,GACAA,EAAawC,WACTvpB,IAAW,8GACXC,WACIupB,OACI3S,QAAS,IACThnB,KAAS,6BACT45B,IAAS,sBACT5pC,OAAS,eAO7B,OACI2mC,KAvCS,SAACzjC,GACVgkC,EAAehkC,EAAMK,OAErB,IAAMlF,EAAM,qCACZ,IAAIR,SAASgsC,cAAT,gBAAuCxrC,EAAvC,QACJ8D,OAAO2nC,QACHC,IAAavuC,EAAG,GAAIwuC,GAAI,EAAGnpC,GAAI,EAAG/D,EAAG,EAAG2D,GAAI,GAC5CwpC,IAAW,EACXC,IAAW,2BACXC,SAAW,EACXC,SAAW,EACXC,OAAWlD,EACXmD,WAAW,EACXC,UAAW,GAEX1sC,SAAS84B,MAAM,CACf,IAAM54B,EAASF,SAASG,cAAc,UACtCD,EAAOK,aAAa,MAAOC,GAC3BR,SAAS84B,KAAKr2B,YAAYvC,MAnBb,aA4CVgpC,kGChDf,QAAAlqC,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,mEAGI,SAAAgqC,iGAAcviC,CAAAxB,KAAA+jC,GACV/jC,KAAKQ,OAAU,IAAIknC,UAAY1nC,MAC/BA,KAAKS,OAAU,IAAIknC,UACnB3nC,KAAK7G,QAAU,IAAIyuC,UAAa5nC,MAChCA,KAAKU,GAAU,IAAImnC,kZCV3B9iC,EAAAhL,EAAA,OAKAA,EAAA,KACA2T,EAAA3T,EAAA,IAGA+tC,EAAA/tC,EAAA,QACAA,EAAA,UACAA,EAAA,KACYk1B,0JAAZl1B,EAAA,MACA0T,EAAA1T,EAAA,GACA00B,EAAA10B,EAAA,QAGAA,EAAA,KACAguC,EAAAhuC,EAAA,s6BAEA,IACqB2tC,KA8HhBviC,SAAOC,QASPD,SAAOC,QA2BPD,SAAOC,QAOPD,SAAOC,QAUPD,SAAOC,QAmBPD,SAAOC,QAKPD,SAAOC,QASPD,SAAOC,QAgEPD,SAAOC,QAKPD,SAAOC,QAmCPD,SAAOC,QASPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,oBA3UR,SAAAsiC,EAAY/hC,gGAAYnE,CAAAxB,KAAA0nC,GAAA,IAAA/gC,mKAAA7E,CAAA9B,MAAA0nC,EAAA3lC,WAAAhJ,OAAAiJ,eAAA0lC,IAAAxuC,KAAA8G,MACZ2F,gBADY,OAAAL,EAAAqB,EAAA,UAAApB,EAAAoB,GAAArB,EAAAqB,EAAA,eAAAnB,EAAAmB,GAAArB,EAAAqB,EAAA,WAAAqhC,EAAArhC,GAAArB,EAAAqB,EAAA,WAAAshC,EAAAthC,GAAArB,EAAAqB,EAAA,mBAAAuhC,EAAAvhC,GAAArB,EAAAqB,EAAA,kBAAAwhC,EAAAxhC,GAAArB,EAAAqB,EAAA,oBAAAyhC,EAAAzhC,wUATazB,8DA+HbqI,GACpBvN,KAAK2lC,SAASp4B,GAAS86B,kBAAoB,EAC3CroC,KAAK2lC,SAASp4B,GAASu4B,aAAoB,EAC3CwC,aAAWC,UAnIC,kBAmIsBvoC,KAAK2lC,UACvC2C,aAAWtZ,IAAI,iBAAkBzhB,GACjCvN,KAAKuN,QAAUA,gDAIG,IAAAhM,EAAAvB,KACZwoC,EAAgClD,QAAMmD,YAAY,2CACpDC,GAAkC,EAClC1rC,SACA2rC,SACJ,IAAKH,OAAqC5vC,OAAQ,CAC9C8vC,GACgE,IAD7CF,EAA8B75B,QAC7C3O,KAAK2lC,SAAS3lC,KAAKuN,SAASq7B,4BAKhCD,EAJmB,mBAAAlnC,EAAAC,UAAA9I,OAAIiwC,EAAJjnC,MAAAH,GAAAkvB,EAAA,EAAAA,EAAAlvB,EAAAkvB,IAAIkY,EAAJlY,GAAAjvB,UAAAivB,GAAA,OAA0BkY,EAAkBz8B,KAAK,SAAAkY,GAAA,OAChEA,IAAoB/iB,EAAKokC,SAASpkC,EAAKgM,SAASq7B,4BACY,IAA5DJ,EAA8B75B,QAAQ2V,KAEvBwkB,CAAW,YAAa,MAAO,QAAS,kBAEvD9rC,EAA0B,gBAAnB2rC,EAAmC,YAAc,QAIhE,OACI3rC,OACA+rC,cAAeJ,EACfA,iBACAD,mEAKiB9Z,GACrB,IAAM3Z,EAAO2Z,EAAS/J,mBAAqB+J,EAC3C5uB,KAAKgpC,iBAAkB,EAAAjB,EAAAkB,qBAAoBh0B,GAC3CjV,KAAKkpC,eAAe,8CAINta,GACd5uB,KAAK2lC,SAAS3lC,KAAKuN,SAAS04B,MAA4BrX,EAAS2W,UAAUU,MAC3EjmC,KAAK2lC,SAAS3lC,KAAKuN,SAAS3C,SAA4BgkB,EAAS2W,UAAU36B,SAC3E5K,KAAK2lC,SAAS3lC,KAAKuN,SAASq4B,YAA6BhX,EAAS2W,UAAUK,WAC5E5lC,KAAK2lC,SAAS3lC,KAAKuN,SAAS47B,cAA4B1oB,UAAS,EAAA2oB,EAAA3kC,WAAS4kC,UAAY,KACtFrpC,KAAK2lC,SAAS3lC,KAAKuN,SAASq7B,0BAA4Bha,EAAS2W,UAAU+D,qBAC3EtpC,KAAKupC,kBAAkB3a,EAAS2W,UAAUiE,wDAI5BA,GAAc,IAAA/hC,EAAAzH,KAC5BwpC,EAAa7mC,QAAQ,SAAC8mC,GAClBhiC,EAAKk+B,SAAS8D,EAAQl8B,SAASm8B,eAAiBD,EAAQC,gBAAkB,GAC1E3wC,OAAO0J,KAAKgnC,GAAS9mC,QAAQ,SAACgnC,GAC1B,IAAMC,EAAyB,YAAVD,EAAsB,YAAcA,EACnDE,OAAyC,IAAnBJ,EAAQE,GAAyB,GAAKF,EAAQE,GACrD,YAAjBC,IACAniC,EAAKk+B,SAAS8D,EAAQl8B,SAASq8B,GAAgBC,6CAYjDt8B,GACVvN,KAAK8pC,SAAWv8B,4CAKhBvN,KAAKsJ,kBAAmB,oKASxBtJ,KAAKuN,QAAe+6B,aAAWpqC,IAAI,kBACnC8B,KAAK2lC,SAAe2C,aAAWyB,UAxNnB,mBAyNZ/pC,KAAKgqC,aAAehqC,KAAKiqC,sBACzBjqC,KAAK8pC,SAAe,GAEpB9pC,KAAKkpC,eAAe,SAEpBlpC,cAAoC8C,KAAG8hB,2CAAlCshB,yCAELlmC,KAAKkqC,4JAS0B,IAAxB38B,EAAwB7L,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuN,QACtB,OAAOvN,KAAKmqC,WAAW58B,GAAStJ,+CASH,IAAxBsJ,EAAwB7L,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuN,QACpB,OAAOvN,KAAKmqC,WAAW58B,GAASkP,2CASD,IAAxBlP,EAAwB7L,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuN,QACtB,OAAOvN,KAAK2lC,SAASp4B,4CASc,IAAxBA,EAAwB7L,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuN,QACpBk8B,EAAezpC,KAAKmqC,WAAW58B,GAC/B3C,EAAe6+B,EAAQ7+B,SACvBg7B,EAAe6D,EAAQ7D,WACvBwE,GAAgBxE,GAAch7B,EAAWA,GAAW,EAAAk9B,EAAAuC,iBAAgB98B,GAE1E,OACIA,UACAq4B,aACA5tB,KAAOoyB,EAAa7+B,cACpBiJ,MAAsC,YAA/B41B,EAAa7+B,eAA8B,EAAAkC,EAAA2C,UAAS,QAAUg6B,oDAMzEpqC,KAAKsJ,kBAAmB,2LAKnBtJ,KAAK8pC,UAAa9pC,KAAK8pC,SAASlxC,QAAWoH,KAAKmqC,WAAWnqC,KAAK8pC,UAAUrtB,0BAEtEzc,KAAKsqC,aAAanpB,KAAK,SAAAnd,GAAA,OAAMA,IAAOkE,EAAK4hC,YAAa9pC,KAAK8pC,WAAa9pC,KAAKuN,+BAC9EvN,KAAK2F,WAAWjF,GAAG6pC,iBACfzyB,SAAS,EAAArK,EAAA2C,UAAS,wCAClBpT,KAAS,WAGb,EAAA0Q,EAAAghB,kDAKJ1uB,KAAK2F,WAAWjF,GAAG6pC,iBACfzyB,SAAS,EAAArK,EAAA2C,UAAS,iCAClBpT,KAAS,SAIbgD,KAAKwqC,cAAcxqC,KAAKsqC,aAAa,aAC/BtqC,KAAKyqC,uEAGfjjC,eAAeD,QAAQ,aAAc,KAErCkW,UAAIitB,eACJ1qC,KAAK2qC,wBAAwB3qC,KAAK8pC,UAClC7a,EAAYC,kBACN1L,UAAaC,MAAO8hB,UAAavlC,KAAK4qC,aAAgBC,QAAQ,6BAC9D7qC,KAAK6jC,eACX7jC,KAAK8qC,wKAIW,IAAAziC,EAAArI,MAEhB,EAAA+E,EAAAsE,MACI,kBAAMhB,EAAKyhC,UACX9pC,KAAKyqC,yDAKFvkB,GACPlmB,KAAK2lC,SAAS3lC,KAAKuN,SAAS2Y,QAAUA,yCAI3B5nB,GACX0B,KAAK+qC,kBAAoBzsC,uCAIhB+lB,GACTrkB,KAAK2lC,SAAS3lC,KAAKuN,SAAS8W,UAAYA,mCAInC4hB,GACLjmC,KAAK2lC,SAAS3lC,KAAKuN,SAAS04B,MAAQA,kCAvUpC,OAAKjmC,KAAK2lC,UACF3lC,KAAK2lC,SAAS3lC,KAAKuN,UAAYvN,KAAK2lC,SAAS3lC,KAAKuN,SAAS2Y,QAC/DlmB,KAAK2lC,SAAS3lC,KAAKuN,SAAS2Y,QAAQ5S,WAFb,sDAa3B,QACKtT,KAAK4iB,eAAgB5iB,KAAK4lC,YAC+B,cAA1D5lC,KAAK2lC,SAAS3lC,KAAKuN,SAASq7B,gEAKjB,IAAAlgC,EAAA1I,KACf,OAAOA,KAAKsqC,aAAazjC,IAAI,SAAA7C,GAAA,OACzBA,IAAO0E,EAAK6E,UACX7E,EAAKsiC,WAAWhnC,IACjB0E,EAAKkiC,SAAS5mC,GACV0E,EAAKuiC,eAAejnC,QACpB1G,IACLwX,OAAO,SAAA20B,GAAA,OAAWA,4CAKrB,OAAOzpC,KAAK2lC,oBAAoB5sC,OAC1BA,OAAOmyC,OAAOlrC,KAAK2lC,UAAU7wB,OAAO,SAAA20B,GAAA,OAAYA,EAAQxlC,sDAM9D,OAAOjE,KAAK2lC,oBAAoB5sC,OAASA,OAAO0J,KAAKzC,KAAK2lC,mDAK1D,OAAO,EAAAmC,EAAAuC,iBAAgBrqC,KAAKuN,0CAK5B,OAAIvN,KAAK+qC,kBAAkBnyC,OAChBoH,KAAK+qC,kBACL/qC,KAAK4iB,aACL5iB,KAAK2lC,SAAS3lC,KAAKuN,SAAS3C,SAEhC5K,KAAKmrC,0DAMZ,GAAIpyC,OAAO0J,KAAKzC,KAAKgpC,iBAAiBpwC,OAAS,EAAG,CAC9C,IAAM6J,EAAO1J,OAAO0J,KAAKzC,KAAKgpC,iBAC9B,OAAOjwC,OAAOmyC,OAAOlrC,KAAKgpC,gBAAL,GAAwBvmC,EAAK,KAAO,GAAG2B,KAC9D,MAAO,6CAKT,IAAKpE,KAAK4iB,aAAc,OAAO,EAC/B,IAAMwoB,EAAwB,IAAI9+B,OAAO,kCAAmC,KAC5E,OAAOtM,KAAKsqC,aAAae,MAAM,SAAArnC,GAAA,OAAMonC,EAAsB7+B,KAAKvI,0CAKhE,SACIhE,KAAK2lC,oBAAoB5sC,QACzBA,OAAO0J,KAAKzC,KAAK2lC,UAAU/sC,OAAS,GACpCoH,KAAKuN,SACLvN,KAAK2lC,SAAS3lC,KAAKuN,SAASkP,0CAMhC,QAASzc,KAAK2lC,SAAS3lC,KAAKuN,SAASq4B,+CAKrC,OAAO5lC,KAAKgqC,aAAajB,aAAe/oC,KAAKgqC,aAAatB,+DAIhC,IAAAx/B,EAAAlJ,KAC1B,OAAOA,KAAKsqC,aACPx1B,OAAO,SAAAvH,GAAA,QAAarE,EAAKy8B,SAASp4B,GAASq4B,aAC3Cp/B,OAAO,SAAA+G,GAAA,OAAWA,+CAIF,IAAAnE,EAAApJ,KACrB,OAC4C,IADrCjH,OAAO0J,KAAKzC,KAAKgpC,iBAAiBniC,IAAI,SAAA7J,GAAA,OAAQjE,OAAOmyC,OAAO9hC,EAAK4/B,gBAAgBhsC,IAAOpE,SAC1F4N,OAAO,SAAC8kC,EAAKz3B,GAAN,OAAcy3B,EAAMz3B,GAAK,uCArHxCtJ,gFACAA,4EACAA,4EACAA,0DAA8B,0CAC9BA,2DAA8B,wCAC9BA,qGACAA,0DAA+B,+BAM/BghC,4HAaAA,iIAQAA,sHAWAA,sHAOAA,oHAKAA,gHAKAA,mHAWAA,yHAQAA,qHAOAA,iHAUAA,gHAKAA,6HAKAA,oIAOAA,4wDAnHgB7D,oKCrBdjjC,0VCAPO,EAAAjL,EAAA,GACAyxC,EAAAzxC,EAAA,yDACAA,EAAA,UAEM+O,aACF,SAAAA,EAAY8R,EAAOzS,GAAqB,IAAd/H,EAAcsB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAN,kGAAMF,CAAAxB,KAAA8I,GACpC9I,KAAK4a,MAASA,EACd5a,KAAKmI,MAASA,EACdnI,KAAKI,MAASA,EACdJ,KAAKiJ,OAAS,IAAI7L,UAElB4C,KAAKyrC,YAAc,+CASZC,EAAWC,GAClB,IAAI7zB,EAAU6zB,EAAKtmC,QAAQyS,UAAW,EAAA0zB,EAAAI,mBAAkBD,EAAK9tC,MAAMia,QACjD,WAAd6zB,EAAK9tC,KACLia,GAAU,EAAA9S,EAAA6mC,UAAS/zB,GAAU6zB,EAAKtmC,QAAQ0a,MAAQ4rB,EAAKtmC,QAAQ4a,IAAM0rB,EAAKtmC,QAAQ0a,IAAS4rB,EAAKtmC,QAAQ0a,IAA3E,IAAkF4rB,EAAKtmC,QAAQ4a,MACvG,QAAd0rB,EAAK9tC,KACZia,GAAU,EAAA9S,EAAA6mC,UAAS/zB,GAAU6zB,EAAKtmC,QAAQ0a,MACrB,cAAd4rB,EAAK9tC,OACZia,GAAU,EAAA9S,EAAA6mC,UAAS/zB,GAAU6zB,EAAKtmC,QAAQymC,MAAOH,EAAKtmC,QAAQ0mC,SAElE/rC,KAAKiJ,OAAOsN,IAAIm1B,EAAW5zB,GAC3B9X,KAAKyrC,8CAQD,IAAA9kC,EAAA3G,KAiCJ,OAhCAjH,OAAO0J,KAAKzC,KAAK4a,OAAOjY,QAAQ,SAAA+oC,GACvB3yC,OAAOC,UAAUC,eAAeC,KAAKyN,EAAKwB,MAAOujC,IAItD/kC,EAAKwB,MAAMujC,GAAW/oC,QAAQ,SAAAgpC,GAC1B,IAAMK,EAAaljC,EAAUmjC,cAAcN,IAEtCK,EAAWnjC,WAA6C,mBAAzBmjC,EAAWnjC,aAI3CmjC,EAAW3mC,QAAQ6mC,YAAcF,EAAW3mC,QAAQ6mC,UAAUvlC,EAAKvG,QAIzC,KAA1BuG,EAAKiU,MAAM8wB,IAAyC,QAApBM,EAAWnuC,MAI9BmuC,EAAWnjC,UACxBlC,EAAKiU,MAAM8wB,GACXM,EAAW3mC,QACXsB,EAAKvG,MACLuG,EAAKiU,QAILjU,EAAKwlC,WAAWT,EAAWM,SAI/BhsC,KAAKyrC,+CASb,OAAOzrC,KAAKosC,gDASKT,GACjB,IAAMU,EAAiC,iBAATV,EACxBW,GACFzuC,KAASwuC,EAAiBV,EAAOA,EAAK,GACtCtmC,QAASgnC,KAAsBV,EAAK,QAKxC,OAFAW,EAAYzjC,UAAiC,WAArByjC,EAAYzuC,KAAoB8tC,EAAK,GAAG7mC,MAAO,EAAA0mC,EAAAI,mBAAkBU,EAAYzuC,MAAMiH,KAEpGwnC,qBAIAxjC,oICtGf,QAAA/O,EAAA,KACAyQ,EAAAzQ,EAAA,QAGAA,EAAA,MACA0T,EAAA1T,EAAA,GACAwyC,EAAAxyC,EAAA,KACAiL,EAAAjL,EAAA,sDAKA,IAAMyyC,EAAoB,SAACluC,GACvB,YAAchB,IAAVgB,GAAiC,OAAVA,GAIfmuC,OAAOnuC,GAAOqO,QAAQ,MAAO,IAC9B/T,OAAS,GAElB8zC,EAAoB,SAAApuC,GAAA,MAAS,oDAAoDiO,KAAKjO,IACtFquC,EAAoB,SAACruC,EAAO+G,EAASunC,GACvC,QAAI,4CAA4CrgC,KAAKjO,KACjDuuC,UAASC,cAAcF,EAAMG,WACtB,IAKTC,EAAoB,SAAA1uC,GAAA,OAAU,uCAAuCiO,KAAKjO,IAC1E2uC,EAAoB,SAAA3uC,GAAA,OAAU,oCAAoCiO,KAAKjO,IACvE4uC,EAAoB,SAAA5uC,GAAA,OAAU,6BAA6BiO,KAAKjO,IAChE6uC,EAAoB,SAAA7uC,GAAA,MAAS,mBAAmBiO,KAAKjO,IACrD8uC,EAAoB,SAAA9uC,GAAA,MAAS,gBAAgBiO,KAAKjO,IAClD+uC,EAAoB,SAAC/uC,EAAO+G,GAAR,OAAoBA,EAAQioC,MAAM/gC,KAAKjO,IAC3DivC,EAAoB,SAAAjvC,GAAA,OAAiC,IAAxBA,EAAMkvC,OAAO50C,QAC1C60C,EAAoB,SAAAnvC,GAAA,MAAS,uBAAuBiO,KAAKjO,IACzDovC,EAAoB,SAAApvC,GAAA,MAAS,mBAAmBiO,KAAKjO,IAErDqvC,EAAgB,SAACrvC,EAAO+G,GAAR,OAAoB/G,IAAUsvC,EAAEvoC,EAAQksB,IAAIsc,OAC5DC,EAAgB,SAACxvC,EAAO+G,GAAR,OAAoB/G,IAAUsvC,EAAEvoC,EAAQksB,IAAIsc,OAC5DE,EAAgB,SAACzvC,EAAO+G,GAAR,OAAqBA,EAAQ0a,KAAMzhB,EAAM1F,QAAUyM,EAAQ0a,KAC3EiuB,EAAgB,SAAC1vC,EAAO+G,GAAR,QACjBA,EAAQ0a,KAAMzhB,EAAM1F,QAAUyM,EAAQ0a,QACtC1a,EAAQ4a,KAAM3hB,EAAM1F,QAAUyM,EAAQ4a,MAGrCguB,EAAc,SAAC3vC,EAAO4vC,GACxB,IAAM7oC,GAAU,EAAAL,EAAAoP,aAAY85B,GACxBp2B,EAAU,KACd,GAAIzS,EAAQ8oC,aAAgC,IAAjB7vC,EAAM1F,OAC7B,OAAO,EAGX,IAAIw1C,GAAQ,EA8BZ,MA7BI,QAAS/oC,GAAkC,mBAAhBA,EAAQ0a,MACnC1a,EAAQ0a,IAAM1a,EAAQ0a,OAEtB,QAAS1a,GAAkC,mBAAhBA,EAAQ4a,MACnC5a,EAAQ4a,IAAM5a,EAAQ4a,SAGH,UAAjB5a,EAAQrI,KAAmB,gBAAkB,SAASuP,KAAKjO,IAAUkiB,MAAMliB,IAC7E8vC,GAAU,EACVt2B,GAAU,EAAArK,EAAA2C,UAAS,8BACK,UAAjB/K,EAAQrI,MAAoBqI,EAAQgpC,WACzC,IAAI/hC,OAAJ,kBAA6BjH,EAAQgpC,SAArC,QAAqD9hC,KAAKjO,IAC5D8vC,GAAU,EACVt2B,GAAU,EAAArK,EAAA2C,UAAS,0CAA2C/K,EAAQgpC,YAC/D,QAAShpC,GAAW,QAASA,IAAYA,EAAQ0a,MAAS1a,EAAQ4a,MAAQ3hB,IAAW+G,EAAQ0a,KACpGquB,GAAU,EACVt2B,GAAU,EAAArK,EAAA2C,UAAS,mBAAmB,EAAA5F,EAAA8jC,UAASjpC,EAAQ0a,IAAK1a,EAAQkpC,cAAe,EAAA/jC,EAAAgkC,kBAAiB1f,UAAO5wB,IAAI,kBAAeZ,MACvH,QAAS+H,GAAW,QAASA,KAAa/G,GAAS+G,EAAQ0a,KAAO0uB,EAAcnwC,EAAO+G,KAC9F+oC,GAAU,EACVt2B,GAAU,EAAArK,EAAA2C,UAAS,oCAAoC,EAAA5F,EAAA8jC,UAASjpC,EAAQ0a,IAAK1a,EAAQkpC,cAAe,EAAA/jC,EAAAgkC,kBAAiB1f,UAAO5wB,IAAI,kBAAeZ,IAAY,EAAAkN,EAAA8jC,UAASjpC,EAAQ4a,IAAK5a,EAAQkpC,cAAe,EAAA/jC,EAAAgkC,kBAAiB1f,UAAO5wB,IAAI,kBAAeZ,MAC5O,QAAS+H,IAAY/G,GAAS+G,EAAQ0a,KAC7CquB,GAAU,EACVt2B,GAAU,EAAArK,EAAA2C,UAAS,6BAA6B,EAAA5F,EAAA8jC,UAASjpC,EAAQ0a,IAAK1a,EAAQkpC,cAAe,EAAA/jC,EAAAgkC,kBAAiB1f,UAAO5wB,IAAI,kBAAeZ,MACjI,QAAS+H,GAAWopC,EAAcnwC,EAAO+G,KAChD+oC,GAAU,EACVt2B,GAAU,EAAArK,EAAA2C,UAAS,6BAA6B,EAAA5F,EAAA8jC,UAASjpC,EAAQ4a,IAAK5a,EAAQkpC,cAAe,EAAA/jC,EAAAgkC,kBAAiB1f,UAAO5wB,IAAI,kBAAeZ,MAG5IsuC,IAAkBngC,OAAOqM,QAAUA,EAC5Bs2B,GAGLK,EAAgB,SAACnwC,EAAO+G,GAAR,MACA,UAAjBA,EAAQrI,MAAoBsB,GAAS+G,EAAQ4a,IAAoD,KAA9C,EAAAssB,EAAAmC,uBAAsBpwC,EAAO+G,EAAQ4a,MAsBzF0uB,SACS/C,oBAAkB,WAI3B,OAHK+C,IACDA,GAtBJC,SAAiB9pC,KAAMooC,EAAmBp1B,SAAS,EAAArK,EAAA2C,UAAS,gFAAiF,2BAC7I4C,SAAiBlO,KAAM4oC,EAAmB51B,SAAS,EAAArK,EAAA2C,UAAS,+DAAgE,WAC5Hy+B,SAAiB/pC,KAAM6oC,EAAmB71B,SAAS,EAAArK,EAAA2C,UAAS,qDAC5D61B,OAAiBnhC,KAAM4nC,EAAmB50B,SAAS,EAAArK,EAAA2C,UAAS,2BAC5D0+B,SAAiBhqC,KAAMmoC,EAAmBn1B,SAAS,EAAArK,EAAA2C,UAAS,8EAC5DxX,QAAiBkM,KAAMkpC,EAAmBl2B,SAAS,EAAArK,EAAA2C,UAAS,qCAAsC,UAClG2+B,eAAiBjqC,KAAMkoC,EAAmBl1B,SAAS,EAAArK,EAAA2C,UAAS,qEAC5D2P,KAAiBjb,KAAMipC,EAAmBj2B,SAAS,EAAArK,EAAA2C,UAAS,wCAAyC,UACrG4+B,WAAiBlqC,KAAMgpC,EAAmBh2B,SAAS,EAAArK,EAAA2C,UAAS,qCAAsC,OAAQ,UAC1G3E,QAAiB3G,KAAMmpC,EAAmBn2B,QAAS,IACnDm3B,UAAiBnqC,KAAM6nC,EAAmB70B,SAAS,EAAArK,EAAA2C,UAAS,mEAC5D8+B,OAAiBpqC,KAAMsoC,EAAmBt1B,SAAS,EAAArK,EAAA2C,UAAS,yCAC5D++B,UAAiBrqC,KAAMqoC,EAAmBr1B,SAAS,EAAArK,EAAA2C,UAAS,0DAC5Dg/B,SAAiBtqC,KAAMuoC,EAAmBv1B,QAAS,IACnDsO,KAAiBthB,KAAM0nC,EAAmB10B,QAAS,IACnDu3B,cAAiBvqC,KAAMyoC,EAAmBz1B,SAAS,EAAArK,EAAA2C,UAAS,qCAC5Dk/B,QAAiBxqC,KAAM2oC,EAAmB31B,SAAS,EAAArK,EAAA2C,UAAS,iFAQrDu+B,GAGEY,0BAA0B,SAAAvyC,GAAA,OAAW+iB,IAAM,OAAOxT,KAAKvP,GAAQ,EAAI,EAAIijB,IAAK,oVCtHnFuvB,aACF,SAAAA,iGAAchuC,CAAAxB,KAAAwvC,GACVxvC,KAAKiJ,gDAGLyiC,EAAW5zB,GACN9X,KAAKyvC,IAAI/D,KACV1rC,KAAKiJ,OAAOyiC,QAGiC,IAA7C1rC,KAAKiJ,OAAOyiC,GAAW/8B,QAAQmJ,IAC/B9X,KAAKiJ,OAAOyiC,GAAW5yC,KAAKgf,iCAKhC,OAAO9X,KAAKiJ,qCAGVyiC,GACF,OAAI1rC,KAAKyvC,IAAI/D,GACF1rC,KAAKiJ,OAAOyiC,GAAW,GAE3B,iCAGPA,GACA,OAAI1rC,KAAKyvC,IAAI/D,GACF1rC,KAAKiJ,OAAOyiC,kCAMvBA,GACA,OAAO3yC,OAAOC,UAAUC,eAAeC,KAAK8G,KAAKiJ,OAAQyiC,sBAIlD8D,mICvCf,IAAAhlC,EAAAzQ,EAAA,IACA0T,EAAA1T,EAAA,mPAEakvC,sBAAsB,SAACpkB,GAAsB,IAAAxjB,EAChDquC,KACAC,KAMN,OAJA9qB,EAAkBliB,QAAQ,SAACkR,KACtB,EAAArJ,EAAAolC,kBAAiB/7B,GAAO87B,EAASD,GAAM52C,MAAOsL,KAAMyP,EAAKvV,MAAOuV,MAGrEnN,EAAArF,MACK,EAAAoM,EAAA2C,UAAS,QAAYs/B,GAD1BhpC,EAAArF,GAEK,EAAAoM,EAAA2C,UAAS,UAAYu/B,GAF1BtuC,GAMSwuC,qBAAqB,SAAC7G,GAAmC,IAAlBp+B,EAAkBlJ,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAP,GACrDouC,EAAuB/2C,OAAOmyC,OAAOlC,GAAiBxiC,OAAO,SAACgK,EAAG6P,GAAJ,SAAApe,OAAA8M,EAAcyB,GAAdzB,EAAoBsR,MAIvF,OACIzV,SAHMklC,EAAqB1jC,KAAK,SAAAzO,GAAA,OAAKA,EAAEW,QAAUsM,IAAYA,EAAWklC,EAAqB,GAAGxxC,uXCpBxGyG,EAAAhL,EAAA,OAGAA,EAAA,KACAg2C,EAAAh2C,EAAA,SACAA,EAAA,kzBAEqB4tC,KAchBxiC,SAAOC,QAKPD,SAAOC,QASPD,SAAOC,uyBA5B6BF,wDAenB8qC,GACdhwC,KAAKgwC,iBAAmBA,mCAInB11B,EAAWnd,GAChB6C,KAAKsa,UAAYA,EACjBta,KAAK7C,OACDH,KAASG,EAAQA,EAAMH,KAAO,OAC9B8a,QAAS3a,EAAQA,EAAM2a,QAAU,sCAK/BA,GACN9X,KAAKomC,UAAS,GACVtuB,UACA9a,KAAM,kDA/BbuN,2DAA8B0lC,UAAOC,6CACrC3lC,2DAA8B4lC,kDAC9B5lC,2DAA8B,8BAE9BA,2DACGvN,KAAS,OACT8a,QAAS,yCAGZvN,qGACAA,2DAA+B,yCAC/BA,2DAA+B,4UAZfo9B,yICPrB,IAAAvY,EAAAr1B,EAAA,IAEao2C,mBAAkB,EAAA/gB,EAAAlxB,OAElBkyC,sBAAsB,WAC/B,IAAMC,GACF,OAGgBt3C,OAAO0J,MAAK,EAAA2sB,EAAAkhB,WAC3Bx7B,OAAO,SAAAlW,GAAA,OAASyxC,EAAkBxY,SAASj5B,KAC3C4H,OAAO,SAACgJ,EAAK5Q,GAEV,OADA4Q,EAAI5Q,IAAO,EAAAwwB,EAAAkhB,UAAS1xC,GACb4Q,OAKf,OADkB+gC,GAAI,YAIbC,SAAS,SAAAC,GAAA,OAAQ,EAAArhB,EAAAshB,QAAOD,oGCrBrC,QAAA12C,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,mEAGI,SAAA6tC,EAAYjiC,gGAAYnE,CAAAxB,KAAA4nC,GACpB5nC,KAAKlE,SAAc,IAAI60C,WAAgBhrC,eACvC3F,KAAK7D,UAAc,IAAIy0C,WAAiBjrC,eACxC3F,KAAKxD,YAAc,IAAIq0C,WAAkBlrC,eACzC3F,KAAK1D,UAAc,IAAIw0C,WAAiBnrC,eACxC3F,KAAK0c,MAAc,IAAIq0B,WAAaprC,+YCZ5CZ,EAAAhL,EAAA,GAKAiL,EAAAjL,EAAA,GACA0T,EAAA1T,EAAA,GACA2T,EAAA3T,EAAA,IACAi3C,EAAAj3C,EAAA,KACAk3C,EAAAl3C,EAAA,KACAm3C,EAAAn3C,EAAA,KAGAkoC,EAAAloC,EAAA,KAGAmoC,EAAAnoC,EAAA,yDAYAA,EAAA,+vBAEqB42C,KAehBxrC,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAcPD,SAAOC,QAaPD,SAAOC,QAgBPD,SAAOC,QA0BPD,SAAOC,QAOPD,SAAOC,QAQPD,SAAOC,QAwBPD,SAAOC,0zBArI+BF,sDAgBvB8Z,GACZhf,KAAKmxC,aAAanyB,WAAaA,4CAIjBC,GACdjf,KAAKmxC,aAAalyB,YAAcA,kCAI5BiE,GACJljB,KAAKiK,gBAAgBjK,KAAKoxC,wBAAwBvyC,KAAK,KAAMqkB,IAC7DljB,KAAKsa,WAAgB,EACrBta,KAAKgiC,cAAgB,GACrBhiC,KAAKkjB,YAAgBA,EACrBljB,KAAKxD,YAAgBwD,KAAK2F,WAAWxM,QAAQqD,YAC7CwD,KAAKxD,YAAY60C,iBAAgB,GAE7BnuB,GACApgB,KAAGwjB,8BAA8BtmB,KAAKkjB,YAAaljB,KAAKsxC,gBAAgB,mDAKvDpuB,GACrBljB,KAAKsa,WAAgB,EACrBta,KAAKgiC,cAAgB,GACrBhiC,KAAKkjB,YAAgBA,EACrBljB,KAAKxD,YAAgBwD,KAAK2F,WAAWxM,QAAQqD,YAC7CwD,KAAKxD,YAAY60C,iBAAgB,GAE7BnuB,GACApgB,KAAGwjB,8BAA8BtmB,KAAKkjB,YAAaljB,KAAKsxC,gBAAgB,uCAM5EtxC,KAAKqK,uBACLrK,KAAKuxC,6BAELvxC,KAAKkjB,YAAoB,KACzBljB,KAAKupB,iBACLvpB,KAAKuvB,eACLvvB,KAAKw7B,aACLx7B,KAAKwxC,mBAAoB,EAEzBxxC,KAAKxD,YAAYi1C,iBACjBzxC,KAAKxD,YAAYk1C,gBACjB1xC,KAAKxD,YAAY60C,iBAAgB,0CAItBziB,GACX,MAAI,UAAWA,GACX5uB,KAAKsa,WAAgB,EACrBta,KAAKgiC,cAAgBpT,EAASzxB,MAAM2a,aACpC9X,KAAKupB,oBAGL,EAAAvkB,EAAAuB,eAAcqoB,EAAS7J,yBACvB/kB,KAAKsa,WAAgB,EACrBta,KAAKgiC,eAAgB,EAAAv0B,EAAA2C,UAAS,mEAC9BpQ,KAAKupB,oBAGTvpB,KAAKupB,cAAgBqF,EAAS7J,wBAC1B,EAAAmd,EAAAjY,SAAQjqB,KAAKupB,eACbvpB,KAAKmxC,cAAe,EAAAjP,EAAA5Y,gBAAetpB,KAAKupB,uBAEjCvpB,KAAKmxC,aAAaxnB,iBAClB3pB,KAAKmxC,aAAavnB,cAE7B,EAAAonB,EAAAW,oBAAmB3xC,KAAKxD,YAAawD,KAAKupB,gBAC1C,EAAA0nB,EAAAW,oBAAmB5xC,KAAKxD,YAAawD,KAAKupB,cAAevpB,WACzDA,KAAK6xC,wDAKD,EAAA5P,EAAA5S,iBAAgBrvB,KAAKupB,cAAchb,iBACnC,EAAAxJ,EAAA+sC,kBAAiB9xC,KAAKuvB,aAAa,EAAA0S,EAAA3S,cAAatvB,KAAKuvB,YAAavvB,KAAKupB,sDAMvEvpB,KAAKkjB,cAAgBljB,KAAKwxC,oBAAqB,EAAAxsC,EAAAuB,eAAcvG,KAAKw7B,aAClEx7B,KAAKwxC,mBAAoB,EACzB1uC,KAAGkiB,KAAKhlB,KAAKkjB,YAAaljB,KAAKupB,cAAcoB,WAAW5gB,KAAK/J,KAAK+xC,gDAK/DnjB,GAAU,IAAArtB,EAAAvB,KACb4uB,EAASzxB,OACT6C,KAAKw7B,WACDwG,cAAepT,EAASzxB,MAAM2a,SAGlC9X,KAAKwxC,mBAAoB,IAEzBxxC,KAAKuxC,6BACLzuC,KAAGgiB,qBAAqB9kB,KAAKkjB,aAAanZ,MAAK,EAAAhF,EAAAI,QAAO,SAAC6sC,GACnDzwC,EAAK+vC,eAAeU,GACpBzwC,EAAKi6B,WACD9Q,WAAgBkE,EAAS5J,KAAKitB,SAC9BtW,eAAgB/M,EAAS5J,KAAK2W,yEAO1C74B,KAAG2iB,OAAO,yBAA0BzlB,KAAKsxC,gBAAkBpuB,YAAaljB,KAAKkjB,+DAKtEljB,KAAKw7B,UAAUwG,qDAUtB,OAAO,EAAAkP,EAAAgB,kBAAiBlyC,2CAKxB,OAAO,EAAAkxC,EAAAiB,gBAAenyC,KAAKupB,sDAK3B,OAAO,EAAA2Y,EAAAnY,kBAAiB/pB,KAAKupB,gDAK7B,OAAO,EAAA2Y,EAAA/X,YAAWnqB,KAAKupB,qDAKvB,OAAO,EAAA2Y,EAAA3X,gBAAevqB,KAAKupB,mDAK3B,OAAO,EAAA2Y,EAAApY,eAAc9pB,KAAKupB,wDAK1B,OAAO,EAAA2Y,EAAAtX,oBAAmB5qB,KAAKupB,gDAK/B,OAAO,EAAA2Y,EAAAjY,SAAQjqB,KAAKupB,4DAKpB,OAAO,EAAA2Y,EAAAlX,mBAAkBhrB,KAAKupB,kDAK9B,OAAO,EAAA2Y,EAAAhX,WAAUlrB,KAAKupB,oDAKtB,OAAO,EAAA2Y,EAAAnX,YAAW/qB,KAAKupB,wDAKvB,OAAO,EAAA2Y,EAAA7W,eAAcrrB,KAAKupB,uDAvM7Bhf,iFAEAA,2DAA2BA,aAAWxL,6CACtCwL,2DAA2BA,aAAWxL,2CACtCwL,2DAA2BA,aAAWxL,8CACtCwL,2DAA2BA,aAAWxL,2CAEtCwL,2DAA+B,sCAC/BA,0DAA+B,2CAC/BA,2DAA+B,mmCAqI/BghC,qHAKAA,qHAKAA,iHAKAA,gHAKAA,mHAKAA,sHAKAA,mHAKAA,uHAKAA,yHAKAA,iHAKAA,uHAKAA,sGAtMgBoF,6GC9BrB,IAAArgB,EAAAv2B,EAAA,KAEa43C,qBAAqB,SAACd,EAAiBtnB,GAGhD,GAFAsnB,EAAgBY,iBAEZloB,EAAe,KACPhb,EAAsDgb,EAAtDhb,cAAeyE,EAAuCuW,EAAvCvW,QAASC,EAA8BsW,EAA9BtW,aAAcE,EAAgBoW,EAAhBpW,aAE1CH,GAAWC,KACX49B,EAAgBuB,eACZ7jC,EACAyE,GAAWC,EACXE,EACA,MAEIk/B,WAAexqB,sBAAoBG,MACnCsqB,eAAe,IAIvBzB,EAAgB0B,oBAAmB,EAAMhkC,uHCpBrD,wDAAAxU,EAAA,MACAy4C,EAAAz4C,EAAA,6HAEa63C,qBAAqB,SAACf,EAAiBtnB,GAAwC,IAAzBonB,EAAyBjvC,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAT,KAC3E6nB,GACAxwB,OAAO0J,KAAKgwC,GAAiB9vC,QAAQ,SAAC+vC,GAClC,KAAIA,KAAe7B,EAAgB8B,SAAnC,CAEA,IAAMC,EAAgBH,EAAgBC,GAAanpB,EAAeonB,GAC9DiC,GACA/B,EAAgBgC,aAAaD,OAPtC,IAaDH,UACDK,sBAAoBC,SAAS/1C,KAQlC,SAA6BusB,GACzB,QAA6B,SAAzBA,EAAcS,SAAsBT,EAActL,cAE/C+0B,EACHF,sBAAoBC,SAAS/1C,KAC7BusB,EAActL,eAdhBvX,EAAAusC,EAEDH,sBAAoBI,cAAcl2C,KAgBvC,SAAkCusB,GAC9B,SAAKA,EAAc4pB,gBAAkB5pB,EAAcrL,aAC9CqL,EAAc4pB,gBAAmB5pB,EAAcrL,aAE7C80B,EACHF,sBAAoBI,cAAcl2C,KAClCusB,EAAc4pB,iBAxBhBzsC,EAAAusC,EAGDH,sBAAoBM,WAAWp2C,KAyBpC,SAA+BusB,GAC3B,QAAKA,EAAcrL,YAEZ80B,EACHF,sBAAoBM,WAAWp2C,KAC/BusB,EAAcrL,cAjChBxX,EAAAusC,EAIDH,sBAAoBO,WAAWr2C,KAkCpC,SAA+BusB,EAAeonB,GAC1C,SAAKpnB,EAAciG,iBAAmBmhB,EAAc2C,uBAE7CN,EACHF,sBAAoBO,WAAWr2C,KAC/BusB,EAAciG,gBACdjG,EAAcoG,YAEV4jB,cAAehqB,EAAcoG,eA9CnCjpB,EAAAusC,EAKDH,sBAAoBU,UAAUx2C,KA8CnC,SAA8BusB,EAAeonB,GACzC,QAAKA,EAAc8C,eAEZT,EACHF,sBAAoBU,UAAUx2C,KAC9B2zC,EAAc8C,cACd9C,EAAc+C,UAEVH,cAAe5C,EAAc+C,SAC7B1pB,OAAeT,EAAcW,OAAS,EAAI,MAAQ,WA5DxD+oB,GAkEN,IAAMD,EAAqB,SAACN,EAAaiB,EAAGC,EAAGC,GAApB,OACvB,EAAAC,EAAArvC,UAAO,KAAUquC,sBAAoBJ,IACjCE,eACIe,GAAIA,EACJC,KAEJC,gICxFR,QAAA95C,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMg6C,EACK,QAILC,EACK,QADLA,EAEK,OAGLC,GACFC,MACIC,iBAAkBC,UAClBC,YAAkBN,EAClBO,YAAkBN,EAClBlwC,UAAkB,qBAEtBywC,MACIJ,iBAAkBK,UAClBH,YAAkBN,EAClBO,YAAkBN,IAIblB,uBACTC,UAAiB/1C,KAAM,WAAiB41C,cAAeqB,EAAqBC,KAAML,gBAAkBxB,WAAY,OAASv4B,OAAO,EAAArM,EAAA2C,UAAS,cACzI8iC,eAAiBl2C,KAAM,gBAAiB41C,cAAeqB,EAAqBC,KAAML,gBAAkBxB,WAAY,QAASv4B,OAAO,EAAArM,EAAA2C,UAAS,mBACzIgjC,YAAiBp2C,KAAM,aAAiB41C,cAAeqB,EAAqBC,KAAML,gBAAkBxB,WAAY,QAASv4B,OAAO,EAAArM,EAAA2C,UAAS,gBACzIijC,YAAiBr2C,KAAM,aAAiB41C,cAAeqB,EAAqBM,KAAMV,gBAAkBY,MAAO,OAASz8B,KAAMxT,EAAAC,QAAAvJ,cAACw5C,EAAAjwC,QAAD,QAC1H+uC,WAAiBx2C,KAAM,YAAiB41C,cAAeqB,EAAqBM,KAAMV,gBAAkBY,MAAO,QAASz8B,KAAMxT,EAAAC,QAAAvJ,cAAC2gC,EAAAp3B,QAAD,wFCpC9H,IAAAjF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM46C,EAAgB,kBAClBnwC,EAAAC,QAAAvJ,cAAA,OAAKgtB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACnErY,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,kBACR4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,OAAOqL,SAAS,UAAUzqB,EAAE,iKACvC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,OAAOqL,SAAS,UAAUzqB,EAAE,mOAKnD+2C,EAAczyC,WACVomB,MAAO/nB,UAAUqE,mBAGN,EAAApF,EAAAwB,UAAS2zC,sFClBxB,IAAAn1C,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMq6C,EAAa,SAAA/yC,GAAA,IACfyY,EADezY,EACfyY,MACAu4B,EAFehxC,EAEfgxC,WAFe,OAIf7tC,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWuuC,GACZ7tC,EAAAC,QAAAvJ,cAAA,WAAM4e,KAIds6B,EAAWlyC,WACP4X,MAAYvZ,UAAUqE,OACtBytC,WAAY9xC,UAAUqE,mBAEX,EAAApF,EAAAwB,UAASozC,kFCjBxB,QAAAr6C,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAyQ,EAAAzQ,EAAA,uDAEA,IAAMy6C,EAAa,SAAAnzC,GAAA,IACfozC,EADepzC,EACfozC,MACAz8B,EAFe3W,EAEf2W,KACAu7B,EAHelyC,EAGfkyC,WACAvpB,EAJe3oB,EAIf2oB,OAJe,OAMfxlB,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,aAAcgwC,EAAOzqB,IAC5CxlB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,WACVkU,GACA,EAAAxN,EAAA8jC,UAASiF,IAEd/uC,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,UACfU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,WAIvB0wC,EAAWtyC,WACPuyC,MAAYl0C,UAAUq0C,OAAO,OAAQ,UACrC58B,KAAYzX,UAAUxB,OACtBw0C,WAAYhzC,UAAUqE,OACtBolB,OAAYzpB,UAAUq0C,OAAO,MAAO,qBAEzB,EAAAp1C,EAAAwB,UAASwzC,ySC5BxBz6C,EAAA,IACAyQ,EAAAzQ,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,KACAgU,EAAAhU,EAAA,KACA4T,EAAA5T,EAAA,+KAEA,IAAM86C,EAAgB,WAClB,IAAIC,SAaJ,OACI52C,IAAK,WAID,OAHK42C,IACDA,GAbRvmC,eAAgB,EAAAd,EAAA2C,UAAS,iBACzBwG,YAAgB,EAAAnJ,EAAA2C,UAAS,cACzB2kC,YAAgB,EAAAtnC,EAAA2C,UAAS,cACzB4kC,gBAAgB,EAAAvnC,EAAA2C,UAAS,kBACzByG,UAAgB,EAAApJ,EAAA2C,UAAS,YACzB6kC,WAAgB,EAAAxnC,EAAA2C,UAAS,aACzB8kC,gBAAgB,EAAAznC,EAAA2C,UAAS,kBACzBgO,QAAgB,EAAA3Q,EAAA2C,UAAS,YAQd0kC,IAnBG,GAwBT3C,iBAAiB,SAAC5oB,GAAkB,IAAAloB,EAEzC2c,EAMAuL,EANAvL,UACAzP,EAKAgb,EALAhb,cACA3D,EAIA2e,EAJA3e,SACAsT,EAGAqL,EAHArL,WACA62B,EAEAxrB,EAFAwrB,WACA9pB,EACA1B,EADA0B,UAGE6pB,EAAgBD,EAAa32C,MAK7Bo1C,EAAuBroB,IAAcA,GAAa/M,EAClDi3B,EAAuBj3B,IAAc,EAAAvQ,EAAAynC,aAA0B,KAAbl3B,GAClDm3B,EAAuBN,IAAezB,GAAuB,EAAA9oC,EAAA8jC,UAASyG,GAAc,IAE1F,OAAAruC,EAAArF,KACKyzC,EAAcvmC,eAAiB,EAAAR,EAAAwa,0BAAyBha,IAD7D7H,EAAArF,EAEKyzC,EAAcl+B,WAAiBu+B,GAFpCzuC,EAAArF,EAGKyzC,EAAcC,WAAiBM,GAHpC3uC,EAAArF,EAIKyzC,EAAcE,eAAiBxwC,EAAAC,QAAAvJ,cAACo7B,EAAA7xB,SAAMiG,OAAQsT,EAAWpT,SAAUA,KAJxEvJ,GAQS6wC,mBAAmB,SAAC9xC,GAAU,IAAAyR,EACvC,IAAKzR,EAAMmiC,SAAU,SADkB,IAInChZ,EAKAnpB,EALAmpB,cACAmqB,EAIAtzC,EAJAszC,SACAD,EAGArzC,EAHAqzC,cACA6B,EAEAl1C,EAFAk1C,iBACAC,EACAn1C,EADAm1C,aAGET,EAAgBD,EAAa32C,MAInC,OAAAmC,KACQk1C,OACCT,EAAcj+B,SAAW0S,EAActL,cAAe,EAAAtQ,EAAAynC,aAAyC,KAA5B7rB,EAActL,eADlFvX,EAAAmL,KAGCijC,EAAcG,UAAiBvB,GAAW,EAAAlpC,EAAA8jC,UAASoF,GAAY,KAHhEhtC,EAAAmL,EAICijC,EAAcI,eAAiBzB,GAAgB,EAAA9lC,EAAAynC,aAA6B,KAAhB3B,GAAwB,KAJrF5hC,GADRnL,KAOKouC,EAAc12B,OAAS5Z,EAAAC,QAAAvJ,cAACo7B,EAAA7xB,SAAMiG,OAAQ4qC,EAAkB1qC,SAAU2e,EAAc3e,00BChFzF7Q,EAAA,KACA0T,EAAA1T,EAAA,GAOO,IAAMy7C,kBAAgB,SAAAC,GAAA,OAASxF,UAAOjkB,KAAKypB,GAAOvF,OAQ5Cx+B,aAAW,SAAApT,GACpB,IAAKA,EAAO,OAAO,EAAA8qC,EAAA3kC,WAASyrC,MAC5B,GAAI5xC,aAAiB2xC,WAAU3xC,EAAMo3C,WAAap3C,EAAMq3C,QAAS,OAAOr3C,EACxE,IAAMs3C,EAAaJ,EAAcl3C,GACjC,OAAOs3C,EAAWF,UAAYE,EAAa3F,UAAOC,IAAI5xC,IAS7Cu3C,YAAU,SAACD,EAAYvkC,GAAS,IAAAhQ,EACVgQ,EAAOA,EAAKE,MAAM,MAAQ,EAAG,EAAG,GADtBC,EAAAC,EAAApQ,EAAA,GAClC4P,EADkCO,EAAA,GAC5BT,EAD4BS,EAAA,GACpBua,EADoBva,EAAA,GAGzC,OADAokC,EAAW3kC,KAAKA,GAAMF,OAAOA,GAAU,GAAGgb,OAAOA,GAAU,GACpD6pB,GAuDEtkC,GA9CAwkC,gBAAgB,SAACL,EAAOpkC,GAAR,OAAiBwkC,EAAQnkC,EAAS+jC,GAAQpkC,GAAM2a,QAEhEopB,cAAc,SAAC/jC,GAAD,OAAU,EAAA+3B,EAAA3kC,SAAO4M,QAAQ/T,GAAW4yC,MAAMl/B,OAAO,8BAE/D+kC,aAAa,SAAC3kC,GAAD,IAAOmQ,EAAP7f,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAqB,aAArB,OAAsCgQ,EAASN,GAAMJ,OAAOuQ,IAOzEy0B,kBAAkB,SAAC5kC,GAC5B,IAAM+F,EAAOzF,EAASN,GAAM6kC,QAAQ,OAAO9+B,KAAKzF,IAAWukC,QAAQ,OAAQ,QAC3E,OAAS7kC,GAAQ+F,EAAO,EAAK,GAAKA,GASzBoX,kBAAkB,SAAC3X,EAAYC,GAAb,OAC3Bo5B,UAAO9xB,SAAS8xB,UAAOjkB,KAAKnV,GAAUM,KAAK84B,UAAOjkB,KAAKpV,MAO9C0X,iBAAiB,SAACnQ,GAC3B,IAAMvgB,EAAIsN,KAAK+V,MAAM9C,EAAS+3B,UACxBhlC,EAAIiN,EAAS5N,QACb7S,EAAIygB,EAAS1N,UACbzW,EAAImkB,EAASg4B,UACfC,GAAgB,EAAAhN,EAAA3kC,SAAO,GAAGwM,KAAKC,GAAGH,OAAOrT,GAAGy4C,QAAQn8C,GAAGgX,OAAO,YAIlE,OAHIpT,EAAI,IACJw4C,EAAmBx4C,EAAnB,KAAwBA,EAAI,GAAI,EAAA6P,EAAA2C,UAAS,SAAU,EAAA3C,EAAA2C,UAAS,QAA5D,IAAsEgmC,GAEnEA,GAOE9kC,cAAc,SAAA+kC,GAAA,MAAY,uEAAuE9pC,KAAK8pC,KAMtGC,cAAc,SAAAD,GAAA,OAAY/kC,EAAY+kC,IAAa,uBAAuB9pC,KAAK8pC,EAAS9kC,MAAM,KAAK,KAMnGglC,gBAAgB,SAAAF,GAAA,OAAY/kC,EAAY+kC,IAAa,eAAe9pC,KAAK8pC,EAAS9kC,MAAM,KAAK,KAM7FilC,cAAc,SAAAplC,GAAA,OAAQ,EAAAg4B,EAAA3kC,SAAO2M,EAAM,cAAcskC,WAOjDe,UAAU,SAACrlC,EAAMslC,GAAP,OAAuBhlC,EAASN,GAAMkF,QAAQC,IAAImgC,EAAa,QAOzEC,YAAY,SAACvlC,EAAMwlC,GAAP,OAAyBllC,EAASN,GAAMkF,QAAQC,IAAIqgC,EAAe,UAO/EC,WAAW,SAACzlC,EAAM0lC,GAAP,OAAwBplC,EAASN,GAAMkF,QAAQC,IAAIugC,EAAc,SAO5EC,UAAU,SAAC3lC,EAAMslC,GAAP,OAAuBhlC,EAASN,GAAMkF,QAAQgB,SAASo/B,EAAa,QAO9EM,YAAY,SAAC5lC,EAAMwlC,GAAP,OAAyBllC,EAASN,GAAMkF,QAAQgB,SAASs/B,EAAe,UAOpFK,WAAW,SAAC7lC,EAAM0lC,GAAP,OAAwBplC,EAASN,GAAMkF,QAAQgB,SAASw/B,EAAc,SAOjF5/B,UAAU,SAACggC,EAAQC,GAAT,OAAoBlH,UAAOlwB,IAAIrO,EAASwlC,GAASxlC,EAASylC,4XC1JjFpyC,EAAAhL,EAAA,GAIA2T,EAAA3T,EAAA,IACAq9C,EAAAr9C,EAAA,yDACAA,EAAA,+vBAEqB62C,KAKhBzrC,SAAOC,QAUPD,SAAOC,QAOPD,SAAOC,QAePD,SAAOC,QAqBPD,SAAOC,QA0BPD,SAAOC,QAKPD,SAAOC,QAMPD,SAAOC,QASPD,SAAOC,QAQPD,SAAOC,itBAhHgCF,mDAiBpClF,KAAK5H,QACL4H,KAAKq3C,YAAa,EAClBr3C,KAAK7C,MAAa,4CAILyxB,GACb5uB,KAAKq3C,YAAa,EACd,UAAWzoB,EACX5uB,KAAK7C,MAAQyxB,EAASzxB,MAAM2a,SAGhC9X,KAAK7C,MAAQ,GACTyxB,EAASzyB,UAAUm7C,YACnBt3C,KAAK5H,KAAOw2B,EAASzyB,UAAUm7C,UAC1BzwC,IAAI,SAAA0wC,GAAA,OAAO,EAAAH,EAAAI,yBAAwBD,KACnCn3B,KAAK,SAACq3B,EAAMC,GAAP,OAAgBA,EAAKC,UAAYF,EAAKE,yDAKrC/oB,GAAU,IAAArtB,EAAAvB,KAIzB,GAHI,UAAW4uB,IACX5uB,KAAK7C,MAAQyxB,EAASzxB,MAAM2a,SAE3B8W,EAASjI,YAAd,CAJyB,IAAAixB,EAKYhpB,EAASjI,YAAtCzD,EALiB00B,EAKjB10B,YAAqB20B,EALJD,EAKJzyC,OAET,QAAR0yC,GACA/0C,KAAG3G,YAAY4N,KAAK,SAAC+tC,GACjB,IAAMC,EAAUD,EAAI37C,UAAUm7C,UAAUlrC,KAAK,SAAAmrC,GAAA,OAAQA,EAAIr0B,cAAiBA,IACrE60B,GACLx2C,EAAKy2C,gBAAgBD,KAGzBj1C,KAAGwjB,8BAA8BpD,EAAaljB,KAAKi4C,6BAA6B,IACjE,SAARJ,GACP73C,KAAKk4C,mBAAmBh1B,wDAKJ0L,GACxB,KAAI,UAAWA,GAAf,CAEA,IAAMupB,EAAWvpB,EAAS7J,uBACpBqzB,EAAqBp4C,KAAK5H,KAAKgU,KAAK,SAACisC,GAAD,OAAeA,EAASr0C,KAAQm0C,EAASj1B,cAEnF,GAAKk1B,EAAL,CAEA,IAAME,EAAkBF,EAAmBG,WACrCC,GAAmBL,EAASxtB,UAElCytB,EAAmBG,WAAaC,EAChCJ,EAAmBlmC,WAAaimC,EAASM,aAEpCN,EAAS7sB,iBAGV8sB,EAAmBpuB,OADZwuB,EAAiBF,EACI,iBACrBE,EAAiBF,EACI,mBAEA,eAN5BF,EAAmBpuB,OAAS,sDAWpB+tB,GACZ/3C,KAAK5H,KAAKsgD,SAAQ,EAAAtB,EAAAI,yBAAwBO,+CAI3B70B,GACf,IAAMxqB,EAAIsH,KAAK5H,KAAKugD,UAAU,SAAApB,GAAA,OAAQA,EAAIvzC,KAAQkf,IAClDljB,KAAK5H,KAAK0B,OAAOpB,EAAG,qDAIG,IAAA+O,EAAAzH,KACvB,OAAO,IAAItF,QAAQ,SAACC,GACS,IAArB8M,EAAKrP,KAAKQ,QACV+B,EAAQ8M,EAAKmxC,2DAOrB54C,KAAKiK,gBAAgBjK,KAAKoxC,yBACD,IAArBpxC,KAAK5H,KAAKQ,QACVoH,KAAK44C,0DAMT54C,KAAKqK,uBAEDrK,KAAK2F,WAAWjF,GAAG6yB,YACnBvzB,KAAK64C,aACL/1C,KAAGgjB,UAAU,yBAA0B,+CAM3C,IAAIyyB,EAAa,EACbn6B,EAAa,EACb06B,EAAa,EAOjB,OALA94C,KAAK5H,KAAKuK,QAAQ,SAACo2C,GACfR,IAAgBQ,EAAcR,WAC9Bn6B,IAAgB26B,EAAc36B,OAC9B06B,IAAgBC,EAAcD,YAG9BP,aACAn6B,SACA06B,qDAKe,IAAA5wC,EAAAlI,KACnB,OAAOA,KAAK5H,KAAK0c,OAAO,SAACikC,GACrB,IAAMC,EAAe9wC,EAAKvC,WAAWlF,OAAOmgB,YAAYoL,OACxD,OAAO+sB,EAAcriC,YAAcsiC,qCAMvC,OAAQh5C,KAAKq3C,YAA+C,IAAjCr3C,KAAKi5C,iBAAiBrgD,wCArJpD2R,8FACAA,2DAAwB,8BACxBA,0DAAwB,wGAGH,WACblC,EAAK1C,WAAWnF,OAAOoiB,eAC5Bva,EAAKgvC,YAAa,EAElBv0C,KAAG3G,YAAY4N,KAAK1B,EAAK6wC,kBACzBp2C,KAAGwjB,8BAA8B,KAAMje,EAAK4vC,6BAA6B,GACzEn1C,KAAG4jB,qBAAqBre,EAAK8wC,oBAAoB,giCA8GpD5N,iHAkBAA,mHAQAA,8FApJgBqF,iFCRR4G,0BAA0B,SAACuB,GACpC,IAAMD,EAAWM,WAAWL,EAAc/6B,WACpCI,EAAWg7B,WAAWL,EAAc36B,QAE1C,OACIu5B,WAAcoB,EAAcpd,eAC5B3+B,KAAa+7C,EAAcxqC,cAC3B8qC,QAAaN,EAAc1X,SAAS10B,QAAQ,MAAO,UACnDyR,SACA06B,WACApiC,YAAaqiC,EAAcriC,YAC3B1S,GAAa+0C,EAAc71B,YAC3Bq1B,WAAa,6iBCZrBx+C,EAAA,MACAgL,EAAAhL,EAAA,GAIAiL,EAAAjL,EAAA,OACAA,EAAA,KACA2T,EAAA3T,EAAA,IACAu/C,EAAAv/C,EAAA,KACAw/C,EAAAx/C,EAAA,KACAy/C,EAAAz/C,EAAA,KACAu2B,EAAAv2B,EAAA,SAGAA,EAAA,+oBAEqB82C,KAgBhB1rC,SAAOC,QAKPD,SAAOC,QAQPD,SAAOC,QAMPD,SAAOC,QAQPD,SAAOC,QAcPD,SAAOC,QAOPD,SAAOC,QAOPD,SAAOC,QAWPD,SAAOC,QAOPD,SAAOC,oBA9ER,SAAAyrC,EAAAxvC,GAA4B,IAAdsE,EAActE,EAAdsE,wGAAcnE,CAAAxB,KAAA6wC,GACxB,IADwBlqC,mKAAA7E,CAAA9B,MAAA6wC,EAAA9uC,WAAAhJ,OAAAiJ,eAAA6uC,IAAA33C,KAAA8G,MAEhB2F,aAAYC,0BADc,aAAc,kBADxB,OAAAN,EAAAqB,EAAA,SAAApB,EAAAoB,GAAArB,EAAAqB,EAAA,WAAAnB,EAAAmB,GAAArB,EAAAqB,EAAA,UAAAqhC,EAAArhC,GAAArB,EAAAqB,EAAA,mBAAAshC,EAAAthC,GAAArB,EAAAqB,EAAA,mBAAAuhC,EAAAvhC,GAAArB,EAAAqB,EAAA,aAAAwhC,EAAAxhC,GAAArB,EAAAqB,EAAA,cAAAyhC,EAAAzhC,GAAArB,EAAAqB,EAAA,YAAA8yC,EAAA9yC,GAAArB,EAAAqB,EAAA,iBAAA+yC,EAAA/yC,KAqG5BgzC,YAAc,SAACv0B,EAAgBw0B,GACM,IAA7Bx0B,EAAea,WACnBnjB,KAAG2jB,sBAAHpmB,KAA8B+kB,GAAkBw0B,IAvGxBjzC,EA0G5BkzC,SAAW,SAACj0B,EAAcg0B,GAAf,OACP92C,KAAG2iB,OAAO,gBAAiBm0B,EAAUh0B,IA3Gbjf,EA8G5BmzC,cAAgB,SAAC10B,GACb,OAAIA,EAAe/T,KACRM,UAAWooC,YAAYhwC,KAAK,kBAC/B2b,SAAU,OACVrU,KAAUM,UAAWzT,MAAM8tB,UAG5BlpB,KAAGqiB,YAAYC,IArHEze,qUAXazB,sDAiBzB8Z,GACZhf,KAAKgf,WAAaA,4CAIJC,GACdjf,KAAKif,YAAcA,EACC,IAAhBA,GAAsB+6B,mBAAiBniB,SAAS73B,KAAKgf,cACrDhf,KAAKgf,WAAa,oDAKVi7B,GACZj6C,KAAKi6C,iBAAmBA,EACxBj6C,KAAKk6C,kBAAoBD,yCA0BdlnC,EAAWG,IACjB,EAAAlO,EAAAuB,eAAcvG,KAAK6S,SAASsnC,OAC7Bn6C,KAAK6S,SAASsnC,KAAKC,eAAernC,EAAWG,8CAKlCmnC,EAAgB9rC,IAC1B,EAAAvJ,EAAAuB,eAAcvG,KAAK6S,SAASsnC,OAC7Bn6C,KAAK6S,SAASsnC,KAAK5H,mBAAmB8H,EAAgB9rC,4CAM1DvO,KAAK6S,iDAUI5C,GACTjQ,KAAK2yC,SAAU,EAAA2H,EAAA71C,YAAWzE,KAAK2yC,8HAAhBjsC,IACVuJ,EAAOjT,KAAO,IAAIu9C,mBAAiBtqC,EAAO2iC,cAAe3iC,EAAO4jC,0DAMrE7zC,KAAK2yC,kDAbL,OAAO,EAAAriB,EAAAM,uBAAsB5wB,KAAK6S,gDAkBlC,OAAO,EAAAyd,EAAAM,uBAAsB5wB,KAAK2yC,0CAKvB,IAAApxC,EAAAvB,KACX,OAAQ,eAAAwR,EAAA9P,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAkBH,EAAKoE,WAApBlF,EAAH+Q,EAAG/Q,OAAQC,EAAX8Q,EAAW9Q,GAAX,OACJ85C,iBAAkB95C,EAAGqe,4BACrB07B,UAAkB/5C,EAAGg6C,2BACrBjK,KAAkBhwC,EAAOk6C,iBACzBtC,SAAkB33C,EAAGme,wBAA0B,SAAW,OAC1DR,MAAkB3d,EAAG4d,gBAAkB,OAAS,SAL5C,sCArGX/T,4EACAA,2DAAsBA,aAAWxL,yCACjCwL,2DAAsBA,aAAWxL,kDAEjCwL,2DAA8B,yCAC9BA,2DAA8B,mCAE9BA,0DAAwB,6CACxBA,2DAAyB,ibA2Bd,WACR9C,EAAKwK,OAAS,KACdxK,EAAKgqC,iBACLhqC,EAAKiqC,iHAKQ,SAACnjC,EAAe0E,EAAcE,EAAaynC,EAAsB3qC,GAC9E,IAAI,EAAAjL,EAAAuB,eAAc2B,EAAK2K,SAASsnC,MAAO,CACnC,IAAIU,MACA,EAAAvqB,EAAAC,oBAAmBhiB,KACnBssC,EAAe,IAAIC,oBAAkB7nC,EAAcE,EAAaynC,EAAsB3qC,IAG1F/H,EAAK2K,UACDsnC,KAAMU,0XAwBjBtP,4UAkBAA,gHAMAA,8FApGgBsF,6XChBrB9rC,EAAAhL,EAAA,GAIAu2B,EAAAv2B,EAAA,KAKAghD,EAAAhhD,EAAA,0lBAEa+gD,qBAwCR31C,SAAOC,QAOPD,SAAOC,QAKPD,SAAOC,mBAtCR,SAAA01C,EACI7nC,EACAE,GAGF,IAFEynC,EAEFl5C,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAFyB,KAEzBL,EAAAK,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MADI4mB,EACJjnB,EADIinB,MAAO+pB,EACXhxC,EADWgxC,WAAYC,EACvBjxC,EADuBixC,2GACvB9wC,CAAAxB,KAAA86C,GAAAx1C,EAAAtF,KAAA,QAAAuF,EAAAvF,MAAAsF,EAAAtF,KAAA,YAAAwF,EAAAxF,MAAAsF,EAAAtF,KAAA,QAAAgoC,EAAAhoC,MAAAsF,EAAAtF,KAAA,OAAAioC,EAAAjoC,MAAAsF,EAAAtF,KAAA,MAAAkoC,EAAAloC,MAAAsF,EAAAtF,KAAA,WAAAmoC,EAAAnoC,MAAAsF,EAAAtF,KAAA,YAAAooC,EAAApoC,MAAAsF,EAAAtF,KAAA,iBAAAy5C,EAAAz5C,MACEA,KAAKsoB,MAAYA,GAAcZ,iBAAeC,MAC9C3nB,KAAKg7C,UAAY3I,GAAcxqB,sBAAoBC,OACnD9nB,KAAKka,SAAYla,KAAKi7C,gBAGtBj7C,KAAK46C,qBAAuD,mBAAzBA,EAAsCA,EAAqB/7C,KAAKmB,MAAQ,aAE3GA,KAAKk7C,MAAQjoC,GAAgB,EACzBE,IACAnT,KAAKm7C,KAAOhoC,GAGhBnT,KAAKo7C,MAAQp7C,KAAKq7C,cAElB,IAAMC,IAAkBroC,EACxBjT,KAAKu7C,UAAkBD,GAAe,QAAQ/uC,KAAK0G,GACnDjT,KAAKw7C,WAAkBlJ,GAAiBgJ,EACxCt7C,KAAKy7C,gBAAkBH,mDAIZJ,EAAMC,GACjBn7C,KAAKu7C,SAAiB,QAAQhvC,KAAK2uC,GACnCl7C,KAAKk7C,MAAQA,QAAQ59C,EACrB0C,KAAKm7C,KAAQA,QAAQ79C,6CAIN+8C,EAAgB9rC,GAC/BvO,KAAKo7C,MAASf,GAAkBvzB,kBAAgBvY,IAAmBvO,KAAKq7C,yDAI7C,IAAbH,EAAa1pC,EAAb0pC,KAAMC,EAAO3pC,EAAP2pC,IACpBn7C,KAAKo6C,eAAec,EAAMC,GAC1Bn7C,KAAK46C,qBAALrhD,MAAAyG,2HAAA+O,EAA6B,EAAAgsC,EAAAvqB,kBAAiBxwB,KAAKu7C,SAAUL,EAAMC,2CAKnE,YAA6B,IAAdn7C,KAAKk7C,YAA6C,IAAbl7C,KAAKm7C,2CAKzD,OAAO5zB,iBAAevnB,KAAKoT,iDAhE9B7I,6EACAA,yEACAA,wEAEAA,uEACAA,4EAEAA,6EACAA,kFACAA,maAgDAghC,qHAKAA,4MC1EL,IAAAxmC,EAAAhL,EAAA,wlBAEawgD,yBAIT,SAAAA,EAAY3H,EAAeiB,gGAAgBryC,CAAAxB,KAAAu6C,GAAAj1C,EAAAtF,KAAA,gBAAAuF,EAAAvF,MAAAsF,EAAAtF,KAAA,iBAAAwF,EAAAxF,MACvCA,KAAK4yC,cAAiBA,EACtB5yC,KAAK6zC,eAAiBA,+BALzBtpC,2DAA4BA,aAAWxL,gDACvCwL,2DAA4BA,aAAWxL,gGCJ/Bi7C,oBACT,WACA,OACA,eACA,SACA,yiBCLJj1C,EAAAhL,EAAA,OAIAA,EAAA,KACA2T,EAAA3T,EAAA,IACAq9C,EAAAr9C,EAAA,SACAA,EAAA,isCAEA,IAEqB+2C,KAkBhB3rC,SAAOC,QAOPD,SAAOC,QAMPD,SAAOC,QAiBPD,SAAOC,QAiBPD,SAAOC,QASPD,SAAOC,QAUPD,SAAOC,QASPD,SAAOC,QAMPD,SAAOC,ovBAnGgCF,mDAoBpClF,KAAK5H,QACL4H,KAAK07C,gBAAiB,EACtB17C,KAAKq3C,YAAiB,4CAKtBr3C,KAAK27C,UAAY,GACjB37C,KAAK47C,QAAY,kLAKb57C,KAAK07C,iBAAkB17C,KAAKq3C,mEAEhCr3C,KAAKq3C,YAAa,WAEKv0C,KAAGxG,UAvCf,IAyCP0D,KAAK5H,KAAKQ,OAFSyH,KAIZL,KAAK27C,YAAeA,WAAW,EAAAvS,EAAA3kC,SAAOzE,KAAK27C,WAAW3vB,QACtDhsB,KAAK47C,UAAaA,SAAS,EAAAxS,EAAA3kC,SAAOzE,KAAK47C,SAASrlC,IAAI,EAAG,KAAKe,SAAS,EAAG,KAAK0U,iBALlF4C,SAQN5uB,KAAK67C,iBAAiBjtB,8IAITA,GAAU,IAAArtB,EAAAvB,KACvB,GAAI,UAAW4uB,EACX5uB,KAAK7C,MAAQyxB,EAASzxB,MAAM2a,YADhC,CAKA,IAAMgkC,EAAyBltB,EAAStyB,UAAUy/C,aAC7Cl1C,IAAI,SAAA8f,GAAA,OAAe,EAAAywB,EAAA4E,4BAA2Br1B,EAC3CplB,EAAKoE,WAAWnF,OAAOoK,YAG/B5K,KAAK5H,QAAL6J,OAAA8M,EAA0B/O,KAAK5H,MAA/B2W,EAAwC+sC,IACxC97C,KAAK07C,eAAiBI,EAAuBljD,OA/DlC,IAgEXoH,KAAKq3C,YAAiB,4CAIT/8C,GACTA,EAAE4C,OAAOoB,QAAU0B,KAAK1F,EAAE4C,OAAOW,QACjCmC,KAAK1F,EAAE4C,OAAOW,MAAQvD,EAAE4C,OAAOoB,MAC/B0B,KAAK64C,aACL74C,KAAKi8C,uDAKAv/C,GAAO,IAAAw/C,EACkCx/C,EAAMQ,OAAhD03B,EADQsnB,EACRtnB,UADQsnB,EACGC,cAC+CvnB,EAFlDsnB,EACiBznB,cAGZ,KACjBz0B,KAAKi8C,mEAKa,IAAAx0C,EAAAzH,KACtB,OAAO,IAAItF,QAAQ,SAACC,GAGhB,OAFA8M,EAAKoxC,aACLpxC,EAAK20C,kBACEzhD,EAAQ8M,EAAKw0C,yLAMxBj8C,KAAKiK,gBAAgBjK,KAAKoxC,kCACpBpxC,KAAKi8C,uJAKXj8C,KAAKqK,uBACLrK,KAAK64C,aACL74C,KAAKo8C,mDA7FL,OAAQp8C,KAAKq3C,YAAmC,IAArBr3C,KAAK5H,KAAKQ,iDAKrC,SAAUoH,KAAK27C,YAAa37C,KAAK47C,0CAdpCrxC,8FACAA,2DAA4B,uCAC5BA,2DAA4B,kCAC5BA,0DAA4B,iCAC5BA,0DAA4B,+BAC5BA,0DAA4B,gCAE5BghC,oHAKAA,6jCAbgBuF,qHCXrB,IAAAtmC,EAAAzQ,EAAA,IACA0T,EAAA1T,EAAA,GACAwyC,EAAAxyC,EAAA,KACA4T,EAAA5T,EAAA,IAEaiiD,6BAA6B,SAACr1B,EAAa/b,GACpD,IAAMgrC,GAAa,EAAAjoC,EAAA+D,UAASiV,EAAY01B,kBAClCC,EAAa1G,EAAW5kC,OAAO,cAC/BqlC,EAAgBT,EAAW5kC,OAAO,YAAlC,OACAoN,EAAag7B,WAAWzyB,EAAYvI,QACpC1T,EAAa0uC,WAAWzyB,EAAYjc,QACpCwb,EAAakzB,WAAWzyB,EAAY41B,eAG1C,OACIp3C,QAAS,EAAAsI,EAAA2C,WAAS,EAAAm8B,EAAAiQ,aAAY71B,EAAY81B,cAC1CrrC,KAAYkrC,EAAZ,KAAyBjG,EACzBqG,MAAS/1B,EAAYgV,eACrBvd,OAASoC,MAAMpC,GAAW,KAAM,EAAA5T,EAAAa,aAAYT,EAAUwT,GAN1B,GAO5B1T,OAAS8V,MAAM9V,GAAW,KAAM,EAAAF,EAAAa,aAAYT,EAAUF,GAP1B,GAQ5Bwb,QAAS1F,MAAM0F,GAAW,KAAM,EAAA1b,EAAAa,aAAYT,EAAUsb,GAR1B,GAS5By2B,KAASh2B,EAAY0a,SAAS10B,QAAQ,MAAO,UAC7C3I,GAAS2iB,EAAYzD,YACrBpW,OAAS6Z,EAAY7Z,unBCvB7B/S,EAAA,MACAgL,GAAAhL,EAAA,SAKAA,EAAA,KACA0T,GAAA1T,EAAA,GACAiL,GAAAjL,EAAA,GAIAyQ,GAAAzQ,EAAA,IAGA2T,GAAA3T,EAAA,UACAA,EAAA,YACAA,EAAA,MACA6iD,GAAA7iD,EAAA,KACYqE,2JAAZrE,EAAA,MACA8iD,GAAA9iD,EAAA,WAGAA,EAAA,MACAy/C,GAAAz/C,EAAA,WACAA,EAAA,KACA8T,GAAA9T,EAAA,KACA+iD,GAAA/iD,EAAA,KACAgjD,GAAAhjD,EAAA,KAIAijD,GAAAjjD,EAAA,WACAA,EAAA,gqCAEqBg3C,MAiEhB5rC,UAAOC,QA+CPD,UAAOC,QAMPD,UAAOC,QAyCPD,UAAOC,QA0BPD,UAAOC,QAKPD,UAAOC,QAqBPD,UAAOC,QAWPD,UAAOC,QAuFPD,UAAOC,QAiCPD,UAAOC,QAkBPD,UAAOC,QAKPD,UAAOC,QAgBPD,UAAOC,QAyBPD,UAAOC,QA4BPD,UAAOC,QASPD,UAAOC,QAWPD,UAAOC,oBA/XR,SAAA2rC,EAAA1vC,GAA4B,IAAdsE,EAActE,EAAdsE,wGAAcnE,CAAAxB,KAAA+wC,GACxBkM,WAAUC,iBAAiBrsB,mCADH,IAAAlqB,mKAAA7E,CAAA9B,MAAA+wC,EAAAhvC,WAAAhJ,OAAAiJ,eAAA+uC,IAAA73C,KAAA8G,MAIpB2F,aACAE,2BAA4BgrB,kCAC5B/qB,kBAA4B,EAAAq3C,GAAA14C,cANR,OAAAa,GAAAqB,EAAA,6BAAApB,EAAAoB,GAAArB,GAAAqB,EAAA,sBAAAnB,EAAAmB,GAAArB,GAAAqB,EAAA,mBAAAqhC,EAAArhC,GAAArB,GAAAqB,EAAA,iBAAAshC,EAAAthC,GAAArB,GAAAqB,EAAA,mBAAAuhC,EAAAvhC,GAAArB,GAAAqB,EAAA,SAAAwhC,EAAAxhC,GAAArB,GAAAqB,EAAA,uBAAAyhC,EAAAzhC,GAAArB,GAAAqB,EAAA,sBAAA8yC,EAAA9yC,GAAArB,GAAAqB,EAAA,gBAAA+yC,EAAA/yC,GAAArB,GAAAqB,EAAA,sBAAAy2C,EAAAz2C,GAAArB,GAAAqB,EAAA,kBAAA02C,EAAA12C,GAAArB,GAAAqB,EAAA,cAAA22C,EAAA32C,GAAArB,GAAAqB,EAAA,SAAA42C,EAAA52C,GAAArB,GAAAqB,EAAA,QAAA62C,EAAA72C,GAAArB,GAAAqB,EAAA,aAAA82C,EAAA92C,GAAArB,GAAAqB,EAAA,WAAA+2C,EAAA/2C,GAAArB,GAAAqB,EAAA,gBAAAg3C,EAAAh3C,GAAArB,GAAAqB,EAAA,sBAAAi3C,EAAAj3C,GAAArB,GAAAqB,EAAA,mBAAAk3C,EAAAl3C,GAAArB,GAAAqB,EAAA,cAAAm3C,EAAAn3C,GAAArB,GAAAqB,EAAA,cAAAo3C,EAAAp3C,GAAArB,GAAAqB,EAAA,cAAAq3C,EAAAr3C,GAAArB,GAAAqB,EAAA,YAAAs3C,EAAAt3C,GAAArB,GAAAqB,EAAA,YAAAu3C,EAAAv3C,GAAArB,GAAAqB,EAAA,gBAAAw3C,EAAAx3C,GAAArB,GAAAqB,EAAA,aAAAy3C,EAAAz3C,GAAArB,GAAAqB,EAAA,mBAAA03C,EAAA13C,GAAArB,GAAAqB,EAAA,aAAA23C,EAAA33C,GAAArB,GAAAqB,EAAA,WAAA43C,EAAA53C,GAAArB,GAAAqB,EAAA,qBAAA63C,EAAA73C,GAAArB,GAAAqB,EAAA,aAAA83C,EAAA93C,GAAArB,GAAAqB,EAAA,gBAAA+3C,EAAA/3C,GAAArB,GAAAqB,EAAA,gBAAAg4C,EAAAh4C,KAV5Bi4C,SAAW,EAUiBj4C,EAR5Bk4C,mBAAoB,EAAAC,GAAAr6C,SAASkC,EAAKuwB,gBAAiB,KAQvBvwB,EAP5Bo4C,qBAO4Bz5C,GAAAqB,EAAA,OAAAq4C,GAAAr4C,GASxB5N,OAAOiF,eAAP2I,EAEI,2BAEI1I,YAAY,EACZK,OAAY,EACZyH,UAAY,KAIpB,EAAAhB,GAAA6B,UACI,kBAAOD,EAAK+I,qBAAsB/I,EAAKgJ,iBAAkBhJ,EAAK2I,cAAe3I,EAAKiM,cAClF,WACIjM,EAAKs4C,mCAGb,EAAAl6C,GAAA6B,UACI,kBACID,EAAKsL,OACLtL,EAAK4H,cACL5H,EAAK2I,cACL3I,EAAKiM,YACLjM,EAAKwI,oBACLxI,EAAKiR,sBAET,WACIjR,EAAKu4C,sBAEPC,MAAO,MArCWx4C,qUAvEQzB,kDAkHhClF,KAAKiS,OAAS,KACdnP,MAAGgjB,UAAU,2MAKTs5B,EAAsBp/C,KAAKq/C,oBAC/Br/C,KAAKxD,YAAqBwD,KAAK2F,WAAWxM,QAAQqD,qBAClBsG,MAAGygB,2BAA7BG,UACcA,gBAA2D,IAAzCA,EAAeA,eAAe9qB,QAChEoH,KAAK2F,WAAWlF,OAAOmmC,WAAU,EAAAn5B,GAAA2C,UAAS,2CAIlBgvC,EAAoBntC,SAC3CyR,EAAeA,eAAetX,KAAK,SAAApS,GAAA,OAAKA,EAAEiY,SAAWmtC,EAAoBntC,WAI1EjS,KAAK2F,WAAWjF,GAAG6pC,iBACfzyB,SAAS,EAAArK,GAAA2C,UAAS,4EAClBpT,KAAS,SAEbigD,WAAUqC,eAAgBrtC,QAAU,EAAA+qC,GAAAuC,mBAAkB77B,EAAeA,kBACrE07B,EAAsBp/C,KAAKq/C,qBAG1Br/C,KAAKiS,yCACAjS,KAAKw/C,sBAALn/C,IACF4R,QAAQ,EAAA+qC,GAAAuC,mBAAkB77B,EAAeA,iBACtC07B,YAIPp/C,KAAKiS,QACLjE,WAAa+F,yBAAyBqrC,EAAoBntC,QAAUjS,KAAKiS,QAAQlI,MAAK,EAAAhF,GAAAI,QAAAoE,GAAAC,mBAAAC,KAAO,SAAAC,IAAA,OAAAF,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACnFvI,EAAKi+C,sBAALn/C,MACC2N,WAAaoH,kBAAb7T,GACAyM,WAAa2J,wBACbynC,IAJkF,wBAAAx1C,EAAAQ,SAAAV,EAAAnI,4IAW5FjH,GAAG,IAAAmlD,EACkBnlD,EAAE4C,OAApBW,EADA4hD,EACA5hD,KAAMqb,EADNumC,EACMvmC,QACR5a,EAAUhE,EAAE4C,OAAZoB,MAEN,GAAa,aAATT,EACAmC,KAAK2F,WAAWnF,OAAO0oC,eAAe5qC,QACnC,GAAc,aAAVA,EACH,gCAAgCiO,KAAKvM,KAAKuO,iBACtC2K,GACAlZ,KAAK0/C,iBAAmB,EACxBphD,EAAQ,oBAER0B,KAAK0/C,iBAAmB,EACxBphD,EAAQ,mBAGb,GAAc,gBAAVT,EACPmC,KAAK0W,YAAc,UAChB,KAAM7Y,KAAQmC,MACjB,MAAM,IAAI5C,MAAJ,qBAA+BS,GAGzCmC,KAAKw/C,sBAAL94C,MAA8B7I,EAAOS,IAAS,2CAIlCqhD,EAASpxC,GACrBvO,KAAKxD,YAAY+1C,mBAAmBoN,EAASpxC,sCAItCqV,EAAaC,EAAO7mB,GAAM,IAAAyK,EAAAzH,KAC7B4jB,IACA,EAAAg5B,GAAAgD,iBAAgBh8B,EAAaC,GAAO9Z,MAAK,EAAAhF,GAAAI,QAAO,SAACypB,GAC7C,GAAInnB,EAAKquB,cAAc94B,GAAMgH,KAAO4f,EAChC,MAAM,IAAIxmB,MAAM,+BAEpB,GAAIwxB,EAASjL,IAAK,CACd,IAAM/F,QACCnW,EAAKs3C,kBAAkB/hD,GACvByK,EAAKquB,cAAc94B,IACtBghB,UAAW4Q,EAASjL,IAAI3F,YAE5BP,WAAIE,iBAAiBC,EAAenW,EAAK9B,YAE7C7C,MAAGgjB,UAAU,YACbre,EAAKsuB,cAAgBnH,6CAMjBt0B,GACZ0F,KAAKk3B,kBACL58B,EAAEulD,qDASMC,GAAW,IAAA53C,EAAAlI,KAiCnB,OAhCAjH,OAAO0J,MAAK,EAAAuC,GAAAoP,aAAY0rC,IAAYn9C,QAAQ,SAAC/D,GAC7B,eAARA,IAAyB,mBAAoB,oBAAqB,WAAY,eAAe+P,QAAQ/P,IAAQ,IAC7GuI,KAAKC,UAAUc,EAAKtJ,MAAUuI,KAAKC,UAAU04C,EAAUlhD,WAChDkhD,EAAUlhD,IAEL,WAARA,IACAsJ,EAAKqtB,qBAAsB,EAC3BrtB,EAAKutB,kBAAsB,GAG3BqqB,EAAUjwC,YAA8C,iBAAzBiwC,EAAUjwC,aACzCiwC,EAAUjwC,WAAa4Q,SAASq/B,EAAUjwC,cAKO,IAAjDghB,kCAA+BliB,QAAQ/P,IACvCsJ,EAAK63C,4BAEL9C,WAAUqC,cAAV54C,MAA2B9H,EAAMkhD,EAAUlhD,KAG/CsJ,EAAKtJ,GAAOkhD,EAAUlhD,GAIV,cAARA,GAAuBkhD,EAAU/sC,YACjC7K,EAAK6K,UAAY+sC,EAAU/sC,eAKhC+sC,0GAGiBE,4DAAqBC,4IAGzCA,GACA,eAAe1zC,KAAKxT,OAAO0J,KAAKu9C,MAChC,EAAAx1C,GAAAolC,kBAAiBoQ,EAAep1C,aAAc,EAAAJ,GAAAolC,kBAAiB5vC,KAAK4K,YAEpEo1C,EAAet1C,OAASs1C,EAAet1C,SAAU,EAAAF,GAAA01C,cAAaF,EAAep1C,WAG3Ek1C,EAAY9/C,KAAKqkC,aAAY,EAAAr/B,GAAAoP,aAAY4rC,KAE3CC,IAAsB,mCAAmC1zC,KAAKxT,OAAO0J,KAAKq9C,0BACtE,WAAYA,mCACN1hD,GAAO+hD,oBAAoBL,EAAU7tC,sBAG/CjS,KAAKqkC,aACD9O,qBAAqB,EACrBO,mBAGC91B,KAAKxD,YAAYy9C,mBACS,cAAe6F,GAAa,cAAeA,EAElE9/C,KAAKxD,YAAY49C,eAAep6C,KAAK+S,UAAW/S,KAAKkT,WAErDlT,KAAKxD,YAAYi1C,6BAIS,EAAAqL,GAAAsD,oBAAmBpgD,KAAM8/C,WAArDz5C,SACA+4C,EAAsBp/C,KAAKq/C,oBACjCh5C,EAASovB,kBAAmB,EAE5Bz1B,KAAKqkC,YAALhkC,MACOgG,EACCrG,KAAKqgD,2BAA+BjB,IAG5Cp/C,KAAKqgD,yBAA0B,EAE3B,oBAAoB9zC,KAAKxT,OAAO0J,KAAKq9C,KACrC9/C,KAAKsgD,wBAGTtgD,KAAK6+C,iKAKK,IAAAx2C,EAAArI,KACRugD,GAAW,EAAAxD,GAAAyD,wBAAuBxgD,MAExC,GAAIjH,OAAOmyC,OAAOlrC,KAAKiI,mBAAmBkZ,KAAK,SAAA7mB,GAAA,OAAKA,EAAE1B,SAIlD,OAHAoH,KAAK81B,iBACL91B,KAAK+1B,sBACLjzB,MAAGgjB,UAAU,YAIjB,KAAK,EAAA9gB,GAAAuB,eAAcg6C,GAAW,CAC1B,IAAME,GAA0C,EAAA1D,GAAA2D,2BAA0BH,GAE1EtD,WAAUC,oBAAVj7C,OAAA8M,GAEW0xC,GAFX1xC,IAGW,EAAA8tC,GAAA/rB,oCAAmC9wB,SAI9CA,KAAK++C,kBAAoBwB,EACzBvgD,KAAK81B,iBACL91B,KAAK+1B,iBAELjzB,MAAGgjB,UAAU,YAAY/b,KAAK,WAC1BhR,OAAO0J,KAAK4F,EAAK02C,mBAAmBp8C,QAAQ,SAAC3F,GACzC8F,MAAGqjB,kBAAkB9d,EAAK02C,kBAAkB/hD,GAAOqL,EAAKs4C,oEAOrD/xB,GACf,IAAMrgB,EAA0BqgB,EAAStc,SAAS/D,cAC5CqyC,GAA0B,EAAA57C,GAAAoK,kBAAiBpP,KAAK81B,cAAevnB,OAC/DsyC,GAA0B,EAAA77C,GAAAoK,kBAAiBwxC,EAAoB,0BAErE5gD,KAAK81B,cAALz1B,MACOL,KAAK81B,cADZpvB,MAEK6H,GAAgB,EAAAwuC,GAAA+D,iBAAgB9gD,KAAM4uB,EAAUiyB,KAGhD7gD,KAAKxD,YAAYy9C,mBAClB,EAAAT,GAAAuH,iBAAgB/gD,KAAKxD,YAAaoyB,EAAU5uB,KAAK46C,sBAGrD56C,KAAKu1B,qBAAsB,+CAIVxiB,EAAWG,GAC5BlT,KAAKw/C,uBAAwBzsC,YAAWG,cAAa,+CAOrD,IAAM8tC,EAAe/D,WAAUoC,kBAC3Br/C,KACA6wB,kCACA7wB,KAAK+/C,4BAIH9vC,KAEN,SADAhO,OAAA8M,GAAIiyC,IAAcr+C,QAAQ,SAAAgnC,GAAA,OAAS15B,EAAO05B,EAAM,IAAMA,EAAM,KACrD15B,0DAKP,GAAyB,YAArBjQ,KAAK4S,YAAT,CAKA,IAAM0J,EAAStc,KAAK8F,iBAAiBqY,SAAShW,MAAMwwC,UAAU,SAAAroC,GAAA,MAAoB,WAAZA,EAAK,KACrEtU,EAASgE,KAAK2P,iBAAiB3P,KAAK0P,wBAAyB,EAEnE,GAAI1T,EAAQ,CACR,IAAMilD,GACFlhC,KAAK,EAAAlS,GAAAkT,uBAAsB/kB,EAAO+jB,IAAK/f,KAAKsP,eAC5C2Q,KAAK,EAAApS,GAAAkT,uBAAsB/kB,EAAOikB,IAAKjgB,KAAKsP,gBAG5CgN,GAAS,EACTtc,KAAK8F,iBAAiBqY,SAAShW,MAAMmU,GAAO,GAAK2kC,EAEjDjhD,KAAK8F,iBAAiBqY,SAAShW,MAAMrP,MAAM,SAAUmoD,IAEzDjhD,KAAKwI,iBAAiB,WAAYxI,KAAKme,gBAlBvCne,KAAKiI,kBAAkBkW,wDAuBX,IAAAzV,EAAA1I,KACVkhD,EAAkB,WAEpB,OAD0B,EAAAl8C,GAAAoK,kBAAiB1G,EAAKkP,oBAAqB,WAC5CuJ,KAAK,SAAArlB,GAAA,MAA+B,oBAAnBA,EAASwC,SAcjD6iD,EAZ6B,SAACC,EAAoB9xC,EAAeJ,GACnE,IAGMmyC,EAHgBtoD,OAAO0J,KAAK2+C,OAC7B56C,OAAO,SAAC5H,EAAKqW,GAAN,SAAAhT,OAAA8M,GAAoBnQ,GAApBmQ,GAA4BqyC,EAAmBnsC,GAAMpO,IAAI,SAAA/K,GAAA,OAAYA,EAASwC,eAGrFuI,IAAI,SAAAoO,GAAA,OAAAvO,MAAYuO,GAAO,EAAAjQ,GAAAoK,kBAAiBpB,WAAa6H,wBAAyBZ,EAAM,SAAU,YAAa,gBAAiB/F,OAGjI,QAAOgyC,KAAoBG,EACtBvsC,OAAO,SAAAhZ,GAAA,OAAYA,EAASwlD,kBAAiB,GAAGA,gBAChDngC,KAAK,SAAAhD,GAAA,OAAYA,EAAS7f,QAAUgR,IAERiyC,CAA2BvhD,KAAK4X,oBACjE5X,KAAKsP,cAAetP,KAAKkP,qBAEzB,gCAAgC3C,KAAKvM,KAAKuO,iBAAmB4yC,GAAqD,YAArBnhD,KAAK4S,cAA8BsuC,IAChIlhD,KAAKwhD,gBAAiB,EAEtBxhD,KAAKwhD,gBAAiB,oDAKJ,IAAAt4C,EAAAlJ,KACtB,OAAO,IAAItF,QAAJ,eAAA+mD,EAAAl4C,GAAAC,mBAAAC,KAAY,SAAAi4C,EAAO/mD,GAAP,OAAA6O,mBAAAG,KAAA,SAAAg4C,GAAA,cAAAA,EAAA93C,KAAA83C,EAAA73C,MAAA,cAAA63C,EAAA73C,KAAA,EACTZ,EAAK04C,UADI,cAAAD,EAAA73C,KAAA,EAETZ,EAAK24C,oBAFI,cAAAF,EAAAxvC,OAAA,SAGRxX,EAAQuO,EAAK21C,sBAHL,wBAAA8C,EAAAv3C,SAAAs3C,EAAAx4C,MAAZ,gBAAA44C,GAAA,OAAAL,EAAAloD,MAAAyG,KAAA0B,YAAA,8LASD1B,KAAK6hD,2BACX7hD,KAAK6+C,qBACL,EAAA95C,GAAAg9C,aAAY,WACR34C,EAAK22C,4BAA6B,IAEtC//C,KAAKq/C,oBACLr/C,KAAKiK,gBAAgBjK,KAAKoxC,+JAK1BpxC,KAAKqK,uBACLvH,MAAGgjB,UAAU,YACb9lB,KAAK+/C,4BAA6B,0DAxcrCx1C,4DAAwC,6CACxCA,4DAAwC,0CACxCA,4DAAwC,wCACxCA,4DAAwC,0CACxCA,4DAAwC,gCAGxCA,0FAGAA,2DAAkC,8CAClCA,2DAAkC,wCAClCA,2DAAkC,8CAClCA,qGACAA,iGACAA,4FAGAA,4DAA6B,gCAC7BA,2DAA6B,qCAC7BA,8FAGAA,4DAAiC,uCACjCA,2DAAiC,8CACjCA,sGACAA,iGACAA,2DAAiC,sCACjCA,2DAAiC,sCACjCA,2DAAiC,4CAGjCA,2DAA2B,oCAC3BA,2DAA2B,wCAC3BA,4DAA2B,oCAG3BA,4DAA8BuF,OAAO,2CACrCvF,gGACAA,4DAA8B,qCAC9BA,wGASAA,gGAGAA,4DAAwB,uCAGxBA,mGACAA,iLAQM,SAAAy3C,IAAA,OAAAx4C,mBAAAG,KAAA,SAAAs4C,GAAA,cAAAA,EAAAp4C,KAAAo4C,EAAAn4C,MAAA,cAAAm4C,EAAAn4C,KAAA,EAEG0Z,WAAa+iB,KAAK,kBAFrB,wBAAA0b,EAAA73C,SAAA43C,EAAAE,kyDAlEUnR,yiBCnCrB/rC,EAAAjL,EAAA,+HAEqBkjD,sLAQK7V,GAClB,IAAM+a,EAAgB/a,EAAM,IAAIgb,IAAIhb,GAAKib,OAAShjD,OAAOmN,SAAS61C,OAGlE,OAFqB,IAAIC,gBAAgBH,EAAa5iD,MAAM,0CAa3CyjB,GAAoB,IAAZokB,EAAY1lC,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAN,KACzB6gD,EAAanb,EAAM,IAAIgb,IAAIhb,GAAO/nC,OAAOmN,SACzCg2C,EAAe,IAAIF,gBAAgBC,EAAWF,OAAO9iD,MAAM,IAqBjE,OApBAxG,OAAO0J,KAAKugB,GAAQrgB,QAAQ,SAAC9E,GACzB2kD,EAAaC,OAAO5kD,GAEpB,IAAMS,EAAQ0kB,EAAOnlB,GAEjBS,GAA0B,iBAAjB,IAAOA,EAAP,YAAAyW,EAAOzW,KAAgC,KAAVA,GACtCkkD,EAAaE,OAAO7kD,EAAMmlB,EAAOnlB,MAIrC2kD,EAAa5pD,QACb4pD,EAAapiC,OAGZgnB,EAGDmb,EAAWF,OAASG,EAAalvC,WAFjCjU,OAAOgd,QAAQsmC,aAAa,KAAM,KAAlC,IAA4CC,mBAAmBJ,EAAalvC,aAKzEivC,4CAWcniD,EAAOywB,GAA0D,IAA1BgyB,EAA0BnhD,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,IAAAA,UAAA,GAChFs/C,EAAe/D,EAAU6F,iBAiB/B,OAfK,EAAA99C,EAAAuB,eAAcnG,IAGfywB,EACK/b,OAAO,SAAAtZ,GAAA,OAAMwlD,EAAa9iD,IAAI1C,KAAImH,QAAQ,SAAA/D,GACnCwB,EAAMxB,KACFikD,GACA5F,EAAUqC,oIAAV54C,IAA2B9H,EAAMwB,EAAMxB,KAG3CoiD,EAAahyB,IAAIpwB,EAAKwB,EAAMxB,OAKrCoiD,6CAQwB,IAAXv+C,EAAWf,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MACzBs/C,EAAe/D,EAAU6F,oBAE/B7gD,OAAA8M,EAAIiyC,IAAcr+C,QAAQ,SAAArE,GAAA,OAASmE,EAAKkM,QAAQrQ,EAAM,MAAQ,GAAK0iD,EAAayB,OAAOnkD,EAAM,MAE7F,IAAM6jD,KAAelgD,OAAA8M,EAAIiyC,IAAcpoD,OAAlB,IAA+BooD,EAAa1tC,WAAe,GAEhFjU,OAAOgd,QAAQsmC,aAAa,KAAM,KAAMC,mBAAmBT,uBA1F9ClF,0GCFrB,IAAAvvC,EAAA3T,EAAA,IAEa6lD,6BAAA,IAAAv+C,2RAAAkI,CAAAC,mBAAAC,KAAkB,SAAAC,EAAMka,EAAaC,GAAnB,OAAAra,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAuI,OAAA,SAA6BrP,KAAG6gB,IAAIC,EAAaC,IAAjD,wBAAAja,EAAAQ,SAAAV,OAAApM,MAAlB,gBAAAylD,EAAAtwC,GAAA,OAAApR,EAAA9H,MAAAyG,KAAA0B,YAAAk+C,+GCFb,wDAAA7lD,EAAA,KAEaomD,iCAAA,IAAA9+C,2RAAAkI,CAAAC,mBAAAC,KAAsB,SAAAC,EAAMuI,GAAN,OAAAzI,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACzBkE,UAAa+F,yBAAyB9B,GADb,wBAAArI,EAAAQ,SAAAV,OAAApM,MAAtB,gBAAAylD,GAAA,OAAA1hD,EAAA9H,MAAAyG,KAAA0B,YAAAy+C,kFCFAvrC,sBAAsB,SAAC9Y,GAAsD,IAA5C+W,EAA4CnR,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAA/B2R,MAAOvX,EAAS+W,UACvE,GAAK/W,EAAS+W,SAAd,CAIA,IAAM4C,KAMN,OAJC,UAAW,cAAe,gBAAgB9S,QAAQ,SAACiqC,GAC5CA,KAAS9wC,IAAU2Z,EAAYm3B,GAAS9wC,EAAS8wC,MAGlD7zC,OAAO0N,OAAOoM,4HAAdnM,IACF5K,EAAS8W,YAAc6C,uKCZhC,IAAAhI,EAAA1T,EAAA,2HAEa4Z,oBAAoB,kBAC7ByK,QAAY,EAAA3Q,EAAA2C,UAAS,UACrB+lB,OAAY,EAAA1oB,EAAA2C,UAAS,SACrB4yC,YAAY,EAAAv1C,EAAA2C,UAAS,gBAOZ+D,yBAAyB,kBAE9B8uC,WAAmBzuC,OAAO,EAAA/G,EAAA2C,UAAS,aAA+B9B,aAAc,OAAQ,OAAsBkF,OAAQ,SAAU,SAAUxE,YAAa,cAAeoE,cAAe,GACrLkuC,iBAAmB9sC,OAAO,EAAA/G,EAAA2C,UAAS,aAA+B9B,aAAc,QAAS,QAAqBkF,OAAQ,SAAU,SAAUxE,YAAa,cAAeoE,cAAe,GACrL8vC,UAAmB1uC,OAAO,EAAA/G,EAAA2C,UAAS,gBAA+B9B,aAAc,OAAQ,OAAsBkF,OAAQ,SAAU,SAAUxE,YAAa,WAAeoE,cAAe,GACrL+vC,OAAmB3uC,OAAO,EAAA/G,EAAA2C,UAAS,kBAA+B9B,aAAc,WAAY,WAAkBkF,OAAQ,SAAU,SAAUxE,YAAa,YACvJya,KAAmBjV,OAAO,EAAA/G,EAAA2C,UAAS,6BAA+B9B,aAAc,aAAc,eAAgBkF,OAAQ,SAAU,SAAUxE,YAAa,YACvJo0C,MAAmB5uC,OAAO,EAAA/G,EAAA2C,UAAS,8BAA+B9B,aAAc,QAAS,YAAqBkF,OAAQ,SAAU,SAAUxE,YAAa,YACvJq0C,OAAmB7uC,OAAO,EAAA/G,EAAA2C,UAAS,UAA+B9B,aAAc,SAAU,UAAoBkF,OAAQ,SAAU,SAAUxE,eAC1Is0C,YAAmB9uC,OAAO,EAAA/G,EAAA2C,UAAS,mBAA+B9B,aAAc,aAAc,aAAgBkF,OAAQ,SAAU,SAAUxE,YAAa,eACvJu0C,UAAmB/uC,OAAO,EAAA/G,EAAA2C,UAAS,YAA+B9B,aAAc,WAAY,aAAkBkF,OAAQ,SAAU,SAAUxE,eAC1Iw0C,YAAmBhvC,OAAO,EAAA/G,EAAA2C,UAAS,cAA+B9B,aAAc,YAAa,cAAiBkF,OAAQ,SAAU,SAAUxE,YAAa,eACvJy0C,SAAmBjvC,OAAO,EAAA/G,EAAA2C,UAAS,aAA+B9B,aAAc,eAA8BkF,OAAQ,cAAoBxE,eAC1I00C,QAAmBlvC,OAAO,EAAA/G,EAAA2C,UAAS,cAA+B9B,aAAc,cAA8BkF,OAAQ,cAAoBxE,eAC1I20C,aAAmBnvC,OAAO,EAAA/G,EAAA2C,UAAS,YAA+B9B,aAAc,aAA8BkF,OAAQ,cAAoBxE,iBAIrIkF,8BAA8B,eAAA7S,EAAA,OAAAqF,EAAArF,MAElC,EAAAoM,EAAA2C,UAAS,YAAqB,YAAa,WAAY,oBAFrB1J,EAAArF,GAGlC,EAAAoM,EAAA2C,UAAS,mBAAqB,UAHI1J,EAAArF,GAIlC,EAAAoM,EAAA2C,UAAS,WAAqB,MAAO,SAJH1J,EAAArF,GAKlC,EAAAoM,EAAA2C,UAAS,WAAqB,UALI1J,EAAArF,GAMlC,EAAAoM,EAAA2C,UAAS,WAAqB,aAAc,WAAY,eANtB/O,yfC9B3CoM,EAAA1T,EAAA,GACA+T,EAAA/T,EAAA,KACA4T,EAAA5T,EAAA,cAM2B,kBACvB2Q,QACIvC,QACK,OAAa2P,SAAS,EAAArK,EAAA2C,UAAS,kCAC/B,UAAa2P,IAAK,EAAG/iB,KAAM,YAGpC+V,WACI5K,QACK,OAAa+jC,UAAW,SAAA9rC,GAAA,OAASA,EAAMgT,eAAiBhT,EAAM0O,gBAAgBH,QAAQ,YAAc,GAAGmJ,SAAS,EAAArK,EAAA2C,UAAS,mCACzH,WAAa87B,UAAW,SAAA9rC,GAAA,MAAwC,UAA/BA,EAAMsP,sBAAoCtP,EAAMgT,kBACjF,UAAa84B,UAAW,SAAA9rC,GAAA,MAAwC,UAA/BA,EAAMsP,sBAAoCtP,EAAMgT,eAAepW,KAAM,WACtG,UAAa8H,KAAM,SAACxG,EAAO+G,EAASjF,EAAOwI,GAAxB,QAAmCxI,EAAMgT,cAAgB,KAAK9U,GAASsK,EAAOsK,WAAkB4E,SAAS,EAAArK,EAAA2C,UAAS,wDAE1IzH,QAAS,aAEbuK,WACI/K,QACK,OAAa+jC,UAAW,SAAA9rC,GAAA,OAASA,EAAMgT,cAAgB,GAAKhT,EAAM0O,gBAAgBH,QAAQ,YAAc,GAAGmJ,SAAS,EAAArK,EAAA2C,UAAS,mCAC7H,WAAa87B,UAAW,SAAA9rC,GAAA,MAAwC,UAA/BA,EAAMsP,sBAAoCtP,EAAMgT,kBACjF,UAAa84B,UAAW,SAAA9rC,GAAA,MAAwC,UAA/BA,EAAMsP,sBAAoCtP,EAAMgT,eAAepW,KAAM,WACtG,UAAa8H,KAAM,SAACxG,EAAO+G,EAASjF,EAAOwI,GAAxB,MAAoC,SAAS2D,KAAK3D,EAAOmK,YAAc,SAASxG,KAAKjO,IAAY,aAAaiO,KAAK3D,EAAOmK,YAAc,aAAaxG,KAAKjO,IAASwZ,SAAS,EAAArK,EAAA2C,UAAS,mDACxM,UAAatL,KAAM,SAACxG,EAAO+G,EAASjF,EAAOwI,GAAxB,OAAoCA,EAAOmK,WAAazU,GAAOwZ,SAAS,EAAArK,EAAA2C,UAAS,uDAEzGzH,QAAS,aAEbwV,UACIhW,QACK,OAAa2P,SAAS,EAAArK,EAAA2C,UAAS,qCAGxCP,YACIlH,QAAS,cAEbiO,YACIzO,QACK,UAAarD,KAAM,SAACxG,EAAO+G,EAASjF,GAAjB,MAAyD,SAA9BA,EAAM8O,sBAAkC,EAAAvB,EAAA2D,aAAYhT,IAAUwZ,SAAS,EAAArK,EAAA2C,UAAS,yDAC9H,UAAatL,KAAM,SAACxG,EAAO+G,EAASjF,GAAjB,MAAyD,SAA9BA,EAAM8O,sBAAkC,EAAAvB,EAAA2oC,aAAYh4C,IAAUwZ,SAAS,EAAArK,EAAA2C,UAAS,qCAC9H,UAAatL,KAAM,SAACxG,EAAO+G,EAASjF,GAAjB,MAAyD,SAA9BA,EAAM8O,sBAAkC,EAAAvB,EAAA4oC,eAAcj4C,IAAQwZ,SAAS,EAAArK,EAAA2C,UAAS,uCAC9H,UAAatL,KAAM,SAACxG,EAAO+G,EAASjF,GACjC,GAAkC,SAA9BA,EAAM8O,oBAAgC,OAAO,EACjD,KAAK,EAAAvB,EAAA2D,aAAYhT,GAAQ,OAAO,EAChC,IAAMuS,GAAqB,EAAAlD,EAAA+D,UAAStR,EAAMyP,YACpC4pB,EAAqB5oB,EAAayF,QAJGojB,EAK5Bp7B,EAAMiT,MAAM,KALgBooB,EAAAloB,EAAAioB,EAAA,GAKpCxoB,EALoCyoB,EAAA,GAKjCj8B,EALiCi8B,EAAA,GAM3C,OAAO,EAAA7rB,EAAAgD,oBAAmB1Q,EAAMuQ,SAAU8oB,EAAmBxoB,KAAKC,GAAGH,OAAOrT,GAAImT,IACjFiH,SAAS,EAAArK,EAAA2C,UAAS,0HCtDpB2wC,kBAAkB,SAAClQ,EAAiBmB,EAAmBiJ,GAAoB,IAAA2I,EACvC5R,EAAkB1/B,SAAvDU,EAD4E4wC,EAC5E5wC,QAAS+K,EADmE6lC,EACnE7lC,SAAUxP,EADyDq1C,EACzDr1C,cAC3BsiC,EAAgBuB,eACZ7jC,EACAyE,EACA+K,EACAk9B,+GCNR,QAAAlhD,EAAA,UAEAA,EAAA,KACYiU,IAAZjU,EAAA,MACY8pD,IAAZ9pD,EAAA,MACY+pD,IAAZ/pD,EAAA,kNAEaqmD,gCAAA,IAAA/+C,2RAAAkI,CAAAC,mBAAAC,KAAqB,SAAAC,EAAMtJ,EAAO0/C,GAAb,IAAAz5C,EAAA09C,EAAArrD,EAAA,OAAA8Q,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxBzD,EAAWjG,EAAMiH,cACjB08C,EAAYC,EAAe5jD,EAAO0/C,GAG/BpnD,EAAI,EALiB,YAKdA,EAAIqrD,EAAUnrD,QALA,CAAAgR,EAAAE,KAAA,gBAAAF,EAAAM,GAM1B+5C,EAN0Br6C,EAAAs6C,GAMV79C,EANUuD,EAAAE,KAAA,EAMMi6C,EAAUrrD,GAAG2N,GANnB,OAAAuD,EAAAu6C,GAAAv6C,EAAAwI,MAAA,EAAAxI,EAAAM,IAAAN,EAAAs6C,GAAAt6C,EAAAu6C,IAAA,QAKQzrD,IALRkR,EAAAE,KAAA,uBAAAF,EAAAuI,OAAA,SASvB9L,GATuB,yBAAAuD,EAAAQ,SAAAV,OAAApM,MAArB,gBAAAylD,EAAAtwC,GAAA,OAAApR,EAAA9H,MAAAyG,KAAA0B,YAAA0+C,GAAN,IAYD4D,EAAiB,SAAC5jD,EAAO0/C,GAAR,OACnBsE,UAAmBzsC,sBACnB3J,EAAaq2C,0BAFMpiD,6HAAA8M,CAGf,6BAA6BxC,KAAKxT,OAAO0J,KAAKq9C,MAAgB1/C,EAAMmO,eACnEP,EAAas2C,2BAClBR,EAAUS,kBACVV,EAASW,kBAIPP,EAAkB,SAACQ,EAAQC,IACT,sBAAuB,sBAAuB,kBAAmB,qBAAsB,eAEhG/hD,QAAQ,SAAC/D,GACZA,KAAO8lD,IACPD,EAAO7lD,QAAOtB,MAItB,EAAAw2C,EAAArvC,UAAO,EAAMggD,EAAQC,4ICtCzB,wDAAA3qD,EAAA,KAEasqD,2BAA2B,SAAAhjD,GAAA,IAAGuW,EAAHvW,EAAGuW,oBAAqBrJ,EAAxBlN,EAAwBkN,cAAxB,OACpCP,UAAagH,gBAAgB4C,EAAqBrJ,IAGzC+1C,uBAAuB,SAAClkD,GAAD,OAChC4N,UAAaoH,kBAAkBhV,uUCPnCrG,EAAA,KACA8T,EAAA9T,EAAA,KAEayqD,iBAAiB,SAACpkD,GAC3B,IAAMsP,GAAuB,EAAA7B,EAAA0J,eAAcnX,GAGrCukD,EAAevkD,EAAMsP,uBAAyBA,GAChD1B,UAAa2E,YAAYvS,EAAMmO,cAAemB,GAElD,OAAArP,GACIqP,wBACGi1C,0UCZX5qD,EAAA,KAEawqD,+BAAA,IAAAljD,2RAAAkI,CAAAC,mBAAAC,KAAoB,SAAAC,EAAOtJ,GAAP,IAAAmO,EAAAe,EAAAoH,EAAA7G,EAAAoC,EAAA2O,EAAAhK,EAAAb,EAAAnD,EAAAgyC,EAAA11C,EAAA21C,EAAAl0C,EAAAm0C,EAAAnvC,EAAAxG,EAAAuG,EAAAqvC,EAAAC,EAAAC,EAAAtuC,EAAAuuC,EAAAC,EAAA,OAAA37C,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEzByE,EAIWnO,EAJXmO,cACAe,EAGWlP,EAHXkP,cACAoH,EAEWtW,EAFXsW,YACA7G,EACWzP,EADXyP,WACAoC,EAAW7R,EAAX6R,OACE2O,EAAcxgB,EAAMuF,WAAWlF,OAAOmgB,YAExChK,EAEgBxW,EAFhBwW,WACAb,EACgB3V,EADhB2V,YACAnD,EAAgBxS,EAAhBwS,YAEJgE,EAAaA,GAAcgK,EAAYtK,QAAQC,IAAI,EAAG,UAAUvF,OAAO,SAEjE4zC,EAA0B52C,UAAa4B,aAAaC,GACpDX,EAA0B01C,EAAwB11C,oBAClD21C,EAA0B72C,UAAawJ,YAAYjJ,EAAesB,GAClEc,EAA0Bk0C,EAAal0C,SACvCm0C,EAA0B92C,UAAa0J,aAAa/G,EAAUd,EAAY+G,GAChFA,EAAgCkuC,EAAeluC,WAEzCjB,EAA0B3H,UAAaiB,qBAAqBV,EAAeW,GAC3EC,EAA0BwG,EAAwBxG,oBAClDuG,EAA0B1H,UAAaqB,gBAAgBC,EAAef,EAAeW,GAErF61C,EAAkB/2C,UAAauJ,cAAcpI,EAAqByD,GACxEA,EAAwBmyC,EAAgBnyC,YAClCoyC,EAAkBh3C,UAAa8H,cAAc3G,EAAqB4G,EAAanD,EAAa/C,GAClGkG,EAAwBivC,EAAgBjvC,YA7BXnM,EAAAE,KAAA,GA+B8BkE,UAAa4D,gBAAgBmE,EAAa9D,GA/BxE,eAAArI,EAAAM,GAAAN,EAAAwI,KA+BvB6yC,GAA2BtuC,mBA/BJ/M,EAAAM,IAgCvByM,EAAyBsuC,EAAuBtuC,mBAChDuuC,EAAyBl3C,UAAayI,cACxCV,EACAW,EACA9D,EACA+D,EACAhG,EACAd,EACA+G,GAGEuuC,EAAuBn3C,UAAayB,kBAAkBlB,EAAeW,GA3C9CtF,EAAAuI,OAAA,SAAA9R,KA8CtBukD,EACAjvC,EACAwvC,EACAzvC,EACAmvC,EACAC,EACAE,EACAE,EACAH,EACAE,IAvDsB,yBAAAr7C,EAAAQ,SAAAV,OAAApM,MAApB,gBAAAylD,GAAA,OAAA1hD,EAAA9H,MAAAyG,KAAA0B,YAAA6iD,wUCFb/5C,EAAAzQ,EAAA,IACAiL,EAAAjL,EAAA,GACA4T,EAAA5T,EAAA,IAGA8iD,EAAA9iD,EAAA,KAoDMqrD,GAhDOtE,kBAAkB,SAAC1gD,EAAOwuB,EAAUiyB,GAC7C,IAAM1I,EAAavpB,EAASupB,aACtBjuB,EAAciuB,EAAS/5B,OAAS+5B,EAASkN,WAAc,EACvDhvB,EAAsB,IAATnM,GAAgBiuB,EAASkN,WAAa,GACnDlvB,EAAagiB,EAASmN,cAGtBC,EAFanlD,EAAMwT,WAEUxH,KAAK,SAAArO,GAAA,OAAKA,EAAEO,QAAU8B,EAAMoT,QAEzDqQ,EADyC,UAAxB0hC,EAAenhD,KACJ+xB,EAAQgiB,EAASoN,EAAejnD,OAC9Du4B,EAAmBhT,EAAQg9B,EAAwBviD,MAEnDulB,IAAUg9B,EAAwBviD,QAClCu4B,EAAgB,MAGpB,IAAM2uB,GACFphD,KAAOmhD,EAAenhD,MAAQ,GAC9B9F,MAAOulB,GAAS,IAGpB,OACI7f,GAAWm0C,EAASn0C,IAAM,GAC1BsW,YAAasU,EAASzxB,MACtB05B,gBACA/e,QAAWqgC,EAAS9W,UAAYzS,EAASzxB,MAAM2a,QAC/C0tC,qBACApnC,OAAW+5B,EAAS/5B,OACpB8L,OAAWA,EAAOu7B,SAAQ,EAAAj7C,EAAAgkC,kBAAiBpuC,EAAMwK,WACjDyrB,QAAcA,EAAQovB,QAAQ,GAA9B,IACAtvB,UAIKqqB,yBAAyB,SAACpgD,GACnC,IAAMmgD,KAUN,OARAxnD,OAAO0J,KAAKrC,EAAMkO,aAAa3L,QAAQ,SAAC3F,GACpC,IAAM0oD,EAAcN,EAAiChlD,EAAOpD,GACtD2oD,EAAcvlD,EAAM2+C,kBAAkB/hD,IACvC,EAAAgI,EAAA4gD,aAAYF,EAASC,KACtBpF,EAASvjD,GAAQ0oD,KAIlBnF,GAG8B,SAACngD,EAAOylD,GAC7C,IAAMC,KACN,GAA0B,YAAtB1lD,EAAMwS,YAA2B,CACjC,IAAMmD,GAAc,EAAApI,EAAA+D,UAAStR,EAAM2V,aACnC+vC,EAAW7nC,aAAc,EAAAtQ,EAAAmoC,eAAc//B,EAAYiW,OAAQ5rB,EAAMsW,aAGrE,OAAArW,GACI83C,SAAe,EACflyB,UAAe,EACfvb,OAAe0uC,WAAWh5C,EAAMsK,QAChC8I,MAAepT,EAAMoT,MACrBjF,cAAes3C,EACfj7C,SAAexK,EAAMuF,WAAWnF,OAAOoK,SACvCqH,OAAe7R,EAAM6R,QAEjB7R,EAAMyP,aACJqO,YAAY,EAAAvQ,EAAAmoC,eAAc11C,EAAMyP,WAAYzP,EAAMwW,aAG9B,aAAtBxW,EAAMwS,aAEEuL,SAAesC,SAASrgB,EAAM+d,UAC9B7O,cAAelP,EAAMkP,eAGzBw2C,GAGH1lD,EAAMgT,cAAgB,IAAsD,IAAjDhT,EAAM0O,gBAAgBH,QAAQ,iBACxDqE,QAAS5S,EAAM2S,WAAa3S,EAAM2lD,YAGZ,IAAxB3lD,EAAMgT,gBACJ2K,SAAU3d,EAAM8S,cAKjBwtC,4BAA4B,SAAC3B,GACtC,IAAMiH,KACA/0B,EAAWl4B,OAAO0J,KAAKs8C,GACxBpG,UAAU,SAAAjgD,GAAA,OAAKA,EAAEutD,cAAct3C,QAAQ,UAAY,KAAM,EAe9D,OAba5V,OAAO0J,KAAK1J,OAAOmyC,OAAO6T,GAAmB,IAErDp8C,QAAQ,SAAA9E,GACT,IAAMqoD,EAAmBl1B,wCAAsCnzB,GAE3DqoD,EACAF,EAAkBltD,KAAiC,iBAArBotD,EAAgCA,EAAmBA,EAAiBj1B,KAC1C,IAAjDC,gCAA8BviB,QAAQ9Q,IAC7CmoD,EAAkBltD,KAAK+E,KAI/BmoD,EAAkB5lC,OACX4lC,kFClHEzG,oBAAoB,WAAyB,IAAxB77B,EAAwBhiB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MACtD,OAAKgiB,EAAe9qB,OACb8qB,EAAe5O,OAAO,SAAAqxC,GAAA,MAAe,2BAA2B55C,KAAK45C,EAAYC,aAAY,GAAGn0C,OADpE,yaCDvClN,EAAAhL,EAAA,GAKAk0B,EAAAl0B,EAAA,yDAGAA,EAAA,4lBAEqB8tC,KA2ChB1iC,SAAOC,QAkBPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAMPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAMPD,SAAOC,QAKPD,SAAOC,QAMPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAQPD,SAAOC,oBAvIR,SAAAyiC,iGAAcrmC,CAAAxB,KAAA6nC,GACV,IADUlhC,mKAAA7E,CAAA9B,MAAA6nC,EAAA9lC,WAAAhJ,OAAAiJ,eAAA6lC,IAAA3uC,KAAA8G,MAWF4F,0BATJ,8BACA,6BACA,0BACA,kBACA,yBACA,yBACA,0BARM,OAAAN,EAAAqB,EAAA,oBAAApB,EAAAoB,GAAArB,EAAAqB,EAAA,6BAAAnB,EAAAmB,GAAArB,EAAAqB,EAAA,yBAAAqhC,EAAArhC,GAAArB,EAAAqB,EAAA,kBAAAshC,EAAAthC,GAAArB,EAAAqB,EAAA,wBAAAuhC,EAAAvhC,GAAArB,EAAAqB,EAAA,wBAAAwhC,EAAAxhC,GAAArB,EAAAqB,EAAA,0BAAAyhC,EAAAzhC,GAAArB,EAAAqB,EAAA,yBAAA8yC,EAAA9yC,GAAArB,EAAAqB,EAAA,sBAAA+yC,EAAA/yC,GAAArB,EAAAqB,EAAA,8BAAAy2C,EAAAz2C,GAAArB,EAAAqB,EAAA,6BAAA02C,EAAA12C,GAAArB,EAAAqB,EAAA,0BAAA22C,EAAA32C,GAAArB,EAAAqB,EAAA,4BAAA42C,EAAA52C,GAAArB,EAAAqB,EAAA,mBAAA62C,EAAA72C,GAAArB,EAAAqB,EAAA,eAAA82C,EAAA92C,GAAArB,EAAAqB,EAAA,iBAAA+2C,EAAA/2C,GAYVtH,OAAO01B,iBAAiB,SAAUpuB,EAAK0/C,eACvC,EAAAthD,EAAAuhD,SAAQ,kBAAMvrD,SAAS84B,KAAKC,UAAUntB,EAAK2X,gBAAkB,MAAQ,UAAU,UAbrE3X,qUA3BmBzB,qDA6C7BlF,KAAKumD,aAAelnD,OAAOmnD,WACvBxmD,KAAKuzB,YACLvzB,KAAKwe,wBAAyB,kDAgBlCxe,KAAKymD,yBAA2BzmD,KAAKymD,oEAKrCzmD,KAAK6e,yBAA2B7e,KAAK6e,uEAKrC7e,KAAK+e,6BAA+B/e,KAAK+e,2EAKzC/e,KAAK06C,4BAA8B16C,KAAK06C,wEAKxC16C,KAAKm3B,qBAAuBn3B,KAAKm3B,yEAKjCn3B,KAAK0e,wBAA0B1e,KAAK0e,gEAKpC1e,KAAKse,iBAAmBte,KAAKse,+DAK7Bte,KAAK0mD,uBAAyB1mD,KAAK0mD,sBAC9B1mD,KAAK0mD,wBAAuB1mD,KAAK2mD,uBAAwB,gDAK9D3mD,KAAK2mD,uBAAwB,+CAK7B3mD,KAAK2mD,uBAAwB,kDAK7B3mD,KAAKwe,wBAA0Bxe,KAAKwe,gEAKpCxe,KAAK4gC,mBAAoB,oDAKzB5gC,KAAK6gC,4BAA6B,wCAKlC7gC,KAAK4gC,mBAAoB,EACzB5gC,KAAK6gC,4BAA6B,8CAKlC7gC,KAAK4mD,2BAA4B,8CAKjC5mD,KAAK4mD,2BAA4B,EACjC5mD,KAAK6mD,iBAAmB,+CAIVvsD,GACd0F,KAAK6mD,iBAAmBvsD,0CAIZwsD,GACZ9mD,KAAK+mD,eAAejuD,KAAKguD,8CAIVA,GACf,IAAMxqC,EAAQtc,KAAK+mD,eAAep4C,QAAQm4C,GACtCxqC,GAAS,GACTtc,KAAK+mD,eAAejtD,OAAOwiB,EAAO,oDAMtCtc,KAAK+mD,oDA/GL,OAAO/mD,KAAKumD,cAAgBp1B,qDAK5B,OAAOnxB,KAAKumD,cAAgBn1B,iEAzD/B7mB,2DAAwC,mDACxCA,2DAAwC,+CACxCA,2DAAwC,wCAExCA,2DAAqC,8CACrCA,2DAAqC,8CACrCA,2DAAqC,gDACrCA,2DAAqC,+CAGrCA,2DAAoC,4CACpCA,2DAAoC,oDAGpCA,2DAAyC,mDACzCA,2DAAyC,gDACzCA,2DAAyC,kDAGzCA,2DAAuC,yCACvCA,2DAAuC,wCAEvCA,2DAA0BlL,OAAOmnD,gDAEjCj8C,qMA0BAghC,6GAKAA,m6EAxDgB1D,iFCVR/D,mBAAmB,WAC5BzkC,OAAO01B,iBAAiB,UAAW,SAACiyB,GAChC,OAAQA,EAAIpoD,KACR,IAAK,kBACG7D,SAASksD,QAA4B,KAAjBD,EAAIv+C,UAAoBpJ,OAAO6nD,eACnD7nD,OAAOmN,SAAS2iB,4FCLpC,QAAAp1B,EAAA,QACAA,EAAA,IACAu3B,EAAAv3B,EAAA,QACAA,EAAA,MACAm0B,EAAAn0B,EAAA,QACAA,EAAA,UACAA,EAAA,MACAotD,EAAAptD,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMqtD,EAAM,SAAA/lD,GAAA,IAAGsE,EAAHtE,EAAGsE,WAAH,OACRnB,EAAAC,QAAAvJ,cAACo2B,EAAA+1B,eAAOC,UAAU,EAAAC,EAAA9iD,YACdD,EAAAC,QAAAvJ,cAACgzB,EAAAtuB,cAAaQ,MAAOuF,GACjBnB,EAAAC,QAAAvJ,cAACssD,EAAA/iD,QAAD,KACID,EAAAC,QAAAvJ,cAAA,OAAK8I,GAAG,UACJQ,EAAAC,QAAAvJ,cAACusD,EAAAhjD,QAAD,OAEJD,EAAAC,QAAAvJ,cAACwsD,EAAAjjD,QAAD,KACID,EAAAC,QAAAvJ,cAACysD,EAAAljD,QAAD,KACID,EAAAC,QAAAvJ,cAAC0sD,EAAAnjD,QAAD,MACAD,EAAAC,QAAAvJ,cAAC2sD,EAAApjD,QAAD,MACAD,EAAAC,QAAAvJ,cAAC4sD,EAAArjD,SAAa4zC,SAAUrc,YAAUE,aAEtC13B,EAAAC,QAAAvJ,cAAC6sD,EAAAtjD,QAAD,OAGJD,EAAAC,QAAAvJ,cAAA,UAAQ8I,GAAG,UACPQ,EAAAC,QAAAvJ,cAAC8sD,EAAAvjD,QAAD,WAOpB2iD,EAAIllD,WACAyD,WAAYpF,UAAUxB,kBAGXqoD,kFC5Cf,IAAAh4B,EAAAr1B,EAAA,cAOoB,WAChB,IAAMkuD,aAA0BlvD,OAAO0J,MAAK,EAAA2sB,EAAAkhB,WAAmB1jC,KAAK,KAA9D,uBACA06C,EAAW,IAAIh7C,OAAO27C,EAAc,MAAMC,KAAK7oD,OAAOmN,SAASS,UAErE,OAAIq6C,GAAYA,EAAS1uD,OACd0uD,EAAS,GAGb,4GCfX,wDAAAvtD,EAAA,QAEqBouD,cACjB,SAAAA,EAAYhoD,gGAAOqB,CAAAxB,KAAAmoD,GAAA,IAAAxhD,mKAAA7E,CAAA9B,MAAAmoD,EAAApmD,WAAAhJ,OAAAiJ,eAAAmmD,IAAAjvD,KAAA8G,KACTG,IADS,OAAAwG,EAKnByhD,kBAAoB,SAACjrD,EAAO84B,GACxBtvB,EAAKiyB,UACDyvB,UAAU,EACVlrD,QACA84B,UATWtvB,EAanBm4B,OAAS,kBAAMn4B,EAAKqyB,MAAMqvB,SAElB7jD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,aACV6C,EAAKqyB,MAAM77B,MAAM2a,SAEtBnR,EAAKxG,MAAMT,UAhBfiH,EAAKqyB,OAAUqvB,UAAU,GAFV1hD,qUADoBtE,UAAMvB,0BAA5BqnD,oKCFd1jD,kgBCAP1K,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAuuD,EAAAvuD,EAAA,KACA0T,EAAA1T,EAAA,GACA25B,EAAA35B,EAAA,QACAA,EAAA,MACAm0B,EAAAn0B,EAAA,QACAA,EAAA,6DAEMwuD,grBAAwBlmD,UAAMvB,0DACPd,KAAKG,MAAM+gC,yDACXlhC,KAAKG,MAAMghC,6CAE3B,IAAA5H,EAQDv5B,KAAKG,MANL84C,EAFC1f,EAED0f,iBACA97C,EAHCo8B,EAGDp8B,MACAyN,EAJC2uB,EAID3uB,SACAuQ,EALCoe,EAKDpe,SACAqD,EANC+a,EAMD/a,uBACAgqC,EAPCjvB,EAODivB,aAGAC,SAgBJ,OAbIA,EADAtrD,EACeqH,EAAAC,QAAAvJ,cAAA,SAAIiC,GACZge,EACQ3W,EAAAC,QAAAvJ,cAACwtD,EAAAjkD,QAAD,MAEAw0C,EAAiBpyC,IAAI,SAACuxC,GAAD,OAChC5zC,EAAAC,QAAAvJ,cAACytD,EAAAlkD,QAADpE,GACIzB,IAAKw5C,EAAmBp0C,GACxB4G,SAAUA,GACNwtC,MAMZ5zC,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,oBAAsBmkD,yBAA0BpqC,KACvEha,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,4BACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,6CAChBU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,4BAA2B,EAAA2J,EAAA2C,UAAS,yBACpD5L,EAAAC,QAAAvJ,cAAA,OACI4I,UAAU,+BACVI,QAASskD,GAEThkD,EAAAC,QAAAvJ,cAACw4B,EAAArC,UAAD,QAGR7sB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,0BACXU,EAAAC,QAAAvJ,cAACotD,EAAAO,YACGjrB,OAASzV,MAAO,OAAQC,OAAQ,sBAChC0gC,UAAA,GAECL,cAQzBF,EAAgBrmD,WACZ+2C,iBAAwBl9B,YAAcC,uBACtCtc,SAAwBa,UAAU20B,IAClCtqB,SAAwBrK,UAAUqE,OAClCzH,MAAwBoD,UAAUqE,OAClCuW,SAAwB5a,UAAUsE,KAClCwyC,WAAwB92C,UAAUsE,KAClC2Z,uBAAwBje,UAAUsE,KAClCq8B,QAAwB3gC,UAAUuE,KAClCq8B,UAAwB5gC,UAAUuE,KAClC0jD,aAAwBjoD,UAAUuE,iBAGvB,EAAAopB,EAAAvtB,SACX,SAAAU,GAAA,IAAGlI,EAAHkI,EAAGlI,QAASqH,EAAZa,EAAYb,OAAQE,EAApBW,EAAoBX,GAApB,OACIu4C,iBAAwB9/C,EAAQgD,UAAU88C,iBAC1C5B,WAAwBl+C,EAAQgD,UAAUk7C,WAC1Cl6C,MAAwBhE,EAAQgD,UAAUgB,MAC1Cge,SAAwBhiB,EAAQgD,UAAUgf,SAC1C+lB,QAAwB/nC,EAAQgD,UAAU+kC,QAC1CC,UAAwBhoC,EAAQgD,UAAUglC,UAC1Cv2B,SAAwBpK,EAAOoK,SAC/B4T,uBAAwB9d,EAAG8d,uBAC3BgqC,aAAwB9nD,EAAGqoD,wBAVpB,CAYbR,qHC3FF,QAAAxuD,EAAA,QACAA,EAAA,uDAEA,IAAMivD,EAAY,SAAA3nD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACdU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWA,EAAWqkB,MAAM,KAAKC,OAAO,KAAKF,MAAM,8BACpD1jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,aAAalG,EAAE,2GAA2Gof,KAAK,UAAUqL,SAAS,cAI1K2gC,EAAU9mD,WACN4B,UAAWvD,UAAUqE,UAGhBokD,6GCbT,QAAAjvD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMkvD,EAAW,SAAA5nD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACbU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYokB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACpHrY,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,OAAOqL,SAAS,UAAUzqB,EAAE,mHAI/CqrD,EAAS/mD,WACL4B,UAAWvD,UAAUqE,UAGhBqkD,qHCdT,QAAAlvD,EAAA,QACAA,EAAA,uDAEA,IAAMmvD,EAAoB,SAAA7nD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAWI,EAAd7C,EAAc6C,QAAd,OACtBM,EAAAC,QAAAvJ,cAAA,OACIgtB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPtkB,UAAWA,EACXI,QAASA,GAETM,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,OAAOmsC,YAAY,KAAK9gC,SAAS,UAAUzqB,EAAE,uZAIhEsrD,EAAkBhnD,WACd4B,UAAWvD,UAAUqE,OACrBV,QAAW3D,UAAUuE,QAGhBokD,yHCpBT,QAAAnvD,EAAA,QACAA,EAAA,uDAEA,IAAMqvD,EAAe,SAAA/nD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAWI,EAAd7C,EAAc6C,QAAd,OACjBM,EAAAC,QAAAvJ,cAAA,OACIgtB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPtkB,UAAWA,EACXI,QAASA,GAETM,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,2jBAIlDwrD,EAAalnD,WACT4B,UAAWvD,UAAUqE,OACrBV,QAAW3D,UAAUuE,QAGhBskD,6HCpBT,QAAArvD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMsvD,EAAwB,SAAAhoD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OAC1BU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACjFrY,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,mNAIlDyrD,EAAsBnnD,WAClB4B,UAAWvD,UAAUqE,UAGhBykD,uICdT,QAAAtvD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMuvD,EAAyB,SAAAjoD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OAC3BU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACjFrY,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,gNAIlD0rD,EAAuBpnD,WACnB4B,UAAWvD,UAAUqE,UAGhB0kD,iICdT,QAAAvvD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMwvD,EAAkB,SAAAloD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACpBU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACjFrY,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,2GAIlD2rD,EAAgBrnD,WACZ4B,UAAWvD,UAAUqE,UAGhB2kD,2HCdT,QAAAxvD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMyvD,EAAmB,SAAAnoD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACrBU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACjFrY,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,6GAIlD4rD,EAAiBtnD,WACb4B,UAAWvD,UAAUqE,UAGhB4kD,qHCdT,QAAAzvD,EAAA,QACAA,EAAA,uDAEA,IAAM0vD,EAAY,SAAApoD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAWI,EAAd7C,EAAc6C,QAAd,OACdM,EAAAC,QAAAvJ,cAAA,OACI4I,UAAWA,QAAaxG,EACxB4G,QAASA,EACTgkB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPvL,QAAQ,aAERrY,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,qPAAqPof,KAAK,UAAUqL,SAAS,cAI7RohC,EAAUvnD,WACN4B,UAAWvD,UAAUqE,OACrBV,QAAW3D,UAAUuE,QAGhB2kD,oHCrBT,QAAA1vD,EAAA,QACAA,EAAA,uDAEA,IAAM09B,EAAkB,SAAAp2B,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACpBU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWA,EAAWokB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACzFrY,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WAAU7jB,EAAAC,QAAAvJ,cAAA,UAAQ4hB,GAAG,IAAIC,GAAG,IAAI5e,EAAE,IAAI6e,KAAK,YAC/DxY,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAO0sC,UAAU,2BACrBllD,EAAAC,QAAAvJ,cAAA,UAAQ4hB,GAAG,MAAMC,GAAG,IAAI5e,EAAE,MAC1BqG,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,6DAMxB65B,EAAgBv1B,WACZ4B,UAAWvD,UAAUqE,UAGhB6yB,mHClBT,QAAA19B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM4vD,EAAW,SAAAtoD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACbU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYokB,MAAM,6BAA6BrL,QAAQ,aAC7FrY,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAU,gBAAgBkZ,KAAK,OAAOqL,SAAS,UAAUuhC,OAAO,WAC/DplD,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,uFACR4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,wEAKpB+rD,EAASznD,WACL4B,UAAWvD,UAAUqE,UAGhB+kD,+GCjBT,QAAA5vD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM8vD,EAAc,SAAAxoD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OAChBU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,YAAYqL,MAAM,8BACnG1jB,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM0uD,OAAO,UAAUjW,EAAE,KAAKC,EAAE,MAAMzrB,MAAM,KAAKC,OAAO,IAAI0hC,GAAG,MAC/DtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,kBACvB4G,EAAAC,QAAAvJ,cAAA,QAAM0uD,OAAO,UAAUhsD,EAAE,qBACzB4G,EAAAC,QAAAvJ,cAAA,QAAM0uD,OAAO,UAAUjW,EAAE,MAAMC,EAAE,MAAMzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,MAC/DtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,kBACvB4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU22B,EAAE,KAAKC,EAAE,IAAIzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,OAC1DtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU22B,EAAE,KAAKC,EAAE,IAAIzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,OAC1DtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU22B,EAAE,IAAIC,EAAE,IAAIzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,OACzDtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU22B,EAAE,IAAIC,EAAE,IAAIzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,OACzDtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU22B,EAAE,IAAIC,EAAE,IAAIzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,OACzDtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU22B,EAAE,IAAIC,EAAE,IAAIzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,OACzDtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU22B,EAAE,IAAIC,EAAE,IAAIzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,OACzDtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU22B,EAAE,IAAIC,EAAE,IAAIzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,OACzDtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU22B,EAAE,IAAIC,EAAE,IAAIzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,OACzDtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU22B,EAAE,IAAIC,EAAE,IAAIzrB,MAAM,IAAIC,OAAO,IAAI0hC,GAAG,UAKrED,EAAY3nD,WACR4B,UAAWvD,UAAUqE,UAGhBilD,oHC9BT,QAAA9vD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMgwD,EAAgB,SAAA1oD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OAClBU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,YAAYqL,MAAM,8BACnG1jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,gDAAgDof,KAAK,OAAOqL,SAAS,cAI7G0hC,EAAc7nD,WACV4B,UAAWvD,UAAUqE,UAGhBmlD,sHCdT,QAAAhwD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMo5B,EAAgB,SAAA9xB,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OAClBU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYokB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACpHrY,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAU,cAAckZ,KAAK,OAAOqL,SAAS,UAAUuhC,OAAO,OAAO3sC,YAAY,KAChFzY,EAAAC,QAAAvJ,cAAA,SACIsJ,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,0CAA0CkZ,KAAK,OAAO4sC,OAAO,UAAUhsD,EAAE,mFACzF4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,wDAAwD8lD,OAAO,UAAUhsD,EAAE,+CAC3F4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,0BAA0B8lD,OAAO,UAAUI,cAAc,SAASpsD,EAAE,uEACpF4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,gBAAgB8lD,OAAO,UAAUI,cAAc,QAAQpsD,EAAE,mBAMzFu1B,EAAcjxB,WACV4B,UAAWvD,UAAUqE,UAGhBuuB,sHCrBT,QAAAp5B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMq5B,EAAgB,SAAA/xB,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OAClBU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,YAAYqL,MAAM,8BACnG1jB,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAU,cAAckZ,KAAK,OAAOqL,SAAS,WAC5C7jB,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAU,gBAAgB8lD,OAAO,WAChCplD,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,qIAEZ4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,qKAAqKof,KAAK,eAKtNoW,EAAclxB,WACV4B,UAAWvD,UAAUqE,UAGhBwuB,kHCnBT,QAAAr5B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMkwD,EAAY,SAAA5oD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACdU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,YAAYqL,MAAM,8BACnG1jB,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAU,8BAA8B8lD,OAAO,UAAU5sC,KAAK,OAAOqL,SAAS,WAC7E7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,0BAA0BlG,EAAE,0KAKxDqsD,EAAU/nD,WACN4B,UAAWvD,UAAUqE,UAGhBqlD,2FChBT,QAAAlwD,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,MACAopB,EAAAppB,EAAA,SACAA,EAAA,yDAEA,IAAMmwD,EAAsB,SAAA7oD,GAAA,IACxBuJ,EADwBvJ,EACxBuJ,SACA8L,EAFwBrV,EAExBqV,YACA1S,EAHwB3C,EAGxB2C,GACAu0C,EAJwBl3C,EAIxBk3C,WACAvuB,EALwB3oB,EAKxB2oB,OACAhtB,EANwBqE,EAMxBrE,KACAkV,EAPwB7Q,EAOxB6Q,WAPwB,OASxB1N,EAAAC,QAAAvJ,cAACivD,EAAA1lD,SAAWX,UAAU,wBAAwBytB,IAAI,EAAApO,EAAAF,iBAAgBjf,IAC9DQ,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,+BACXU,EAAAC,QAAAvJ,cAACkvD,EAAA3lD,SAAiBzH,KAAMA,KAE5BwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAA,wEAAmFkmB,GACpFxlB,EAAAC,QAAAvJ,cAACo7B,EAAA7xB,SAAMiG,OAAQ6tC,EAAY3tC,SAAUA,KAEzCpG,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,iCAAiCoO,GACjD1N,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,yCACZU,EAAAC,QAAAvJ,cAACmvD,EAAA5lD,SAAcoS,SAAUH,QAMzCwzC,EAAoBhoD,WAChB0I,SAAarK,UAAUqE,OACvB8R,YAAanW,UAAUA,UAAUiL,WAC7BjL,UAAUkL,OACVlL,UAAUqE,SAEdZ,GAAYzD,UAAUkL,OACtB8sC,WAAYh4C,UAAUkL,OACtBue,OAAYzpB,UAAUqE,OACtB5H,KAAYuD,UAAUqE,OACtBsN,WAAY3R,UAAUqE,kBAGXslD,wGC9Cf,QAAAnwD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMq8B,EAAgB,SAAA/0B,GAAyB,IAAtBrE,EAAsBqE,EAAtBrE,KAAM8G,EAAgBzC,EAAhByC,UACvBwmD,SACJ,GAAIttD,EACA,OAAQA,GACJ,IAAK,SACDstD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,mEACvB4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,+FAC1C4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,+DAG/B,MACJ,IAAK,SACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,kEACvB4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,+FAC1C4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,4DAG/B,MACJ,IAAK,eACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,oIACvB4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,4DAGlD,MACJ,IAAK,QACL,IAAK,OACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,iIACvB4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,0CAGlD,MACJ,IAAK,cACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,qWAAqWof,KAAK,UAAUqL,SAAS,YAEzY,MACJ,IAAK,YACDiiC,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,0MACvB4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,wLAGlD,MACJ,IAAK,YACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,yIAC1C4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,2IAG/B,MACJ,IAAK,aACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,6MACvB4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,iNAGlD,MACJ,IAAK,WACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,sFAC1C4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,4KAG/B,MACJ,IAAK,YACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,+CAC1C4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,4KAG/B,MACJ,IAAK,aACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,8CAC1C4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,iKAG/B,MACJ,IAAK,aACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,UAAUqL,SAAS,WAAU7jB,EAAAC,QAAAvJ,cAAA,QAAMwuD,UAAU,kBAAkB9V,EAAE,MAAMzrB,MAAM,KAAKC,OAAO,IAAI0hC,GAAG,OACpGtlD,EAAAC,QAAAvJ,cAAA,QAAMwuD,UAAU,mBAAmB9V,EAAE,OAAOzrB,MAAM,KAAKC,OAAO,IAAI0hC,GAAG,OACrEtlD,EAAAC,QAAAvJ,cAAA,KAAGmtB,SAAS,WAAU7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,oHAC1B4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,oDAIpB,MACJ,IAAK,cAWL,IAAK,eACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,UAAUqL,SAAS,WAAU7jB,EAAAC,QAAAvJ,cAAA,QAAMwuD,UAAU,kBAAkB9V,EAAE,MAAMzrB,MAAM,KAAKC,OAAO,IAAI0hC,GAAG,OACpGtlD,EAAAC,QAAAvJ,cAAA,QAAMwuD,UAAU,mBAAmB9V,EAAE,OAAOzrB,MAAM,KAAKC,OAAO,IAAI0hC,GAAG,OACrEtlD,EAAAC,QAAAvJ,cAAA,KAAGmtB,SAAS,WACR7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,oHACR4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,oDAIpB,MACJ,IAAK,cACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,8CAA8Cof,KAAK,UAAUqL,SAAS,YAC9E7jB,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,UAAUqL,SAAS,WAAU7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,+CACzC4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,sPAEZ4G,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,UAAUqL,SAAS,WACvB7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,2GACR4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,uEAIpB,MACJ,IAAK,aACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,6CAA6Cof,KAAK,UAAUqL,SAAS,YAC7E7jB,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,UAAUqL,SAAS,WACvB7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,+CACR4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,uPAEZ4G,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,UAAUqL,SAAS,WACvB7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,0GACR4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,uEAIpB,MACJ,IAAK,YACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,wFAAwFof,KAAK,UAAUqL,SAAS,YACxH7jB,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,UAAUqL,SAAS,WACvB7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,sGACR4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,uPAEZ4G,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,UAAUqL,SAAS,WACvB7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,0EACR4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,sKAIpB,MACJ,IAAK,UACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,oLACvB4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,wCAGlD,MACJ,IAAK,WACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,yKACvB4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,yCAGlD,MACJ,IAAK,cACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,mIACvB4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,wDAGlD,MACJ,IAAK,OACL,IAAK,MACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUpf,EAAE,uIACvB4G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,YAAYkZ,KAAK,OAAOpf,EAAE,wCAGlD,MACJ,IAAK,QACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU0sC,UAAU,qBAAqB9V,EAAE,KAAKzrB,MAAM,KAAKC,OAAO,IAAI0hC,GAAG,OACpFtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU0sC,UAAU,oBAAoB9V,EAAE,IAAIzrB,MAAM,KAAKC,OAAO,IAAI0hC,GAAG,OAClFtlD,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,kHAAkHof,KAAK,UAAUqL,SAAS,YAClJ7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,8OAA8Oof,KAAK,UAAUqL,SAAS,aAGtR,MACJ,IAAK,WACDiiC,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAclG,EAAE,kBAChC4G,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU0sC,UAAU,mBAAmB9V,EAAE,OAAOzrB,MAAM,KAAKC,OAAO,IAAI0hC,GAAG,OACpFtlD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAU0sC,UAAU,kBAAkB9V,EAAE,MAAMzrB,MAAM,KAAKC,OAAO,IAAI0hC,GAAG,OAClFtlD,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,wHAAwHof,KAAK,UAAUqL,SAAS,YACxJ7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,+KAA+Kof,KAAK,UAAUqL,SAAS,aAGvN,MACJ,QACIiiC,EACI9lD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,gVAK1D,OACI4G,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,YAAYqL,MAAM,8BAClGoiC,IAMbl0B,EAAcl0B,WACV4B,UAAWvD,UAAUqE,OACrB5H,KAAWuD,UAAUqE,UAGhBwxB,kLCxQF3xB,8VCAP1K,EAAA,QACAA,EAAA,IACAgmC,EAAAhmC,EAAA,IACAiL,EAAAjL,EAAA,OACAA,EAAA,KACAm0B,EAAAn0B,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMwwD,EAAaloD,UAAM4vB,KAAK,kBAAMv3B,QAAA+C,KAAA1D,EAAAO,EAAA,uBAAAP,EAAAO,EAAA,iBAAAyP,KAAAhQ,EAAAwE,EAAAM,KAAA,eAE9Bw0B,grBAAchxB,UAAMvB,0DAElBd,KAAKG,MAAM+gC,yDAIXlhC,KAAKG,MAAMghC,6CAIX,IAAMje,GAAc,EAAAle,EAAAoK,kBAAiBpP,KAAKG,MAAM41B,eAAgB,MAAO,gBACjEy0B,EAAqBxqD,KAAKG,MAAMozB,UAAY,iBAAmB,iCAErE,OACI/uB,EAAAC,QAAAvJ,cAAA,OAAK8I,GAAG,kBAAkBF,UAAU,mBAChCU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,8BACT9D,KAAKG,MAAM8R,QACTzN,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAMgmD,UAASC,SAAUlmD,EAAAC,QAAAvJ,cAACy7B,EAAAlyB,QAAD,OACtBD,EAAAC,QAAAvJ,cAACqvD,GACG3L,SAAU5+C,KAAKG,MAAMy+C,SACrBxc,QAAS59B,EAAAC,QAAAvJ,cAACyvD,EAAAlmD,SAAQ49B,eAAA,IAClBuoB,eAAgB5qD,KAAKG,MAAMyqD,eAC3B34C,OAAQjS,KAAKG,MAAM8R,OACnB+M,WAAYhf,KAAKG,MAAM6e,WACvBC,YAAajf,KAAKG,MAAM8e,YACxB4rC,gBAAiB7qD,KAAKG,MAAM0qD,gBAC5BC,kBAAmB9qD,KAAKG,MAAM2qD,qBAI1CtmD,EAAAC,QAAAvJ,cAAC6vD,EAAAtmD,QAAD,OAEJD,EAAAC,QAAAvJ,cAAA,OACI4I,UAAW0mD,GAEXhmD,EAAAC,QAAAvJ,cAAC8vD,EAAAvmD,SACG8uB,UAAWvzB,KAAKG,MAAMozB,UACtB03B,sBAAuB/nC,EACvBuS,iBAAkBz1B,KAAKG,MAAMs1B,mBAEjCjxB,EAAAC,QAAAvJ,cAAC6kC,EAAAS,eACGC,KAAMvd,EACN9nB,QAAS,IACTslC,WAAW,mBACXC,eAAA,GAEAn8B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACgwD,EAAAzmD,SACGye,YAAaA,EACb4e,gBAAiB9hC,KAAKG,MAAM2hC,+BAU5DzO,EAAMnxB,WACF08C,SAAkBr+C,UAAUkL,OAC5BwuC,iBAAkB15C,UAAUsE,KAC5B0uB,UAAkBhzB,UAAUsE,KAC5B4wB,iBAAkBl1B,UAAUsE,KAC5Bi9B,gBAAkBvhC,UAAUuE,KAC5Bo8B,QAAkB3gC,UAAUuE,KAC5B8lD,eAAkBrqD,UAAUuE,KAC5Bq8B,UAAkB5gC,UAAUuE,KAC5BixB,cAAkBx1B,UAAUxB,OAC5BkT,OAAkB1R,UAAUqE,mBAGjB,EAAAspB,EAAAvtB,SACX,SAAAU,GAAA,IAAGlI,EAAHkI,EAAGlI,QAASuH,EAAZW,EAAYX,GAAZ,OACIse,WAAmB7lB,EAAQqD,YAAYwiB,WACvCC,YAAmB9lB,EAAQqD,YAAYyiB,YACvCg7B,iBAAmB9gD,EAAQqD,YAAYy9C,iBACvC4Q,gBAAmB1xD,EAAQqD,YAAYquD,gBACvCC,kBAAmB3xD,EAAQqD,YAAYsuD,kBACvClM,SAAmBzlD,EAAQujB,MAAMkiC,SACjCnpB,iBAAmBt8B,EAAQujB,MAAM+Y,iBACjCqM,gBAAmB3oC,EAAQujB,MAAMolB,gBACjCZ,QAAmB/nC,EAAQujB,MAAMwkB,QACjC0pB,eAAmBzxD,EAAQujB,MAAMxC,SACjCinB,UAAmBhoC,EAAQujB,MAAMykB,UACjCpL,cAAmB58B,EAAQujB,MAAMqZ,cACjC9jB,OAAmB9Y,EAAQujB,MAAMzK,OACjCshB,UAAmB7yB,EAAG6yB,YAff,CAiBbF,m8BCtGFtuB,EAAAhL,EAAA,OACAA,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,8NAEMoxD,6SACFnyB,OAAkB3B,YAAY,KAC9B+zB,cAAgBzkD,EAAK0kD,gBAAgBxsD,KAArB8H,KAChB2kD,QACIC,WACIC,SAAY,OACZC,WAAY,OACZpT,SAAY,WACZqT,OAAY,EACZC,WAAY,qBACZrjC,MAAY,OACZwS,QAAY,OACZ8wB,UAAY,QACZxsC,QAAY,OACZysC,UAAY,OACZzjC,OAAY,QAEhB0jC,WACIxjC,MAAO,kBAIfyjC,kBAAoB,WAChBhxD,SAASg6B,iBAAiB,QAASpuB,EAAKykD,eAAe,MAG3DY,qBAAuB,WACnBjxD,SAASi6B,oBAAoB,QAASruB,EAAKykD,0VA3BhC/oD,UAAMvB,sDA8BLxG,GACRA,EAAE2xD,SAAyB,KAAd3xD,EAAE4gB,SACflb,KAAK44B,UAAWvB,YAAar3B,KAAKg5B,MAAM3B,8CAIvC,IAAA91B,EAAAvB,KACL,OACIwE,EAAAC,QAAAvJ,cAAA,QAAM8I,GAAG,aAAa45B,MAAO7kC,OAAO0N,UAAWzG,KAAKsrD,OAAOC,WAAansC,QAASpf,KAAKg5B,MAAM3B,WAAa,QAAU,UAC9Gr3B,KAAKG,MAAM+rD,QAAQ9rC,OAAOvZ,IAAI,SAAA2K,GAAA,IAAAK,EAAAJ,EAAAD,EAAA,GAAE1J,EAAF+J,EAAA,GAAKs6C,EAALt6C,EAAA,SAAkB,eAAN/J,GAAmC,mBAANqkD,GAAoB3nD,EAAAC,QAAAvJ,cAAA,OAAK0D,IAAKkJ,GAAGtD,EAAAC,QAAAvJ,cAAA,QAAM0iC,MAAOr8B,EAAK+pD,OAAOQ,WAAYhkD,EAArC,KAAb,IAA8DqkD,GAAkB,iBAAb,IAAOA,EAAP,YAAAp3C,EAAOo3C,IAAiBhlD,KAAKC,WAAU,EAAArC,EAAAuB,MAAK6lD,GAAI,KAAM,GAAKA,eAM1OhB,EAAKjpD,WACDgqD,QAAS3rD,UAAUyY,kBAGR,EAAAkV,EAAAvtB,SACX,SAAAyrD,GAAA,IAAGjzD,EAAHizD,EAAGjzD,QAAH,OACI+yD,QAASnzD,OAAOmzD,QAAQ/yD,EAAQujB,SAFzB,CAIbyuC,kFC1DF,QAAApxD,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEA,IAAMsyD,EAAa,SAAAhrD,GAAA,IACf4pD,EADe5pD,EACf4pD,oBACA13B,EAFelyB,EAEfkyB,UACAkC,EAHep0B,EAGfo0B,iBAHe,OAKflC,EACI/uB,EAAAC,QAAAvJ,cAACoxD,EAAA7nD,SACGgxB,iBAAkBA,IAGtBjxB,EAAAC,QAAAvJ,cAACqxD,EAAA9nD,SACGwmD,oBAAqBA,EACrBx1B,iBAAkBA,KAI9B42B,EAAWnqD,WACP+oD,oBAAqB1qD,UAAUsE,KAC/B0uB,UAAqBhzB,UAAUsE,KAC/B4wB,iBAAqBl1B,UAAUsE,gBAGpBwnD,iFC3Bf,QAAAtyD,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMyyD,EAAc,SAAAnrD,GAAA,IAAG4pD,EAAH5pD,EAAG4pD,oBAAqBx1B,EAAxBp0B,EAAwBo0B,iBAAxB,OAChBjxB,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,iBACvBgoD,0BAA2BxB,KAGzBx1B,GAAqBw1B,EAGnBzmD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,YAAU4I,UAAU,eAChBU,EAAAC,QAAAvJ,cAACwxD,EAAAjoD,QAAD,OAEJD,EAAAC,QAAAvJ,cAACyxD,EAAAloD,QAAD,MACAD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAAC0xD,EAAAnoD,QAAD,QARRD,EAAAC,QAAAvJ,cAACy7B,EAAAlyB,QAAD,QAeZ+nD,EAAYtqD,WACR+oD,oBAAqB1qD,UAAUsE,KAC/B4wB,iBAAqBl1B,UAAUsE,gBAGpB2nD,8UClCfzyD,EAAA,QACAA,EAAA,IACA8yD,EAAA9yD,EAAA,SACAA,EAAA,UACAA,EAAA,6DAEM+yD,cACF,SAAAA,EAAY3sD,gGAAOqB,CAAAxB,KAAA8sD,GAAA,IAAAnmD,mKAAA7E,CAAA9B,MAAA8sD,EAAA/qD,WAAAhJ,OAAAiJ,eAAA8qD,IAAA5zD,KAAA8G,KACTG,IADS,OAAAwG,EAenBomD,aAAe,SAACz8C,GACRA,EAAKhS,QAAUqI,EAAKxG,MAAM7B,OAC1BqI,EAAKxG,MAAM+Z,UAAWhd,QAAUW,KAAM8I,EAAKxG,MAAMtC,KAAMS,MAAOgS,EAAKhS,SAEvEqI,EAAKqmD,oBAnBUrmD,EAsBnBsmD,cAAgB,SAAC30C,GACb3R,EAAK6zB,YAAcliB,GAvBJ3R,EA0BnB+zB,mBAAqB,SAACh+B,GACdiK,EAAK6zB,cAAgB7zB,EAAK6zB,YAAYG,SAASj+B,EAAMQ,SAAWyJ,EAAKqyB,MAAMk0B,gBAC3EvmD,EAAKiyB,UAAWs0B,gBAAgB,KA5BrBvmD,EAgCnBqmD,iBAAmB,WACfrmD,EAAKiyB,UAAWs0B,gBAAiBvmD,EAAKqyB,MAAMk0B,kBAjC7BvmD,EAoCnBwmD,eAAiB,WAAM,IAAAC,EACKzmD,EAAKxG,MAArB8U,EADWm4C,EACXn4C,KAAM3W,EADK8uD,EACL9uD,MAEV8F,EAAO,GAOX,OANI6Q,GACAlc,OAAO0J,KAAKwS,GAAMkM,KAAK,SAAAviB,GAEnB,OADAwF,EAJY,SAAC8Q,GAAD,OAAeA,EAAS9I,KAAK,SAAAkE,GAAA,OAAQA,EAAKhS,QAAUA,SAAc8F,KAIvEipD,CAAYp4C,EAAKrW,MAIzBwF,GA9CQuC,EAiDnB2mD,UAAY,WACR,IAAMC,GAAqB,6BAO3B,OANI5mD,EAAKxG,MAAMozB,UACXg6B,EAAkBz0D,KAAK,eAEvBy0D,EAAkBz0D,KAAK,gBAEvB6N,EAAKqyB,MAAMk0B,gBAAgBK,EAAkBz0D,KAAK,QAC/Cy0D,GAvDP5mD,EAAKqyB,OACDk0B,gBAAgB,GAHLvmD,qUADUtE,UAAMo7B,8DAS/B1iC,SAASg6B,iBAAiB,YAAa/0B,KAAK06B,mEAI5C3/B,SAASi6B,oBAAoB,YAAah1B,KAAK06B,qDAiD/C,IAAM6yB,EAAoBvtD,KAAKstD,YAE/B,OACI9oD,EAAAC,QAAAvJ,cAAA,OACIyE,IAAKK,KAAKitD,cACVnpD,UAAWypD,EAAkB3gD,KAAK,KAClCzI,SAAS,KAETK,EAAAC,QAAAvJ,cAAA,OACI4I,UAAA,4BAAsC9D,KAAKg5B,MAAMk0B,eAAiB,UAAY,IAC9EhpD,QAASlE,KAAKgtD,kBAEdxoD,EAAAC,QAAAvJ,cAAC2xD,EAAAW,mBAAkBC,SAAUztD,KAAKG,MAAM7B,QACxCkG,EAAAC,QAAAvJ,cAAA,QAAM2C,KAAMmC,KAAKG,MAAMtC,KAAMS,MAAO0B,KAAKG,MAAM7B,OAC1C0B,KAAKmtD,mBAId3oD,EAAAC,QAAAvJ,cAACwyD,EAAAjpD,SACG8uB,UAAWvzB,KAAKG,MAAMozB,UACtBtc,KAAMjX,KAAKg5B,MAAMk0B,eACjBj4B,QAASj1B,KAAKgtD,kBAEdxoD,EAAAC,QAAAvJ,cAACyyD,EAAAlpD,SACGwQ,KAAMjV,KAAKG,MAAM8U,KACjBpX,KAAMmC,KAAKG,MAAMtC,KACjBS,MAAO0B,KAAKG,MAAM7B,MAClByuD,aAAc/sD,KAAK+sD,0BAQ3CD,EAAmB5qD,WACfqxB,UAAWhzB,UAAUsE,KACrBoQ,KAAW1U,UAAUxB,OACrBlB,KAAW0C,UAAUqE,OACrBsV,SAAW3Z,UAAUuE,KACrBxG,MAAWiC,UAAUqE,kBAGVkoD,4GC/Gf,QAAA/yD,EAAA,QACAA,EAAA,IACAq7B,EAAAr7B,EAAA,wDAEA,IAAMyzD,EAAoB,SAAAnsD,GAAkB,IAAfosD,EAAepsD,EAAfosD,SACrBG,SACJ,GAAIH,EACA,OAAQA,GACJ,IAAK,YACDG,EACIppD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,UAGbwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,UAKrB,MACJ,IAAK,kBACD4wD,EACIppD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,WAGbwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,WAKrB,MACJ,IAAK,WACD4wD,EACIppD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,kBAGbwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,kBAKrB,MACJ,IAAK,MACD4wD,EACIppD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,gBAGbwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,kBAKrB,MACJ,IAAK,OACD4wD,EACIppD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,WAGbwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,eAKrB,MACJ,IAAK,aACD4wD,EACIppD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,gBAGbwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,gBAKrB,MACJ,IAAK,WACD4wD,EACIppD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,eAGbwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,eAKrB,MACJ,IAAK,aACD4wD,EACIppD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,eAGbwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,iBAKrB,MACJ,IAAK,QACD4wD,EACIppD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,cAGbwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,cAKrB,MACJ,IAAK,QACD4wD,EACIppD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,YAGbwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,aAKrB,MACJ,IAAK,UACD4wD,EACIppD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,iBAIjB,MACJ,IAAK,SACD4wD,EACIppD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,gBAIjB,MACJ,IAAK,cACD4wD,EACIppD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,eAIjB,MACJ,QACI4wD,EACIppD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACk6B,EAAAgB,eACGtyB,UAAU,gBACV9G,KAAK,aAO7B,OACIwH,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wBACV8pD,IAKbJ,EAAkBtrD,WACdurD,SAAUltD,UAAUqE,UAGf4oD,mGCjPT,QAAAzzD,EAAA,QACAA,EAAA,IACAgmC,EAAAhmC,EAAA,QACAA,EAAA,yDAEA,IAAM8zD,EAAqB,SAAAxsD,GAAA,IACvB3B,EADuB2B,EACvB3B,SACA6zB,EAFuBlyB,EAEvBkyB,UACAtc,EAHuB5V,EAGvB4V,KACAge,EAJuB5zB,EAIvB4zB,QAJuB,OAMvB1B,EACI/uB,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,iBAChBU,EAAAC,QAAAvJ,cAAC4yD,EAAArpD,SACG+P,MAAM,sBACNof,QAAS3c,EACTge,QAASA,GAERv1B,IAIT8E,EAAAC,QAAAvJ,cAAC6kC,EAAAS,eACGC,GAAIxpB,EACJ7b,QAAS,IACTslC,WAAW,uBACXC,eAAA,GAEAn8B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBACVpE,MAMrBmuD,EAAmB3rD,WACfxC,SAAWa,UAAUwtD,QACrBx6B,UAAWhzB,UAAUsE,KACrBowB,QAAW10B,UAAUuE,KACrBmS,KAAW1W,UAAUsE,gBAGVgpD,iFC5Cf,IAAAruD,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAMi0D,EAAmB,SAAA3sD,GAAA,IACrB0rD,EADqB1rD,EACrB0rD,aACA93C,EAFqB5T,EAErB4T,KACApX,EAHqBwD,EAGrBxD,KACAS,EAJqB+C,EAIrB/C,MAJqB,OAOjBvF,OAAO0J,KAAKwS,GAAMpO,IAAI,SAAAjI,GAAA,QAEhB,SAAU,UAAUi5B,SAASj5B,IAC/B4F,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,UAAS1M,IAAKA,GACjB4F,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,cACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,cAAaU,EAAAC,QAAAvJ,cAAA,YAAO0D,IACnC4F,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,cACXU,EAAAC,QAAAvJ,cAAC+yD,EAAAxpD,SACG6yC,UAAWriC,EAAKrW,GAChBf,KAAMA,EACNS,MAAOA,EACPyuD,aAAcA,UAQ1CiB,EAAiB9rD,WACb6qD,aAAcxsD,UAAUuE,KACxBmQ,KAAc8G,YAAcmyC,yBAC5BrwD,KAAc0C,UAAUqE,OACxBtG,MAAciC,UAAUqE,kBAGbopD,iFCtCf,IAAAxuD,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA8yD,EAAA9yD,EAAA,SACAA,EAAA,wDAEA,IAAMo0D,EAAmB,SAAA9sD,GAAA,IACrBi2C,EADqBj2C,EACrBi2C,UACAz5C,EAFqBwD,EAErBxD,KACAS,EAHqB+C,EAGrB/C,MACAyuD,EAJqB1rD,EAIrB0rD,aAJqB,OAMrBzV,EAAUzwC,IAAI,SAAC/K,EAAUk6B,GAAX,MACU,oBAAnBl6B,EAASwC,OACVkG,EAAAC,QAAAvJ,cAAA,OACI0D,IAAKo3B,EACLlyB,UAAA,cAAwBxF,IAAUxC,EAASwC,MAAQ,WAAa,IAChET,KAAMA,EACNS,MAAOxC,EAASwC,MAChB4F,QAAS,kBAAM6oD,EAAajxD,KAE5B0I,EAAAC,QAAAvJ,cAAC2xD,EAAAW,mBAAkBC,SAAU3xD,EAASwC,QACtCkG,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,kBACXhI,EAASsI,MAEdI,EAAAC,QAAAvJ,cAAC6d,EAAAtU,SACGsT,UAAU,OACVC,KAAK,aAMrBm2C,EAAiBjsD,WACbo1C,UAAcv7B,YAAcC,uBAC5B+wC,aAAcxsD,UAAUuE,KACxBjH,KAAc0C,UAAUqE,OACxBtG,MAAciC,UAAUqE,kBAGbupD,8FCxCfp1D,OAAA0J,KAAA2rD,GAAAzrD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAkwD,EAAAxvD,qBACA7F,OAAA0J,KAAA4rD,GAAA1rD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAmwD,EAAAzvD,wWCDA7E,EAAA,QACAA,EAAA,IACAs0D,EAAAt0D,EAAA,+NAEM+8B,6SACFkC,OACImB,SAAS,KAWb8yB,cAAgB,SAAC30C,GACb3R,EAAK6zB,YAAcliB,KAGvBoiB,mBAAqB,SAACh+B,GACdiK,EAAK6zB,cAAgB7zB,EAAK6zB,YAAYG,SAASj+B,EAAMQ,SAAWyJ,EAAKqyB,MAAMmB,SAC3ExzB,EAAKiyB,UAAWuB,SAAS,OAIjCm0B,YAAc,WACV3nD,EAAKiyB,UAAWuB,SAAS,OAG7Bo0B,WAAa,SAAC7xD,GACLiK,EAAK6zB,YAAYG,SAASj+B,EAAMQ,SACjCyJ,EAAKiyB,UAAWuB,SAAS,+UA7BZ93B,UAAMvB,0DAMvB/F,SAASg6B,iBAAiB,YAAa/0B,KAAK06B,mEAI5C3/B,SAASi6B,oBAAoB,YAAah1B,KAAK06B,qDAuB1C,IAAAn5B,EAAAvB,KACCwuD,EACFhqD,EAAAC,QAAAvJ,cAACmzD,EAAAj3B,mBACGG,WAAYv3B,KAAKitD,cACjBl1C,UAAW/X,KAAKG,MAAM4X,UACtBgf,YAAa/2B,KAAKG,MAAM42B,YACxBC,aAAch3B,KAAKG,MAAM62B,aACzBK,WAAYr3B,KAAKg5B,MAAMmB,QACvBriB,QAAS9X,KAAKG,MAAM2X,QACpBwf,UAAWt3B,KAAKG,MAAMT,SAASS,MAAM+D,QACrC+wB,QAASj1B,KAAKsuD,cAGtB,OACI9pD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACKjJ,UAAMy7B,SAASj3B,IAAI7G,KAAKG,MAAMT,SAAU,SAAAq+B,GAAA,OACrC17B,UAAMosD,aAAa1wB,GACf75B,QAAS3C,EAAKgtD,YACfC,eAOvB13B,EAAW50B,WACP6V,UAAcxX,UAAUqE,OACxBmyB,YAAcx2B,UAAUqE,OACxBlF,SAAca,UAAUxB,OACxBi4B,aAAcz2B,UAAUqE,OACxBkT,QAAcvX,UAAUqE,UAGnBkyB,4FCtET,QAAA/8B,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,SACAA,EAAA,KACA20D,EAAA30D,EAAA,wDAEA,IAAM40D,EAAe,SAAAttD,GAAA,IACjBuJ,EADiBvJ,EACjBuJ,SACAisB,EAFiBx1B,EAEjBw1B,cACAf,EAHiBz0B,EAGjBy0B,cAHiB,OAKjBtxB,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACMwqB,EAAcxb,YAAcwb,EAAc9xB,GACxCQ,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWgyB,EAAcxb,UAAY,qBAAuB,IAC7D9V,EAAAC,QAAAvJ,cAAA,YAAO46B,EAAche,UAGzBtT,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,yBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBACXU,EAAAC,QAAAvJ,cAAA,YAAM,EAAAuS,EAAA2C,UAAS,OAAQ0lB,EAAc0vB,mBAAmBphD,OACxDI,EAAAC,QAAAvJ,cAAA,WAAKsJ,EAAAC,QAAAvJ,cAACo7B,EAAA7xB,SAAMiG,OAAQorB,EAAc0vB,mBAAmBlnD,MAAOsM,SAAUA,KACtEpG,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,6BACQ,OAAlB+yB,GAA0BryB,EAAAC,QAAAvJ,cAACwzD,EAAAE,eAAc5xD,KAAM65B,EAAgB,SAAW,WAGnFryB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,oBACZU,EAAAC,QAAAvJ,cAAC6d,EAAAtU,SAAQsT,UAAU,OAAOC,KAAK,OAAOF,QAASge,EAAche,cAOjF62C,EAAazsD,WACT0I,SAAerK,UAAUqE,OACzBiyB,cAAet2B,UAAUsE,KACzBixB,cAAev1B,UAAUxB,kBAGd4vD,wGCxCf,QAAA50D,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM60D,EAAgB,SAAAvtD,GAAyB,IAAtBrE,EAAsBqE,EAAtBrE,KAAM8G,EAAgBzC,EAAhByC,UACvBwmD,SACJ,GAAIttD,EACA,OAAQA,GACJ,IAAK,SACDstD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,iBAGlD,MACJ,IAAK,OACD0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,kBAGlD,MACJ,QACI0sD,EACI9lD,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,gVAK1D,OACI4G,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,YAAYqL,MAAM,8BAClGoiC,IAMbsE,EAAc1sD,WACV4B,UAAWvD,UAAUqE,OACrB5H,KAAWuD,UAAUqE,UAGhBgqD,kLC1CFnqD,iGCAP,QAAA1K,EAAA,QACAA,EAAA,IACAiL,EAAAjL,EAAA,GACAyJ,EAAAzJ,EAAA,SACAA,EAAA,MACA80D,EAAA90D,EAAA,wDAKA,IAAM+0D,EAAa,SAAAztD,GAA0C,IAAvCuJ,EAAuCvJ,EAAvCuJ,SAAUmrB,EAA6B10B,EAA7B00B,cAAe7xB,EAAc7C,EAAd6C,QACrCoW,IAAcyb,EAAc54B,MAC9B4xD,SACJ,GAAIz0C,EAEA,QADmB,EAAAtV,EAAAoK,kBAAiB2mB,GAAgB,QAAS,UAEzD,IAAK,wBACDg5B,EAAiBvqD,EAAAC,QAAAvJ,cAAC2zD,EAAAG,WAAD,MACjB,MACJ,IAAK,sBACDD,EAAiBvqD,EAAAC,QAAAvJ,cAAC2zD,EAAAI,aAAD,MACjB,MACJ,QACIF,EAAiBvqD,EAAAC,QAAAvJ,cAAC2zD,EAAAK,cAAap3C,QAASie,EAAc54B,MAAM2a,UAKxE,OACItT,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,sBAAsBI,QAASA,GAC1CM,EAAAC,QAAAvJ,cAACsI,EAAA6tB,WAAUvtB,UAAU,cAExBwW,EACGy0C,EAEAvqD,EAAAC,QAAAvJ,cAACi0D,EAAA1qD,SACGsxB,cAAeA,EAAcpS,IAC7B/Y,SAAUA,MAO9BkkD,EAAW5sD,WACP0I,SAAerK,UAAUqE,OACzBV,QAAe3D,UAAUuE,KACzBixB,cAAex1B,UAAUxB,kBAGd+vD,iFCnDf,QAAA/0D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACA4T,EAAA5T,EAAA,uDAEA,IAAMq1D,EAAiB,SAAA/tD,GAAA,IAAGuJ,EAAHvJ,EAAGuJ,SAAUmrB,EAAb10B,EAAa00B,cAAb,OACnBvxB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,2BACXU,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,eAAS,EAAAuS,EAAA2C,UAAS,mBAEtB5L,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,UAAS,EAAA2J,EAAA2C,UAAS,aAAlC,KACA5L,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,aACZU,EAAAC,QAAAvJ,cAAA,KAAG4I,WAAW,EAAAqU,EAAA1T,SAAW,UAAWmG,EAASW,iBAC5CwqB,EAAc/X,YAGvBxZ,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,UAAS,EAAA2J,EAAA2C,UAAS,UAAlC,KACA5L,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,UACZU,EAAAC,QAAAvJ,cAAA,KAAG4I,WAAW,EAAAqU,EAAA1T,SAAW,UAAWmG,EAASW,iBAC5CwqB,EAAc3X,SAGvB5Z,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,UAAS,EAAA2J,EAAA2C,UAAS,SAAlC,KADJ,KACyD,EAAAzC,EAAAynC,aAAuC,IAA3Brf,EAAcnf,aAEnFpS,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,UAAS,EAAA2J,EAAA2C,UAAS,eAAlC,KADJ,IAC+D2lB,EAAc7S,aAE7E1e,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,UAAS,EAAA2J,EAAA2C,UAAS,kBAAlC,KADJ,IACkE2lB,EAAc4F,gBAEhFn3B,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,UAAS,EAAA2J,EAAA2C,UAAS,eAAlC,KADJ,IAC+D2lB,EAAcsL,YAKrF+tB,EAAeltD,WACX0I,SAAerK,UAAUqE,OACzBmxB,cAAex1B,UAAUxB,kBAGdqwD,8FC7Cfr2D,OAAA0J,KAAA4sD,GAAA1sD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAmxD,EAAAzwD,qBACA7F,OAAA0J,KAAA6sD,GAAA3sD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAoxD,EAAA1wD,qBACA7F,OAAA0J,KAAA8sD,GAAA5sD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAqxD,EAAA3wD,6GCFA,QAAA7E,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,0DAaSk1D,aAXY,kBACjBzqD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,0BACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAa,EAAA2J,EAAA2C,UAAS,gDACtC5L,EAAAC,QAAAvJ,cAACygB,EAAAlX,SACGX,UAAU,mBACVC,YAAA,EACAK,MAAM,EAAAqJ,EAAA2C,UAAS,oHCV3B,QAAArW,EAAA,QACAA,EAAA,uDAEA,IAAMm1D,EAAe,SAAA7tD,GAAA,IAAGyW,EAAHzW,EAAGyW,QAAH,OACjBtT,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,0BACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,aAAagU,KAIrCo3C,EAAahtD,WACT4V,QAASvX,UAAUqE,UAGdsqD,kHCbT,QAAAn1D,EAAA,IACA4kC,EAAA5kC,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,0DAgBSi1D,WAdU,kBACfxqD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,0BACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAa,EAAA2J,EAAA2C,UAAS,2CACtC5L,EAAAC,QAAAvJ,cAACygB,EAAAlX,SACGX,UAAU,mBACVC,YAAA,EACAK,MAAM,EAAAqJ,EAAA2C,UAAS,UACflM,QAASg7B,oBAEb16B,EAAAC,QAAAvJ,cAAA,UAAI,EAAAuS,EAAA2C,UAAS,8BAAgC,gBAC7C5L,EAAAC,QAAAvJ,cAAA,KAAGgS,KAAK,gBAAe1I,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,cAAa,EAAA2J,EAAA2C,UAAS,wLCf9D3L,iGCAP,QAAA1K,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,KACAy1D,EAAAz1D,EAAA,wDAEA,IAAM01D,EAAe,SAAApuD,GAAA,IAAG6C,EAAH7C,EAAG6C,QAAH,OACjBM,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,2BACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBACXU,EAAAC,QAAAvJ,cAACs0D,EAAAE,UAAS5rD,UAAU,aAExBU,EAAAC,QAAAvJ,cAAA,WAAK,EAAAuS,EAAA2C,UAAS,oBACd5L,EAAAC,QAAAvJ,cAACygB,EAAAlX,SACGX,UAAU,wBACVC,YAAA,EACAG,QAASA,EACTE,MAAM,EAAAqJ,EAAA2C,UAAS,YAEnB5L,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,iBACX,EAAA2J,EAAA2C,UAAS,qEAKtBq/C,EAAavtD,WACTgC,QAAS3D,UAAUuE,gBAGR2qD,mGC5Bf,QAAA11D,EAAA,QACAA,EAAA,uDAEA,IAAM21D,EAAW,SAAAruD,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACbU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWA,EAAWokB,MAAM,6BAA6BrL,QAAQ,aAClErY,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,UAAUqhC,UAAU,kBACxCllD,EAAAC,QAAAvJ,cAAA,QAAMitB,MAAM,IAAIC,OAAO,IAAIurB,EAAE,KAAKC,EAAE,MAAMgW,OAAO,UAAUE,GAAG,MAC9DtlD,EAAAC,QAAAvJ,cAAA,UAAQ4hB,GAAG,IAAIC,GAAG,KAAK5e,EAAE,IAAI6e,KAAK,YAClCxY,EAAAC,QAAAvJ,cAAA,QAAM0uD,OAAO,UAAUhsD,EAAE,2DAKrC8xD,EAASxtD,WACL4B,UAAWvD,UAAUqE,UAGhB8qD,mHCjBT,QAAA31D,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEa+U,oBACPjR,KAAM,aAAciD,UAAWgjD,YAC/BjmD,KAAM,WAAciD,UAAW+iD,YAC/BhmD,KAAM,UAAciD,UAAW6uD,YAC/B9xD,KAAM,aAAciD,UAAW8uD,YAC/B/xD,KAAM,SAAciD,UAAW+uD,2FCXrC,QAAA91D,EAAA,IACAyF,EAAAzF,EAAA,QAGAA,EAAA,QACAA,EAAA,IACAyQ,EAAAzQ,EAAA,QAGAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAEA,IAAM81D,EAAS,SAAAxuD,GAaT,IAZFqJ,EAYErJ,EAZFqJ,OACA8I,EAWEnS,EAXFmS,MACAI,EAUEvS,EAVFuS,WACAo1B,EASE3nC,EATF2nC,gBACAp+B,EAQEvJ,EARFuJ,SACA42C,EAOEngD,EAPFmgD,eACA9B,EAMEr+C,EANFq+C,iBACA3nB,EAKE12B,EALF02B,aACAC,EAIE32B,EAJF22B,gBACA83B,EAGEzuD,EAHFyuD,mBACA51C,EAEE7Y,EAFF6Y,SACAjS,EACE5G,EADF4G,kBAEA,GAAI8vB,EACA,OACIvzB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,6BACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,uBAChBU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,8BAA8B8P,EAAWxH,KAAK,SAAArO,GAAA,OAAKA,EAAEO,QAAUkV,SAAcpP,MAFjG,IAIII,EAAAC,QAAAvJ,cAAA,SAAGsJ,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAA,YAAuB8G,GAAY,IAAIW,kBAC/C,EAAAf,EAAA8jC,UAAS5jC,EAAQ,IAI9B,IAAMqlD,GAAyB,EAAA53C,EAAA1T,SAAW,oBACtCurD,iBAAkBF,IAGtB,OACItrD,EAAAC,QAAAvJ,cAACs7B,EAAA/xB,QAAD,KACID,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWisD,GACZvrD,EAAAC,QAAAvJ,cAAC+0D,EAAAxrD,SACGyrD,mBAAA,EACAl4B,gBAAiBA,EACjB/iB,KAAMrB,EACN/V,KAAK,QACLS,MAAOkV,EACP0G,SAAUA,KAEZ41C,GACEtrD,EAAAC,QAAAvJ,cAAC+0D,EAAAxrD,SACGyrD,mBAAA,EACAl4B,gBAAiBA,EACjB/iB,KAAM+zB,EACNnrC,KAAK,WACLS,MAAOsM,EACPsP,SAAUA,IAGlB1V,EAAAC,QAAAvJ,cAAC8/B,EAAAv2B,SACG4U,eAAgBpR,EAAkByC,OAClC4O,mBAAmB,EAAA9O,EAAAgkC,kBAAiB5jC,GACpC4O,UAAA,EACAwe,gBAAiBA,EACjBje,WAAY,GACZlc,KAAK,SACLqc,SAAUA,EACVE,OAAQ01C,EAAqBllD,EAAW,KACxC5N,KAAK,SACLsB,MAAOoM,KAGflG,EAAAC,QAAAvJ,cAACi1D,EAAA1rD,SAAY+8C,eAAgBA,EAAgBtnC,SAAUA,EAAUhB,QAASwmC,MAKtFmQ,EAAO3tD,WACHwI,OAAQnK,UAAUiL,WACdjL,UAAUkL,OACVlL,UAAUqE,SAEd4O,MAAoBjT,UAAUqE,OAC9BgP,WAAoBmI,YAAcC,uBAClCgtB,gBAAoBjtB,YAAcq0C,iBAClCxlD,SAAoBrK,UAAUqE,OAC9B48C,eAAoBjhD,UAAUsE,KAC9B66C,iBAAoBn/C,UAAUkL,OAC9BssB,aAAoBx3B,UAAUsE,KAC9BmzB,gBAAoBz3B,UAAUsE,KAC9BirD,mBAAoBvvD,UAAUsE,KAC9BqV,SAAoB3Z,UAAUuE,KAC9BmD,kBAAoB1H,UAAUxB,mBAGnB,EAAAS,EAAAwB,UAAS6uD,mfCpGxB91D,EAAA,IACAgL,EAAAhL,EAAA,GACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAgmC,EAAAhmC,EAAA,IACAuuD,EAAAvuD,EAAA,KACA25B,EAAA35B,EAAA,QACAA,EAAA,UACAA,EAAA,MACAopB,EAAAppB,EAAA,+NAOMs2D,6SACFC,SAAWjuD,UAAMkuD,cACjBv3B,OACIw3B,YAAiB,EAAArtC,EAAAstC,kBAAiB9pD,EAAKxG,MAAM8U,KAAMtO,EAAKxG,MAAM7B,OAAOmN,OACrEilD,iBAAiB,KAWrB3D,aAAe,SAACz8C,GACRA,EAAKhS,QAAUqI,EAAKxG,MAAM7B,OAC1BqI,EAAKxG,MAAM+Z,UAAWhd,QAAUW,KAAM8I,EAAKxG,MAAMtC,KAAMS,MAAOgS,EAAKhS,SAEvEqI,EAAKqmD,sBAGTC,cAAgB,SAAC30C,GAAD,OAAU3R,EAAK6zB,YAAcliB,KAE7CoiB,mBAAqB,SAACh+B,GACdiK,EAAK6zB,cAAgB7zB,EAAK6zB,YAAYG,SAASj+B,EAAMQ,SAAWyJ,EAAKqyB,MAAM03B,iBAC3E/pD,EAAKiyB,UAAW83B,iBAAiB,OAIzC1D,iBAAmB,WACfrmD,EAAKiyB,SAAS,SAACI,GAAD,OAAc03B,iBAAkB13B,EAAM03B,sBAGxDC,aAAe,SAACj0D,GACZ,IAAIiK,EAAKiqD,iBACT,GAAsB,IAAlBl0D,EAAMwe,QAAV,CAMAxe,EAAMmjD,iBACN,IAAMvjC,GAAQ,EAAA6G,EAAAstC,kBAAiB9pD,EAAKxG,MAAM8U,KAAMtO,EAAKxG,MAAM7B,OACrDA,GAAQ,EAAA6kB,EAAA0tC,mBAAkBlqD,EAAKxG,MAAM8U,KAAMtO,EAAKqyB,MAAMw3B,YAO5D,OAAQ9zD,EAAMwe,SACV,KAAK,GACL,KAAK,GAPDvU,EAAKqyB,MAAM03B,iBAAmB/pD,EAAKxG,MAAM7B,QAAUA,GACnDqI,EAAKxG,MAAM+Z,UAAWhd,QAAUW,KAAM8I,EAAKxG,MAAMtC,KAAMS,WAE3DqI,EAAKqmD,mBAMD,MACJ,KAAK,GACD,GAAIrmD,EAAKqyB,MAAM03B,gBAAiB,CAC5B,IAAMI,GAAa,EAAA3tC,EAAA4tC,cAAapqD,EAAKqyB,MAAMw3B,WAAYl0C,EAAM1jB,QAC7D+N,EAAKiyB,UAAW43B,WAAYM,IAEhC,MACJ,KAAK,GACD,GAAInqD,EAAKqyB,MAAM03B,gBAAiB,CAC5B,IAAMM,GAAa,EAAA7tC,EAAA8tC,cAAatqD,EAAKqyB,MAAMw3B,WAAYl0C,EAAM1jB,QAC7D+N,EAAKiyB,UAAW43B,WAAYQ,SACpBrqD,EAAKxG,MAAM+vD,mBACnBvpD,EAAKqmD,mBAET,MACJ,KAAK,IACIrmD,EAAKqyB,MAAM03B,iBAAmB/pD,EAAKxG,MAAM+vD,mBAC1CvpD,EAAKqmD,mBAET,MACJ,KAAK,GACGrmD,EAAKqyB,MAAM03B,iBAAmB/pD,EAAKxG,MAAM+vD,mBACzCvpD,EAAKqmD,mBAOjB,GAAyB,IAArBtwD,EAAMkC,IAAIhG,OAAc,CACxB,IAAMs4D,EAAOx0D,EAAMkC,IAAI2M,cACjB4lD,EAAaxqD,EAAKxG,MAAM8U,KAAKpO,IAAI,SAAA8sC,GAAA,OAAKA,EAAEvvC,KAAK,GAAGmH,gBAClDyqB,SAEArvB,EAAKqyB,MAAMw3B,aACXx6B,EAAMm7B,EAAWxiD,QAAQuiD,EAAMvqD,EAAKqyB,MAAMw3B,WAAa,SAE/ClzD,IAAR04B,IAA8B,IAATA,IACrBA,EAAMm7B,EAAWxiD,QAAQuiD,IAEzBl7B,GAAO,GACPrvB,EAAKiyB,UAAW43B,WAAYx6B,UA3D5BrvB,EAAKqyB,MAAM03B,iBACX/pD,EAAKqmD,8VAtCE3qD,UAAMvB,0DAQrB/F,SAASg6B,iBAAiB,YAAa/0B,KAAK06B,mEAI5C3/B,SAASi6B,oBAAoB,YAAah1B,KAAK06B,qDAyF1C,IAAAn5B,EAAAvB,KACL,GAAIA,KAAKG,MAAM63B,gBACX,OACIxzB,EAAAC,QAAAvJ,cAACk2D,EAAA3sD,SACG5G,KAAMmC,KAAKG,MAAMtC,KACjBS,MAAO0B,KAAKG,MAAM7B,MAClB2W,KAAMjV,KAAKG,MAAM8U,KACjBiF,SAAUla,KAAKG,MAAM+Z,WAMjC,IAAMm3C,GACF3H,+BAAgC1pD,KAAKg5B,MAAMs4B,WAA3C,uBAMEV,GAAmB,EAAA7rD,EAAAwsD,aAAYvxD,KAAKG,MAAM8U,SACzCjV,KAAKG,MAAM8U,KAAKrc,OAAS,MAEzBG,OAAO0J,KAAKzC,KAAKG,MAAM8U,MAAMrc,OAAS,GAE7C,OACI4L,EAAAC,QAAAvJ,cAAA,OACIyE,IAAKK,KAAKitD,cACVnpD,WAAW,EAAAqU,EAAA1T,SAAW,qBAAsBzE,KAAKG,MAAM2D,WACnD0tD,2BAAgCxxD,KAAKG,MAAM+vD,kBAC3CuB,2BAAgCzxD,KAAKg5B,MAAM03B,gBAC3CgB,+BAAgCd,KAGpCpsD,EAAAC,QAAAvJ,cAAA,OACI4I,WAAW,EAAAqU,EAAA1T,SAAW,qBAClBktD,6BAA8B3xD,KAAKg5B,MAAM03B,kBAE7CvsD,SAAUysD,EAAmB,KAAO,IACpC1sD,QAASlE,KAAKgtD,iBACd/xC,UAAWjb,KAAK2wD,cAEhBnsD,EAAAC,QAAAvJ,cAAA,QAAM2C,KAAMmC,KAAKG,MAAMtC,KAAMS,MAAO0B,KAAKG,MAAM7B,QAC1C,EAAA6kB,EAAAgqC,gBAAentD,KAAKG,MAAM8U,KAAMjV,KAAKG,MAAM7B,UAI/CsyD,GAAoBpsD,EAAAC,QAAAvJ,cAACw4B,EAAAs1B,WAAUllD,WAAW,EAAAqU,EAAA1T,SAAW,gBAClDmtD,qBAAsB5xD,KAAKG,MAAM+vD,sBAIzC1rD,EAAAC,QAAAvJ,cAAC6kC,EAAAS,eACGC,GAAIzgC,KAAKg5B,MAAM03B,gBACft1D,QAAS,IACTslC,YACImxB,MAAW,wBACXC,UAAW,8BACXC,KAAW,wBAEfC,UA1CS,kBAAMzwD,EAAKq3B,UAAW04B,WAAY/vD,EAAK+uD,SAASxgC,QAAQmiC,eA2CjEtxB,eAAA,GAEAn8B,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,kBACvBytD,uBAAwBlyD,KAAKG,MAAM+vD,qBAGnC1rD,EAAAC,QAAAvJ,cAAA,OACI4I,WAAW,EAAAqU,EAAA1T,SAAW,QAClB0tD,aAAcnyD,KAAKG,MAAM+vD,oBAE7BvwD,IAAKK,KAAKswD,SACV1yB,MAAO59B,KAAKG,MAAM+vD,kBAAoBmB,OAAuB/zD,GAE7DkH,EAAAC,QAAAvJ,cAACotD,EAAAO,YACGuJ,YAAA,EACAtJ,UAAA,EACAuJ,cAAe,IACfC,sBAAuB,SAAAnyD,GAAA,OAASqE,EAAAC,QAAAvJ,cAAA,MAAAmF,KAASF,GAAO2D,UAAU,mBAAmB85B,OAASxe,QAAS,YAC/FmzC,sBAAuB,SAAApyD,GAAA,OAASqE,EAAAC,QAAAvJ,cAAA,MAAAmF,KAASF,GAAO2D,UAAU,mBAAmB85B,OAASxe,QAAS,cAE9F,EAAAra,EAAAwsD,aAAYvxD,KAAKG,MAAM8U,MACpBzQ,EAAAC,QAAAvJ,cAACs3D,EAAA/tD,SACGguD,eAAgBzyD,KAAKg5B,MAAMw3B,WAC3BkC,MAAO1yD,KAAKG,MAAM8U,KAClBpX,KAAMmC,KAAKG,MAAMtC,KACjBS,MAAO0B,KAAKG,MAAM7B,MAClByuD,aAAc/sD,KAAK+sD,eAEvBh0D,OAAO0J,KAAKzC,KAAKG,MAAM8U,MAAMpO,IAAI,SAAAjI,GAAA,OAC7B4F,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,UAAS1M,IAAKA,GACjB4F,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,eAAcU,EAAAC,QAAAvJ,cAAA,YAAO0D,IACpC4F,EAAAC,QAAAvJ,cAACs3D,EAAA/tD,SACGguD,eAAgBlxD,EAAKy3B,MAAMw3B,WAC3BkC,MAAOnxD,EAAKpB,MAAM8U,KAAKrW,GACvBf,KAAM0D,EAAKpB,MAAMtC,KACjBS,MAAOiD,EAAKpB,MAAM7B,MAClByuD,aAAcxrD,EAAKwrD,gCAcnEsD,EAASnuD,WACL4B,UAAmBvD,UAAUqE,OAC7BsrD,kBAAmB3vD,UAAUsE,KAC7BmzB,gBAAmBz3B,UAAUsE,KAC7BoQ,KAAmB1U,UAAUiL,WACzBjL,UAAUyY,MACVzY,UAAUxB,SAEdlB,KAAU0C,UAAUqE,OACpBsV,SAAU3Z,UAAUuE,KACpBxG,MAAUiC,UAAUiL,WAChBjL,UAAUkL,OACVlL,UAAUqE,qBAIH,EAAApF,EAAAwB,UAASqvD,kFCrPxB,QAAAt2D,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM44D,EAAQ,SAAAtxD,GAAA,IACVqxD,EADUrxD,EACVqxD,MACA70D,EAFUwD,EAEVxD,KACAS,EAHU+C,EAGV/C,MACAyuD,EAJU1rD,EAIV0rD,aACA0F,EALUpxD,EAKVoxD,eALU,OAOVC,EAAM7rD,IAAI,SAACyJ,EAAM0lB,GAAP,OACNxxB,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,UAAS1M,IAAKo3B,GACjBxxB,EAAAC,QAAAvJ,cAAA,OACI4I,WAAW,EAAAqU,EAAA1T,SAAW,cAClBmuD,uBAA2Bt0D,IAAUgS,EAAKhS,MAC1Cu0D,0BAA2BJ,IAAmBz8B,IAElDp3B,IAAKo3B,EACLn4B,KAAMA,EACNS,MAAOgS,EAAKhS,MACZ4F,QAAS6oD,EAAaluD,KAAK,KAAMyR,IAEjC9L,EAAAC,QAAAvJ,cAAA,YAAOoV,EAAKlM,WAM5BuuD,EAAMzwD,WACF6qD,aAAgBxsD,UAAUuE,KAC1B2tD,eAAgBlyD,UAAUkL,OAC1B5N,KAAgB0C,UAAUqE,OAC1BtG,MAAgBiC,UAAUiL,WACtBjL,UAAUkL,OACVlL,UAAUqE,oBAIH+tD,iFCvCf,QAAA54D,EAAA,QACAA,EAAA,uDAEA,IAAM+4D,EAAe,SAAAzxD,GAAA,IACjBxD,EADiBwD,EACjBxD,KACAoX,EAFiB5T,EAEjB4T,KACA3W,EAHiB+C,EAGjB/C,MACA4b,EAJiB7Y,EAIjB6Y,SAJiB,OAMjB1V,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBACXU,EAAAC,QAAAvJ,cAAA,UAAQ2C,KAAMA,EAAMS,MAAOA,EAAO4b,SAAUA,GACvCtY,MAAMmxD,QAAQ99C,GACXA,EAAKpO,IAAI,SAACyJ,EAAM0lB,GAAP,OACLxxB,EAAAC,QAAAvJ,cAAA,UAAQ0D,IAAKo3B,EAAK13B,MAAOgS,EAAKhS,OAAQgS,EAAKlM,QAG/CrL,OAAO0J,KAAKwS,GAAMpO,IAAI,SAAAjI,GAAA,OAClB4F,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,UAAS1M,IAAKA,GACjB4F,EAAAC,QAAAvJ,cAAA,YAAU4e,MAAOlb,GACZqW,EAAKrW,GAAKiI,IAAI,SAACyJ,EAAM0lB,GAAP,OACXxxB,EAAAC,QAAAvJ,cAAA,UAAQ0D,IAAKo3B,EAAK13B,MAAOgS,EAAKhS,OAAQgS,EAAKlM,eAS3E0uD,EAAa5wD,WACT+S,KAAM1U,UAAUiL,WACZjL,UAAUxB,OACVwB,UAAUyY,QAEdnb,KAAU0C,UAAUqE,OACpBsV,SAAU3Z,UAAUuE,KACpBxG,MAAUiC,UAAUiL,WAChBjL,UAAUkL,OACVlL,UAAUqE,oBAIHkuD,8KC1Cf,IAAA/tD,EAAAhL,EAAA,GAEaozD,iBAAiB,SAACl4C,EAAM3W,GACjC,IAAM+uD,EAAc,SAACn4C,GAAD,OAAeA,EAAS9I,KAAK,SAAAkE,GAAA,OAAQA,EAAKhS,QAAUA,SAAc8F,MAClFA,EAAO,GASX,OARI,EAAAW,EAAAwsD,aAAYt8C,GACZ7Q,EAAOipD,EAAYp4C,GAEnBlc,OAAO0J,KAAKwS,GAAMkM,KAAK,SAAAviB,GAEnB,OADAwF,EAAOipD,EAAYp4C,EAAKrW,MAIzBwF,GAGEqsD,mBAAmB,SAACx7C,EAAM3W,GACnC,IAAM+uD,EAAc,SAACn4C,GAAD,OAAcA,EAASyjC,UAAU,SAAAroC,GAAA,OAAQA,EAAKhS,QAAUA,KACxEgS,KASJ,OARI,EAAAvL,EAAAwsD,aAAYt8C,GACZ3E,GAAS7E,OAAQ4hD,EAAYp4C,GAAOrc,OAAQqc,EAAKrc,QAEjDG,OAAO0J,KAAKwS,GAAMkM,KAAK,SAAAviB,GAEnB,OADA0R,GAAS7E,OAAQ4hD,EAAYp4C,EAAKrW,IAAOhG,OAAQqc,EAAKrW,GAAKhG,UAI5D0X,GAGEugD,oBAAoB,SAAC57C,EAAMqH,GACpC,IAAM+wC,EAAc,SAACn4C,GAAD,OAAcA,EAASoH,IACvC7iB,SASJ,OARI,EAAAsL,EAAAwsD,aAAYt8C,GACZxb,EAAS4zD,EAAYp4C,GAErBlc,OAAO0J,KAAKwS,GAAMkM,KAAK,SAAAviB,GAEnB,OADAnF,EAAS4zD,EAAYp4C,EAAKrW,KACZN,QAGf7E,EAAO6E,OAGLyyD,eAAe,SAACz0C,EAAO1jB,GAEhC,OADoB0jB,EAAQ,EAAK,EAAK1jB,EAAS,EAAK0jB,EAAQ,GAInD20C,eAAe,SAAC30C,EAAO1jB,GAEhC,OADoB0jB,EAAQ,IAAO1jB,EAAS,EAAI0jB,EAAQ,kFClD5D,QAAAviB,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,SACAA,EAAA,wDAEA,IAAMi5D,EAAc,SAAA3xD,GAAA,IAChBmgD,EADgBngD,EAChBmgD,eACAtoC,EAFgB7X,EAEhB6X,QACAgB,EAHgB7Y,EAGhB6Y,SAHgB,QAKdsnC,GACEh9C,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBACXU,EAAAC,QAAAvJ,cAAC8/B,EAAAv2B,SACGT,GAAG,eACHnG,KAAK,gBACLqc,SAAUA,EACV5b,MAAM,WACNtB,KAAK,WACLkc,QAASA,IAEb1U,EAAAC,QAAAvJ,cAAA,SAAO4gB,QAAQ,iBAAgB,EAAArO,EAAA2C,UAAS,iBACxC5L,EAAAC,QAAAvJ,cAAC6d,EAAAtU,SAAQuT,KAAK,OAAOF,SAAS,EAAArK,EAAA2C,UAAS,wDAAyD2H,UAAU,WAItHi7C,EAAY9wD,WACRgX,QAAgB3Y,UAAUkL,OAC1B+1C,eAAgBjhD,UAAUsE,KAC1BqV,SAAgB3Z,UAAUuE,gBAGfkuD,iFChCf,IAAAxzD,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,wDAEA,IAAM41D,EAAU,SAAAtuD,GAOT,IANH0R,EAMG1R,EANH0R,UACAG,EAKG7R,EALH6R,UACAE,EAIG/R,EAJH+R,cACA2kB,EAGG12B,EAHH02B,aACA7d,EAEG7Y,EAFH6Y,SACAjS,EACG5G,EADH4G,kBAEA,OAAI8vB,EACsB,IAAlB3kB,EAEI5O,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,+BACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,kBACfiP,GAKTvO,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,+BACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,kBACfiP,GAELvO,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,+BACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,kBACfoP,IAMb1O,EAAAC,QAAAvJ,cAACs7B,EAAA/xB,QAAD,KACID,EAAAC,QAAAvJ,cAAC8/B,EAAAv2B,SACGzH,KAAK,SACLa,KAAK,YACLS,MAAOyU,EACPmH,SAAUA,EACVb,eAAkBpR,EAAkB8K,cACpCyG,UAAA,EACAK,WAAA,IAGe,IAAlBzG,GACG5O,EAAAC,QAAAvJ,cAAC8/B,EAAAv2B,SACGzH,KAAK,SACLa,KAAK,YACLS,MAAO4U,EACPgH,SAAUA,EACVb,eAAkBpR,EAAkBiL,UACpCsG,UAAA,EACAK,WAAA,MAOpB81C,EAAQztD,WACJ6Q,UAAmBxS,UAAUqE,OAC7BsO,UAAmB3S,UAAUqE,OAC7BwO,cAAmB7S,UAAUkL,OAC7BssB,aAAmBx3B,UAAUsE,KAC7BqV,SAAmB3Z,UAAUuE,KAC7BmD,kBAAmB1H,UAAUxB,mBAGlB,EAAAS,EAAAwB,UAAS2uD,kFCxExB,QAAA51D,EAAA,IACAyF,EAAAzF,EAAA,QAGAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,MACA8T,EAAA9T,EAAA,KAGA4T,EAAA5T,EAAA,uDAUA,IAAM8pD,EAAW,SAAAxiD,GAkBX,IAjBFqO,EAiBErO,EAjBFqO,qBACAyO,EAgBE9c,EAhBF8c,SACA7O,EAeEjO,EAfFiO,cACAH,EAcE9N,EAdF8N,oBACAQ,EAaEtO,EAbFsO,iBACAoG,EAYE1U,EAZF0U,YACAW,EAWErV,EAXFqV,YACA9D,EAUEvR,EAVFuR,YACAsH,EASE7Y,EATF6Y,SACA6d,EAQE12B,EARF02B,aACAC,EAOE32B,EAPF22B,gBACApX,EAMEvf,EANFuf,YACAjQ,EAKEtP,EALFsP,SACAd,EAIExO,EAJFwO,WACA+G,EAGEvV,EAHFuV,WACAD,EAEEtV,EAFFsV,mBACA1O,EACE5G,EADF4G,kBAEMgrD,IACA7uD,MAAM,EAAAqJ,EAAA2C,UAAS,YAAa9R,MAAO,aAGnC4X,GAAqB,EAAAvI,EAAA+D,UAASqE,GAAe6K,GAC/CsyC,GAAuB,EACvBC,EAAuBxiD,EACvByiD,SACAC,SACAC,SACAC,SAEJ,GAAoB,YAAhB3gD,GAA6BjD,EAAiBD,GAC9C6jD,GAAe,EAAA1lD,EAAAkT,uBAAsBpR,EAAiBD,GAAsBqQ,IAAKzQ,GACjFgkD,GAAe,EAAAzlD,EAAAkT,uBAAsBpR,EAAiBD,GAAsBuQ,IAAK3Q,QAE9E,GAAoB,YAAhBsD,EAA2B,CAClC,IAAM4gD,EAAqB7jD,EAAiB8jD,MAAQ9jD,EAAiB8jD,MAAMxzC,IAAM,QAC3EyzC,GACF,EAAA/lD,EAAAkoC,UAAQ,EAAAloC,EAAA+D,UAAS7B,GAAc+Q,IAAe,EAAAjT,EAAA2D,aAAYsF,GAAcA,EAAagK,EAAY5P,OAAO,UACtG2iD,GAA6B,EAAA9lD,EAAAsI,yBAAwBhH,GAK3D,GAFA+jD,KAA0BrjD,GAAcqG,EAAc09C,QAAO,EAAAjmD,EAAA+D,UAASkP,GAAc,SAAW+yC,EAErE,CACtB,IAAME,GAA2B,EAAAlmD,EAAAkoC,SAAQ3/B,EAAcI,QAASo9C,EAAgCp9C,QAAQC,IAAI,EAAG,UAAUvF,OAAO,UAC1H8iD,GAA2B,EAAAnmD,EAAAkoC,SAAQge,EAAiBv9C,QAASK,EAAmBpX,OAAO,GAAG,IAC1Fw0D,EAA6F,IAAlEF,EAAiB18C,KAAKu8C,EAAiC,OAExFP,IACIl8C,KAAO88C,EAAsBF,EAAiBv9C,QAAQ2/B,QAAQ,OAAS4d,EAAiBv9C,QAExF9D,MAAOuhD,GAAsB,EAAApmD,EAAAuJ,SAAQ28C,EAAiBv9C,QAAQgB,SAAS,GAAI,UAAWw8C,GAA4BA,EAAyBx9C,UAG/I+8C,EAAkBK,EAAgCp9C,QAAQ2/B,QAAQ,OAClEmd,EAAoBM,EAAgCp9C,QAAQC,IACxD1G,EAAa,MAAa2jD,EAAqB,eAEnDH,EAAkBK,EAAgCp9C,QAAQ2/B,QAAQ,OAClEmd,EAAoBM,EAAgCp9C,QAAQC,IAAIi9C,EAAoB,UAE/EG,GACDN,EAAgB98C,IAAI,EAAG,OAInC,GAAIwhB,EAAc,CACd,IAAMi8B,GAAsB7kD,EAAoB/C,KAAK,SAAArO,GAAA,OAAKA,EAAEO,QAAUgR,SAAsBlL,KAC5F,OACII,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,+BACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,wBACC,aAAhB8O,EACQuL,EADR,IACoB61C,EACZ99C,EAAclF,OAAO,sBAF7B,KAEuD0F,GAMpE,IAAMu9C,EAAehB,EAAY7mD,KAAK,SAAA8nD,GAAA,MAA2B,YAAjBA,EAAO51D,QACpB,IAA/B6Q,EAAoBvW,QAAkC,MAAlB0W,EAChC2kD,GACAhB,EAAYkB,MAERF,GACRhB,EAAYn6D,MAAOsL,MAAM,EAAAqJ,EAAA2C,UAAS,YAAa9R,MAAO,YAG1D,IAAM81D,GAA0B,EAAAj8C,EAAA1T,SAAW,qBACvC4vD,WAAYnB,IAGhB,OACI1uD,EAAAC,QAAAvJ,cAACs7B,EAAA/xB,QAAD,KACID,EAAAC,QAAAvJ,cAAC+0D,EAAAxrD,SACGyrD,mBAAA,EACAl4B,gBAAiBA,EACjB/iB,KAAMg+C,EACNp1D,KAAK,cACLS,MAAOsU,EACPsH,SAAUA,IAGG,aAAhBtH,EACGpO,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,sBACXU,EAAAC,QAAAvJ,cAAC+0D,EAAAxrD,SACGyrD,mBAAA,EACAl4B,gBAAiBA,EACjB/iB,KAAM9F,EACNtR,KAAK,gBACLS,MAAOgR,EACP4K,SAAUA,IAGQ,MAAlB5K,EACI9K,EAAAC,QAAAvJ,cAACo5D,EAAA7vD,SACGuV,UAAWs5C,EACXr5C,UAAWs5C,EACX11D,KAAK,WACL2oB,MAAO,GACPloB,MAAO6f,EACPjE,SAAUA,IAGd1V,EAAAC,QAAAvJ,cAAC8/B,EAAAv2B,SACGzH,KAAK,SACLgd,UAAWs5C,EACXr5C,UAAWs5C,EACX11D,KAAK,WACLS,MAAO6f,EACPjE,SAAUA,EACV8d,gBAAiBA,EACjBve,kBAAkB,EAClBJ,eAAkBpR,EAAkBkW,iBAKxD3Z,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWswD,GACZ5vD,EAAAC,QAAAvJ,cAACq5D,EAAA9vD,SACG5G,KAAK,cACL22D,eAAA,EACA9yC,SAAU2xC,EACV5xC,SAAU2xC,EACVvjD,WAAYA,EACZqK,SAAUA,EACV5b,MAAOyX,EACP4D,cAAA,EACAigB,cAAA,EACA5B,gBAAiBA,EACjBjgB,UAAU,OACV08C,mBAAoB,UAIvBvB,GACG1uD,EAAAC,QAAAvJ,cAACw5D,EAAAjwD,SACGyV,SAAUA,EACV2gB,gBAAA,EACAh9B,KAAK,cACLsc,YAAY,QACZxJ,SAAUwiD,EACVtjD,WAAYqG,EAAc8V,OAC1B1tB,MAAOoY,GAAe28C,EAAgBriD,OAAO,SAC7C4oB,cAAc,EACd5B,gBAAiBA,QAYjD6rB,EAAS3hD,WACLwN,qBAAsBnP,UAAUqE,OAChCuZ,SAAsB5d,UAAUiL,WAC5BjL,UAAUkL,OACVlL,UAAUqE,SAEd+K,iBAAqBpP,UAAUxB,OAC/BuQ,cAAqB/O,UAAUqE,OAC/BuK,oBAAqB4M,YAAcC,uBACnCjG,YAAqBxV,UAAUiL,WAC3BjL,UAAUqE,OACVrE,UAAUkL,SAEdiL,YAAoBnW,UAAUqE,OAC9BgO,YAAoBrS,UAAUqE,OAC9BmzB,aAAoBx3B,UAAUsE,KAC9BmzB,gBAAoBz3B,UAAUsE,KAC9B8R,mBAAoBpW,UAAUyY,MAC9BkB,SAAoB3Z,UAAUuE,KAC9B8b,YAAoBrgB,UAAUxB,OAC9B4R,SAAoBoL,YAAcC,uBAClCnM,WAAoBtP,UAAUiL,WAC1BjL,UAAUkL,OACVlL,UAAUqE,SAEdgS,WAAmBrW,UAAUqE,OAC7BqD,kBAAmB1H,UAAUxB,mBAGlB,EAAAS,EAAAwB,UAAS6iD,mfC3OxB9pD,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,IACA25B,EAAA35B,EAAA,QAIAA,EAAA,KACA4T,EAAA5T,EAAA,IAMA0T,EAAA1T,EAAA,OACAA,EAAA,gOAEM46D,6SACF37B,OACI16B,MAAuB,GACvBs2D,uBAAuB,EACvBC,sBAAuB,KAiB3B7H,iBAAmB,WACfrmD,EAAKiyB,UAAWg8B,uBAAwBjuD,EAAKqyB,MAAM47B,2BAGvDE,eAAiB,SAACx6D,IACTqM,EAAKouD,SAASp6B,SAASrgC,EAAE4C,SAAWyJ,EAAKqyB,MAAM47B,wBAChDjuD,EAAKiyB,UAAWg8B,uBAAuB,IACjCjuD,EAAKqyB,MAAM16B,OAA6B,aAApBqI,EAAKxG,MAAM3B,MACjCmI,EAAKquD,uBAAsB,EAAArnD,EAAAooC,YAAWpvC,EAAKqyB,MAAM16B,YAK7Doa,aAAe,YACP/R,EAAKqyB,MAAM16B,OAAY,iBAAkBqI,EAAKxG,QAAUwG,EAAKxG,MAAMy5B,cACnEjzB,EAAKiyB,UAAWi8B,sBAAsB,OAI9Cl8C,aAAe,WACXhS,EAAKiyB,UAAWi8B,sBAAsB,OAG1CI,iBAAmB,SAACtzC,EAAeizC,GAC/B,IAAIt2D,EAAQqjB,GACP,EAAAhU,EAAA6oC,aAAYl4C,KAAUA,EAAQ,IAEX,aAApBqI,EAAKxG,MAAM3B,KACXmI,EAAKquD,uBAAsB,EAAArnD,EAAAqoC,iBAAgB13C,IAE3CqI,EAAKquD,uBAAsB,EAAArnD,EAAAooC,YAAWz3C,EAAO,gBAEjDqI,EAAKiyB,UAAWg8B,6BAGpBM,cAAgB,SAAC56D,GACb,IAAMgE,EAAQhE,EAAE4C,OAAOoB,MACvBqI,EAAKquD,sBAAsB12D,MAG/B62D,qBAAuB,WACnBxuD,EAAKiyB,UAAWt6B,MAAO,MAAQqI,EAAK09B,aACpC19B,EAAKyuD,SAASC,mBAIlBL,sBAAwB,SAAC12D,GAAU,IAAA8uD,EACWzmD,EAAKxG,MAAvCohB,EADuB6rC,EACvB7rC,YAAa/iB,EADU4uD,EACV5uD,KAAMqR,EADIu9C,EACJv9C,WAE3BlJ,EAAKiyB,UAAWt6B,SAASqI,EAAK09B,aAG9B,IAAMixB,EAAqB,aAAT92D,GAAuB,EAAAmP,EAAA8oC,UAAQ,EAAA9oC,EAAA+D,YAAYpT,GAASA,EACtE,GAAIqI,EAAKyuD,YAAa,EAAAznD,EAAA6oC,aAAY8e,KAAcA,GAC5C,GAAKA,EAOD3uD,EAAKyuD,SAASx8B,UACVvX,eAAe,EAAA1T,EAAAooC,YAAWuf,GAC1B3zC,eAAe,EAAAhU,EAAAooC,YAAWuf,SATnB,CACX,IAAMC,GAAe,EAAA5nD,EAAAooC,YAAWlmC,EAAY0R,GAC5C5a,EAAKyuD,SAASx8B,UACVvX,cAAek0C,EACf5zC,cAAe4zC,QAY/BlxB,YAAc,WAAM,IAAAmxB,EACW7uD,EAAKxG,MAAxBtC,EADQ23D,EACR33D,KAAMqc,EADEs7C,EACFt7C,SACVA,GACAA,GAAWhd,QAAUW,OAAMS,MAAOqI,EAAKqyB,MAAM16B,YAIrDm3D,iBAAmB,WAAM,IAAAC,EACmC/uD,EAAKxG,MAArDwZ,EADa+7C,EACb/7C,aAAcnb,EADDk3D,EACCl3D,KAAMX,EADP63D,EACO73D,KAAMoK,EADbytD,EACaztD,kBAC5BkS,EAAgBxT,EAAKxG,MAArBga,YACFnd,SAAMkd,SAEV,OAAQ1b,GACJ,IAAK,WACD0b,EAAWvT,EAAKuuD,cAChB/6C,EAAcA,IAAe,EAAA1M,EAAA2C,UAAS,qBACtCpT,EAAO,SACP,MACJ,QACImd,EAAcA,IAAe,EAAA1M,EAAA2C,UAAS,iBACtCpT,EAAO,OAGf,OACIwH,EAAAC,QAAAvJ,cAAC8/B,EAAAv2B,SACGX,UAAU,oBACViX,YAAU,EACVD,aAAYnU,EAAKqyB,MAAM16B,MACvB+a,eAAgBpR,EAChB0R,aAAcA,EACd9b,KAAMA,EACNqc,SAAUA,EACVhW,QAASyC,EAAKqmD,iBACd7yC,YAAaA,EACbnd,KAAMA,EACNsB,MAAOqI,EAAKqyB,MAAM16B,mVA9HT+D,UAAMvB,0DAQvB/F,SAASg6B,iBAAiB,QAAS/0B,KAAK80D,gBAAgB,GADxC,IAAAv7B,EAEQv5B,KAAKG,MAArB3B,EAFQ+6B,EAER/6B,KAAMF,EAFEi7B,EAEFj7B,MACD,aAATE,EACAwB,KAAKg1D,uBAAsB,EAAArnD,EAAAqoC,iBAAgB13C,IAE3C0B,KAAKg1D,uBAAsB,EAAArnD,EAAAooC,YAAWz3C,EAAO,+DAKjDvD,SAASi6B,oBAAoB,QAASh1B,KAAK80D,gBAAgB,oCAiHtD,IAAAvzD,EAAAvB,KACL,OAAIA,KAAKG,MAAM63B,gBAEPxzB,EAAAC,QAAAvJ,cAAA,OAAKyE,IAAK,SAAA2Y,GAAU/W,EAAKwzD,SAAWz8C,GAASxU,UAAU,cACnDU,EAAAC,QAAAvJ,cAAA,SACI8I,GAAIhE,KAAKG,MAAMtC,KACfA,KAAMmC,KAAKG,MAAMtC,KACjBiG,UAAU,oBACV9G,KAAK,OACLsB,MAAO0B,KAAKg5B,MAAM16B,MAClByhB,IAAK/f,KAAKG,MAAMuhB,SAChBzB,IAAKjgB,KAAKG,MAAMshB,SAChBvH,SAAU,SAAC5f,GAGP,IAAM4C,EAAS5C,EAAEq7D,YAAYz4D,OAE7BmC,OAAO9B,WADP,WAA6BL,EAAO04D,aAAe,IAChB,GAEnCr0D,EAAK0zD,iBAAiB36D,EAAE4C,OAAOoB,UAGvCkG,EAAAC,QAAAvJ,cAAA,SAAO4I,UAAU,6BAA6BgY,QAAS9b,KAAKG,MAAMtC,MAC7DmC,KAAKg5B,MAAM16B,OAAS0B,KAAKG,MAAMga,YAChC3V,EAAAC,QAAAvJ,cAACw4B,EAAAs1B,WAAUllD,UAAU,4CAOjCU,EAAAC,QAAAvJ,cAAA,OACI8I,GAAIhE,KAAKG,MAAM6D,GACfrE,IAAK,SAAA2Y,GAAU/W,EAAKwzD,SAAWz8C,GAC/BxU,UAAU,aACV4U,aAAc1Y,KAAK0Y,aACnBC,aAAc3Y,KAAK2Y,cAEjB3Y,KAAKy1D,mBACPjxD,EAAAC,QAAAvJ,cAACw4B,EAAA01B,cACGtlD,WAAW,EAAAqU,EAAA1T,SAAW,+CAClBoxD,8BAA+B71D,KAAKg5B,MAAM67B,uBAE9C3wD,QAASlE,KAAKgtD,mBAElBxoD,EAAAC,QAAAvJ,cAACw4B,EAAA+1B,WACG3lD,WAAW,EAAAqU,EAAA1T,SAAW,4CAClBoxD,+BAAgC71D,KAAKg5B,MAAM67B,uBAE/C3wD,QAASlE,KAAKg5B,MAAM67B,qBAAuB70D,KAAKm1D,0BAAuB73D,IAE3EkH,EAAAC,QAAAvJ,cAAA,OACI4I,WAAW,EAAAqU,EAAA1T,SAAW,2IAAXiC,EACPovD,2BAAuD91D,KAAKg5B,MAAM47B,uBAD3D,6BAEuB50D,KAAKG,MAAM4X,UAAc/X,KAAKG,MAAM4X,aAGtEvT,EAAAC,QAAAvJ,cAAC66D,EAAAtxD,QAADpE,GACIV,IAAK,SAAA2Y,GAAU/W,EAAK6zD,SAAW98C,GAC/B09C,SAAUh2D,KAAKi1D,kBACXj1D,KAAKG,mBAQjCw0D,EAAWsB,cACP10C,YAAa20C,UAASD,aAAa10C,YACnC/iB,KAAa,QAGjBm2D,EAAWzyD,UAAX7B,KACO61D,UAASh0D,sBAGD,EAAA1C,EAAAwB,UAAS2zD,qKCjOjBlwD,kWCAP1K,EAAA,QACAA,EAAA,IACA4T,EAAA5T,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,6DAEMm8D,iBACF,SAAAA,EAAY/1D,gGAAOqB,CAAAxB,KAAAk2D,GAAA,IAAAvvD,mKAAA7E,CAAA9B,MAAAk2D,EAAAn0D,WAAAhJ,OAAAiJ,eAAAk0D,IAAAh9D,KAAA8G,KACTG,IADSg2D,EAAAj9D,KAAAyN,GAAA,IAEP4a,EAA4BphB,EAA5BohB,YAAa1R,EAAe1P,EAAf0P,WACf0lD,GAAe,EAAA5nD,EAAA+D,UAAS7B,GAAYmB,OAAOuQ,GAHlC,OAIf5a,EAAKqyB,OACD3X,cAAek0C,EACf5zC,cAAe,GACfL,cAAe,QAPJ3a,qUADAtE,UAAMo7B,mDAoGhB,IAAAlE,EACoEv5B,KAAKG,MAAtET,EADH65B,EACG75B,SAAU6hB,EADbgY,EACahY,YAAauf,EAD1BvH,EAC0BuH,OAAQ0zB,EADlCj7B,EACkCi7B,cAAexwD,EADjDu1B,EACiDv1B,GAAI6L,EADrD0pB,EACqD1pB,WADrDwpB,EAEoDr5B,KAAKg5B,MAAtD3X,EAFHgY,EAEGhY,cAAeC,EAFlB+X,EAEkB/X,cAAeK,EAFjC0X,EAEiC1X,cAEtC,OACInd,EAAAC,QAAAvJ,cAAA,OAAK8I,GAAIA,EAAIF,UAAU,WAAWgX,aAAY6G,GACxCjiB,EACF8E,EAAAC,QAAAvJ,cAACk7D,EAAA3xD,SACG4c,cAAeA,EACfC,cAAeA,EACfE,iBAAkBxhB,KAAKwhB,iBACvB60C,WAAYr2D,KAAKq2D,WACjBC,WAAYt2D,KAAKs2D,aAErB9xD,EAAAC,QAAAvJ,cAACq7D,EAAA9xD,SACG4c,cAAeA,EACfC,cAAeA,EACfC,YAAaA,EACbC,iBAAkBxhB,KAAKwhB,iBACvB3R,WAAYA,EACZ8R,cAAeA,EACf60C,eAAgBx2D,KAAKw2D,eACrB7lD,SAAU3Q,KAAKG,MAAMwQ,WAEzBnM,EAAAC,QAAAvJ,cAACu7D,EAAAhyD,SACGq8B,OAAQA,EACR0zB,cAAeA,EACftwD,QAASlE,KAAK02D,kDAnH9BJ,WAAa,SAACK,GACVp1D,EAAKq3B,UAAWtX,cAAeq1C,UAGnCN,WAAa,SAACf,GACV/zD,EAAKq3B,UAAWvX,eAAe,EAAA1T,EAAA+D,UAAS4jD,GAAUtkD,OAAOzP,EAAKpB,MAAMohB,qBAGxEq1C,mBAAqB,SAACt8D,GAAM,IAAAsgC,EAC8Br5B,EAAKpB,MAAnDohB,EADgBqZ,EAChBrZ,YAAaE,EADGmZ,EACHnZ,SAAUC,EADPkZ,EACOlZ,SAAUs0C,EADjBp7B,EACiBo7B,SAEnCroC,GAAc,EAAAhgB,EAAA+D,UAASpX,EAAE4C,OAAO25D,QAAQzlD,MAAM6kC,QAAQ,OACtD6gB,EAAcnpC,EAAYvX,UAAS,EAAAzI,EAAA+D,UAASgQ,IAC5Cq1C,EAAcppC,EAAYtX,SAAQ,EAAA1I,EAAA+D,UAAS+P,IAEjD,IAAIq1C,IAAaC,EAAjB,CAIA,IAAMC,EAAiBrpC,EAAY3c,OAAOuQ,GAC1ChgB,EAAKq3B,UACDvX,cAAe21C,EACfr1C,cAAeq1C,IAGfhB,GACAA,EAASgB,UAIjBR,eAAiB,SAACl8D,EAAG0C,GAGjB,GAFI1C,GAAGA,EAAEw+B,kBAEI,QAAT97B,EAAJ,CAKA,IAKMoU,GAAO,EAAAzD,EAAA+D,UAASnQ,EAAKy3B,MAAM3X,eAAwB,WAATrkB,EAAoB,OAASA,GAAM1C,EAAE4C,OAAO25D,QAAQ75D,GAAMuU,MAAM,KAAK,IAAIP,OAAOzP,EAAKpB,MAAMohB,aAEvIhgB,EAAKigB,iBAAiBpQ,EAAMpU,IAEhCuE,EAAKq3B,UACDvX,cAAejQ,EACfkQ,eAVA21C,MAAQ,OACRrpC,KAAQ,QACRspC,OAAQ,QAQgBl6D,UAfxBuE,EAAKq1D,mBAAmBt8D,SAmBhC+6D,cAAgB,WAAM,IAAA8B,EACkB51D,EAAKpB,MAAjCohB,EADU41C,EACV51C,YAAa1R,EADHsnD,EACGtnD,WAEfunD,GAAe,EAAAzpD,EAAA+D,UAAS7B,GAAYmB,OAAOuQ,GACjDhgB,EAAKq3B,UACDvX,cAAe+1C,EACfz1C,cAAe,GACfL,cAAe,eAIvBo1C,SAAW,WAAM,IAAAW,EACqB91D,EAAKpB,MAA/BohB,EADK81C,EACL91C,YAAay0C,EADRqB,EACQrB,SAEfsB,GAAM,EAAA3pD,EAAA+D,YAAWV,OAAOuQ,GAC9BhgB,EAAKq3B,UACDvX,cAAei2C,EACf31C,cAAe21C,EACfh2C,cAAe,SAGf00C,GACAA,EAASsB,GAAK,SAItB91C,iBAAmB,SAACpQ,EAAM4O,GAAS,IAAAu3C,EACAh2D,EAAKpB,MAA5BshB,EADuB81C,EACvB91C,SAAUC,EADa61C,EACb71C,SAEZ81C,GAAkB,EAAA7pD,EAAA+D,UAASN,GAAMkF,QAAQ2/B,QAAQj2B,GAEvD,OADwB,EAAArS,EAAA+D,UAASN,GAAMkF,QAAQmhD,MAAMz3C,GAChC5J,UAAS,EAAAzI,EAAA+D,UAASgQ,KAChC81C,EAAgBnhD,SAAQ,EAAA1I,EAAA+D,UAAS+P,SAqChDy0C,EAASD,cACL10C,YAAa,aACbG,UAAa,EAAA/T,EAAA+D,YAAWV,OAAO,cAC/ByQ,UAAa,EAAA9T,EAAA+D,YAAW6E,IAAI,IAAK,KAAKvF,OAAO,eAGjDklD,EAASh0D,WACLxC,SAAiBa,UAAUxB,OAC3BwiB,YAAiBhhB,UAAUqE,OAC3Bk8B,OAAiBvgC,UAAUqE,OAC3B4vD,cAAiBj0D,UAAUsE,KAC3Bb,GAAiBzD,UAAUqE,OAC3BozB,gBAAiBz3B,UAAUsE,KAC3B4c,SAAiBlhB,UAAUiL,WACvBjL,UAAUxB,OACVwB,UAAUqE,SAEd8c,SAAUnhB,UAAUiL,WAChBjL,UAAUxB,OACVwB,UAAUqE,SAEdoxD,SAAYz1D,UAAUuE,KACtB+K,WAAYtP,UAAUiL,WAClBjL,UAAUkL,OACVlL,UAAUqE,oBAIHsxD,iFCzKf,QAAAn8D,EAAA,QACAA,EAAA,IACA29D,EAAA39D,EAAA,wDAMA,IAAM49D,EAAe,SAACx3D,GAClB,IAAMy3D,GACFxmD,KAAQ5M,EAAAC,QAAAvJ,cAACw8D,EAAAG,aAAoB13D,GAC7B82D,MAAQzyD,EAAAC,QAAAvJ,cAACw8D,EAAAI,eAAoB33D,GAC7BytB,KAAQppB,EAAAC,QAAAvJ,cAACw8D,EAAAK,cAAoB53D,GAC7B+2D,OAAQ1yD,EAAAC,QAAAvJ,cAACw8D,EAAAM,gBAAoB73D,IAGjC,OACIqE,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACMssD,EAAcz3D,EAAMmhB,iBAKlCq2C,EAAaz1D,WACTof,cAAe/gB,UAAUqE,kBAGd+yD,8FC3Bf5+D,OAAA0J,KAAAw1D,GAAAt1D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+5D,EAAAr5D,qBACA7F,OAAA0J,KAAAy1D,GAAAv1D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAg6D,EAAAt5D,qBACA7F,OAAA0J,KAAA01D,GAAAx1D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAi6D,EAAAv5D,qBACA7F,OAAA0J,KAAA21D,GAAAz1D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAk6D,EAAAx5D,yRCHA7E,EAAA,QACAA,EAAA,IACAwyC,EAAAxyC,EAAA,KACA4T,EAAA5T,EAAA,QAMAA,EAAA,MACA+hC,EAAA/hC,EAAA,yDAgFa89D,eAAe,SAAC13D,GACzB,IAAMk4D,EA/EM,SAAAh3D,GAwBZ,IAhBE,IAPFggB,EAOEhgB,EAPFggB,cACAE,EAMElgB,EANFkgB,YACAC,EAKEngB,EALFmgB,iBACA3R,EAIExO,EAJFwO,WACA8R,EAGEtgB,EAHFsgB,cACA60C,EAEEn1D,EAFFm1D,eAOM8B,KACAD,KACAE,GAAqB,EAAA5qD,EAAA+D,YAAWukC,QAAQ,OACxCuiB,GAAqB,EAAA7qD,EAAA+D,UAAS2P,GAC9Bq1B,EAAqB8hB,EAAgBC,cAAgB,EACrDC,EAAqBF,EAAgBliD,QAAQ2/B,QAAQ,SACrD0iB,EAAqBH,EAAgBliD,QAAQmhD,MAAM,SACnDmB,GAAqB,EAAAjrD,EAAA+D,UAASiQ,GAI3BjpB,GADiB,EAAAiV,EAAAqpC,WAAUwhB,EAAiB,GAAGf,MAAM,SAASv2C,MACvCxoB,EAAI,EAAGA,IACnC4/D,EAAMx/D,MAAK,EAAA6U,EAAAopC,SAAQ2hB,EAAoBhgE,GAAGsY,OAAOuQ,IAGrD,IAAK,IAAIyU,EAAM,EAAGA,EAAM0gB,EAAa1gB,GAAO,EACxCsiC,EAAMx/D,KAAK0/D,EAAgBliD,QAAQtF,OAAOuQ,EAAY5U,QAAQ,MAAM,EAAA4/B,EAAAssB,SAAQ7iC,EAAK,EAAG,QAGxF,IAAM8iC,GAAsB,EAAAnrD,EAAAgpC,WAAU6hB,EAAiB,GAAGviB,QAAQ,SAAS/0B,MAC3E,GAAI43C,EAtBe,EAsBoB,GAAKR,EAAM1/D,QAAU,GAExD,IAAK,IAAIF,EAAI,EAAGA,GAAK,EAAIogE,EAxBV,EAwB4CpgE,IACvD4/D,EAAMx/D,MAAK,EAAA6U,EAAA8oC,SAAQkiB,EAAkBjgE,EAAG,OAAOsY,OAAOuQ,SAElDu3C,GAERR,EAAMx/D,MAAK,EAAA6U,EAAA8oC,SAAQkiB,EAAkB,GAAG3nD,OAAOuQ,IAGnD,IAAMw3C,GAAoB,EAAAprD,EAAA+D,UAAS7B,GAAYomC,QAAQ,OAgCvD,OA9BAqiB,EAAMzxD,IAAI,SAACuK,GACP,IAAMuc,GAAc,EAAAhgB,EAAA+D,UAASN,GAAM6kC,QAAQ,OACrC+iB,EAAcr3C,GAAiBgM,EAAYimC,OAAOgF,GAClDK,EAActrC,EAAYimC,OAAO2E,EAAc,OAC/Ct0D,EAAcud,EAAiBmM,EAAa,QAE7C9d,IAAe8d,EAAYvX,SAAS2iD,IACrCprC,EAAYtX,SAAQ,EAAA1I,EAAA8oC,SAAQsiB,EAAmB,KAI7CG,EAAiBvrC,EAAYspC,UAAYuB,EAAgBvB,QAE/DoB,EAAKv/D,KACD0L,EAAAC,QAAAvJ,cAAA,QACI0D,IAAKwS,EACLtN,WAAW,EAAAqU,EAAA1T,SAAW,kBAClB00D,yBAA4BH,IAAc/0D,EAC1Cm1D,wBAA4BH,EAC5BI,2BAA4Bp1D,EAC5Bq1D,wBAA4BJ,IAEhCh1D,QAASD,OAAc3G,EAAY,SAAChD,GAAD,OAAOk8D,EAAel8D,EAAG,QAC5Di/D,YAAWnoD,GAEVuc,EAAYvc,WAKlBinD,EAIMmB,CAAQr5D,GAAO0G,IAAI,SAAAqa,GAAA,OAAOA,IAEvC,OACI1c,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,uCACV/K,OAAO0J,KAAKgrB,qBAAmB5mB,IAAI,SAACyJ,EAAM0lB,GAAP,OAAgBxxB,EAAAC,QAAAvJ,cAAA,QAAM0D,IAAKo3B,EAAKlyB,UAAU,uCAAuC2pB,oBAAkBnd,MACtI+nD,KAKAn2D,UAAb7B,KAA8B+gB,8RCrG9BrnB,EAAA,QACAA,EAAA,IACA4T,EAAA5T,EAAA,QACAA,EAAA,MACA+hC,EAAA/hC,EAAA,yDAEa+9D,iBAAiB,SAAAz2D,GAKxB,IAJFggB,EAIEhgB,EAJFggB,cACAG,EAGEngB,EAHFmgB,iBACAG,EAEEtgB,EAFFsgB,cACA60C,EACEn1D,EADFm1D,eAEM7oC,GAAuB,EAAAhgB,EAAA+D,UAAS2P,GAChCo4C,GAAuB,EAAA9rD,EAAA+D,UAASiQ,GAEtC,OACInd,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wCACT/K,OAAO0J,KAAK2pB,iBAAevlB,IAAI,SAACowD,EAAOjhC,GACrC,IAAMgjC,EAAc/B,IAAUwC,EAAqBnjD,QAAQtF,OAAO,QAAUyoD,EAAqB7F,OAAOjmC,EAAa,QAC/G1pB,EAAcud,EAAiBmM,EAAYrX,QAAQ2gD,MAAMA,GAAQ,SACvE,OACIzyD,EAAAC,QAAAvJ,cAAA,QACI0D,IAAKo3B,EACLlyB,WAAW,EAAAqU,EAAA1T,SAAW,kBAClB00D,yBAA4BH,EAC5BK,2BAA4Bp1D,IAEhCC,QAASD,OAAc3G,EAAY,SAAChD,GAAD,OAAOk8D,EAAel8D,EAAG,UAC5Do/D,aAAYzC,GAEX7qC,gBAAc6qC,SASxB/0D,UAAf7B,KAAgC+gB,gsBCvChCrnB,EAAA,QACAA,EAAA,IACA4T,EAAA5T,EAAA,QACAA,EAAA,MACA4/D,EAAA5/D,EAAA,yDAEag+D,gBAAgB,SAAA12D,GAWzB,IANE,IAJFggB,EAIEhgB,EAJFggB,cACAG,EAGEngB,EAHFmgB,iBACAG,EAEEtgB,EAFFsgB,cACA60C,EACEn1D,EADFm1D,eAEMoC,GAAkB,EAAAjrD,EAAA+D,UAASiQ,GAC3BgM,GAAkB,EAAAhgB,EAAA+D,UAAS2P,GAF/Bu4C,GAGuC,EAAAD,EAAAjsC,WAAUC,GAAapc,MAAM,KAHpEsoD,EAAApoD,EAAAmoD,EAAA,GAGKE,EAHLD,EAAA,GAGsBE,EAHtBF,EAAA,GAKIG,KACGpsC,GAAQksC,EAAkB,EAAGlsC,IAASmsC,EAAgB,EAAGnsC,IAC9DosC,EAAMlhE,KAAK80B,GAEf,OACIppB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,uCACTk2D,EAAMnzD,IAAI,SAAC+mB,EAAMoI,GACf,IAAMikC,EAA0B,IAARjkC,GAAqB,KAARA,EAC/B/xB,EAAkBud,EAAiBmM,EAAYrX,QAAQsX,KAAKA,GAAO,QACzE,OACIppB,EAAAC,QAAAvJ,cAAA,QACI0D,IAAKo3B,EACLlyB,WAAW,EAAAqU,EAAA1T,SAAW,kBAClB00D,yBAA4BvrC,IAASgrC,EAAgBhrC,OACrD0rC,wBAA4BW,EAC5BZ,2BAA4Bp1D,IAEhCC,QAASD,OAAc3G,EAAY,SAAChD,GAAD,OAAOk8D,EAAel8D,EAAG,SAC5D4/D,YAAWtsC,GAEVA,QASX1rB,UAAd7B,KAA+B+gB,ksBC7C/BrnB,EAAA,QACAA,EAAA,IACA4T,EAAA5T,EAAA,QACAA,EAAA,MACA4/D,EAAA5/D,EAAA,yDAEai+D,kBAAkB,SAAA32D,GAY3B,IAPE,IAJFggB,EAIEhgB,EAJFggB,cACAG,EAGEngB,EAHFmgB,iBACAG,EAEEtgB,EAFFsgB,cACA60C,EACEn1D,EADFm1D,eAEMoC,GAAkB,EAAAjrD,EAAA+D,UAASiQ,GAC3BgM,GAAkB,EAAAhgB,EAAA+D,UAAS2P,GAG3B84C,KACFC,IAHoB,EAAAT,EAAA9rC,YAAWF,GAAapc,MAAM,KAAK,GAG9B,GACpB7Y,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMw+D,GAAS,EAAAyC,EAAAjsC,YAAU,EAAA/f,EAAA+D,YAAWkc,KAAKwsC,IACzCD,EAAQrhE,KAAKo+D,GACbkD,GAAYlD,EAAO3lD,MAAM,KAAK,GAAK,EAEvC,OACI/M,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,yCACTq2D,EAAQtzD,IAAI,SAACqwD,EAAQlhC,GAAQ,IAAAqkC,EACcnD,EAAO3lD,MAAM,KAD3B+oD,EAAA7oD,EAAA4oD,EAAA,GACpBP,EADoBQ,EAAA,GACHP,EADGO,EAAA,GAErBtB,GAAgBc,IAAoBlB,EAAgBhrC,OACpD3pB,EAAeud,EAAiBmM,EAAYrX,QAAQsX,KAAKksC,GAAkB,SAC7Et4C,EAAiBmM,EAAYrX,QAAQsX,KAAKmsC,GAAgB,QACxDQ,EAA2B,IAARvkC,GAAqB,KAARA,EACtC,OACIxxB,EAAAC,QAAAvJ,cAAA,QACI0D,IAAKo3B,EACLlyB,WAAW,EAAAqU,EAAA1T,SAAW,kBAClB00D,yBAA4BH,EAC5BK,2BAA4Bp1D,EAC5Bq1D,wBAA4BiB,IAEhCr2D,QAASD,OAAc3G,EAAY,SAAChD,GAAD,OAAOk8D,EAAel8D,EAAG,WAC5DkgE,cAAatD,GAEZA,QASTh1D,UAAhB7B,KAAiC+gB,0FCnDjC,QAAArnB,EAAA,QACAA,EAAA,IACA25B,EAAA35B,EAAA,uDAEA,IAAM0gE,EAAiB,SAAAp5D,GAAA,IACnBy/B,EADmBz/B,EACnBy/B,OACA0zB,EAFmBnzD,EAEnBmzD,cACAtwD,EAHmB7C,EAGnB6C,QAHmB,OAKnBM,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,MACOkpD,GAAiB1zB,IAChBt8B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACTg9B,GAAUt8B,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,kBAAkBg9B,GAC5C0zB,GACEhwD,EAAAC,QAAAvJ,cAACw4B,EAAAw1B,mBACGplD,UAAU,uCACVI,QAASA,OAQjCu2D,EAAev4D,WACX4+B,OAAevgC,UAAUqE,OACzB4vD,cAAej0D,UAAUsE,KACzBX,QAAe3D,UAAUuE,gBAGd21D,iFC9Bf,QAAA1gE,EAAA,QACAA,EAAA,QACAA,EAAA,IACA25B,EAAA35B,EAAA,IAKA4T,EAAA5T,EAAA,QAMAA,EAAA,MACA+hC,EAAA/hC,EAAA,KACA4/D,EAAA5/D,EAAA,wDAIA,IAAM2gE,EAAiB,SAAAr5D,GAOjB,IANFggB,EAMEhgB,EANFggB,cACAC,EAKEjgB,EALFigB,cACAE,EAIEngB,EAJFmgB,iBACA60C,EAGEh1D,EAHFg1D,WACAC,EAEEj1D,EAFFi1D,WACA7B,EACEpzD,EADFozD,kBAEMkG,EAAmC,SAAlBr5C,EACjBs5C,EAAmC,UAAlBt5C,EACjBu5C,EAAmC,SAAlBv5C,EACjBw5C,EAAmC,WAAlBx5C,EACjBqM,GAAiB,EAAAhgB,EAAA+D,UAAS2P,GAE5By1B,EAAe,EACf+jB,IAAgB/jB,EAAe,IAC/BgkB,IAAgBhkB,EAAe,KAEnC,IAAMikB,GAAU,EAAApB,EAAA9rC,YAAWF,EAAYrX,SACjC4gD,GAAU,EAAAyC,EAAAjsC,WAAUC,EAAYrX,SAChCyjD,GAAiBc,EAAe3D,EAAS6D,GAASxpD,MAAM,KAAK,GAE7DypD,EAA0Bx5C,GAAiB,EAAA7T,EAAAqpC,WAAUrpB,EAAa,GAAI,SACtEstC,EAA0Bz5C,GAAiB,EAAA7T,EAAAspC,UAAStpB,EAAampB,GAAe,SAChFokB,EAA0B15C,GAAiB,EAAA7T,EAAAgpC,WAAUhpB,EAAa,GAAI,SACtEwtC,EAA0B35C,GAAiB,EAAA7T,EAAAkpC,UAASlpB,EAAampB,GAAe,SAChFskB,EAA0B55C,EAAiBmM,EAAYrX,QAAQsX,KAAKmsC,GAAgB,SAAWtF,EAAkBtzC,KAAK,SAAA4rB,GAAA,MAAyB,SAAbA,IAExI,OACIvoC,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAACmgE,EAAA52D,SACGX,WAAW,EAAAqU,EAAA1T,SAAW,0CAClB62D,0BAA2BL,IAE/B/2D,QAAS+2D,OAAwB39D,EAAY,kBAAM+4D,GAAW,EAAA1oD,EAAAspC,UAAS51B,EAAey1B,MAEtFtyC,EAAAC,QAAAvJ,cAACw4B,EAAA21B,sBAAD,OAEJ7kD,EAAAC,QAAAvJ,cAACmgE,EAAA52D,SACGX,WAAW,EAAAqU,EAAA1T,SAAW,2CAClB62D,0BAA2BN,IAE/BO,WAAYZ,EACZz2D,QAAS82D,OAAyB19D,EAAY,kBAAM+4D,GAAW,EAAA1oD,EAAAqpC,WAAU31B,EAAe,MAExF7c,EAAAC,QAAAvJ,cAACw4B,EAAA61B,gBAAD,OAGJ/kD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACMqvD,GACEn2D,EAAAC,QAAAvJ,cAACmgE,EAAA52D,SACGX,UAAU,sCACVy3D,WAAYZ,EACZ7gD,MAAOsS,gBAAcuB,EAAY3c,OAAO,QACxC9M,QAAS,kBAAMoyD,EAAW,aAG/BqE,GAAgBC,IACfp2D,EAAAC,QAAAvJ,cAACmgE,EAAA52D,SACGX,WAAW,EAAAqU,EAAA1T,SAAW,uCAClB+2D,0BAA2BJ,IAE/BthD,MAAO6T,EAAY3c,OAAO,QAC1B9M,QAAS,kBAAMk3D,OAA0B99D,EAAYg5D,EAAW,YAGrEuE,GAAgBC,IACft2D,EAAAC,QAAAvJ,cAACmgE,EAAA52D,SACGX,WAAW,EAAAqU,EAAA1T,SAAW,uCAClB+2D,0BAA2BJ,IAE/Bl3D,QAASk3D,OAA0B99D,EAAY,kBAAMg5D,EAAW,YAE9DuE,MAAqB3D,EACrB4D,MAAqBC,IAKnCv2D,EAAAC,QAAAvJ,cAACmgE,EAAA52D,SACGX,WAAW,EAAAqU,EAAA1T,SAAW,2CAClB62D,0BAA2BJ,IAE/BK,WAAYZ,EACZz2D,QAASg3D,OAAyB59D,EAAY,kBAAM+4D,GAAW,EAAA1oD,EAAAgpC,WAAUt1B,EAAe,MAExF7c,EAAAC,QAAAvJ,cAACw4B,EAAA81B,iBAAD,OAEJhlD,EAAAC,QAAAvJ,cAACmgE,EAAA52D,SACGX,WAAW,EAAAqU,EAAA1T,SAAW,0CAClB62D,0BAA2BH,IAE/Bj3D,QAASi3D,OAAwB79D,EAAY,kBAAM+4D,GAAW,EAAA1oD,EAAAkpC,UAASx1B,EAAey1B,MAEtFtyC,EAAAC,QAAAvJ,cAACw4B,EAAA41B,uBAAD,SAMhBoR,EAAex4D,WACXmf,cAAkB9gB,UAAUqE,OAC5B0c,cAAkB/gB,UAAUqE,OAC5B4c,iBAAkBjhB,UAAUuE,KAC5BuxD,WAAkB91D,UAAUuE,KAC5BwxD,WAAkB/1D,UAAUuE,gBAGjB41D,iFChIf,QAAA3gE,EAAA,QACAA,EAAA,uDAEA,IAAM0hE,EAAiB,SAAAp6D,GAAA,IACnB3B,EADmB2B,EACnB3B,SACAoE,EAFmBzC,EAEnByC,UACAy3D,EAHmBl6D,EAGnBk6D,UACAzhD,EAJmBzY,EAInByY,MACA5V,EALmB7C,EAKnB6C,QALmB,OAOnBM,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,MACOiwD,GACC/2D,EAAAC,QAAAvJ,cAAA,UACI4I,UAAWA,EACXI,QAASA,GAER4V,EACApa,KAMjB+7D,EAAev5D,WACXxC,SAAUa,UAAUiL,WAChBjL,UAAUyY,MACVzY,UAAUxB,OACVwB,UAAUqE,SAEdd,UAAWvD,UAAUqE,OACrB22D,UAAWh7D,UAAUsE,KACrBiV,MAAWvZ,UAAUqE,OACrBV,QAAW3D,UAAUuE,gBAGV22D,oKCnCRh3D,iGCAP,QAAA1K,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,yDAEA,IAAM2hE,EAAc,SAAAr6D,GAQd,IAPFyC,EAOEzC,EAPFyC,UACA0iB,EAMEnlB,EANFmlB,MACAxM,EAKE3Y,EALF2Y,UACAC,EAIE5Y,EAJF4Y,UACApc,EAGEwD,EAHFxD,KACAS,EAEE+C,EAFF/C,MACA4b,EACE7Y,EADF6Y,SAeMyhD,EAAan1C,GAASA,EAAQ,GAE9Bo1C,EAAat9D,EAAQ2b,GAAe3b,EAAQ0b,EAAc,QAAU,GAE1E,OACIxV,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,eAAgBX,GAAa3G,MAASy+D,KAC7Dp3D,EAAAC,QAAAvJ,cAAA,SAAO4gB,QAAQ,SACXtX,EAAAC,QAAAvJ,cAAA,SACI8I,GAAG,QACHF,UAAU,sBACV9G,KAAK,QACL+iB,IAAK47C,EACL17C,IAAKuG,EACLvM,UAAWA,EACXD,UAAWA,EACXnc,KAAMA,EACNg+D,MAAM,IACN3hD,SA7BK,SAAC5f,GACdA,EAAE4C,OAAOoB,QAAUA,GACnB4b,GAAWhd,QAAUW,OAAMS,MAAOhE,EAAE4C,OAAOoB,UA4BnC6F,SAAS,IACT7F,MAAOA,IAEXkG,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,SACXU,EAAAC,QAAAvJ,cAAC4gE,EAAAr3D,SACGnG,MAAOA,EACPkoB,MAAOA,EACPtiB,QA/BA,SAAC5J,EAAGgiB,GAChBA,IAAUhe,GACV4b,GAAWhd,QAAUW,OAAMS,MAAOge,SAiC9B9X,EAAAC,QAAAvJ,cAAA,OACI4I,UAAU,qBACV85B,OAASzV,cAAuB,GAAR7pB,EAAf,QAAgCA,EAAQ,EAAI,SAAW,UAAvD,QAGjBkG,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,yBACXU,EAAAC,QAAAvJ,cAAA,YACKygE,KAGCr9D,GACFkG,EAAAC,QAAAvJ,cAAA,aACK,EAAAuS,EAAA2C,UAAS,aAAc9R,GAAS,KAGzCkG,EAAAC,QAAAvJ,cAAA,YACKsrB,MAQrBk1C,EAAYx5D,WACR4B,UAAYvD,UAAUqE,OACtB+2D,WAAYp7D,UAAUkL,OACtBuO,UAAYzZ,UAAUiL,WAClBjL,UAAUkL,OACVlL,UAAUqE,SAEdqV,UAAW1Z,UAAUiL,WACjBjL,UAAUkL,OACVlL,UAAUqE,SAEd/G,KAAU0C,UAAUqE,OACpBsV,SAAU3Z,UAAUuE,KACpBxG,MAAUiC,UAAUiL,WAChBjL,UAAUkL,OACVlL,UAAUqE,qBAIH,EAAApF,EAAAwB,UAAS06D,kFCrGxB,QAAA3hE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMgiE,EAAY,SAAA16D,GAA+B,IAA5B/C,EAA4B+C,EAA5B/C,MAAOkoB,EAAqBnlB,EAArBmlB,MAAOtiB,EAAc7C,EAAd6C,QACzB83D,mIAAgBp6D,MAAM4kB,GAAO/jB,SACnC,OACI+B,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACK0wD,EAAUn1D,IAAI,SAAAmvB,GAAA,OACXxxB,EAAAC,QAAAvJ,cAAA,QACI0D,IAAKo3B,EACLlyB,WAAW,EAAAqU,EAAA1T,SAAW,eAClBw3D,sBAAwBjmC,EAAM,IAAOvV,SAASniB,GAC9C49D,sBAAwBlmC,EAAM,EAAKvV,SAASniB,KAEhD4F,QAAS,SAAC5J,GAAD,OAAO4J,EAAQ5J,EAAG07B,EAAM,UAOrD+lC,EAAU75D,WACNgC,QAAS3D,UAAUuE,KACnB0hB,MAASjmB,UAAUiL,WACfjL,UAAUkL,OACVlL,UAAUqE,SAEdtG,MAAOiC,UAAUiL,WACbjL,UAAUkL,OACVlL,UAAUqE,oBAIHm3D,iFClCf,IAAAv8D,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,UACAA,EAAA,wDAEA,IAAM61D,EAAY,SAAAvuD,GAIX,IAHH02B,EAGG12B,EAHH02B,aACAguB,EAEG1kD,EAFH0kD,WACA7rC,EACG7Y,EADH6Y,SAEA,GAAI6d,EACA,OACIvzB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,sBACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,iBACZ,EAAA2J,EAAA2C,UAAS,cAFjB,KAEmC21C,GAI3C,IAAMoW,mIAAev6D,MAAM,GAAGa,SAC9B,OACI+B,EAAAC,QAAAvJ,cAACs7B,EAAA/xB,SACG+T,QAAQ,EAAA/K,EAAA2C,UAAS,yBACjBqI,WAAA,GAEAjU,EAAAC,QAAAvJ,cAACkhE,EAAA33D,SACG43D,iBAAkBF,EAAUA,EAASt1D,IAAI,SAAAnO,GAAA,OAAKA,EAAI,KAClDmF,KAAK,aACLqc,SAAUA,EACVoiD,iBAAkBvW,MAMlC6J,EAAU1tD,WACN61B,aAAcx3B,UAAUsE,KACxBkhD,WAAcxlD,UAAUiL,WACpBjL,UAAUkL,OACVlL,UAAUqE,SAEdsV,SAAU3Z,UAAUuE,iBAGT,EAAAtF,EAAAwB,UAAS4uD,kFC7CxB,QAAA71D,EAAA,QACAA,EAAA,uDAMA,IAAMwiE,EAAiB,SAAAl7D,GAKjB,IAJFg7D,EAIEh7D,EAJFg7D,gBACAx+D,EAGEwD,EAHFxD,KACAqc,EAEE7Y,EAFF6Y,SACAoiD,EACEj7D,EADFi7D,gBAEMvP,EAAe,SAACz8C,IACbA,EAAKpT,OAAOs/D,aAAa,gBAAkBF,GAC5CpiD,GAAWhd,QAAUW,OAAMS,OAAQgS,EAAKpT,OAAOs/D,aAAa,kBAIpE,OACIh4D,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,mBACVu4D,EAAgBx1D,IAAI,SAAC41D,EAAazmC,GAAd,OACjBxxB,EAAAC,QAAAvJ,cAAA,OAAK0D,IAAKo3B,GACLymC,EAAY51D,IAAI,SAAAnO,GAAA,OACb8L,EAAAC,QAAAvJ,cAAA,QACI0D,IAAKlG,EACLoL,UAAA,8BAAwCw4D,IAAoB5jE,EAAI,YAAc,IAC9EoiB,aAAYpiB,EACZwL,QAAS6oD,GAERr0D,UAS7B6jE,EAAer6D,WACXm6D,gBAAiB97D,UAAUm8D,QAAQn8D,UAAUyY,OAC7Cnb,KAAiB0C,UAAUqE,OAC3BsV,SAAiB3Z,UAAUuE,KAC3Bw3D,gBAAiB/7D,UAAUkL,kBAGhB8wD,iFC9Cf,IAAA/8D,EAAAzF,EAAA,QAGAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,UACAA,EAAA,SACAA,EAAA,yDAMA,IAAM+pD,EAAY,SAAAziD,GASZ,IARF02B,EAQE12B,EARF02B,aACAC,EAOE32B,EAPF22B,gBACA9d,EAME7Y,EANF6Y,SACAvJ,EAKEtP,EALFsP,SACAd,EAIExO,EAJFwO,WACAK,EAGE7O,EAHF6O,iBACA0G,EAEEvV,EAFFuV,WACA3O,EACE5G,EADF4G,kBAGMgxD,EAAWppD,IAAeC,OAAO,GACnC6sD,EAAsB,GAI1B,OAHK1D,IACD0D,EAAsBzsD,EAAiB9D,KAAK,SAAArO,GAAA,OAAKA,EAAEO,SAAWuR,SAE9DkoB,EAEIvzB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,iCACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,oBACfm1D,GAAW,EAAAxrD,EAAA2C,UAAS,OAAYusD,EAAoBv4D,KAApD,KAA6DwS,GAKtEpS,EAAAC,QAAAvJ,cAACs7B,EAAA/xB,QAAD,KACID,EAAAC,QAAAvJ,cAAC+0D,EAAAxrD,SACGyrD,mBAAA,EACAl4B,gBAAiBA,EACjB/iB,KAAM/E,EACNrS,KAAK,aACLS,MAAOuR,EACPqK,SAAUA,KAEX++C,GAAYriD,GACXpS,EAAAC,QAAAvJ,cAACw5D,EAAAjwD,SACGyV,SAAUA,EACV2gB,gBAAA,EACAh9B,KAAK,aACLS,MAAOsY,EACPuD,YAAY,QACZtK,WAAYA,EACZc,SAAUA,EACVipB,cAAc,EACd5B,gBAAiBA,EACjB/vB,kBAAmBA,EAAkB2O,eAOzDktC,EAAU5hD,WACN61B,aAAmBx3B,UAAUsE,KAC7BmzB,gBAAmBz3B,UAAUsE,KAC7BqV,SAAmB3Z,UAAUuE,KAC7B6L,SAAmBoL,YAAcC,uBACjCnM,WAAmBtP,UAAUkL,OAC7ByE,iBAAmB6L,YAAcC,uBACjCpF,WAAmBrW,UAAUqE,OAC7BqD,kBAAmB1H,UAAUxB,mBAGlB,EAAAS,EAAAwB,UAAS8iD,0PCvEX7rB,yBAAyB,SAACn3B,GAAD,QAAAW,EAAAC,UAAA9I,OAAekH,EAAf8B,MAAAH,EAAA,EAAAA,EAAA,KAAAkvB,EAAA,EAAAA,EAAAlvB,EAAAkvB,IAAe7wB,EAAf6wB,EAAA,GAAAjvB,UAAAivB,GAAA,OAClC53B,OAAO6jE,oBAAoB97D,EAAUoB,eAAiBsE,OAClD,SAAC8kC,EAAKuxB,GAAN,OAAAx8D,KACOirC,EACAwxB,gBAAkBD,GAAlB56D,OAA2BnC,WAJnC,IAgBDg9D,EAAoB,SAACD,GAAoB,QAAAE,EAAAr7D,UAAA9I,OAAXkH,EAAW8B,MAAAm7D,EAAA,EAAAA,EAAA,KAAAl7D,EAAA,EAAAA,EAAAk7D,EAAAl7D,IAAX/B,EAAW+B,EAAA,GAAAH,UAAAG,GAC3C,IAAMzB,EAAQN,EAAOsM,KAAK,SAAAkE,GAAA,OAAQusD,KAAQvsD,QAC1C,OAAQusD,KAAQz8D,wHAARsG,IAAmBm2D,EAAOz8D,EAAMy8D,uFCxB5C,QAAA9iE,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMijE,EAAc,kBAChBx4D,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAACwxD,EAAAjoD,QAAD,MACAD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,eACXU,EAAAC,QAAAvJ,cAAC+hE,EAAAx4D,QAAD,OAEJD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACXU,EAAAC,QAAAvJ,cAAC0xD,EAAAnoD,QAAD,SAKZu4D,EAAY96D,WACRuzB,iBAAkBl1B,UAAUsE,gBAGjBm4D,8UCtBfjjE,EAAA,QACAA,EAAA,UACAA,EAAA,6DAEMmjE,cACF,SAAAA,EAAY/8D,gGAAOqB,CAAAxB,KAAAk9D,GAAA,IAAAv2D,mKAAA7E,CAAA9B,MAAAk9D,EAAAn7D,WAAAhJ,OAAAiJ,eAAAk7D,IAAAhkE,KAAA8G,KACTG,IADS,OAEfwG,EAAKqyB,OACD/hB,MAAM,GAEVtQ,EAAKw2D,kBAAoBx2D,EAAKw2D,kBAAkBt+D,KAAvB8H,GACzBA,EAAKy2D,kBAAoBz2D,EAAKy2D,kBAAkBv+D,KAAvB8H,GANVA,qUADItE,UAAMo7B,8DAWzBz9B,KAAK44B,UACD3hB,MAAM,gDAKVjX,KAAK44B,UACD3hB,MAAM,qCAKV,OACIzS,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBAAgBI,QAASlE,KAAKo9D,mBACzC54D,EAAAC,QAAAvJ,cAACyxD,EAAAloD,SAAYszB,cAAA,KAGjBvzB,EAAAC,QAAAvJ,cAAC4yD,EAAArpD,SACG+P,MAAM,iBACNof,QAAS5zB,KAAKg5B,MAAM/hB,KACpBge,QAASj1B,KAAKm9D,mBAEd34D,EAAAC,QAAAvJ,cAACyxD,EAAAloD,SAAYuzB,iBAAA,yBAOlBklC,iFC7Cf,IAAA19D,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,yDAEA,IAAMsjE,EAAkB,SAAAh8D,GAAA,IACpBqgC,EADoBrgC,EACpBqgC,OACAC,EAFoBtgC,EAEpBsgC,eACAC,EAHoBvgC,EAGpBugC,aACAP,EAJoBhgC,EAIpBggC,SAJoB,OAMpB78B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,qBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,YAAYu9B,GAC3B78B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,eAAc,EAAA2J,EAAA2C,UAAS,iBAAtC,IAAyDsxB,GACzDl9B,EAAAC,QAAAvJ,cAACoiE,EAAA74D,SACG+P,OAAO,EAAA/G,EAAA2C,UAAS,wBAChBsiD,MAAO9wB,IAEXp9B,EAAAC,QAAAvJ,cAACoiE,EAAA74D,SACG+P,OAAO,EAAA/G,EAAA2C,UAAS,mBAChBsiD,MAAO/wB,MAKnB07B,EAAgBn7D,WACZw/B,OAAgBnhC,UAAUqE,OAC1B+8B,eAAgBphC,UAAUxB,OAC1B6iC,aAAgBrhC,UAAUxB,OAC1BsiC,SAAgB9gC,UAAUqE,mBAGf,EAAApF,EAAAwB,UAASq8D,kFCjCxB,IAAA79D,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAiL,EAAAjL,EAAA,sDAEA,IAAMwjE,EAAe,SAAAl8D,GAAA,IACjBqxD,EADiBrxD,EACjBqxD,MACAl+C,EAFiBnT,EAEjBmT,MAFiB,OAIhBA,IAAS,EAAAxP,EAAAuB,eAAcmsD,GAClB,GAEEluD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,eAAe0Q,GAC5Bzb,OAAO0J,KAAKiwD,GAAO7rD,IAAI,SAAAjI,GAAA,OACrB4F,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,YAAYlF,IAAKA,GAC5B4F,EAAAC,QAAAvJ,cAAA,WAAM0D,GACN4F,EAAAC,QAAAvJ,cAAA,WAAMw3D,EAAM9zD,SAOpC2+D,EAAar7D,WACTwwD,MAAOnyD,UAAUxB,OACjByV,MAAOjU,UAAUqE,mBAGN,EAAApF,EAAAwB,UAASu8D,kFC7BxB,QAAAxjE,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAk0B,EAAAl0B,EAAA,wDAEA,IAAMyjE,EAAgB,SAAAn8D,GAAgB,IAAb2oB,EAAa3oB,EAAb2oB,OACfyzC,GAAkB,EAAAxvC,EAAAyvC,mBAClBC,EAAkBF,EAAcG,UAAUppD,MAC1CqpD,EAAkBJ,EAAczzC,GAAQxV,MACxCspD,EAAkBL,EAAcG,UAAU5lD,KAC1C+lD,EAAkBN,EAAczzC,GAAQhS,KAE9C,OACIxT,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,kBAAmBulB,IAC1CxlB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,iBACVi6D,EACAF,GAELr5D,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBACVg6D,EACAH,MAOrBH,EAAct7D,WACV8nB,OAAQzpB,UAAUq0C,OAAO,YAAa,MAAO,qBAGlC,EAAAp1C,EAAAwB,UAASw8D,2GCjCxB,QAAAzjE,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,UACAA,EAAA,yDAEa2jE,kBAAkB,kBAC3BE,WAAappD,OAAO,EAAA/G,EAAA2C,UAAS,sBAAuB4H,KAAMxT,EAAAC,QAAAvJ,cAAC8iE,EAAAv5D,QAAD,OAC1Dw5D,KAAazpD,OAAO,EAAA/G,EAAA2C,UAAS,gBAAuB4H,KAAMxT,EAAAC,QAAAvJ,cAAC2gC,EAAAp3B,QAAD,OAC1Dy5D,MAAa1pD,OAAO,EAAA/G,EAAA2C,UAAS,iBAAuB4H,KAAMxT,EAAAC,QAAAvJ,cAAC2gC,EAAAp3B,QAAD,wFCR9D,IAAAjF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMokE,EAAW,kBACb35D,EAAAC,QAAAvJ,cAAA,OAAKgtB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACnErY,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,UAAQ4hB,GAAG,IAAIC,GAAG,IAAI5e,EAAE,IAAI6e,KAAK,YACjCxY,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,OAAOqL,SAAS,UAAUzqB,EAAE,gHAKnDugE,EAASj8D,WACLk8D,aAAc79D,UAAUqE,OACxBy5D,WAAc99D,UAAUqE,mBAGb,EAAApF,EAAAwB,UAASm9D,sSClBxBpkE,EAAA,QACAA,EAAA,QACAA,EAAA,MACA0T,EAAA1T,EAAA,OACAA,EAAA,wDAEA,IAAMg1D,EAAiB,SAAA1tD,GAAuB,IAApBrE,EAAoBqE,EAApBrE,KAAM8a,EAAczW,EAAdyW,QACxBwmD,EAAM,GASV,OAPIA,EADmB,iBAAnB,IAAOxmD,EAAP,YAAA/C,EAAO+C,IACDtT,EAAAC,QAAAvJ,cAACqjE,EAAA95D,SACH4Y,IAAKvF,EAAQuF,IACbC,UAAWxF,EAAQwF,YAGjBxF,EAGNtT,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,mBACXU,EAAAC,QAAAvJ,cAACsjE,EAAA/5D,SAAUzH,KAAMA,IACjBwH,EAAAC,QAAAvJ,cAAA,SAAIojE,IAAO,EAAA7wD,EAAA2C,UAAS,6DAKhC2+C,EAAe7sD,WACX4V,QAASvX,UAAUiL,WACfjL,UAAUk+D,OACNnhD,UAAW/c,UAAUxB,OACrBse,IAAW9c,UAAUqE,SAEzBrE,UAAUqE,SAEd5H,KAAMuD,UAAUqE,kBAGLmqD,iFCnCf,wDAAAh1D,EAAA,cAEkB,kBACdyK,EAAAC,QAAAvJ,cAAA,OAAKgtB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACnErY,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,UAAQ4hB,GAAG,KAAKC,GAAG,KAAK5e,EAAE,KAAK6e,KAAK,YACpCxY,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAO0sC,UAAU,0BACrBllD,EAAAC,QAAAvJ,cAAA,UAAQ4hB,GAAG,IAAIC,GAAG,IAAI5e,EAAE,MACxBqG,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,oKCRxB,wDAAA7D,EAAA,IAEA,IAAM2kE,EAA8B,SAACv+D,GAAU,IACnC+zB,EAA4B/zB,EAA5B+zB,QAAYyqC,yHADuBntC,CACPrxB,GADO,YAG3C,IAAK+zB,EAAS,MAAM,IAAI92B,MAAM,mBAE9B,OAAOiF,UAAMnH,cACTg5B,EAAQ3oB,cACRozD,IAIKnhD,eAAe,SAACquB,EAAUvuB,GAKnC,IAJA,IAAMw6B,KACFz6B,EAAcwuB,EACd+yB,EAAc,KAEXvhD,EAAIzkB,QAAQ,CACf,IAAM+nB,EAAQtD,EAAIsD,MAAM,cAExB,IAAKA,EAAO,CACRm3B,EAAIh/C,KAAKukB,GACT,MALW,IASRwhD,EAGHl+C,EAHA,GACGm+C,EAEHn+C,EAFA,GACArE,EACAqE,EADArE,MAGEyiD,EAAS1hD,EAAI9d,MAAM,EAAG+c,GAG5B,GAFAe,EAAMA,EAAI9d,MAAM+c,EAAQuiD,EAAIjmE,QAExBgmE,EAAa,CACb,IAAMI,EAAeJ,EAAf,IAA8BE,EAC9B/Q,EAAYzwC,EAAU0hD,GACtBr6D,EAAYtC,UAAM48D,eAAelR,GAAWA,EAAU2Q,EAA4B3Q,GAExF,IAAK1rD,UAAM48D,eAAet6D,GAAU,MAAM,IAAIvH,MAAJ,sBAAgC4hE,EAAhC,2CAC1C,IAAKr6D,EAAS,MAAM,IAAIvH,MAAJ,gBAA0BwhE,EAA1B,OAA4CI,EAA5C,kBAAuEnzB,EAAvE,eAEpBiM,EAAIh/C,KAAKuJ,UAAMosD,aAAa9pD,GAAW/F,IAAK0d,EAAO5c,SAAUq/D,KAC7DH,EAAc,UAEVG,EAAOnmE,QAAQk/C,EAAIh/C,KAAKimE,GAExBD,KAAUxhD,EACVw6B,EAAIh/C,KAAKwkB,EAAUwhD,IAEnBF,EAAcE,EAI1B,GAAIF,EAAa,MAAM,IAAIxhE,MAAJ,gBAA0BwhE,EAA1B,kBAAuD/yB,EAAvD,eAGvB,OAAOiM,EAAItxC,OAAO,SAAC04D,EAAKpvC,GACpB,IAAMqvC,EAAOD,EAAIA,EAAItmE,OAAS,GAM9B,MALoB,iBAATumE,GAAwC,iBAAZrvC,EACnCovC,EAAIA,EAAItmE,OAAS,GAAKumE,EAAOrvC,EAE7BovC,EAAIpmE,KAAKg3B,GAENovC,uFCjEf,QAAAnlE,EAAA,QACAA,EAAA,IACA25B,EAAA35B,EAAA,uDAIA,IAAMqlE,EAAgB,SAAA/9D,GAAA,IAAAg+D,EAAAh+D,EAClByW,eADkBxa,IAAA+hE,EACR,GADQA,EAElBv8B,EAFkBzhC,EAElByhC,aAFkB,OAGfhrB,EACHtT,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,WACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBACXU,EAAAC,QAAAvJ,cAAA,OAAKgtB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,aACnErY,EAAAC,QAAAvJ,cAAA,KAAG8hB,KAAK,OAAOqL,SAAS,WACpB7jB,EAAAC,QAAAvJ,cAAA,UAAQ4hB,GAAG,IAAIC,GAAG,IAAI5e,EAAE,IAAI6e,KAAK,YACjCxY,EAAAC,QAAAvJ,cAAA,QAAM8hB,KAAK,OAAOqL,SAAS,UAAUzqB,EAAE,oLAInD4G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBAAgBgU,GAC/BtT,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBAAgBI,QAAS4+B,GACpCt+B,EAAAC,QAAAvJ,cAACw4B,EAAArC,UAAD,QAZK,MAiBjB+tC,EAAcl9D,WACV4V,QAAcvX,UAAUqE,OACxBk+B,aAAcviC,UAAUuE,gBAGbs6D,sOC/BRx8B,yBACA1H,2BACAyH,wGCFP,IAAAnjC,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,UACAA,EAAA,yDAEA,IAAM6oC,EAAe,SAAAvhC,GAIf,IAHFkoB,EAGEloB,EAHFkoB,cACAgG,EAEEluB,EAFFkuB,YACAgT,EACElhC,EADFkhC,SAEM+8B,EAAevmE,OAAO0J,KAAK8sB,GAAanP,OAAOvZ,IAAI,SAAA+oB,GAAA,OAAaL,EAAYK,KAC5Evc,GAASkW,EAAcg2C,WACvBC,EAAeF,EAAa//D,OAAO,GAAG,OACtCkgE,KAAgBx9D,6HAAA8M,CAAInN,MAAMyR,GAAO5Q,SAAQoE,IAAI,SAAAnO,GAE/C,IAAMgnE,EAAYhnE,EAAI,IAAM2a,GAASmsD,EAAapvC,QAAUovC,KAC5D,OAAOF,EAAa5mE,KAAO4mE,EAAa5mE,GAAG03B,QAAUkvC,EAAa5mE,GAAKgnE,IAG3E,OACIl7D,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,UACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBAAe,EAAA2J,EAAA2C,UAAS,eACvC5L,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,cACT27D,EAAc54D,IAAI,SAACovB,EAAMD,GAAP,OAChBxxB,EAAAC,QAAAvJ,cAACykE,EAAAl7D,SAAam7D,WAAY3pC,EAAM4pC,aAAc7pC,EAAM,EAAGp3B,IAAKo3B,OAGpExxB,EAAAC,QAAAvJ,cAAC4kE,EAAAr7D,SACG8kB,cAAeA,EACf6R,SAAUmH,EACVjH,eAAgBiH,MAMhCK,EAAa1gC,WACTqnB,cAAehpB,UAAUxB,OACzBwwB,YAAehvB,UAAUxB,OACzBwjC,SAAehiC,UAAUsE,iBAGd,EAAArF,EAAAwB,UAAS4hC,kFC5CxB,QAAA7oC,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,sDAEA,IAAMgmE,EAAe,SAAA1+D,GAGf,IAAA2+D,EAAA3+D,EAFFu+D,kBAEEtiE,IAAA0iE,OADFH,EACEx+D,EADFw+D,aAEMI,GAAc,EAAA9nD,EAAA1T,SAChB,cACAm7D,EAAW1vC,OAAS,MAAQ,QAC1BivC,KAAMS,EAAWxvC,UAGvB,OACI5rB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,cACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWm8D,GAAcL,EAAW3vC,OACzCzrB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBAAe,EAAA2J,EAAA2C,UAAS,aAAcyvD,OAKjEE,EAAa79D,WACT09D,WAAcr/D,UAAUxB,OACxB8gE,aAAct/D,UAAUkL,mBAGb,EAAAjM,EAAAwB,UAAS++D,kFC7BxB,IAAAvgE,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,SACAA,EAAA,wDAEA,IAAMmmE,EAAW,SAAA7+D,GAAA,IACbkoB,EADaloB,EACbkoB,cACAiS,EAFan6B,EAEbm6B,UAFa,OAIbh3B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,aACXU,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAACqjE,EAAA95D,SACG4Y,IAAI,sCACJC,WACIkK,EAAKhjB,EAAAC,QAAAvJ,cAACo7B,EAAA7xB,SACF7F,IAAK48B,EAAUG,eACf/wB,SAAU2e,EAAc3e,SACxBF,OAAQ8wB,EAAU9Q,iBAKlClmB,EAAAC,QAAAvJ,cAAA,YAAM,EAAAuS,EAAA2C,UAAS,6CAA8CorB,EAAUG,oBAI/EukC,EAASh+D,WACLqnB,cAAehpB,UAAUxB,OACzBy8B,UAAej7B,UAAUxB,mBAGd,EAAAS,EAAAwB,UAASk/D,kFCjCxB,QAAAnmE,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,SACAA,EAAA,MACAmoC,EAAAnoC,EAAA,SAIAA,EAAA,yDAEA,IAAM4oC,EAAiB,SAAAthC,GAAkC,IAA/ByC,EAA+BzC,EAA/ByC,UAAWylB,EAAoBloB,EAApBkoB,cAE7BvL,EAIAuL,EAJAvL,UACApT,EAGA2e,EAHA3e,SACAqT,EAEAsL,EAFAtL,YACAiM,EACAX,EADAW,OAGEorB,GAAmB,EAAApT,EAAAtX,oBAAmBrB,GACtC42C,GAAmB,EAAAj+B,EAAAhX,WAAU3B,GAC7BgZ,GAAmB,EAAAL,EAAAjY,SAAQV,GAEjC,OACI/kB,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,UAAWX,IAClCU,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,YAAM,EAAAuS,EAAA2C,UAAS,mBACf5L,EAAAC,QAAAvJ,cAAA,YAAM,EAAAuS,EAAA2C,UAAS,qBACf5L,EAAAC,QAAAvJ,cAAA,YAAM,EAAAuS,EAAA2C,UAAS,iBAEnB5L,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,UACXU,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAACo7B,EAAA7xB,SAAMiG,OAAQsT,EAAWpT,SAAUA,KAExCpG,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAACo7B,EAAA7xB,SAAMiG,OAAQ4qC,EAAkB1qC,SAAUA,KAE/CpG,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWomB,GAAU,EAAI,SAAW,QACrC1lB,EAAAC,QAAAvJ,cAACo7B,EAAA7xB,SAAMiG,OAAQwf,EAAQtf,SAAUA,EAAUC,UAAA,OAGhD03B,GACC/9B,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,YAAM,EAAAuS,EAAA2C,UAAS,mBACf5L,EAAAC,QAAAvJ,cAAA,cACKilE,GAAcliD,EACXzZ,EAAAC,QAAAvJ,cAACmvD,EAAA5lD,SAAcoS,SAAUoH,IAEzB,MAKhBzZ,EAAAC,QAAAvJ,cAACklE,EAAA37D,QAAD,QAKZk+B,EAAezgC,WACX4B,UAAevD,UAAUqE,OACzB2kB,cAAehpB,UAAUxB,OACzBshE,YAAe9/D,UAAUuE,iBAGd,EAAAtF,EAAAwB,UAAS2hC,kFClExB,QAAA5oC,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,QACAA,EAAA,yDAEA,IAAMumE,EAAe,SAAAj/D,GAAA,IACjBkoB,EADiBloB,EACjBkoB,cACAioB,EAFiBnwC,EAEjBmwC,kBACAlmB,EAHiBjqB,EAGjBiqB,iBACA+0C,EAJiBh/D,EAIjBg/D,YAJiB,OAKf92C,EAAcg2C,WAAa,KAC7B/6D,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,QACXU,EAAAC,QAAAvJ,cAACqlE,EAAA97D,SACG8kB,cAAeA,EACfioB,kBAAmBA,EACnBlmB,iBAAkBA,EAClB+0C,YAAaA,MAKzBC,EAAap+D,WACTqnB,cAAmBhpB,UAAUxB,OAC7ByyC,kBAAmBjxC,UAAUsE,KAC7BymB,iBAAmB/qB,UAAUsE,KAC7Bw7D,YAAmB9/D,UAAUuE,iBAGlB,EAAAopB,EAAAvtB,SACX,SAAA6Q,GAAA,IAAGrY,EAAHqY,EAAGrY,QAAH,OACIowB,cAAmBpwB,EAAQ2C,SAASytB,cACpCioB,kBAAmBr4C,EAAQ2C,SAAS01C,kBACpClmB,iBAAmBnyB,EAAQ2C,SAASwvB,iBACpC+0C,YAAmBlnE,EAAQ2C,SAASukE,cAL7B,CAObC,kFCnCF,IAAA9gE,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,SACAA,EAAA,wDAEA,IAAMymE,EAAa,SAAAn/D,GAKb,IAJFkoB,EAIEloB,EAJFkoB,cACAioB,EAGEnwC,EAHFmwC,kBACAlmB,EAEEjqB,EAFFiqB,iBACA+0C,EACEh/D,EADFg/D,YAEMI,EAAen1C,GACf,EAAA7d,EAAA2C,UAAS,qJACTmZ,EAAcm3C,iBAEpB,OACIl8D,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAC6d,EAAAtU,SAAQsT,UAAU,OAAOC,KAAK,WAAWF,QAAS2oD,IACnDj8D,EAAAC,QAAAvJ,cAACygB,EAAAlX,SACGX,UAAU,kBACVG,aAAcqnB,GAAoBkmB,EAClCptC,MAAM,EAAAqJ,EAAA2C,UAAS,QACflM,QAASm8D,MAMzBG,EAAWt+D,WACPqnB,cAAmBhpB,UAAUxB,OAC7ByyC,kBAAmBjxC,UAAUsE,KAC7BymB,iBAAmB/qB,UAAUsE,KAC7Bw7D,YAAmB9/D,UAAUuE,iBAGlB,EAAAtF,EAAAwB,UAASw/D,kFCrCxB,QAAAzmE,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,MACA+hC,EAAA/hC,EAAA,wDAKA,IAAM4mE,EAAQ,SAAAt/D,GAGR,IAFFjJ,EAEEiJ,EAFFjJ,KACAwoE,EACEv/D,EADFu/D,mBAEMC,EAAU,SAACC,GACbF,EAAmBxoE,GAEc,mBAAtBA,EAAK2oE,cACZ3oE,EAAK2oE,aAAa3oE,EAAM0oE,IAI1B58D,EAAU,kBAAM28D,GAAQ,IAM9B,OAJIzoE,EAAK4oE,oBAAwC1jE,IAAvBlF,EAAK4oE,gBAC3BzjE,WAAWsjE,EAASzoE,EAAK+mD,OAASpjB,iBAIlCv3B,EAAAC,QAAAvJ,cAAA,OACI4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeu3B,YAAUE,UAAW9jC,EAAKigD,SAAU9b,QAAMnkC,EAAK4E,KAAKipD,gBACzF/hD,QAASA,GAETM,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,qBACXU,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAA,sBAAiC1L,EAAK4E,KAAKuO,iBAErD/G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wBACV1L,EAAK0f,SAEVtT,EAAAC,QAAAvJ,cAAC+lE,EAAAx8D,SAAYP,QAASA,MAKlCy8D,EAAMz+D,WACF9J,KAAMmI,UAAUk+D,OACZsC,aAAexgE,UAAUuE,KACzBq6C,MAAe5+C,UAAUkL,OACzBu1D,cAAezgE,UAAUsE,KACzBiT,QAAevX,UAAU+X,KACzB+/B,SAAe93C,UAAUqE,OACzB5H,KAAeuD,UAAUqE,SAE7Bg8D,mBAAoBrgE,UAAUuE,gBAGnB67D,iFCvDf,QAAA5mE,EAAA,QACAA,EAAA,uDAEA,IAAMmnE,EAAc,SAAA7/D,GAAA,IAAG6C,EAAH7C,EAAG6C,QAAH,OAChBM,EAAAC,QAAAvJ,cAAA,UACI4I,UAAU,4BACV9G,KAAK,SACLkH,QAASA,KAIjBg9D,EAAYh/D,WACRgC,QAAS3D,UAAUuE,gBAGRo8D,8UCffnnE,EAAA,QACAA,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,QACAA,EAAA,6DAEMonE,grBAAqB9+D,UAAMvB,+CAEpB,IAAAS,EAAAvB,KACL,OACIwE,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,QAASzE,KAAKG,MAAMk4C,WAEvCr4C,KAAKG,MAAM4mD,eAAelgD,IAAI,SAACu6D,EAAOp9D,GAAR,OAC1BQ,EAAAC,QAAAvJ,cAACmmE,EAAA58D,SACG7F,IAAKoF,EACL5L,KAAMgpE,EACNR,mBAAoBr/D,EAAKpB,MAAMygE,iCAS3DO,EAAaj/D,WACTm2C,SAAoB93C,UAAUqE,OAC9Bg8D,mBAAoBrgE,UAAUuE,KAC9BiiD,eAAoBxmD,UAAUm8D,QAC1Bn8D,UAAUk+D,OACNsC,aAAexgE,UAAUuE,KACzBq6C,MAAe5+C,UAAUkL,OACzBu1D,cAAezgE,UAAUsE,KACzBiT,QAAevX,UAAU+X,KACzB+/B,SAAe93C,UAAUqE,OACzB5H,KAAeuD,UAAUqE,sBAKtB,EAAAspB,EAAAvtB,SACX,SAAAU,GAAA,IAAGX,EAAHW,EAAGX,GAAH,OACIkgE,mBAAoBlgE,EAAGkgE,mBACvB7Z,eAAoBrmD,EAAGqmD,iBAHhB,CAKboa,kFC7CF,QAAApnE,EAAA,QACAA,EAAA,QACAA,EAAA,IACAmoB,EAAAnoB,EAAA,IACAm0B,EAAAn0B,EAAA,uDAEA,IAAMunE,EAAc,SAAAjgE,GAAA,IAAG3B,EAAH2B,EAAG3B,SAAU8e,EAAbnd,EAAamd,uBAAb,OAChBha,EAAAC,QAAAvJ,cAAA,OACI8I,GAAG,eACHF,WAAW,EAAAqU,EAAA1T,SAAW,gBAClB88D,sCAAuC/iD,KAG1C9e,IAIT4hE,EAAYp/D,WACRxC,SAAwB8hE,UAAWtsC,IACnC1W,uBAAwBgjD,UAAW38D,iBAGxB,EAAAqd,EAAAu/C,aAAW,EAAAvzC,EAAAvtB,SACtB,SAAA6Q,GAAA,OACIgN,uBADJhN,EAAG9Q,GAC4B8d,yBAFT,CAIxB8iD,mFC1BF,QAAAvnE,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,QACAA,EAAA,MACA2nE,EAAA3nE,EAAA,wDAMA,IAAM4nE,EAAS,SAAAtgE,GAAA,IACXuhB,EADWvhB,EACXuhB,aACApE,EAFWnd,EAEXmd,uBACAojD,EAHWvgE,EAGXugE,2BACAlb,EAJWrlD,EAIXqlD,sBACAniB,EALWljC,EAKXkjC,eACAs9B,EANWxgE,EAMXwgE,qBACA9Y,EAPW1nD,EAOX0nD,sBAPW,OASXvkD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAACwmE,EAAAI,eAAc93C,OAAQua,IACvB//B,EAAAC,QAAAvJ,cAAC6mE,EAAAt9D,QAAD,MACAD,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBAEP8e,GACApe,EAAAC,QAAAvJ,cAACwmE,EAAAM,iBACGxjD,uBAAwBA,EACxBuqC,sBAAuBA,IAG/BvkD,EAAAC,QAAAvJ,cAACwmE,EAAAO,iBAAD,MACAz9D,EAAAC,QAAAvJ,cAACwmE,EAAAQ,gBACGC,oBAAqBzb,EACrB0b,oBAAqBR,EACrBS,eAAgBR,OAMhCF,EAAOz/D,WACH0/D,2BAA4BrhE,UAAUsE,KACtC+d,aAA4BriB,UAAUsE,KACtC2Z,uBAA4Bje,UAAUsE,KACtC6hD,sBAA4BnmD,UAAUsE,KACtC0/B,eAA4BhkC,UAAUxB,OACtCgqD,sBAA4BxoD,UAAUuE,KACtC+8D,qBAA4BthE,UAAUuE,iBAG3B,EAAAopB,EAAAvtB,SACX,SAAA6Q,GAAA,IAAGhR,EAAHgR,EAAGhR,OAAQC,EAAX+Q,EAAW/Q,OAAQC,EAAnB8Q,EAAmB9Q,GAAnB,OACIkiB,aAA4BpiB,EAAOoiB,aACnCg/C,2BAA4BlhE,EAAGimD,sBAC/BnoC,uBAA4B9d,EAAG8d,uBAC/BkoC,sBAA4BhmD,EAAGgmD,sBAC/BniB,eAA4B9jC,EAAO8jC,eACnCwkB,sBAA4BroD,EAAGqoD,sBAC/B8Y,qBAA4BnhE,EAAGmhE,uBARxB,CAUbF,kFC5DF,QAAA5nE,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,IACA4T,EAAA5T,EAAA,uDAEA,IAAM4X,EAAa,SAAAtQ,GAAqB,IAAlBuf,EAAkBvf,EAAlBuf,YACZ0hD,GAAW,EAAA30D,EAAAynC,aAAYx0B,GAE7B,OACIpc,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,eAAew+D,IAItC3wD,EAAWzP,WACP0e,YAAargB,UAAUxB,mBAGZ,EAAAmvB,EAAAvtB,SACX,SAAA6Q,GAAA,OACIoP,YADJpP,EAAG/Q,OACqBmgB,cAFb,CAIbjP,+FCrBF5Y,OAAA0J,KAAA8/D,GAAA5/D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAqkE,EAAA3jE,qBACA7F,OAAA0J,KAAA+/D,GAAA7/D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAskE,EAAA5jE,qBACA7F,OAAA0J,KAAAggE,GAAA9/D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAukE,EAAA7jE,qBACA7F,OAAA0J,KAAAigE,GAAA//D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwkE,EAAA9jE,8GCHA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,wDAEA,IAAM+nE,EAAgB,SAAAzgE,GAAA,IAAG2oB,EAAH3oB,EAAG2oB,OAAH,OAClBxlB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,0BACXU,EAAAC,QAAAvJ,cAAC6d,EAAAtU,SAAQsT,UAAU,MAAMD,SAAS,EAAArK,EAAA2C,UAAS,wBAA0B4Z,EAAOpR,UAAW,EAAAnL,EAAA2C,UAAS,2BAC5F5L,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,wBAAyBulB,EAAO24C,YAKvEb,EAAc5/D,WACV8nB,OAAQzpB,UAAUxB,UAGb+iE,sXClBT/nE,EAAA,QACAA,EAAA,IACA2nE,EAAA3nE,EAAA,4DAEMkoE,cACF,SAAAA,EAAY9hE,gGAAOqB,CAAAxB,KAAAiiE,GAAA,IAAAt7D,mKAAA7E,CAAA9B,MAAAiiE,EAAAlgE,WAAAhJ,OAAAiJ,eAAAigE,IAAA/oE,KAAA8G,KACTG,IADS,OAAAwG,EAoBnBi8D,aAAe,WACX,IAAMC,EAAiBl8D,EAAKm8D,eAAe/U,QAAQ5sC,KAAK,SAAAkT,GAAA,OAAMt5B,SAASs5B,KACvE1tB,EAAKiyB,UAAWiqC,oBAtBDl8D,EAyBnBo8D,iBAAmB,SAACzoE,GAChBA,EAAEw+B,kBAEF,IAAMkqC,EAAYr8D,EAAKqyB,MAAM6pC,eACvBxuC,EAAY2uC,EAAUjoE,SAAWA,SAASkoE,gBAC1CC,EAAYv8D,EAAKm8D,eAAeE,EAAU,WAAa,aAAa52D,KAAK,SAAA+2D,GAAA,OAAO9uC,EAAG8uC,KAErFD,EACA7uC,EAAG6uC,KAEHv8D,EAAKiyB,UAAWiqC,gBAAgB,KAjCpCl8D,EAAKqyB,OACD6pC,gBAAgB,GAEpBl8D,EAAKm8D,gBACDpmE,OAAY,mBAAqB,yBAA2B,sBAAwB,sBACpFqxD,SAAY,oBAAqB,0BAA2B,uBAAwB,uBACpFqV,WAAY,oBAAqB,0BAA2B,uBAAwB,uBACpFC,UAAY,iBAAqB,uBAA2B,sBAAwB,qBATzE18D,qUADQtE,UAAMvB,0DAeb,IAAAS,EAAAvB,KAChBA,KAAK8iE,eAAepmE,MAAMiG,QAAQ,SAACjG,GAC/B3B,SAASg6B,iBAAiBr4B,EAAO6E,EAAKqhE,cAAc,sCAwBxD,IAAMU,GAAyB,EAAAnrD,EAAA1T,SAAW,iBACtC64B,OAAUt9B,KAAKg5B,MAAM6pC,iBAEzB,OACIr+D,EAAAC,QAAAvJ,cAAA,KACIgS,KAAK,eACLpJ,UAAWw/D,EACXp/D,QAASlE,KAAK+iE,kBAEdv+D,EAAAC,QAAAvJ,cAACwmE,EAAA6B,cAAaz/D,UAAU,4BAM/Bm+D,wHC5DT,QAAAloE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMwpE,EAAe,SAAAliE,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACjBU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYqkB,MAAM,KAAKC,OAAO,KAAKvL,QAAQ,YAAYqL,MAAM,8BACnG1jB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,8BAA8BlG,EAAE,6DAA6Dof,KAAK,OAAOgtC,cAAc,SAASJ,OAAO,cAI/J2Z,EAAarhE,WACT4B,UAAWvD,UAAUqE,UAGhB2+D,0HCdT,QAAAxpE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMypE,EAAqB,SAAAniE,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACvBU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYokB,MAAM,6BAA6BrL,QAAQ,aAC7FrY,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,0BAA0BkZ,KAAK,UAAUqL,SAAS,UAAUzqB,EAAE,4ZAItF4lE,EAAmBthE,WACf4B,UAAWvD,UAAUqE,UAGhB4+D,0HCdT,QAAAzpE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM0pE,EAAe,SAAApiE,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACjBU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYokB,MAAM,6BAA6BrL,QAAQ,aAC7FrY,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,0BAA0BkZ,KAAK,UAAUpf,EAAE,inCAInE6lE,EAAavhE,WACT4B,UAAWvD,UAAUqE,UAGhB6+D,uHCdT,QAAA1pE,EAAA,QACAA,EAAA,QACAA,EAAA,IACA2nE,EAAA3nE,EAAA,wDAEA,IAAMioE,EAAkB,SAAA3gE,GAGlB,IAFFmd,EAEEnd,EAFFmd,uBACAuqC,EACE1nD,EADF0nD,sBAEM2a,GAAyB,EAAAvrD,EAAA1T,SAAW,gBACtC64B,OAAU9e,IAEd,OACIha,EAAAC,QAAAvJ,cAAA,KACIgS,KAAK,eACLpJ,UAAW4/D,EACXx/D,QAAS6kD,GAETvkD,EAAAC,QAAAvJ,cAACwmE,EAAA8B,oBAAmB1/D,UAAU,kBAK1Ck+D,EAAgB9/D,WACZsc,uBAAwBje,UAAUsE,KAClCkkD,sBAAwBxoD,UAAUuE,QAG7Bk9D,yHC5BT,QAAAjoE,EAAA,QACAA,EAAA,QACAA,EAAA,IACAgmC,EAAAhmC,EAAA,IACA2nE,EAAA3nE,EAAA,SACAA,EAAA,yDAEA,IAAMmoE,EAAiB,SAAA7gE,GAIjB,IAHF+gE,EAGE/gE,EAHF+gE,oBACAD,EAEE9gE,EAFF8gE,oBACAE,EACEhhE,EADFghE,eAEMsB,GAAwB,EAAAxrD,EAAA1T,SAAW,eACrC64B,OAAU6kC,IAEd,OACI39D,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,KACIgS,KAAK,eACLhJ,QAASm+D,EACTv+D,UAAW6/D,GAEXn/D,EAAAC,QAAAvJ,cAACwmE,EAAA+B,cAAa3/D,UAAU,iBAE5BU,EAAAC,QAAAvJ,cAAC6kC,EAAAS,eACGC,GAAI0hC,EACJ/mE,QAAS,IACTslC,WAAW,kBACXC,eAAA,GAEAn8B,EAAAC,QAAAvJ,cAAC0oE,EAAAn/D,SACG01B,QAASgoC,EACTP,2BAA4BQ,EAC5BvkC,aAAcwkC,OAOlCH,EAAehgE,WACXkgE,oBAAqB7hE,UAAUsE,KAC/Bs9D,oBAAqB5hE,UAAUsE,KAC/Bw9D,eAAqB9hE,UAAUuE,QAG1Bo9D,6VC9CTnoE,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACA8pE,EAAA9pE,EAAA,KACA+pE,EAAA/pE,EAAA,+NAKMgqE,6SACF9W,cAAgB,SAAC30C,GACb3R,EAAK6zB,YAAcliB,KAIvBoiB,mBAAqB,SAACh+B,GAClB,IAAMsnE,GAAwBtnE,EAAMQ,OAAO42B,UAAU6G,SAAS,cAAe,sBACzEh0B,EAAK6zB,cAAgB7zB,EAAK6zB,YAAYG,SAASj+B,EAAMQ,SAAWyJ,EAAKxG,MAAMg6B,SAAW6pC,GACtFr9D,EAAKxG,MAAM09B,0VATMx7B,UAAMo7B,8DAc3B1iC,SAASg6B,iBAAiB,YAAa/0B,KAAK06B,mEAI5C3/B,SAASi6B,oBAAoB,YAAah1B,KAAK06B,qDAW/C,IAAMupC,GAAwB,EAAA9rD,EAAA1T,SAAW,mBACrC67B,KAAQtgC,KAAKG,MAAMg6B,UAEjB+pC,GAAkC,EAAA/rD,EAAA1T,SAAW,6BAC/C07B,KAAMngC,KAAKG,MAAMyhE,6BAErB,OACIp9D,EAAAC,QAAAvJ,cAAA,OAAKyE,IAAKK,KAAKitD,cAAenpD,UAAWmgE,GACrCz/D,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWogE,GACZ1/D,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,oBAAmB,EAAA2J,EAAA2C,UAAS,aAC5C5L,EAAAC,QAAAvJ,cAAC2oE,EAAAM,MAAKpsD,UAAU,SAAS9C,KAAM8uD,EAAeK,oBAElD5/D,EAAAC,QAAAvJ,cAAC4oE,EAAAO,iBAAD,kDAnBR,OACI78C,GAAKhP,QAAQ,EAAA/K,EAAA2C,UAAS,WAAYk0D,QAASC,mBAC3C98C,GAAKjP,QAAQ,EAAA/K,EAAA2C,UAAS,SAAUk0D,QAASE,2BAuBrDT,EAAe7hE,WACX0/D,2BAA4BrhE,UAAUsE,KACtCs1B,QAA4B55B,UAAUsE,KACtCg5B,aAA4Bt9B,UAAUuE,gBAG3Bi/D,8FC/DfhrE,OAAA0J,KAAAgiE,GAAA9hE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAumE,EAAA7lE,qBACA7F,OAAA0J,KAAAm6B,GAAAj6B,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0+B,EAAAh+B,qBACA7F,OAAA0J,KAAAiiE,GAAA/hE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwmE,EAAA9lE,kWCFA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA2qE,EAAA3qE,EAAA,+NAEMoqE,6SACFnrC,OACI2rC,iBAAkB,OAGtBC,aAAe,SAACtoD,GACZ3V,EAAKiyB,UAAW+rC,iBAAkBroD,+UANvBja,UAAMo7B,mDASZ,IAAAl8B,EAAAvB,KACC6kE,EAAc7kE,KAAKG,MAAM8U,KAAKjV,KAAKg5B,MAAM2rC,kBAAkBL,QAC3DQ,GAAsB,EAAA3sD,EAAA1T,SAAW,gBAAiBzE,KAAKG,MAAM4X,WAMnE,OACIvT,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWghE,GACZtgE,EAAAC,QAAAvJ,cAACwpE,EAAA7nC,aACGS,OAAQt9B,KAAKg5B,MAAM2rC,iBACnBzqD,SAAU,SAAAojB,GAAA,OAAU/7B,EAAKqjE,aAAatnC,KAGlCvkC,OAAO0J,KAAKzC,KAAKG,MAAM8U,MAAMpO,IAAI,SAAAjI,GAAA,OAC7B4F,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,UAAS1M,IAAKA,GACjB4F,EAAAC,QAAAvJ,cAAA,QACI4I,UAfH,SAACmU,GAAD,OAAe,EAAAE,EAAA1T,UAClCuT,KAAMC,GACRA,GAamC8sD,CAAiBxjE,EAAKpB,MAAM8U,KAAKrW,GAAKoZ,MACjDxD,MAAOjT,EAAKpB,MAAM8U,KAAKrW,GAAK4Z,QAE3BjX,EAAKpB,MAAM8U,KAAKrW,GAAK4Z,YAM1ChU,EAAAC,QAAAvJ,cAAC2pE,EAAD,gBAMhBV,EAAKjiE,WACD6V,UAAWxX,UAAUqE,OACrBqQ,KAAW1U,UAAUk+D,OACjBjmD,OAAQjY,UAAUqE,OAClBoT,KAAQzX,UAAUqE,YAIjBu/D,+OCvDFK,0BACAD,4BACAF,0GCFP,QAAAtqE,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACAm0B,EAAAn0B,EAAA,QACAA,EAAA,yDAEA,IAAMyqE,EAAgB,SAAAnjE,GAAA,IAClB2jE,EADkB3jE,EAClB2jE,iBACAC,EAFkB5jE,EAElB4jE,qBACAC,EAHkB7jE,EAGlB6jE,kBACAC,EAJkB9jE,EAIlB8jE,YACAC,EALkB/jE,EAKlB+jE,gBACAC,EANkBhkE,EAMlBgkE,aANkB,OAQlB7gE,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,eACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,2BACXU,EAAAC,QAAAvJ,cAACoqE,EAAA7gE,SACG5G,MAAM,EAAA4P,EAAA2C,UAAS,YACfkpB,OAAQ+rC,EACRlnC,WAAY+mC,EACZtnC,MAAM,wBAEVp5B,EAAAC,QAAAvJ,cAACoqE,EAAA7gE,SACG5G,MAAM,EAAA4P,EAAA2C,UAAS,qBACfkpB,OAAQ6rC,EACRhnC,UAAW6mC,IAEfxgE,EAAAC,QAAAvJ,cAACoqE,EAAA7gE,SACG5G,MAAM,EAAA4P,EAAA2C,UAAS,mBACfkpB,OAAQ8rC,EACRjnC,UAAW8mC,OAM3BT,EAActiE,WACV8iE,iBAAsBzkE,UAAUsE,KAChCogE,qBAAsB1kE,UAAUsE,KAChCqgE,kBAAsB3kE,UAAUsE,KAChCsgE,YAAsB5kE,UAAUuE,KAChCsgE,gBAAsB7kE,UAAUuE,KAChCugE,aAAsB9kE,UAAUuE,iBAGrB,EAAAopB,EAAAvtB,SACX,SAAA6Q,GAAA,IAAG9Q,EAAH8Q,EAAG9Q,GAAH,OACIwkE,kBAAsBxkE,EAAGme,wBACzBmmD,iBAAsBtkE,EAAGqe,4BACzBkmD,qBAAsBvkE,EAAGg6C,2BACzByqB,YAAsBzkE,EAAG6kE,qBACzBH,gBAAsB1kE,EAAG8kE,qBACzBH,aAAsB3kE,EAAG+kE,oBAPlB,CASbjB,kFCtDF,QAAAzqE,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACAm0B,EAAAn0B,EAAA,QACAA,EAAA,yDAEA,IAAMwqE,EAAkB,SAAAljE,GAAA,IACpBqkE,EADoBrkE,EACpBqkE,cACAC,EAFoBtkE,EAEpBskE,aACAC,EAHoBvkE,EAGpBukE,sBACApwC,EAJoBn0B,EAIpBm0B,mBACAqwC,EALoBxkE,EAKpBwkE,aACAC,EANoBzkE,EAMpBykE,eACAC,EAPoB1kE,EAOpB0kE,2BACAnwC,EARoBv0B,EAQpBu0B,mBARoB,OAUpBpxB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,eACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,6BACXU,EAAAC,QAAAvJ,cAACoqE,EAAA7gE,SACG5G,MAAM,EAAA4P,EAAA2C,UAAS,YACflM,QAAS2hE,GAETrhE,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAA,iBAA4B4hE,GAAiB,MAAMn6D,iBAE1D/G,EAAAC,QAAAvJ,cAACoqE,EAAA7gE,SACG5G,MAAM,EAAA4P,EAAA2C,UAAS,aACf+tB,UAAWwnC,EACXrsC,OAAQwsC,IAEZthE,EAAAC,QAAAvJ,cAACoqE,EAAA7gE,SACG5G,MAAM,EAAA4P,EAAA2C,UAAS,yBACf+tB,UAAWynC,EACXtsC,OAAQysC,IAEZvhE,EAAAC,QAAAvJ,cAACoqE,EAAA7gE,SACG5G,MAAM,EAAA4P,EAAA2C,UAAS,iBACf+tB,UAAW3I,EACX8D,OAAQ1D,OAMxB2uC,EAAgBriE,WACZwjE,cAA4BnlE,UAAUqE,OACtC+gE,aAA4BplE,UAAUsE,KACtCu9D,oBAA4B7hE,UAAUsE,KACtC+gE,sBAA4BrlE,UAAUsE,KACtC2wB,mBAA4Bj1B,UAAUsE,KACtCghE,aAA4BtlE,UAAUuE,KACtCghE,eAA4BvlE,UAAUuE,KACtCihE,2BAA4BxlE,UAAUuE,KACtC8wB,mBAA4Br1B,UAAUuE,iBAG3B,EAAAopB,EAAAvtB,SACX,SAAA6Q,GAAA,IAAG/Q,EAAH+Q,EAAG/Q,OAAQC,EAAX8Q,EAAW9Q,GAAX,OACIglE,cAA4BjlE,EAAOk6C,iBACnCgrB,aAA4BjlE,EAAG4d,gBAC/B8jD,oBAA4B1hE,EAAGimD,sBAC/Bif,sBAA4BllE,EAAGge,uBAC/B8W,mBAA4B90B,EAAGy2B,oBAC/B0uC,aAA4BnlE,EAAGslE,mBAC/BF,eAA4BplE,EAAGolE,eAC/BC,2BAA4BrlE,EAAGqlE,2BAC/BnwC,mBAA4Bl1B,EAAGk1B,qBAVxB,CAYb2uC,kFCnEF,QAAAxqE,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,QACAA,EAAA,yDAEA,IAAMsqE,EAAmB,SAAAhjE,GAAA,IACrB8+B,EADqB9+B,EACrB8+B,KACA9I,EAFqBh2B,EAErBg2B,WACA4uC,EAHqB5kE,EAGrB4kE,eAHqB,OAKrBzhE,EAAAC,QAAAvJ,cAACgrE,EAAAzhE,SACG07B,KAAMA,EACN9I,WAAYA,EACZ4uC,eAAgBA,KAIxB5B,EAAiBniE,WACbi+B,KAAgB5/B,UAAUuE,KAC1BmhE,eAAgB1lE,UAAUsE,KAC1BwyB,WAAgB92B,UAAUsE,iBAGf,EAAAqpB,EAAAvtB,SACX,SAAA6Q,GAAA,IAAG9Q,EAAH8Q,EAAG9Q,GAAH,OACIy/B,KAAgBz/B,EAAGylE,mBACnBF,eAAgBvlE,EAAGgmD,sBACnBrvB,WAAgB32B,EAAGimD,wBAJZ,CAMb0d,kFC7BF,QAAAtqE,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACA25B,EAAA35B,EAAA,IACAg2C,EAAAh2C,EAAA,wDAIA,IAAMqsE,EAAiB,SAAA/kE,GAA0C,IAAvC8+B,EAAuC9+B,EAAvC8+B,KAAM9I,EAAiCh2B,EAAjCg2B,WAAY4uC,EAAqB5kE,EAArB4kE,eAClCI,GAAwB,EAAAluD,EAAA1T,SAAW,6BACrC67B,KAAQjJ,GAAc4uC,IAG1B,OACIzhE,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAWuiE,GACZ7hE,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,kBAAkBI,QAASi8B,GACtC37B,EAAAC,QAAAvJ,cAACw4B,EAAAu1B,UAASnlD,UAAU,eACpBU,EAAAC,QAAAvJ,cAAA,aAAO,EAAAuS,EAAA2C,UAAS,cAEpB5L,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,sBACV/K,OAAO0J,MAAK,EAAAstC,EAAAK,wBAAuBvpC,IAAI,SAAAjI,GAAA,OACpC4F,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,UAAS1M,IAAKA,GACjB4F,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBACXU,EAAAC,QAAAvJ,cAAA,KAAGgS,MAAM,EAAA6iC,EAAAS,QAAO5xC,IACZ4F,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAA,gBAA2BlF,EAAI+N,QAAQ,SAAU,KAAKpB,gBACzD/G,EAAAC,QAAAvJ,cAAA,aAAO,EAAA60C,EAAAK,uBAAsBxxC,YAU7DwnE,EAAelkE,WACXi+B,KAAgB5/B,UAAUuE,KAC1BmhE,eAAgB1lE,UAAUsE,KAC1BwyB,WAAgB92B,UAAUsE,gBAGfuhE,iFC1Cf,QAAArsE,EAAA,QACAA,EAAA,IACAmoB,EAAAnoB,EAAA,IACAyQ,EAAAzQ,EAAA,IACAusE,EAAAvsE,EAAA,SAOAA,EAAA,MACAm0B,EAAAn0B,EAAA,uDAEA,IAAMwsE,EAAS,SAAAllE,GAgBT,IAfF+oC,EAeE/oC,EAfF+oC,aACAlkB,EAcE7kB,EAdF6kB,QACA6iB,EAaE1nC,EAbF0nC,YACAn+B,EAYEvJ,EAZFuJ,SACA47D,EAWEnlE,EAXFmlE,kBACAC,EAUEplE,EAVFolE,mBACA7f,EASEvlD,EATFulD,0BACAhkC,EAQEvhB,EARFuhB,aACA2Q,EAOElyB,EAPFkyB,UACAhmB,EAMElM,EANFkM,QACAm5D,EAKErlE,EALFqlE,eACA7f,EAIExlD,EAJFwlD,iBACA8f,EAGEtlE,EAHFslE,kBACAC,EAEEvlE,EAFFulE,kBACAC,EACExlE,EADFwlE,qBAaA,OAVAxnE,OAAO01B,iBAAiB,sBAAuB,SAAAz6B,GAC3C6E,QAAQ2nE,IAAI,yCAEZxsE,EAAEulD,iBAEF8mB,EAAkBrsE,GAClBssE,MAKApiE,EAAAC,QAAAvJ,cAAA,UAAQ4I,UAAU,UACdU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,cACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,aACVyvB,GAAa/uB,EAAAC,QAAAvJ,cAACorE,EAAAS,iBAAD,MACdviE,EAAAC,QAAAvJ,cAACorE,EAAAU,WAAUtU,MAAOuU,aAEtBziE,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,cACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,yBACT8iD,GAA6BhkC,GAC3Bpe,EAAAC,QAAAvJ,cAACorE,EAAAY,kBACGC,aAActgB,EACd3iD,QAASsiE,IAGf5jD,EACEpe,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAACorE,EAAAc,aACGh9B,aAAcA,EACdlkB,SAAS,EAAA1b,EAAAa,aAAYT,EAAUsb,GAAS,GACxCmhD,mBAAoBt+B,EACpB29B,eAAgBA,EAChB97D,SAAUA,EACV2C,QAASA,EACT+5D,aAAcb,EACd5oC,aAAcgpC,KAItBriE,EAAAC,QAAAvJ,cAACorE,EAAAiB,YAAD,QAIZ/iE,EAAAC,QAAAvJ,cAACorE,EAAAkB,0BAAD,SAMhBjB,EAAOrkE,WACHkoC,aAA2B7pC,UAAUqE,OACrCshB,QAA2B3lB,UAAUqE,OACrCmkC,YAA2BxoC,UAAUsE,KACrC+F,SAA2BrK,UAAUqE,OACrC4hE,kBAA2BjmE,UAAUuE,KACrC2hE,mBAA2BlmE,UAAUsE,KACrC8gE,aAA2BplE,UAAUsE,KACrC+hD,0BAA2BrmD,UAAUsE,KACrC+d,aAA2BriB,UAAUsE,KACrC0uB,UAA2BhzB,UAAUsE,KACrC0I,QAA2BhN,UAAUqE,OACrC8hE,eAA2BnmE,UAAUuE,KACrC+hD,iBAA2BtmD,UAAUxB,OACrC4nE,kBAA2BpmE,UAAUuE,KACrC8hE,kBAA2BrmE,UAAUuE,KACrC+hE,qBAA2BtmE,UAAUuE,iBAK1B,EAAAod,EAAAu/C,aAAW,EAAAvzC,EAAAvtB,SACtB,SAAA6Q,GAAA,IAAGhR,EAAHgR,EAAGhR,OAAQE,EAAX8Q,EAAW9Q,GAAX,OACI0pC,aAA2B5pC,EAAOinE,cAClCvhD,QAA2B1lB,EAAO0lB,QAClC6iB,YAA2BvoC,EAAOuoC,YAClCn+B,SAA2BpK,EAAOoK,SAClCgY,aAA2BpiB,EAAOoiB,aAClCrV,QAA2B/M,EAAO+M,QAClCi5D,kBAA2B9lE,EAAG8lE,kBAC9BC,mBAA2B/lE,EAAG+lD,wBAC9Bkf,aAA2BjlE,EAAG4d,gBAC9BsoC,0BAA2BlmD,EAAGkmD,0BAC9BrzB,UAA2B7yB,EAAG6yB,UAC9BszB,iBAA2BnmD,EAAGmmD,iBAC9B8f,kBAA2BjmE,EAAGimE,kBAC9BC,kBAA2BlmE,EAAGkmE,kBAC9BC,qBAA2BnmE,EAAGmmE,uBAhBZ,CAkBxBN,gGCxHFxtE,OAAA0J,KAAAilE,GAAA/kE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwpE,EAAA9oE,qBACA7F,OAAA0J,KAAAklE,GAAAhlE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAypE,EAAA/oE,qBACA7F,OAAA0J,KAAAmlE,GAAAjlE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0pE,EAAAhpE,qBACA7F,OAAA0J,KAAAolE,GAAAllE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2pE,EAAAjpE,qBACA7F,OAAA0J,KAAAqlE,GAAAnlE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4pE,EAAAlpE,qBACA7F,OAAA0J,KAAAslE,GAAAplE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6pE,EAAAnpE,4GCLA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAgmC,EAAAhmC,EAAA,QACAA,EAAA,KACAiuE,EAAAjuE,EAAA,KACA25B,EAAA35B,EAAA,uDAIA,IAAMqtE,EAAc,SAAA/lE,GAAA,IAChB6kB,EADgB7kB,EAChB6kB,QACAtb,EAFgBvJ,EAEhBuJ,SACA2C,EAHgBlM,EAGhBkM,QACA+5D,EAJgBjmE,EAIhBimE,aACAD,EALgBhmE,EAKhBgmE,mBACAX,EANgBrlE,EAMhBqlE,eACA7oC,EAPgBx8B,EAOhBw8B,aACAuM,EARgB/oC,EAQhB+oC,aARgB,OAUhB5lC,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,eACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,0BACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,YAAc67B,KAAQgnC,IAAiBpjE,QAAS25B,GACvEr5B,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAU,oBACTU,EAAAC,QAAAvJ,cAAC+sE,EAAAxjE,SAAS4Y,IAAQ+sB,EAAR,cAEd5lC,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAU,kBAAkByJ,GAC/B/I,EAAAC,QAAAvJ,cAACw4B,EAAAs1B,WAAUllD,UAAU,kBAEzBU,EAAAC,QAAAvJ,cAAC6kC,EAAAS,eACGC,GAAI6mC,EACJlsE,QAAS,IACTslC,WAAW,uBACXC,eAAA,GAEAn8B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wBACXU,EAAAC,QAAAvJ,cAAC8sE,EAAAE,iBACG7wC,WAAYiwC,EACZhuC,OAAQuE,EACRwpC,mBAAoBA,EACpBX,eAAgBA,YAKZ,IAAZxgD,GACR1hB,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAU,sBACTU,EAAAC,QAAAvJ,cAAA,SAAGsJ,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAA,YAAuB8G,GAAY,IAAIW,iBAC/C2a,KAMbkhD,EAAYllE,WACRkoC,aAAoB7pC,UAAUqE,OAC9BshB,QAAoB3lB,UAAUqE,OAC9BgG,SAAoBrK,UAAUqE,OAC9B0iE,aAAoB/mE,UAAUsE,KAC9BwiE,mBAAoB9mE,UAAUsE,KAC9B0I,QAAoBhN,UAAUqE,OAC9B8hE,eAAoBnmE,UAAUuE,KAC9B+4B,aAAoBt9B,UAAUuE,QAGzBsiE,0GCjETruE,OAAA0J,KAAA0lE,GAAAxlE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAiqE,EAAAvpE,6WCAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACAquE,EAAAruE,EAAA,KACAsuE,EAAAtuE,EAAA,KACA2T,EAAA3T,EAAA,IACAm0B,EAAAn0B,EAAA,8NAEMmuE,6SACFjb,cAAgB,SAAC30C,GACb3R,EAAK6zB,YAAcliB,KAGvBoiB,mBAAqB,SAACh+B,GAClB,IAAM4rE,GAAwB5rE,EAAMQ,OAAO42B,UAAU6G,SAAS,YAC1Dh0B,EAAK6zB,cAAgB7zB,EAAK6zB,YAAYG,SAASj+B,EAAMQ,SAClDyJ,EAAKxG,MAAMk3B,YAAcixC,GAC5B3hE,EAAKxG,MAAMm5B,oVATOj3B,UAAMvB,0DAc5B/F,SAASg6B,iBAAiB,YAAa/0B,KAAK06B,mEAI5C3/B,SAASi6B,oBAAoB,YAAah1B,KAAK06B,0XAGpCntB,yFACXvN,KAAKG,MAAMm5B,kBACLt5B,KAAKG,MAAMqqC,cAAcj9B,uIAG1B,IAAAhM,EAAAvB,KACL,QAAKA,KAAKG,MAAMyiB,cAGZpe,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,oBAAoBnE,IAAKK,KAAKitD,eACvCjtD,KAAKG,MAAMqpC,aAAa5wC,OAAS,GACnCoH,KAAKG,MAAMqpC,aAAa3iC,IAAI,SAAC4iC,GAAD,OACxBjlC,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,UAAS1M,IAAK6qC,EAAQl8B,SACzB/I,EAAAC,QAAAvJ,cAAA,OACI4I,WAAW,EAAAqU,EAAA1T,SAAW,uBAAwBglC,EAAQzxB,MACtD9T,QAAS3C,EAAKgnE,SAAS1pE,KAAd0C,EAAyBkoC,EAAQl8B,UAE1C/I,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,mBAAmB2lC,EAAQl8B,SAC3C/I,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,qBAAqB2lC,EAAQj1B,WAIxDxU,KAAKG,MAAMknE,oBACZ7iE,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,cACXU,EAAAC,QAAAvJ,cAACktE,EAAAI,eAActkE,QAASlE,KAAKG,MAAMumE,kBAGvCliE,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,aAAaI,QAASwqB,iBACjClqB,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,oBAAmB,EAAA2J,EAAA2C,UAAS,YAC5C5L,EAAAC,QAAAvJ,cAACmtE,EAAAI,YAAW3kE,UAAU,2BAO1CokE,EAAgBhmE,WACZsnC,aAAoBjpC,UAAUyY,MAC9B4J,aAAoBriB,UAAUsE,KAC9BwiE,mBAAoB9mE,UAAUsE,KAC9BwyB,WAAoB92B,UAAUsE,KAC9B6hE,eAAoBnmE,UAAUuE,KAC9Bw0B,OAAoB/4B,UAAUuE,MAGlC,IAAM4jE,GAAmB,EAAAx6C,EAAAvtB,SACrB,SAAAkR,GAAA,IAAGrR,EAAHqR,EAAGrR,OAAH,OACIgpC,aAAehpC,EAAOgpC,aACtB5mB,aAAepiB,EAAOoiB,aACtB4nB,cAAehqC,EAAOgqC,gBAJL,CAMvB09B,KAE2BA,gBAApBQ,wGCnFT,QAAA3uE,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,wDAEA,IAAMyuE,EAAgB,SAAAnnE,GAAA,IAAG6C,EAAH7C,EAAG6C,QAAH,OAClBM,EAAAC,QAAAvJ,cAACygB,EAAAlX,SACGT,GAAG,kBACHF,UAAU,iBACVC,YAAA,EACAK,MAAM,EAAAqJ,EAAA2C,UAAS,WACflM,QAASA,KAIjBskE,EAActmE,WACVgC,QAAS3D,UAAUuE,QAGd0jE,mHCnBT,QAAAzuE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM0uE,EAAa,SAAApnE,GAAA,IAAGyC,EAAHzC,EAAGyC,UAAH,OACfU,EAAAC,QAAAvJ,cAAA,OAAK4I,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,GAAYokB,MAAM,6BAA6BrL,QAAQ,aAC7FrY,EAAAC,QAAAvJ,cAAA,KAAG4I,UAAU,cAAckZ,KAAK,UAAUqL,SAAS,WAC/C7jB,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,2OACR4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,6EACR4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,iEACR4G,EAAAC,QAAAvJ,cAAA,QAAM0C,EAAE,gFAKpB6qE,EAAWvmE,WACP4B,UAAWvD,UAAUqE,UAGhB6jE,sHCnBT,QAAA1uE,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,wDAEA,IAAMmtE,EAAmB,SAAA7lE,GAGnB,IAFF8lE,EAEE9lE,EAFF8lE,aACAjjE,EACE7C,EADF6C,QAeA,OACIM,EAAAC,QAAAvJ,cAACygB,EAAAlX,SACGX,UAAU,iBACVC,YAAA,EACAK,MAAM,EAAAqJ,EAAA2C,UAAS,WACflM,QAjBW,WACXijE,IACAA,EAAawB,SACbxB,EAAayB,WACR7+D,KAAK,SAAA8+D,GAC4B,aAA1BA,EAAcC,SACd5kE,WAgBxBgjE,EAAiBhlE,WACbgC,QAAc3D,UAAUuE,KACxBqiE,aAAc5mE,UAAUxB,UAGnBmoE,uHCrCT,QAAAntE,EAAA,IACA4kC,EAAA5kC,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,0DAWSwtE,YATW,kBAChB/iE,EAAAC,QAAAvJ,cAACygB,EAAAlX,SACGX,UAAU,mBACVC,YAAA,EACAK,MAAM,EAAAqJ,EAAA2C,UAAS,UACflM,QAASg7B,uHCVjB,QAAAnlC,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,MACAwlC,EAAAxlC,EAAA,wDAEA,IAAMitE,EAAY,SAAA3lE,GAAA,IAAGqxD,EAAHrxD,EAAGqxD,MAAH,OACdluD,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,4BACXU,EAAAC,QAAAvJ,cAAC8hD,EAAAv4C,SAAO0jB,MAAM,OAAOC,OAAO,YAE7BsqC,EAAM95D,QACT4L,EAAAC,QAAAvJ,cAAC6tE,EAAAtkE,SAAUX,UAAU,cAChB4uD,EAAM7rD,IAAI,SAACyJ,EAAM0lB,GAAP,OACPxxB,EAAAC,QAAAvJ,cAACqkC,EAAAnc,YAAWxkB,IAAKo3B,EAAKzE,GAAIjhB,EAAKsvB,SAC3Bp7B,EAAAC,QAAAvJ,cAAA,QAAMsZ,MAAOlE,EAAKlM,MAAOkM,EAAK0H,KAAM1H,EAAKlM,YAQ7D4iE,EAAU9kE,WACNwwD,MAAOnyD,UAAUm8D,QAAQn8D,UAAUk+D,OAC/BzmD,KAAMzX,UAAUk+D,OACZ36D,UAAWvD,UAAUqE,SAEzBg7B,QAASr/B,UAAUqE,OACnBR,KAAS7D,UAAUqE,aAIlBoiE,2FC7BT,wDAAAjtE,EAAA,IAJA,IAAIsG,EAAWtH,OAAO0N,QAAU,SAAUvJ,GAAU,IAAK,IAAIxE,EAAI,EAAGA,EAAIgJ,UAAU9I,OAAQF,IAAK,CAAE,IAAI+rD,EAAS/iD,UAAUhJ,GAAI,IAAK,IAAIkG,KAAO6lD,EAAc1rD,OAAOC,UAAUC,eAAeC,KAAKurD,EAAQ7lD,KAAQ1B,EAAO0B,GAAO6lD,EAAO7lD,IAAY,OAAO1B,aAKvO,SAACmE,GAGXA,EADFiqD,OAFsB,IAIpBnrD,EAPN,SAAkCqP,EAAK/M,GAAQ,IAAIvF,KAAa,IAAK,IAAIxE,KAAK8W,EAAW/M,EAAKkM,QAAQjW,IAAM,GAAkBK,OAAOC,UAAUC,eAAeC,KAAKsW,EAAK9W,KAAcwE,EAAOxE,GAAK8W,EAAI9W,IAAM,OAAOwE,EAOrMs0B,CAAyBnwB,GAAO,WAE5C,OAAOgB,UAAMnH,cACX,MACAmF,GAAW6nB,MAAO,6BAA8BC,MAAO,KAAMC,OAAQ,KAAMvL,QAAS,mBAAqB1c,GACzGkC,UAAMnH,cAAc,QAAU8hB,KAAM,OAAQpf,EAAG,qEAC/CyE,UAAMnH,cAAc,QAAU8hB,KAAM,UAAWpf,EAAG,wEAClDyE,UAAMnH,cAAc,QAAU8hB,KAAM,UAAWpf,EAAG,uzCCftD7E,OAAA0J,KAAAumE,GAAArmE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA8qE,EAAApqE,0EADO6F,kgBCAP1K,EAAA,QACAA,EAAA,QACAA,EAAA,IACAivE,EAAAjvE,EAAA,4DAEMkvE,cACF,SAAAA,EAAY9oE,gGAAOqB,CAAAxB,KAAAipE,GAAA,IAAAtiE,mKAAA7E,CAAA9B,MAAAipE,EAAAlnE,WAAAhJ,OAAAiJ,eAAAinE,IAAA/vE,KAAA8G,KACTG,IADS,OAAAwG,EA4BnBzC,QAAU,SAAC5J,GACFA,EAAE4C,QACPyJ,EAAKuiE,qBAAqB5uE,EAAE4C,OAAOisE,QAAQ,OA9B5BxiE,EAiCnByiE,YAAc,WACVziE,EAAKiyB,UACDuE,KAAO,EACPhV,MAAO,KApCIxhB,EAwCnBuiE,qBAAuB,SAAC70C,GACpB,GAAKA,EAAL,CAD2B,IAEP8I,EAA6B9I,EAAzCg1C,WAA+BlhD,EAAUkM,EAAvB49B,YACtBtrD,EAAKqyB,MAAM7Q,QAAUA,GACrBxhB,EAAKiyB,UAAWzQ,UAEhBxhB,EAAKqyB,MAAMmE,OAASA,GACpBx2B,EAAKiyB,UAAWuE,WA7CpB99B,OAAO01B,iBAAiB,SAAUpuB,EAAKuiE,sBACvCviE,EAAKqyB,OACDmE,KAAO,EACPhV,MAAO,GALIxhB,qUADCtE,UAAMvB,0DAWjBd,KAAKsY,MACVtY,KAAKkpE,qBAAqBlpE,KAAKsY,KAAKyuB,cAAc,mEAIlD,IAAMuiC,EAAYtpE,KAAKsY,KAAKyuB,cAAc,qBACtCuiC,EACAtpE,KAAKkpE,qBAAqBI,GACC,IAApBtpE,KAAKg5B,MAAMmE,MAAmC,IAArBn9B,KAAKg5B,MAAM7Q,OAC3CnoB,KAAKopE,6DAKT/pE,OAAO21B,oBAAoB,SAAUh1B,KAAKkpE,sBAC1ClpE,KAAKopE,+CA0BA,IAAA7nE,EAAAvB,KAAAu5B,EACiCv5B,KAAKG,MAAnC2D,EADHy1B,EACGz1B,UAAc66D,yHADjBntC,CAAA+H,GAAA,cAECp5B,KACF2D,WAAW,EAAAqU,EAAA1T,SAAW,aAAcX,IACjC66D,GAGP,OACIn6D,EAAAC,QAAAvJ,cAAA,MAAAmF,GAAKV,IAAK,SAAC2Y,GAAD,OAAU/W,EAAK+W,KAAOA,IAAUnY,GAElCkC,UAAMy7B,SAASj3B,IAAI7G,KAAKG,MAAMT,SAAU,SAAAq+B,GAAA,OACpC17B,UAAMosD,aAAa1wB,GACf75B,QAAS3C,EAAK2C,YAI1BM,EAAAC,QAAAvJ,cAAC8tE,EAAAvqC,QAAOtB,KAAMn9B,KAAKg5B,MAAMmE,KAAMhV,MAAOnoB,KAAKg5B,MAAM7Q,kBAMjE8gD,EAAU/mE,WACNxC,SAAWa,UAAUyY,MACrBlV,UAAWvD,UAAUqE,kBAGVqkE,iFCpFf,QAAAlvE,EAAA,QACAA,EAAA,QACAA,EAAA,IACAu3B,EAAAv3B,EAAA,uDAEA,IAAMspB,EAAa,SAAAhiB,GAAA,IAAG3B,EAAH2B,EAAG3B,SAAUoE,EAAbzC,EAAayC,UAAWytB,EAAxBlwB,EAAwBkwB,GAAxB,OACf/sB,EAAAC,QAAAvJ,cAACo2B,EAAAuQ,MACG/9B,WAAW,EAAAqU,EAAA1T,SAAW,cAAeX,EAAW,UAChDytB,GAAIA,GAEH7xB,IAIT2jB,EAAWnhB,WACPxC,SAAWa,UAAUxB,OACrB+E,UAAWvD,UAAUqE,OACrB2sB,GAAWhxB,UAAUqE,kBAGVye,6PCpBftpB,EAAA,IACAu3B,EAAAv3B,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,mEAEqB,SAACoG,GAAD,OACjBqE,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAMgmD,UAASC,SAAUlmD,EAAAC,QAAAvJ,cAACy7B,EAAAlyB,QAAD,OACtBD,EAAAC,QAAAvJ,cAACo2B,EAAAi4C,OAAD,MAEQ,EAAA93C,EAAAhtB,WAAkBoC,IAAI,SAAC8b,EAAOqT,GAAR,OAClBxxB,EAAAC,QAAAvJ,cAACsuE,EAAA/kE,QAADpE,GAAoBzB,IAAKo3B,GAASrT,EAAWxiB,wFCXjE,QAAApG,EAAA,QACAA,EAAA,QACAA,EAAA,wDAEA,IAAM0vE,EAAc,SAAApoE,GAAA,IAChB29B,EADgB39B,EAChB29B,cACAC,EAFgB59B,EAEhB49B,QACAyqC,EAHgBroE,EAGhBqoE,SAHgB,OAKhBllE,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,sBACTk7B,GACEx6B,EAAAC,QAAAvJ,cAAC8jC,GAAcl7B,UAAU,cAGjCU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,yBACXU,EAAAC,QAAAvJ,cAAC+sE,EAAAxjE,SACG4Y,IAAI,8DACJC,WACIupB,MAAOriC,EAAAC,QAAAvJ,cAAA,KAAGgS,KAAK,eAAehJ,QAAS+6B,IACvC0qC,MAAOnlE,EAAAC,QAAAvJ,cAAA,KAAGgS,KAAK,eAAehJ,QAASwlE,UAO3DD,EAAYvnE,WACR88B,cAAez+B,UAAUuE,KACzBm6B,QAAe1+B,UAAUuE,KACzB4kE,SAAenpE,UAAUuE,gBAGd2kE,iFCjCR,IAAMG,iBAAgB,aAChBzqC,gBAAgByqC,2GCD7B,QAAA7vE,EAAA,IACAg4B,EAAAh4B,EAAA,IACAsuE,EAAAtuE,EAAA,SACAA,EAAA,2DAYSgtE,iBAVgB,kBACrBviE,EAAAC,QAAAvJ,cAACmtE,EAAAwB,cACG9xD,UAAU,OACVC,KAAMxT,EAAAC,QAAAvJ,cAAC62B,EAAAg4B,cAAD,MACN7xC,WAAW,eAEX1T,EAAAC,QAAAvJ,cAAC4uE,EAAArlE,QAAD,6gBCXR1K,EAAA,QACAA,EAAA,QACAA,EAAA,IACA8nB,EAAA9nB,EAAA,+NAEMgwE,6SACF/wC,OAAUgxC,cAAc,KAExBrqC,cAAgB,WACZh5B,EAAKiyB,UACDoxC,cAAerjE,EAAKqyB,MAAMgxC,0VALZ3nE,UAAMvB,+CASnB,IAAAS,EAAAvB,KACGgqE,EAAiBhqE,KAAKg5B,MAAtBgxC,aADHzwC,EAEmBv5B,KAAKG,MAArBiE,EAFHm1B,EAEGn1B,KAAMsuD,EAFTn5B,EAESm5B,MAERuX,GACFC,WAAYF,EAAe,UAAY,UAErCG,GAAoB,EAAAhyD,EAAA1T,SAAW,eACjC67B,KAAQ0pC,IAENI,GAAqB,EAAAjyD,EAAA1T,SAAW,gBAClC67B,KAAQ0pC,IAEZ,OACIxlE,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,cAAcI,QAASlE,KAAK2/B,eACvCn7B,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAWqmE,GAAoB/lE,IAEzCI,EAAAC,QAAAvJ,cAAA,OACI4I,UAAWsmE,EACXxsC,MAAOqsC,GAEPzlE,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,eACV4uD,EAAM7rD,IAAI,SAACyJ,EAAM0lB,GAAP,OACPxxB,EAAAC,QAAAvJ,cAAC2mB,EAAA2d,WAADn/B,GAAYzB,IAAKo3B,GAAS1lB,GAAMqvB,cAAep+B,EAAKo+B,+BAShFoqC,EAAY7nE,WACRwwD,MAAOnyD,UAAUyY,MACjB5U,KAAO7D,UAAUqE,UAGZmlE,mHCpDT,QAAAhwE,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAMswE,EAAe,SAAAhpE,GAAA,IACjB+C,EADiB/C,EACjB+C,KACA+5B,EAFiB98B,EAEjB88B,UACA7E,EAHiBj4B,EAGjBi4B,OAHiB,OAKjB90B,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,sBAAsBI,QAASo1B,GAC1C90B,EAAAC,QAAAvJ,cAAA,YAAOkJ,GACPI,EAAAC,QAAAvJ,cAACkjC,EAAA35B,SACG45B,QAASF,MAKrBksC,EAAanoE,WACTkC,KAAW7D,UAAUqE,OACrBu5B,UAAW59B,UAAUsE,KACrBy0B,OAAW/4B,UAAUuE,QAGhBulE,iXCvBTtwE,EAAA,QACAA,EAAA,QACAA,EAAA,IACAm0B,EAAAn0B,EAAA,IACAgoB,EAAAhoB,EAAA,+NAEM8vE,6SACFS,WAAa,WAAM,IACPvyD,EAAcpR,EAAKxG,MAAnB4X,UACU,SAAdA,EACApR,EAAKxG,MAAMoqE,iBACU,UAAdxyD,GACPpR,EAAKxG,MAAMqqE,6BAInBC,YAAc,WACV9jE,EAAKxG,MAAMu/B,yVAXQr9B,UAAMvB,+CAcpB,IAAAy4B,EAC6Cv5B,KAAKG,MAA/C+X,EADHqhB,EACGrhB,WAAYF,EADfuhB,EACevhB,KAAMD,EADrBwhB,EACqBxhB,UAAWrY,EADhC65B,EACgC75B,SAE/BgrE,GAAe,EAAAvyD,EAAA1T,SAAW,eAAgByT,GAEhD,OACI1T,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAW4mE,EAAcxmE,QAASlE,KAAKsqE,YACvCtyD,GAELxT,EAAAC,QAAAvJ,cAAC6mB,EAAAie,QACGjoB,UAAWA,EACXsnB,SAAUr/B,KAAKyqE,aAEd/qE,aAOrBmqE,EAAa3nE,WACT6V,UAAWxX,UAAUqE,OACrBlF,SAAWa,UAAUiL,WACjBjL,UAAUyY,MACVzY,UAAUxB,SAEd+hC,OAAavgC,UAAUuE,KACvB46B,YAAan/B,UAAUuE,KACvBkT,KAAazX,UAAUk+D,OACnB36D,UAAWvD,UAAUqE,SAEzBsT,WAAyB3X,UAAUqE,OACnC2lE,eAAyBhqE,UAAUuE,KACnC0lE,wBAAyBjqE,UAAUuE,MAGvC,IAAMk8B,GAAmB,EAAA9S,EAAAvtB,SACrB,SAAA6Q,GAAA,IAAG9Q,EAAH8Q,EAAG9Q,GAAH,OACI6pE,eAAyB7pE,EAAG6pE,eAC5BC,wBAAyB9pE,EAAG8pE,wBAC5B9qC,YAAyBh/B,EAAGg/B,cAJX,CAMvBmqC,KAE2BA,aAApB7oC,iFCjET,QAAAjnC,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACAsuE,EAAAtuE,EAAA,KAGA4wE,EAAA5wE,EAAA,KACAg4B,EAAAh4B,EAAA,QAIAA,EAAA,KACA2T,EAAA3T,EAAA,IACAm0B,EAAAn0B,EAAA,uDAEA,IAAM6wE,EAAa,SAAAvpE,GAAA,IACfskE,EADetkE,EACfskE,aACA/iD,EAFevhB,EAEfuhB,aACA2Q,EAHelyB,EAGfkyB,UACA/U,EAJend,EAIfmd,uBAEAgX,EANen0B,EAMfm0B,mBACAswC,EAPezkE,EAOfykE,eACA/c,EARe1nD,EAQf0nD,sBACAnzB,EATev0B,EASfu0B,mBATe,OAYfpxB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,0BACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wBACVyvB,GACD/uB,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KACI9G,EAAAC,QAAAvJ,cAACmtE,EAAA7oC,YACGp7B,MAAM,EAAAqJ,EAAA2C,UAAS,SACf4H,KAAMxT,EAAAC,QAAAvJ,cAAC62B,EAAAk4B,WAAUnmD,UAAU,gBAC3B87B,QAASnd,UAAO/F,QAEpBlY,EAAAC,QAAAvJ,cAACmtE,EAAA7oC,YACGp7B,MAAM,EAAAqJ,EAAA2C,UAAS,aACf4H,KAAMxT,EAAAC,QAAAvJ,cAAC62B,EAAAoB,eAAcrvB,UAAU,gBAC/B87B,QAASnd,UAAOtmB,YAEpBqI,EAAAC,QAAAvJ,cAACmtE,EAAA7oC,YACGp7B,MAAM,EAAAqJ,EAAA2C,UAAS,aACf4H,KAAMxT,EAAAC,QAAAvJ,cAAC62B,EAAAqB,eAActvB,UAAU,gBAC/B87B,QAASnd,UAAOnmB,YAEpBkI,EAAAC,QAAAvJ,cAAA,WACAsJ,EAAAC,QAAAvJ,cAACmtE,EAAAgC,cACGjmE,MAAM,EAAAqJ,EAAA2C,UAAS,aACfkpB,OAAQwsC,EACR3nC,UAAWwnC,IASfnhE,EAAAC,QAAAvJ,cAACmtE,EAAAgC,cACGjmE,MAAM,EAAAqJ,EAAA2C,UAAS,iBACfkpB,OAAQ1D,EACRuI,UAAW3I,SAInB5S,IAAgB2Q,IACpB/uB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,iBACXU,EAAAC,QAAAvJ,cAACmtE,EAAA7oC,YACGxnB,KAAMxT,EAAAC,QAAAvJ,cAACyvE,EAAAlC,YAAW3kE,UAAU,gBAC5BM,MAAM,EAAAqJ,EAAA2C,UAAS,UACfyvB,cAAe,WACPrhB,GACAuqC,KAEJ,EAAAr7C,EAAAghB,uBAQpBk8C,EAAW1oE,WACPyjE,aAA4BplE,UAAUsE,KACtC+d,aAA4BriB,UAAUsE,KACtC0uB,UAA4BhzB,UAAUsE,KACtC2Z,uBAA4Bje,UAAUsE,KACtC+gE,sBAA4BrlE,UAAUsE,KACtC2wB,mBAA4Bj1B,UAAUsE,KACtCihE,eAA4BvlE,UAAUuE,KACtCikD,sBAA4BxoD,UAAUuE,KACtCihE,2BAA4BxlE,UAAUuE,KACtC8wB,mBAA4Br1B,UAAUuE,iBAG3B,EAAAopB,EAAAvtB,SACX,SAAA6Q,GAAA,IAAGhR,EAAHgR,EAAGhR,OAAQE,EAAX8Q,EAAW9Q,GAAX,OACIkiB,aAA4BpiB,EAAOoiB,aACnC+iD,aAA4BjlE,EAAG4d,gBAC/BiV,UAA4B7yB,EAAG6yB,UAC/B/U,uBAA4B9d,EAAG8d,uBAC/BonD,sBAA4BllE,EAAGge,uBAC/B8W,mBAA4B90B,EAAGy2B,oBAC/B2uC,eAA4BplE,EAAGolE,eAC/B/c,sBAA4BroD,EAAGqoD,sBAC/Bgd,2BAA4BrlE,EAAGqlE,2BAC/BnwC,mBAA4Bl1B,EAAGk1B,qBAXxB,CAabg1C,qHC7GF,wDAAA7wE,EAAA,IACAg4B,EAAAh4B,EAAA,IACAsuE,EAAAtuE,EAAA,KACA8wE,EAAA9wE,EAAA,OAYSytE,0BAVyB,kBAC9BhjE,EAAAC,QAAAvJ,cAACmtE,EAAAwB,cACG9xD,UAAU,QACVC,KAAMxT,EAAAC,QAAAvJ,cAAC62B,EAAA43B,SAAD,MACNzxC,WAAW,iBAEX1T,EAAAC,QAAAvJ,cAAC2vE,EAAAC,cAAD,oGCXR/xE,OAAA0J,KAAAsoE,GAAApoE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6sE,EAAAnsE,8GCAA,QAAA7E,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,GACAg4B,EAAAh4B,EAAA,IACAsuE,EAAAtuE,EAAA,wDAEA,IAAM+wE,EAAgB,SAAAzpE,GAAA,IAAG4T,EAAH5T,EAAG4T,KAAH,OAClBzQ,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,KAEQ2J,GAAQA,EAAKrc,OACTqc,EAAKpO,IAAI,SAACyJ,EAAM0lB,GAAP,OACLxxB,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,UAAS1M,IAAKo3B,GACjBxxB,EAAAC,QAAAvJ,cAACmtE,EAAA7oC,YAAWp7B,KAAMkM,EAAK0lB,QAI/BxxB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,8BACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,wBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,aACXU,EAAAC,QAAAvJ,cAAC62B,EAAA43B,SAAD,OAEJnlD,EAAAC,QAAAvJ,cAAA,WACIsJ,EAAAC,QAAAvJ,cAAA,WAAK,EAAAuS,EAAA2C,UAAS,qBACd5L,EAAAC,QAAAvJ,cAAA,QAAM4I,UAAU,6BAA4B,EAAA2J,EAAA2C,UAAS,mDASjF06D,EAAc5oE,WACV+S,KAAQ1U,UAAUxB,UAGb+rE,+FCpCT,wDAAA/wE,EAAA,IACA0T,EAAA1T,EAAA,GACAg4B,EAAAh4B,EAAA,IAIA+3B,EAAA/3B,EAAA,KAEA,IAAMktE,IAEEjvD,KAASxT,EAAAC,QAAAvJ,cAAC62B,EAAAk4B,WAAUnmD,UAAU,qBAC9BM,MAAS,EAAAqJ,EAAA2C,UAAS,SAClBwvB,QAASnd,SAAO/F,QAGhB1E,KAASxT,EAAAC,QAAAvJ,cAAC62B,EAAAoB,eAAcrvB,UAAU,yBAClCM,MAAS,EAAAqJ,EAAA2C,UAAS,aAClBwvB,QAASnd,SAAOtmB,YAGhB6b,KAASxT,EAAAC,QAAAvJ,cAAC62B,EAAAqB,eAActvB,UAAU,yBAClCM,MAAS,EAAAqJ,EAAA2C,UAAS,aAClBwvB,QAASnd,SAAOnmB,sBAKT2qE,iFC3Bf,QAAAltE,EAAA,QACAA,EAAA,QACAA,EAAA,IACAmoB,EAAAnoB,EAAA,IACAm0B,EAAAn0B,EAAA,uDAEA,IAAMixE,EAAe,SAAA3pE,GAAiC,IAA9B3B,EAA8B2B,EAA9B3B,SAAUurE,EAAoB5pE,EAApB4pE,cACxBC,GAAsB,EAAA/yD,EAAA1T,SAAW,iBACnC0mE,KAAOF,EACPG,OAAQH,IAEZ,OACIzmE,EAAAC,QAAAvJ,cAAA,OAAK8I,GAAG,gBAAgBF,UAAWonE,GAC9BxrE,IAKbsrE,EAAa9oE,WACTxC,SAAea,UAAU+X,KACzB2yD,cAAe1qE,UAAUsE,iBAGd,EAAAqd,EAAAu/C,aAAW,EAAAvzC,EAAAvtB,SACtB,SAAA6Q,GAAA,OACIy5D,cADJz5D,EAAG9Q,GACmB4d,kBAFA,CAIxB0sD,mFC3BF,IAAAxrE,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAmoB,EAAAnoB,EAAA,QACAA,EAAA,UACAA,EAAA,MACAm0B,EAAAn0B,EAAA,uDAEA,IAAMsxE,EAAS,SAAClrE,GACZ,OAAIA,EAAMma,UACC9V,EAAAC,QAAAvJ,cAAC6mC,EAAAt9B,QAAmBtE,EAAMhD,OAG9BqH,EAAAC,QAAAvJ,cAACowE,EAAA7mE,SAAame,aAAcziB,EAAMyiB,gBAG7CyoD,EAAOnpE,WACH/E,MAAc4e,YAAcmyC,yBAC5B5zC,UAAc/Z,UAAUsE,KACxB+d,aAAcriB,UAAUsE,iBAKb,EAAAqd,EAAAu/C,aAAW,EAAAvzC,EAAAvtB,SACtB,SAAAU,GAAA,IAAGb,EAAHa,EAAGb,OAAQC,EAAXY,EAAWZ,OAAX,OACImiB,aAAcpiB,EAAOoiB,aACrBzlB,MAAcsD,EAAOtD,MACrBmd,UAAc7Z,EAAO6Z,YAJH,CAMxB+wD,sKC9BK5mE,iGCAP,QAAA1K,EAAA,QACAA,EAAA,IACA0T,EAAA1T,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,KACAm0B,EAAAn0B,EAAA,uDAEA,IAAMu9B,aAAA,IAAAj2B,2RAAAkI,CAAAC,mBAAAC,KAAY,SAAAC,EAAOlJ,GAAP,OAAAgJ,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRtJ,EAAOgqC,cAAchqC,EAAO+qE,yBADpB,wBAAA3hE,EAAAQ,SAAAV,OAAApM,MAAZ,gBAAAylD,GAAA,OAAA1hD,EAAA9H,MAAAyG,KAAA0B,YAAA41B,GAIAk0C,EAAW,WACbnsE,OAAOmN,SAASU,KAAOk1C,UAAI1R,OAAO,YAGhC+6B,EAAuB,SAAAj6D,GAAA,IAAGhR,EAAHgR,EAAGhR,OAAQ62B,EAAX7lB,EAAW6lB,WAAX,OACzB7yB,EAAAC,QAAAvJ,cAACwwE,EAAAjnE,SACG+P,OAAO,EAAA/G,EAAA2C,UAAS,WAChBu7D,qBAAqB,EAAAl+D,EAAA2C,UAAS,oCAC9Bw7D,oBAAoB,EAAAn+D,EAAA2C,UAAS,sBAC7BknB,UAAW,kBAAMA,EAAU92B,IAC3BgrE,SAAUA,EACVn0C,WAAYA,GAEZ7yB,EAAAC,QAAAvJ,cAACqjE,EAAA95D,SAAS4Y,IAAI,6FAItBouD,EAAqBvpE,WACjB1B,OAAYD,UAAUxB,OACtBs4B,WAAY92B,UAAUsE,MAG1B,IAAMgnE,GAAoB,EAAA39C,EAAAvtB,SACtB,SAAAkR,GAAA,IAAGrR,EAAHqR,EAAGrR,OAAH,OACI62B,YAAa72B,EAAO80B,2BACpB90B,WAHkB,CAKxBirE,aACaI,iFCxCf,QAAA9xE,EAAA,QACAA,EAAA,uDAEA,IAAM+xE,EAAgB,SAAAzqE,GAQhB,IAPFuqE,EAOEvqE,EAPFuqE,mBACAlsE,EAME2B,EANF3B,SACAisE,EAKEtqE,EALFsqE,oBACAr0C,EAIEj2B,EAJFi2B,UACAk0C,EAGEnqE,EAHFmqE,SACAn0C,EAEEh2B,EAFFg2B,WACA7iB,EACEnT,EADFmT,MAEA,OAAI6iB,EAEI7yB,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,mBACXU,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBACXU,EAAAC,QAAAvJ,cAAA,UAAKsZ,GACLhQ,EAAAC,QAAAvJ,cAAA,SAAIwE,GACJ8E,EAAAC,QAAAvJ,cAAA,OAAK4I,UAAU,gBACXU,EAAAC,QAAAvJ,cAAA,OACI4I,UAAU,0BACVI,QAASsnE,GAEThnE,EAAAC,QAAAvJ,cAAA,YAAO0wE,IAEXpnE,EAAAC,QAAAvJ,cAAA,OACI4I,UAAU,0BACVI,QAASozB,GAET9yB,EAAAC,QAAAvJ,cAAA,YAAOywE,OAQxBnnE,EAAAC,QAAAvJ,cAACsJ,EAAAC,QAAM6G,SAAP,OAGXwgE,EAAc5pE,WACV0pE,mBAAqBrrE,UAAUqE,OAC/B+mE,oBAAqBprE,UAAUqE,OAC/ByyB,WAAqB92B,UAAUsE,KAC/B2mE,SAAqBjrE,UAAUuE,KAC/BwyB,UAAqB/2B,UAAUuE,KAC/B0P,MAAqBjU,UAAUqE,kBAGpBknE,wMChDNC,2EADFtnE,2GCAQ,WACwC,kBAAmBunE,WAClE3sE,OAAO01B,iBAAiB,OAAQ,WAC5B,IAAIk3C,EAAY5sE,OAAOmN,SAASS,SAE1Bi/D,GADND,EAAY,eAAe1/D,KAAK0/D,GAAa5sE,OAAOmN,SAASS,SAASN,QAAQ,aAAc,IAAM,IAC5F,oBACNq/D,UAAUG,cACLC,SAASF,GACTniE,KAAK,SAAAsiE,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBvzC,QACbgzC,UAAUG,cAAcO,WAKxBvtE,QAAQ2nE,IAAI,6CAKZ3nE,QAAQ2nE,IAAI,2CAM/B6F,MAAM,SAAAxvE,GACHgC,QAAQhC,MAAM,4CAA6CA,UAM/D4uE,WAAT,WACC,kBAAmBC,WACnBA,UAAUG,cAAcS,MAAM7iE,KAAK,SAAAsiE,GAC/BA,EAAaN","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"100777915a9c0004736b\",\"account_password\":\"eb12ca61a2f749ded61e\",\"api_toke\":\"c0cb87fcdfae2c63a345\",\"authorized_application\":\"e8728729a0659769b903\",\"cashier_password\":\"a5dcd279f729c662bee4\",\"contract\":\"99526311ec5843a74acb\",\"financial_assessment\":\"861649172d301f3b0a5c\",\"limits\":\"cbe9656f981d707f2a2b\",\"login_history\":\"5374d94b77da41604c3e\",\"personal_details\":\"7e6ed1ad698169b22e9c\",\"portfolio\":\"9ecd028fb69401f1f5b5\",\"self_exclusion\":\"f749ffc4151f85be9a2b\",\"settings\":\"0f4e0b4cbb7ac237c525\",\"statement\":\"4363061bdc0804306eae\",\"vendors~smart_chart\":\"25b4c6e2d1616bd35c17\",\"smart_chart\":\"a0537490b89262d2a8b5\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([256,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date_time';\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_calendar_today.jsx';\nexport * from './icon_calendar.jsx';\nexport * from './icon_chevron_double_left.jsx';\nexport * from './icon_chevron_double_right.jsx';\nexport * from './icon_chevron_left.jsx';\nexport * from './icon_chevron_right.jsx';\nexport * from './icon_clear.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\nexport * from './icon_minus.jsx';\nexport * from './icon_plus.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                        symbol.times.close;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const fieldset_class   = classNames('fieldset-header', is_center ? 'center-text' : '');\n    const field_left_class = classNames('field-info', { icon }, icon, is_center ? 'center' : 'left');\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_class}>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { IconMinus }             from 'Assets/Common/icon_minus.jsx'; // implicit import here { IconMinus, IconPlus } from 'Assets/Common' breaks compilation\nimport { IconPlus }              from 'Assets/Common/icon_plus.jsx';\nimport Button                    from './button.jsx';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_read_only = false,\n    is_signed = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const incrementValue = () => {\n        if  (max_is_disabled) return;\n\n        const increment_value = (+value) + 1;\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n\n        const decrement_value = (+value) - 1;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    const input =\n        <input\n            checked={checked ? 'checked' : ''}\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-value={data_value}\n            data-tip={data_tip}\n            id={id}\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            onChange={changeValue}\n            onClick={onClick}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value || ''}\n        />;\n\n    const input_increment =\n        <div className='input-wrapper'>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--increment'}\n                is_disabled={max_is_disabled}\n                onClick={incrementValue}\n                tabIndex='-1'\n            >\n                <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n            </Button>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--decrement'}\n                is_disabled={min_is_disabled}\n                onClick={decrementValue}\n                tabIndex='-1'\n            >\n                <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n            </Button>\n            { input }\n        </div>;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                {is_incrementable  &&  type === 'number' ? input_increment : input}\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked          : PropTypes.number,\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.string,\n    id               : PropTypes.string,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_incrementable : PropTypes.bool,\n    is_read_only     : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    onClick          : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","export * from './icon_trade_types.jsx';\n","export default from './dropdown.jsx';\n","import { localize }       from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ContractType from '../Helpers/contract_type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal_checked',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport UILoader          from 'App/Components/Elements/ui_loader.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green btn-purchase'\n                has_effect\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            >\n                <React.Fragment>\n                    <div className='btn-purchase__effect-main' />\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__content'>\n                        <div className='btn-purchase__trade-type'>\n                            <IconTradeType type={type.toLowerCase()} />\n                            <span>{localize('[_1]', trade_types[type])}</span>\n                        </div>\n                    </div>\n                    <div className='btn-purchase__info'>\n                        <div className='btn-purchase__return'>{is_disabled ? '---,-' : info.returns}</div>\n                        <div className='btn-purchase__profit'>\n                            {is_disabled ? '--,--' : <Money amount={info.profit} currency={currency} />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Button>\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","import {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { localize }              from '_common/localize';\nimport { isSessionAvailable }    from 'Stores/Modules/Trading/Helpers/start_date';\nimport { toMoment }              from 'Utils/Date';\nimport InputField                from './input_field.jsx';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled && this.props.value) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = toMoment(start_date);\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.number,\n    value          : PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.number,\n    toggle      : PropTypes.func,\n    value       : PropTypes.string,\n    value_split : PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","export * from './icon_logout.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <IconPortfolio className='portfolio-empty__icon' />\n        <span className='portfolio-empty__text'>{localize('No open positions.')}</span>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 207,\n\t\"./ja.js\": 207\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 464;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base_store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            id !== this.loginid &&\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid      = LocalStore.get('active_loginid');\n        this.accounts     = LocalStore.getObject(storage_key);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.switched     = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }                                                                                                                                                 from './Helpers/chart_barriers';\nimport { createChartMarkers }                                                                                                                                                 from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const moment_obj = epochToMoment(value);\n    return moment_obj.isValid() ? moment_obj : moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'YYYY-MM-DD').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format_response';\nimport BaseStore                        from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_allow_equal             = false;\n    @observable is_equal_checked           = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => [\n                this.symbol,\n                this.contract_type,\n                this.duration_unit,\n                this.expiry_type,\n                this.duration_units_list,\n                this.contract_types_list,\n            ],\n            () => {\n                this.changeAllowEquals();\n            },\n            { delay: 500 }\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, checked } = e.target;\n        let { value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (value === 'is_equal') {\n            if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type)) {\n                if (checked) {\n                    this.is_equal_checked = 1;\n                    value = 'rise_fall_equal';\n                } else {\n                    this.is_equal_checked = 0;\n                    value = 'rise_fall';\n                }\n            }\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    changeAllowEquals() {\n        const hasCallPutEqual = () => {\n            const up_down_contracts = getPropertyValue(this.contract_types_list, 'Up/Down');\n            return up_down_contracts.some(contract => contract.value === 'rise_fall_equal');\n        };\n        const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n            const contract_list = Object.keys(contract_type_list || {})\n                .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n            \n            const contract_duration_list = contract_list\n                .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n            // Check whether rise fall equal is exists and has the current store duration unit\n            return hasCallPutEqual() ? contract_duration_list\n                .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n                .some(duration => duration.value === duration_unit) : false;\n        };\n        const check_callput_equal_duration = hasDurationForCallPutEqual(this.contract_types_list,\n            this.duration_unit, this.contract_start_type);\n\n        if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type) && (check_callput_equal_duration || this.expiry_type === 'endtime') && hasCallPutEqual()) {\n            this.is_allow_equal = true;\n        } else {\n            this.is_allow_equal = false;\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start_date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract_type';\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n\n    const obj_market_close_times = { market_close_times: await ContractType.getTradingTimes(expiry_date, symbol) };\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_close_times,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                <div className='portfolio-drawer__header'>\n                    <span className='portfolio-drawer__icon-main ic-portfolio' />\n                    <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                    <div\n                        className='portfolio-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconClose />\n                    </div>\n                </div>\n                <div className='portfolio-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: 'calc(100vh - 35px)' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n            </div>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path fill='#5C5C5C' fillRule='evenodd' d='M13.875 2H12v-.438a.562.562 0 1 0-1.125 0V2h-5.75v-.438a.562.562 0 1 0-1.125 0V2H2.125C1.503 2 1 2.503 1 3.125v10.75C1 14.497 1.503 15 2.125 15h11.75c.622 0 1.125-.505 1.125-1.125V3.125C15 2.503 14.497 2 13.875 2zM2.125 3.125H4v.313a.562.562 0 1 0 1.125 0v-.313h5.75v.313a.562.562 0 1 0 1.125 0v-.313h1.875v1.75H2.125v-1.75zm11.75 10.75H2.125V6h11.75v7.875zM4.5 8h1a.5.5 0 1 1 0 1h-1a.5.5 0 1 1 0-1zm3 0h1a.5.5 0 1 1 0 1h-1a.5.5 0 1 1 0-1zm3 0h1a.5.5 0 1 1 0 1h-1a.5.5 0 1 1 0-1zm-6 3.031h1a.5.5 0 1 1 0 1h-1a.5.5 0 1 1 0-1zm3 0h1a.5.5 0 1 1 0 1h-1a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path fill='#2A3052' d='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path fill='#2A3052' d='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path fill='#2A3052' d='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path fill='#2A3052' d='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\nimport Tooltip                        from 'App/Components/Elements/tooltip.jsx';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n            <Tooltip\n                alignment='left'\n                icon='info'\n            />\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon_price_move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    proposal_info,\n}) => (\n    <React.Fragment>\n        {(proposal_info.has_error || !proposal_info.id) ?\n            <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                <span>{proposal_info.message}</span>\n            </div>\n            :\n            <div className='purchase-info-wrapper'>\n                <div className='info-wrapper'>\n                    <div>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                    <div><Money amount={proposal_info.obj_contract_basis.value} currency={currency} /></div>\n                    <div className='icon_price_move_container'>\n                        {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                    </div>\n                </div>\n                <span className='purchase-tooltip'>\n                    <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                </span>\n            </div>\n        }\n    </React.Fragment>\n);\n\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input_field.jsx';\nimport AllowEquals               from './allow_equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_allow_equal,\n    is_equal_checked,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !is_single_currency,\n    });\n\n    return (\n        <Fieldset>\n            <div className={amount_container_class}>\n                <Dropdown\n                    is_alignment_left\n                    is_nativepicker={is_nativepicker}\n                    list={basis_list}\n                    name='basis'\n                    value={basis}\n                    onChange={onChange}\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        is_alignment_left\n                        is_nativepicker={is_nativepicker}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                }\n                <InputField\n                    error_messages={validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n            <AllowEquals is_allow_equal={is_allow_equal} onChange={onChange} checked={is_equal_checked} />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_allow_equal    : PropTypes.bool,\n    is_equal_checked  : PropTypes.number,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native_select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown-container--left'    : this.props.is_alignment_left,\n                    'dropdown-container--show'    : this.state.is_list_visible,\n                    'dropdown-container--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', {\n                        'dropdown__display--clicked': this.state.is_list_visible,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                {\n                    !is_single_option && <IconArrow className={classNames('select-arrow', {\n                        'select-arrow--left': this.props.is_alignment_left,\n                    })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : 'dropdown__list--enter',\n                        enterDone: 'dropdown__list--enter--done',\n                        exit     : 'dropdown__list--exit',\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={classNames('list__item', {\n                    'list__item--selected'   : value === item.value,\n                    'list__item--highlighted': highlightedIdx === idx,\n                })}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nItems.propTypes = {\n    handleSelect  : PropTypes.func,\n    highlightedIdx: PropTypes.number,\n    name          : PropTypes.string,\n    value         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from '_common/localize';\nimport Tooltip        from 'App/Components/Elements/tooltip.jsx';\nimport InputField     from 'App/Components/Form/input_field.jsx';\n\nconst AllowEquals = ({\n    is_allow_equal,\n    checked,\n    onChange,\n}) => (\n    !!is_allow_equal &&\n        <div className='allow-equals'>\n            <InputField\n                id='allow_equals'\n                name='contract_type'\n                onChange={onChange}\n                value='is_equal'\n                type='checkbox'\n                checked={checked}\n            />\n            <label htmlFor='allow_equals'>{localize('Allow equals')}</label>\n            <Tooltip icon='info' message={localize('Win payout if exit spot is also equal to entry spot.')} alignment='left' />\n        </div>\n);\n\nAllowEquals.propTypes = {\n    checked       : PropTypes.number,\n    is_allow_equal: PropTypes.bool,\n    onChange      : PropTypes.func,\n};\n\nexport default AllowEquals;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset>\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport DatePicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport RangeSlider              from 'App/Components/Form/RangeSlider';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport {\n    convertDurationLimit,\n    hasIntradayDurationUnit }   from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    minDate,\n    setTime,\n    toMoment }                  from 'Utils/Date';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    market_close_times,\n    validation_errors,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const moment_expiry      = toMoment(expiry_date || server_time);\n    let is_24_hours_contract = false;\n    let expiry_time_sessions = sessions;\n    let max_date_duration,\n        min_date_expiry,\n        max_duration,\n        min_duration;\n\n    if (expiry_type !== 'endtime' && duration_min_max[contract_expiry_type]) {\n        min_duration = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n        max_duration = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n\n    } else if (expiry_type === 'endtime') {\n        const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n        const moment_contract_start_date_time =\n            setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm')));\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n\n        // When the contract start is forwarding or is not forwarding but the expiry date is as same as start date, the contract should be expired within 24 hours\n        is_24_hours_contract = (!!start_date || moment_expiry.isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n\n        if (is_24_hours_contract) {\n            const expiry_date_time         = setTime(moment_expiry.clone(), moment_contract_start_date_time.clone().add(5, 'minute').format('HH:mm'));\n            const expiry_date_market_close = setTime(expiry_date_time.clone(), market_close_times.slice(-1)[0]);\n            const is_expired_next_day      = expiry_date_time.diff(moment_contract_start_date_time, 'day') === 1;\n\n            expiry_time_sessions = [{\n                open : is_expired_next_day ? expiry_date_time.clone().startOf('day') : expiry_date_time.clone(),\n                // when the expiry_date is on the next day of the start_date, the session should be close 5 min before the start_time of the contract.\n                close: is_expired_next_day ? minDate(expiry_date_time.clone().subtract(10, 'minute'), expiry_date_market_close) : expiry_date_market_close.clone(),\n            }];\n\n            min_date_expiry = moment_contract_start_date_time.clone().startOf('day');\n            max_date_duration = moment_contract_start_date_time.clone().add(\n                start_date ? 24 * 3600 : (max_daily_duration), 'second');\n        } else {\n            min_date_expiry = moment_contract_start_date_time.clone().startOf('day');\n            max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n\n            if (!has_intraday_duration_unit) {\n                min_date_expiry.add(1, 'day');\n            }\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    return (\n        <Fieldset>\n            <Dropdown\n                is_alignment_left\n                is_nativepicker={is_nativepicker}\n                list={expiry_list}\n                name='expiry_type'\n                value={expiry_type}\n                onChange={onChange}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        <Dropdown\n                            is_alignment_left\n                            is_nativepicker={is_nativepicker}\n                            list={duration_units_list}\n                            name='duration_unit'\n                            value={duration_unit}\n                            onChange={onChange}\n                        />\n                        {\n                            duration_unit === 't' ?\n                                <RangeSlider\n                                    max_value={max_duration}\n                                    min_value={min_duration}\n                                    name='duration'\n                                    ticks={10}\n                                    value={duration}\n                                    onChange={onChange}\n                                />\n                                :\n                                <InputField\n                                    type='number'\n                                    max_value={max_duration}\n                                    min_value={min_duration}\n                                    name='duration'\n                                    value={duration}\n                                    onChange={onChange}\n                                    is_nativepicker={is_nativepicker}\n                                    is_incrementable={true}\n                                    error_messages = {validation_errors.duration || []}\n                                />\n                        }\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <DatePicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable\n                            is_nativepicker={is_nativepicker}\n                            alignment='left'\n                            disabled_selector={['year']}\n                            // sessions={expiry_date_sessions} TODO: add expiry date sessions. e.g. disable days if market closes on weekend\n                            // validation_errors={validation_errors.expiry_date} TODO: add validation_errors for expiry date\n                        />\n                        {is_24_hours_contract &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                placeholder='12:00'\n                                sessions={expiry_time_sessions}\n                                start_date={moment_expiry.unix()}\n                                value={expiry_time || min_date_expiry.format('HH:mm')}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    expiry_type       : PropTypes.string,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    market_close_times: PropTypes.array,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n    sessions          : MobxPropTypes.arrayOrObservableArray,\n    start_date        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import classNames      from 'classnames';\nimport { observer }    from 'mobx-react';\nimport React           from 'react';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }        from 'Assets/Common';\nimport InputField      from 'App/Components/Form/input_field.jsx';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    isDateValid,\n    toMoment }         from 'Utils/Date';\nimport { localize }    from '_common/localize';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        if (mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value));\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value));\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? addDays(toMoment(), value) : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, validation_errors } = this.props;\n        let { placeholder } = this.props;\n        let type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                placeholder = placeholder || localize('Select a duration');\n                type = 'number';\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n        }\n\n        return (\n            <InputField\n                className='datepicker__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={validation_errors}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={this.state.value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden': this.state.is_clear_btn_visible,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                <IconClear\n                    className={classNames('datepicker__icon datepicker__icon--clear', {\n                        'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                    })}\n                    onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                />\n                <div\n                    className={classNames('datepicker__picker', {\n                        'datepicker__picker--show'                           : this.state.is_datepicker_visible,\n                        [`datepicker__picker--align-${this.props.alignment}`]: this.props.alignment,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n};\n\nexport default observer(DatePicker);\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { toMoment }   from 'Utils/Date';\nimport CalendarBody   from './calendar_body.jsx';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = toMoment(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({ calendar_date: toMoment(new_date).format(this.props.date_format) });\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' data-value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    sessions={this.props.sessions}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    has_today_btn={has_today_btn}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames            from 'classnames';\nimport React                 from 'react';\nimport { padLeft }           from '_common/string_util';\nimport {\n    addDays,\n    addMonths,\n    subDays,\n    subMonths,\n    toMoment }               from 'Utils/Date';\nimport CalendarPanelTypes    from './types';\nimport { week_headers_abbr } from '../constants';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    // sessions, // TODO: check expiry date sessions. e.g. disable days if market closes on weekend\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date = toMoment(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = isPeriodDisabled(moment_date, 'day') ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) ||\n            moment_date.isAfter(addDays(moment_start_date, 1))));\n\n        // show 'disabled' style for dates that is not in the same calendar month,\n        // but the date should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'  : is_active && !is_disabled,\n                    'calendar__cell--today'   : is_today,\n                    'calendar__cell--disabled': is_disabled,\n                    'calendar__cell--other'   : is_other_month,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day') }\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            {Object.keys(week_headers_abbr).map((item, idx) => (<span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\nimport { month_headers }  from '../constants';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\nimport { getDecade }      from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\nimport { getCentury, getDecade }      from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon calendar__icon--today'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar_button.jsx';\nimport { month_headers }    from './constants';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n    disabled_selector,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disabled_selector.some(selector => selector === 'year');\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    navigateTo      : PropTypes.func,\n    switchView      : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","export default from './range_slider.jsx';\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick_steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    const is_error = ((value < min_value) || (value > max_value)) ? 'error' : '';\n\n    return (\n        <div className={classNames('range-slider', className, { 'error': is_error })}>\n            <label htmlFor='range'>\n                <input\n                    id='range'\n                    className='range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '0.8rem' : '0.5rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('ticks__step', {\n                        'ticks__step--active': (idx + 1) === parseInt(value),\n                        'ticks__step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number_selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={`number-selector__selection${selected_number === i ? ' selected' : ''}`}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n    validation_errors,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset>\n            <Dropdown\n                is_alignment_left\n                is_nativepicker={is_nativepicker}\n                list={start_dates_list}\n                name='start_date'\n                value={start_date}\n                onChange={onChange}\n            />\n            {(!is_today && start_time) &&\n                <TimePicker\n                    onChange={onChange}\n                    is_align_right\n                    name='start_time'\n                    value={start_time}\n                    placeholder='12:00'\n                    start_date={start_date}\n                    sessions={sessions}\n                    is_clearable={false}\n                    is_nativepicker={is_nativepicker}\n                    validation_errors={validation_errors.start_time}\n                />\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized     : PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    onChange         : PropTypes.func,\n    sessions         : MobxPropTypes.arrayOrObservableArray,\n    start_date       : PropTypes.number,\n    start_dates_list : MobxPropTypes.arrayOrObservableArray,\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(StartDate);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\nimport Localize     from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from 'App/Components/Layout/Header';\nimport header_links             from 'App/Constants/header_links';\nimport { connect }              from 'Stores/connect';\n\nconst Header = ({\n    account_type,\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    account_type={account_type}\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    account_type             : PropTypes.string,\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        account_type             : client.account_title,\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport Localize            from 'App/Components/Elements/localize.jsx';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n    account_type,\n}) => (\n    <div className='acc-balance'>\n        <div className='acc-switcher-container'>\n            <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                <p className='acc-balance-type'>\n                    <Localize str={`${account_type} Account`} />\n                </p>\n                <p className='acc-balance-id'>{loginid}</p>\n                <IconArrow className='select-arrow' />\n            </div>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={400}\n                classNames='acc-switcher-wrapper'\n                unmountOnExit\n            >\n                <div className='acc-switcher-wrapper'>\n                    <AccountSwitcher\n                        is_visible={is_dialog_on}\n                        toggle={toggleDialog}\n                        is_upgrade_enabled={is_upgrade_enabled}\n                        onClickUpgrade={onClickUpgrade}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n        {typeof balance !== 'undefined' &&\n        <p className='acc-balance-amount'>\n            <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n            {balance}\n        </p>\n        }\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { UpgradeButton } from 'App/Components/Elements/AccountSwitcher/upgrade_button.jsx';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services/index';\nimport { connect }       from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.props.account_list.length > 0) &&\n                this.props.account_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={this.doSwitch.bind(this, account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list      : PropTypes.array,\n    is_logged_in      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nconst account_switcher = connect(\n    ({ client }) => ({\n        account_list : client.account_list,\n        is_logged_in : client.is_logged_in,\n        switchAccount: client.switchAccount,\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes_config';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_portfolio_drawer_on) {\n                        togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}