{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_plus.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker_input.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_panel.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number_selector.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_date_time","forEach","_logout","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_close","_icon_exclamation","_icon_minus","_icon_plus","Button","_ref$className","className","has_effect","id","is_disabled","onClick","text","wrapperClassName","classes","button","_react2","default","disabled","wrapper","string","bool","func","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_Date","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","moment_date","toMoment","isTimeValid","_time$split","split","_time$split2","_slicedToArray","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","symbol","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getExpiryDate","expiry_date","moment_start","moment_expiry","is_invalid","isBefore","isAfter","clone","add","getExpiryTime","start_time","expiry_time","end_moment","end_time","isSameOrBefore","is_end_of_day","is_end_of_session","getSessions","option","getStartTime","getContractCategories","contract_types_list","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","Tooltip","message","alignment","icon","icon_name","icon_class","_classnames2","data-tooltip","data-tooltip-pos","node","Fieldset","header","is_center","onMouseEnter","onMouseLeave","tooltip","fieldset_class","field_left_class","_tooltip2","array","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","loading_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","_fill_template","Localize","str","replacers","localized","fillTemplate","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","duration","payout","theme","is_dark_mode_on","portfolio_drawer","is_portfolio_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","unit","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","getExpiryType","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","InputField","error_messages","fractional_digits","helper","is_float","is_incrementable","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","label","max_length","max_value","min_value","onChange","placeholder","prefix","required","has_error","has_valid_length","max_is_disabled","min_is_disabled","incrementValue","decrementValue","input","data-for","data-tip","maxLength","onKeyDown","keyCode","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","readOnly","input_increment","_button2","IconPlus","IconMinus","htmlFor","MobxPropTypes","arrayOrObservableArray","CalendarPanelTypes","calendar_date","calendar_view","date_format","isPeriodDisabled","max_date","min_date","selected_date","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","some","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","ASIANU","ASIAND","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","isBeforeDate","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","open","close","should_only_check_hour","now_moment","second","unix","session","isBetween","_icon_trade_types","_icon_maximize","_icon_quick_portfolio","_icon_settings","_ui","_connect","RemainingTime","_ref$end_time","remaining_time","formatDuration","getDiffDuration","isRequired","_ref2","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconClose","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","_PopConfirm","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","stake","is_purchase_error","echo_req","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","contract_title","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","renderCards","_ref3","CalendarButton","is_hidden","TimePickerDropdown","selectOption","_this$props$value$spl","_this$props$value$spl2","prev_hour","prev_minute","is_type_selected","setState","last_updated_type","stopPropagation","resetValues","state","is_hour_selected","is_minute_selected","prevProps","prevState","_state","toggle","_props","preClass","start_moment_clone","_value$split","_value$split2","is_clearable","saveHourRef","is_enabled","saveMinuteRef","mm","TimePicker","toggleDropDown","is_open","handleChange","arg","saveRef","nodeName","wrapper_ref","target_element","handleClickOutside","contains","_props2","is_align_right","padding","prefix_class","_input_field2","value_split","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_money2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","_toggle_button2","toggled","ToggleButton","toggle_style","_icon_logout","InkBar","inkbar_style","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","_Types","ContractTypeCell","IconTradeType","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","ServerTime","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","upgrade_info","getBasicUpgradeInfo","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCryptocurrency","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","epochToMoment","epoch","isValid","isUTC","moment_obj","convertToUnix","setTime","formatDate","daysFromTodayTo","diff","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","date_str","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","underlying","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","subtract","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor31","changeDurationValidationRules","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","getProposalInfo","setChartBarrier","query_params","duration_options","_ref5","_callee4","_context4","refresh","prepareTradeStore","abrupt","_x3","runInAction","_callee6","_context6","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","_x2","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","_proposal_response$ec","Duration","StartDate","getMethodsList","fnc","extendOrReplace","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_date","obj_expiry_time","obj_duration_min_max","createProposalRequestForContract","ask_price","returns","toFixed","display_value","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","isSame","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_theme_wrapper2","_header2","_error_boundary2","_app_contents2","_routes2","_PortfolioDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","PortfolioDrawer","toggleDrawer","body_content","_empty_portfolio_message2","_portfolio_drawer_card2","portfolio-drawer--open","_simplebarReact2","togglePortfolioDrawer","IconArrow","IconBack","transform","IconBell","stroke","IconCashier","rx","IconHamburger","strokeLinecap","IconTrade","PortfolioDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","SmartChart","form_wrapper_class","Suspense","fallback","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","setWrapperRef","is_dialog_open","getDisplayText","_this$props","findInArray","getStyles","container_classes","tabIndex","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","ContractTypeItem","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","ContractInfo","icon_type","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_DropDown2","observableObject","Dropdown","onKeyPressed","getItemFromValue","getValueFromIndex","curr_index","is_list_visible","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","isArrayLike","Items","highlightedIdx","items","expiry_list","now_date","max_date_duration","min_date_expiry","min_day","max_day","start_date_time","max_duration","min_duration","moment_now","new_min_day","new_max_day","moment_today","startOf","is_same_day","date_time","_start_time$split","_start_time$split2","moment_start_date_time","duration_unit_text","has_end_time","expiry","pop","endtime_container_class","has-time","_DatePicker2","has_today_btn","_time_picker2","DatePicker","is_datepicker_visible","is_close_btn_visible","onClickOutside","mainNode","updateDatePickerValue","onSelectCalendar","onChangeInput","clearDatePickerInput","calendar","resetCalendar","new_date","current_date","_this$props2","nativeEvent","defaultValue","_date_picker_input2","class_name","_Calendar2","onSelect","defaultProps","Calendar","DatePickerInput","_initialiseProps","_calendar_header2","navigators","calendarViews","_calendar_panel2","panelSelectors","_calendar_footer2","setToday","nextMonth","navigateTo","previousMonth","nextYear","previousYear","nextDecade","previousDecade","nextCentury","previousCentury","updateSelectedDate","month","updateSelected","year","decade","is_add","_props3","dataset","is_before","is_after","formatted_date","_props4","default_date","_props5","now","_props6","start_of_period","endOf","CalendarFooter","_calendar_button2","role","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","CalendarPanel","_panels","calendar_panel","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","week_headers","days","dates","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","first_day","last_day","moment_min_date","moment_max_date","moment_selected","padLeft","moment_start_date","is_active","is_today","today","data-date","getDays","selected_month","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","data-month","selected_year","current_year","years","data-year","decades","min_year","max_year","range","_range$split","_range$split2","start_year","end_year","data-decade","arr_five","_number_selector2","arr_arr_numbers","selected_number","NumberSelector","getAttribute","arr_numbers","data-value","arrayOf","current_date_config","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","msg","_localize3","_icon_error2","shape","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","last","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","SellInfo","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","_close_button2","CloseButton","ToastMessage","toast","_ToastMessage2","AppContents","app-contents--show-portfolio-drawer","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","NetworkStatus","_server_time2","TogglePortfolio","ToggleFullScreen","ToggleSettings","is_settings_visible","is_language_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_portfolio","_toggle_settings","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconQuickPortfolio","IconSettings","toggle_portfolio_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","LoginButton","ToggleNotificationsDrawer","account_title","_account_info","_install_pwa_button","_login_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","_localize2","AccountSwitcher","_account_switcher","_upgrade_button","_Drawer","accounts_toggle_btn","doSwitch","UpgradeButton","IconLogout","account_switcher","prompt","userChoice","choice_result","outcome","_InkBar2","_inkbar","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","offsetWidth","active_el","Switch","_route_with_sub_routes2","LoginPrompt","onSignup","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","Notifications","_notifications","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","_Routes2","virtual_account_loginid","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"187c5bf5dfec85bc5ae6\",\"account_password\":\"a6c66481410bef32f33a\",\"api_toke\":\"783f9678cb802f1785cc\",\"authorized_application\":\"b28df518facfc3e83023\",\"cashier_password\":\"b1abd4ceab63a78741eb\",\"contract\":\"6341e0681df8d4f54581\",\"financial_assessment\":\"0b52323d5f49f9611598\",\"limits\":\"4694d62c62dac8238928\",\"login_history\":\"8e46f95b61ac74796ce8\",\"personal_details\":\"dc99844c02f9f655068e\",\"portfolio\":\"26a54e4d73493c3f2f64\",\"self_exclusion\":\"73278245d9cc48bdfef6\",\"settings\":\"f49dba8d9dc159c2d205\",\"statement\":\"c77d1e3ce147d476ac0b\",\"vendors~smart_chart\":\"4470031e08ef8dd7aab9\",\"smart_chart\":\"4915ce6af9f7f98651bd\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([281,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date_time';\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\nexport * from './icon_minus.jsx';\nexport * from './icon_plus.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import { localize }              from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }           from '_common/utility';\nimport { WS }                    from 'Services';\nimport { isTimeValid, toMoment } from 'Utils/Date';\nimport { buildBarriersConfig }   from './barrier';\nimport { buildDurationConfig }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }         from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }          from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const moment_date = toMoment(date);\n        if (!time || !isTimeValid(time)) return moment_date;\n        const [ hour, minute ] = time.split(':');\n        return moment_date.hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getExpiryDate = (expiry_date, start_date, expiry_type) => {\n        const moment_start  = toMoment(start_date);\n        const moment_expiry = toMoment(expiry_date);\n        // forward starting contracts should only show today and tomorrow as expiry date\n        const is_invalid = moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n        return {\n            expiry_date: expiry_type === 'endtime' ? (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD') : null,\n        };\n    };\n\n    // has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is after start time\n    const getExpiryTime = (sessions, start_date, start_time, expiry_date, expiry_time) => {\n        const start_moment = start_date ? buildMoment(start_date, start_time) : toMoment();\n        const end_moment   = buildMoment(expiry_date, expiry_time);\n\n        let end_time = expiry_time;\n        if (sessions && !isSessionAvailable(sessions, end_moment)) {\n            end_time = getValidTime(sessions, end_moment, start_moment);\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n            const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n            end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n        }\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getExpiryDate,\n        getExpiryTime,\n        getSessions,\n        getStartTime,\n        getStartType,\n\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const fieldset_class   = classNames('fieldset-header', is_center ? 'center-text' : '');\n    const field_left_class = classNames('field-info', { icon }, icon, is_center ? 'center' : 'left');\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_class}>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && toMoment(expiry_date).isAfter(toMoment(server_time), 'day');\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { IconMinus }             from 'Assets/Common/icon_minus.jsx'; // implicit import here { IconMinus, IconPlus } from 'Assets/Common' breaks compilation\nimport { IconPlus }              from 'Assets/Common/icon_plus.jsx';\nimport Button                    from './button.jsx';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    className,\n    error_messages,\n    fractional_digits,\n    helper,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_read_only = false,\n    is_signed = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const incrementValue = () => {\n        if  (max_is_disabled) return;\n\n        const increment_value = (+value) + 1;\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n\n        const decrement_value = (+value) - 1;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    const input =\n        <input\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-tip\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            onChange={changeValue}\n            onClick={onClick}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value || ''}\n        />;\n\n    const input_increment =\n        <div className='input-wrapper'>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--increment'}\n                is_disabled={max_is_disabled}\n                onClick={incrementValue}\n            >\n                <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n            </Button>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--decrement'}\n                is_disabled={min_is_disabled}\n                onClick={decrementValue}\n            >\n                <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n            </Button>\n            { input }\n        </div>;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                {is_incrementable  &&  type === 'number' ? input_increment : input}\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.string,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_incrementable : PropTypes.bool,\n    is_read_only     : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    onClick          : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(),\n    start_moment           = toMoment(),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, undefined, should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(should_only_check_hour ? session.open.clone().minute(0) : session.open, session.close, null, '[]')))\n);\n","export * from './icon_trade_types.jsx';\n","export default from './dropdown.jsx';\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ContractType from '../Helpers/contract_type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from '_common/localize';\nimport { isEmptyObject }          from '_common/utility';\nimport { PopConfirm }             from 'App/Components/Elements/PopConfirm';\nimport UILoader                   from 'App/Components/Elements/ui_loader.jsx';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Fieldset                   from 'App/Components/Form/fieldset.jsx';\nimport { connect }                from 'Stores/connect';\nimport ContractInfo               from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox                 from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock               from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    barrier_count,\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green'\n                has_effect\n                text={localize('Purchase')}\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            />\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            barrier_count={barrier_count}\n                            contract_title={trade_types[type]}\n                            contract_type={type}\n                            currency={currency}\n                            proposal_info={info}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    barrier_count             : PropTypes.number,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        barrier_count             : modules.trade.barrier_count,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nexport default function CalendarButton({ children, className, is_hidden, label, onClick }) {\n    return (\n        <React.Fragment>\n            { !is_hidden &&\n                <span\n                    type='button'\n                    className={className}\n                    onClick={onClick}\n                >\n                    {label}\n                    {children}\n                </span>\n            }\n        </React.Fragment>\n    );\n}\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n","import {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { localize }              from '_common/localize';\nimport { isSessionAvailable }    from 'Stores/Modules/Trading/Helpers/start_date';\nimport { toMoment }              from 'Utils/Date';\nimport InputField                from './input_field.jsx';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled && this.props.value) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = toMoment(start_date);\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.number,\n    value          : PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.number,\n    toggle      : PropTypes.func,\n    value       : PropTypes.string,\n    value_split : PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","export * from './icon_logout.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <IconPortfolio className='portfolio-empty__icon' />\n        <span className='portfolio-empty__text'>{localize('No open positions.')}</span>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 219,\n\t\"./ja.js\": 219\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 489;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base_store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            id !== this.loginid &&\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid      = LocalStore.get('active_loginid');\n        this.accounts     = LocalStore.getObject(storage_key);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.switched     = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }                                                                                                                                                 from './Helpers/chart_barriers';\nimport { createChartMarkers }                                                                                                                                                 from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const moment_obj = epochToMoment(value);\n    return moment_obj.isValid() ? moment_obj : moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nconst setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time.split(':');\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => moment(date || undefined, date_format).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = moment(date).utc().diff(moment().utc(), 'days');\n    return (!date || diff < 0) ? '' : diff + 1;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^(\\d{1,2}):(\\d{2})(:00)?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String} date_str date\n */\nexport const isDateValid = date_str => typeof date_str === 'string' && moment(date_str).isValid();\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format_response';\nimport BaseStore                        from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject }                      from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '09:40';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type = response.echo_req.contract_type;\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall  : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low   : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch      : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end        : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay       : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian      : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd   : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call    : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put     : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low: { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start_date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract_type';\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n\n    getMethodsList(store, new_state).forEach((fnc) => {\n        extendOrReplace(snapshot, fnc(snapshot));\n    });\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    Duration.onChangeExpiry,\n    StartDate.onChangeStartDate,\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = (store) => {\n    const { contract_type, start_date, duration_unit, expiry_time, expiry_type } = store;\n    let { start_time, expiry_date } = store;\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_date = ContractType.getExpiryDate(expiry_date, start_date, expiry_type);\n    expiry_date           = obj_expiry_date.expiry_date;\n    const obj_expiry_time = ContractType.getExpiryTime(sessions, start_date, start_time, expiry_date, expiry_time);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response) => {\n    const proposal = response.proposal || {};\n    const profit   = (proposal.payout - proposal.ask_price) || 0;\n    const returns  = profit * 100 / (proposal.ask_price || 1);\n\n    return {\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake    : proposal.display_value,\n        payout   : proposal.payout,\n        id       : proposal.id || '',\n        message  : proposal.longcode || response.error.message,\n        has_error: !!response.error,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        const start_date  = toMoment(store.start_date || store.root_store.common.server_time);\n        const is_same_day = expiry_date.isSame(start_date, 'day');\n        const expiry_time = is_same_day ? store.expiry_time : '23:59:59';\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport SimpleBar                      from 'simplebar-react';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                <div className='portfolio-drawer__header'>\n                    <span className='portfolio-drawer__icon-main ic-portfolio' />\n                    <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                    <div\n                        className='portfolio-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconClose />\n                    </div>\n                </div>\n                <div className='portfolio-drawer__body'>\n                    <SimpleBar style={{ height: '100%' }}>\n                        {body_content}\n                    </SimpleBar>\n                </div>\n            </div>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'call':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path fill='#2A3052' d='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path fill='#2A3052' d='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path fill='#2A3052' d='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path fill='#2A3052' d='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'put':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\nimport Tooltip                        from 'App/Components/Elements/tooltip.jsx';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n            <Tooltip\n                alignment='left'\n                icon='info'\n            />\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst ContractInfo = ({\n    barrier_count,\n    contract_title,\n    contract_type,\n    currency,\n    proposal_info,\n}) => {\n    const icon_type = `${contract_type}${/^(call|put)$/i.test(contract_type) && barrier_count > 0 ? '_barrier' : ''}`.toLowerCase();\n\n    return (\n        <div className='box'>\n            <div className='left-column'>\n                <div className='type-wrapper'>\n                    <IconTradeType type={icon_type} className='type' />\n                </div>\n                <h4 className='trade-type'>{contract_title}</h4>\n            </div>\n            {(proposal_info.has_error || !proposal_info.id) ?\n                <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                    <span>{proposal_info.message}</span>\n                </div>\n                :\n                <div className='purchase-info-wrapper'>\n                    <span className='purchase-tooltip'>\n                        <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                    </span>\n                    <div className='info-wrapper'>\n                        <div>{localize('Stake')}:</div>\n                        <div><Money amount={proposal_info.stake} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Payout')}:</div>\n                        <div><Money amount={proposal_info.payout} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Net Profit')}:</div>\n                        <div><Money amount={proposal_info.profit} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Return')}:</div>\n                        <div>{proposal_info.returns}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    barrier_count : PropTypes.number,\n    contract_title: PropTypes.string,\n    contract_type : PropTypes.string,\n    currency      : PropTypes.string,\n    proposal_info : PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { localize }              from '_common/localize';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input_field.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !is_single_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages = {validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport SimpleBar         from 'simplebar-react';\nimport { IconArrow }     from 'Assets/Common';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex,\n}  from './helpers';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n            curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    onKeyPressed = (event) => {\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    tabIndex='0'\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            <SimpleBar style={{ 'height': '100%' }}>\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list-label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </SimpleBar>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''} ${highlightedIdx === idx ? 'highlighted' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Datepicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport {\n    convertDurationLimit,\n    convertDurationUnit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    toMoment }                  from 'Utils/Date';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst expiry_list = [\n    { text: localize('Duration'), value: 'duration' },\n];\n\nlet now_date,\n    max_date_duration,\n    min_date_expiry,\n    min_day,\n    max_day,\n    start_date_time,\n    max_duration,\n    min_duration;\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n}) => {\n    if (duration_min_max[contract_expiry_type]) {\n        min_duration = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n        max_duration = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        const moment_now  = toMoment(server_time);\n        const new_min_day = convertDurationUnit(duration_min_max[contract_expiry_type].min, 's', 'd');\n        const new_max_day = convertDurationUnit(duration_min_max[contract_expiry_type].max, 's', 'd');\n        if (!now_date || moment_now.date() !== now_date.date() || (duration_unit === 'd' && (min_day !== new_min_day || max_day !== new_max_day))) {\n            if (duration_unit === 'd') {\n                min_day = new_min_day;\n                max_day = new_max_day;\n            }\n\n            const moment_today = moment_now.clone().startOf('day');\n\n            now_date          = moment_now.clone();\n            max_date_duration = moment_today.clone().add(max_day || 365, 'd');\n            min_date_expiry   = moment_today.clone();\n        }\n    }\n\n    const moment_expiry = toMoment(expiry_date);\n    const is_same_day   = moment_expiry.isSame(toMoment(start_date), 'day');\n    if (is_same_day) {\n        const date_time = toMoment(start_date);\n        if (start_date && isTimeValid(start_time)) {\n            const [ hour, minute ] = start_time.split(':');\n            date_time.hour(hour).minute(minute).second(0).add(5, 'minutes');\n        }\n        // only update start time every five minutes, since time picker shows five minute durations\n        const moment_start_date_time = toMoment(start_date_time);\n        if (!start_date_time || moment_start_date_time.isAfter(date_time) || moment_start_date_time.clone().add(5, 'minutes').isBefore(date_time) ||\n            (moment_start_date_time.minutes() !== date_time.minutes() && date_time.minutes() % 5 === 0)) {\n            start_date_time = date_time.unix();\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_same_day,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        <InputField\n                            type='number'\n                            max_value={max_duration}\n                            min_value={min_duration}\n                            name='duration'\n                            value={duration}\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                            is_incrementable={true}\n                            error_messages = {validation_errors.duration || []}\n                        />\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <Datepicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable={false}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {is_same_day &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                value={expiry_time}\n                                placeholder='12:00'\n                                start_date={start_date_time}\n                                sessions={sessions}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time    : PropTypes.string,\n    expiry_type    : PropTypes.string,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    server_time    : PropTypes.object,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { IconArrow }   from 'Assets/Common';\nimport {\n    daysFromTodayTo,\n    formatDate,\n    isDateValid,\n    toMoment }         from 'Utils/Date';\nimport DatePickerInput from './date_picker_input.jsx';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.PureComponent {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_close_btn_visible : false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { value, mode } = this.props;\n        this.updateDatePickerValue(value, mode);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_close_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_close_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value), 'duration');\n        } else {\n            this.updateDatePickerValue(value);\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value, this.props.mode);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: '' }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value, mode) => {\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const { date_format, start_date } = this.props;\n        const new_date = (mode === 'duration') ? toMoment().add(value, 'days').format(date_format) : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = toMoment(start_date).format(date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker-display'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker-native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker-native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                <div\n                    className='datepicker-display-wrapper'\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                >\n                    <DatePickerInput\n                        class_name='datepicker-display'\n                        mode={this.props.mode}\n                        name={this.props.name}\n                        placeholder={this.props.placeholder}\n                        onClick={this.handleVisibility}\n                        is_read_only={true}\n                        value={this.state.value}\n                    />\n                    <span\n                        className={classNames('picker-calendar-icon', {\n                            show: !this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.handleVisibility}\n                    />\n                    <span\n                        className={classNames('close-circle-icon', {\n                            show: this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.clearDatePickerInput}\n                    />\n                </div>\n                <div\n                    className={classNames('datepicker-calendar', {\n                        show: this.state.is_datepicker_visible,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    >\n                        <DatePickerInput\n                            class_name='calendar-input'\n                            mode={this.props.mode}\n                            name={this.props.name}\n                            onChange={this.onChangeInput}\n                            placeholder={this.props.placeholder}\n                            is_read_only={'is_read_only' in this.props ? this.props.is_read_only : false}\n                            value={this.state.value}\n                        />\n                    </Calendar>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...DatePickerInput.propTypes,\n    ...Calendar.propTypes,\n};\n\nexport default DatePicker;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nexport default function DatePickerInput(props) {\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            className={props.class_name}\n            readOnly={props.is_read_only}\n            placeholder={props.placeholder\n                || (props.mode === 'duration' ? localize('Select a duration') : localize('Select date'))}\n            onChange={props.onChange}\n            onClick={props.onClick}\n            value={props.value || ''}\n        />\n    );\n}\n\nDatePickerInput.propTypes = {\n    class_name  : PropTypes.string,\n    id          : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    is_read_only: PropTypes.bool,\n    mode        : PropTypes.string,\n    name        : PropTypes.string,\n    onChange    : PropTypes.func,\n    onClick     : PropTypes.func,\n    placeholder : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number, // duration\n        PropTypes.string, // date\n    ]),\n};\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { toMoment }   from 'Utils/Date';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\nimport CalendarPanel  from './calendar_panel.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = toMoment(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    // navigates to next or previous's month/year/decade/century\n    navigators = {\n        nextMonth      : () => { this.navigateTo(1,   'months', true); },\n        previousMonth  : () => { this.navigateTo(1,   'months', false); },\n        nextYear       : () => { this.navigateTo(1,   'years',  true); },\n        previousYear   : () => { this.navigateTo(1,   'years',  false); },\n        nextDecade     : () => { this.navigateTo(10,  'years',  true); },\n        previousDecade : () => { this.navigateTo(10,  'years',  false); },\n        nextCentury    : () => { this.navigateTo(100, 'years',  true); },\n        previousCentury: () => { this.navigateTo(100, 'years',  false); },\n    };\n\n    // selects a day, a month, a year, or a decade\n    panelSelectors = {\n        date  : (e, is_disabled) => { this.updateSelectedDate(e, is_disabled); },\n        month : (e) => { this.updateSelected(e, 'month'); },\n        year  : (e) => { this.updateSelected(e, 'year'); },\n        decade: (e) => { this.updateSelected(e, 'decade'); },\n    };\n\n    // sets Calendar active view\n    calendarViews = {\n        date  : () => { this.setState({ calendar_view: 'date'   }); },\n        month : () => { this.setState({ calendar_view: 'month'  }); },\n        year  : () => { this.setState({ calendar_view: 'year'   }); },\n        decade: () => { this.setState({ calendar_view: 'decade' }); },\n    };\n\n    navigateTo = (value, unit, is_add) => {\n        const { date_format, max_date, min_date } = this.props;\n\n        let new_date = toMoment(this.state.calendar_date)[is_add ? 'add' : 'subtract'](value, unit).format(date_format);\n\n        if (unit === 'months' && this.isPeriodDisabled(new_date, 'month')) return;\n\n        if (unit === 'years'  && this.isPeriodDisabled(new_date, 'years')) {\n            new_date = is_add ? max_date : min_date;\n        }\n\n        this.setState({ calendar_date: toMoment(new_date).format(date_format) }); // formatted date\n    };\n\n    updateSelectedDate = (e, is_disabled) => {\n        if (is_disabled) {\n            return;\n        }\n\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).startOf(unit);\n        const end_of_period   = toMoment(date).endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, max_date, min_date, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    onClick={this.navigators}\n                    onSelect={this.calendarViews}\n                    calendar_view={calendar_view}\n                />\n                <CalendarPanel\n                    calendar_date={calendar_date}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    max_date={max_date}\n                    min_date={min_date}\n                    start_date={start_date}\n                    onClick={this.panelSelectors}\n                    selected_date={selected_date}\n                    calendar_view={calendar_view}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    onClick={this.setToday}\n                    has_today_btn={has_today_btn}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarFooter({ footer, has_today_btn, onClick }) {\n    return (\n        <div className='calendar-footer'>\n            { footer && <span className='calendar-footer-extra'>{footer}</span> }\n            { has_today_btn &&\n                <CalendarButton className='calendar-footer-btn'>\n                    <a role='button' onClick={onClick}>{localize('Today')}</a>\n                </CalendarButton>\n            }\n        </div>\n    );\n}\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { toMoment }   from 'Utils/Date';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarHeader({ calendar_date, isPeriodDisabled, onClick, onSelect, calendar_view }) {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    return (\n        <div className='calendar-header'>\n            <CalendarButton\n                className={classNames('calendar-prev-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    (is_date_view || is_month_view) && onClick.previousYear())\n                    || (is_year_view   && onClick.previousDecade())\n                    || (is_decade_view && onClick.previousCentury()\n                    )\n                }\n            />\n            <CalendarButton\n                className={classNames('calendar-prev-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.previousMonth}\n            />\n\n            <div className='calendar-select'>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar-select-month-btn'\n                        is_hidden={!is_date_view}\n                        label={moment_date.format('MMM')}\n                        onClick={onSelect.month}\n                    />\n                }\n                <CalendarButton\n                    className='calendar-select-year-btn'\n                    onClick={() => ((is_date_view || is_month_view) ? onSelect.year() : onSelect.decade())}\n                >\n                    { (is_date_view || is_month_view) && moment_date.year() }\n                    { is_year_view   && `${moment_date.clone().subtract(1, 'years').year()}-${moment_date.clone().add(10, 'years').year()}`  }\n                    { is_decade_view && `${moment_date.clone().subtract(10, 'years').year()}-${moment_date.clone().add(109, 'years').year()}` }\n                </CalendarButton>\n            </div>\n\n            <CalendarButton\n                className={classNames('calendar-next-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.nextMonth}\n            />\n            <CalendarButton\n                className={classNames('calendar-next-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    ((is_date_view || is_month_view) && onClick.nextYear())\n                    || (is_year_view   && onClick.nextDecade())\n                    || (is_decade_view && onClick.nextCentury())\n                )}\n            />\n        </div>\n    );\n}\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    onClick         : PropTypes.object,\n    onSelect        : PropTypes.object,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nexport default function CalendarPanel(props) {\n    const calendar_panel = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <div className='calendar-panel'>\n            { calendar_panel[props.calendar_view] }\n        </div>\n    );\n}\n\nCalendarPanel.propTypes = {\n    calendar_view: PropTypes.string,\n};\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { padLeft }        from '_common/string_util';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nconst getDays = ({ calendar_date, date_format, max_date, min_date, start_date, onClick, selected_date }) => {\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const first_day          = moment_month_start.day();\n    const last_day           = moment_month_end.day();\n    const moment_min_date    = toMoment(min_date);\n    const moment_max_date    = toMoment(max_date);\n    const moment_selected    = toMoment(selected_date);\n\n    for (let i = first_day; i > 0; i--) {\n        dates.push(moment_month_start.clone().subtract(i, 'day').format(date_format));\n    }\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    for (let i = 1; i <= 6 - last_day; i++) {\n        dates.push(moment_month_end.clone().add(i, 'day').format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n    dates.map((date) => {\n        const moment_date = toMoment(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = moment_date.isBefore(moment_min_date) || moment_date.isAfter(moment_max_date) ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) || moment_date.isAfter(moment_start_date.clone().add(1, 'day'))));\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar-date', {\n                    active  : is_active && !is_disabled,\n                    today   : is_today,\n                    disabled: is_disabled,\n                })}\n                onClick={(e) => { onClick.date(e, is_disabled); }}\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst week_headers = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar-date-panel'>\n            {week_headers.map((item, idx) => (<span key={idx} className='calendar-date-header'>{item}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { localize }       from '_common/localize';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nconst getMonthHeaders = () => ({\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n});\n\nexport const CalendarMonths = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const moment_date    = toMoment(calendar_date);\n    const selected_month = toMoment(selected_date).month();\n    const month_headers  = getMonthHeaders();\n\n    return (\n        <div className='calendar-month-panel'>\n            {Object.keys(month_headers).map((month, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-month', {\n                        active  : idx === selected_month,\n                        disabled: isPeriodDisabled(moment_date.month(month), 'month'),\n                    })}\n                    onClick={onClick.month}\n                    data-month={idx}\n                >\n                    {month_headers[month]}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarYears = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = toMoment(selected_date).year();\n    const moment_date   = toMoment(calendar_date);\n    const current_year  = moment_date.year();\n    const years         = [];\n    for (let year = current_year - 1; year < current_year + 11; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar-year-panel'>\n            {years.map((year, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-year', {\n                        disabled: isPeriodDisabled(moment_date.year(year), 'year'),\n                        active  : year === selected_year,\n                    })}\n                    onClick={onClick.year}\n                    data-year={year}\n                >\n                    {year}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarDecades = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = toMoment(selected_date).year();\n    const moment_date   = toMoment(calendar_date);\n\n    const decades = [];\n    let min_year  = moment_date.year() - 10;\n    for (let i = 0; i < 12; i++) {\n        const max_year = min_year + 9;\n        const range    = `${min_year}-${max_year}`;\n        decades.push(range);\n        min_year = max_year + 1;\n    }\n\n    return (\n        <div className='calendar-decade-panel'>\n            {decades.map((range, idx) => {\n                const [start_year, end_year] = range.split('-');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar-decade', {\n                            disabled: isPeriodDisabled(moment_date.year(start_year), 'year') && isPeriodDisabled(moment_date.year(end_year), 'year'),\n                            active  : start_year === selected_year,\n                        })}\n                        onClick={onClick.decade}\n                        data-decade={range}\n                    >\n                        {range}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number_selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={`number-selector__selection${selected_number === i ? ' selected' : ''}`}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n    validation_errors,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {(!is_today && start_time) &&\n                <TimePicker\n                    onChange={onChange}\n                    is_align_right\n                    name='start_time'\n                    value={start_time}\n                    placeholder='12:00'\n                    start_date={start_date}\n                    sessions={sessions}\n                    is_clearable={false}\n                    is_nativepicker={is_nativepicker}\n                    validation_errors={validation_errors.start_time}\n                />\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized     : PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    onChange         : PropTypes.func,\n    sessions         : MobxPropTypes.arrayOrObservableArray,\n    start_date       : PropTypes.number,\n    start_dates_list : MobxPropTypes.arrayOrObservableArray,\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(StartDate);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\nimport Localize     from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from 'App/Components/Layout/Header';\nimport header_links             from 'App/Constants/header_links';\nimport { connect }              from 'Stores/connect';\n\nconst Header = ({\n    account_type,\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    account_type={account_type}\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    account_type             : PropTypes.string,\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        account_type             : client.account_title,\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport Localize            from 'App/Components/Elements/localize.jsx';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n    account_type,\n}) => (\n    <div className='acc-balance'>\n        <div className='acc-switcher-container'>\n            <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                <p className='acc-balance-type'>\n                    <Localize str={`${account_type} Account`} />\n                </p>\n                <p className='acc-balance-id'>{loginid}</p>\n                <IconArrow className='select-arrow' />\n            </div>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={400}\n                classNames='acc-switcher-wrapper'\n                unmountOnExit\n            >\n                <div className='acc-switcher-wrapper'>\n                    <AccountSwitcher\n                        is_visible={is_dialog_on}\n                        toggle={toggleDialog}\n                        is_upgrade_enabled={is_upgrade_enabled}\n                        onClickUpgrade={onClickUpgrade}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n        {typeof balance !== 'undefined' &&\n        <p className='acc-balance-amount'>\n            <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n            {balance}\n        </p>\n        }\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { UpgradeButton } from 'App/Components/Elements/AccountSwitcher/upgrade_button.jsx';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services/index';\nimport { connect }       from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.props.account_list.length > 0) &&\n                this.props.account_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={this.doSwitch.bind(this, account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list      : PropTypes.array,\n    is_logged_in      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nconst account_switcher = connect(\n    ({ client }) => ({\n        account_list : client.account_list,\n        is_logged_in : client.is_logged_in,\n        switchAccount: client.switchAccount,\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes_config';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_portfolio_drawer_on) {\n                        togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}