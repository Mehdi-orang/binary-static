{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/Constants/date_time.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_clock.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_plus.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button_toggle_menu.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/switch_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_calendar_today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_double_left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_double_right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_minimize.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_tooltip.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade_type_info_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade_type_info_item.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/trade_categories.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_price_move.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/items.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/native_select.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow_equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon_barrier_up.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon_barrier_down.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration_wrapper.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range_slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick_steps.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration_toggle.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/advanced_duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/trading_date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/helpers.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/trading_time_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/time_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/simple_duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number_selector.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_positions.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_positions.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/deposit_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/upgrade_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/empty_notification.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_date_time","forEach","_logout","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_calendar_today","_icon_calendar","_icon_chevron_double_left","_icon_chevron_double_right","_icon_chevron_left","_icon_chevron_right","_icon_clear","_icon_clock","_icon_close","_icon_exclamation","_icon_minimize","_icon_minus","_icon_plus","Button","_ref$className","className","classNameSpan","has_effect","id","is_disabled","onClick","tabIndex","text","wrapperClassName","classes","_classnames2","default","effect","button","_react2","disabled","wrapper","node","string","bool","func","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_Date","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","trading_times","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","isTimeValid","split","_ref2","_slicedToArray","toMoment","ServerTime","getTradingTimes","_ref3","trading_times_response","submarkets","symbols","symbol","underlying","abrupt","sent","markets","echo_req","times","close","_x2","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","clone","add","isSameOrBefore","getExpiryTime","expiry_time","market_close_times","start_time","end_time","market_close_time","end_moment","expiry_sessions","open","minDate","diff","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getContractCategories","contract_types_list","InputField","checked","classNameInput","classNamePrefix","data_tip","data_value","error_messages","fractional_digits","helper","is_autocomplete_disabled","is_float","is_incrementable","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","_ref$is_unit_at_right","is_unit_at_right","label","max_length","max_value","min_value","onChange","placeholder","prefix","required","unit","has_error","has_valid_length","max_is_disabled","min_is_disabled","incrementValue","decrementValue","display_value","input","data-for","data-value","data-tip","maxLength","onKeyDown","keyCode","trim","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","readOnly","autoComplete","input_increment","_button2","IconPlus","IconMinus","_tooltip2","with-label","alignment","message","htmlFor","MobxPropTypes","arrayOrObservableArray","Fieldset","header","is_center","onMouseEnter","onMouseLeave","fieldset_header_class","fieldset_info_class","array","Tooltip","classNameIcon","icon","icon_name","icon_class","data-tooltip","data-tooltip-pos","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","duration","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","some","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","classNameBlock","loading_class","block_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","payout","theme","is_dark_mode_on","positions_drawer","is_positions_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","CommonPropTypes","calendar_date","isPeriodDisabled","selected_date","updateSelected","_fill_template","Localize","str","replacers","localized","fillTemplate","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","is_forced","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","_icon_trade_types","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","IconClose","any","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","week_headers_abbr","getDaysOfTheWeek","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","getDecade","moment_date","year","getCentury","_icon_maximize","_icon_positions","_icon_settings","_ui","_connect","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconBack","IconChevronLeft","IconChevronRight","IconClock","stroke","strokeLinecap","strokeLinejoin","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_PopConfirm","_Types","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","stake","IconTradeType","returns","_money2","is_purchase_error","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","has_increased","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","ui_store","renderCards","ButtonToggleMenu","buttons_arr","menu","val","button-menu__button--active","selected_value","changeValue","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","setState","getUnderlineStyle","active","state","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","toggle","_switch_button2","toggled","SwitchButton","toggle_style","_icon_logout","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","_props","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","handleClickOutside","contains","is_open","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","ContractTypeCell","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","upgrade_info","getBasicUpgradeInfo","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","$","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCryptocurrency","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","epochToMoment","epoch","isValid","isUTC","formatted_date","Date","setTime","moment_obj","convertToUnix","formatDate","date_format","daysFromTodayTo","startOf","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","addDays","num_of_days","addMonths","num_of_months","addYears","num_of_years","subDays","subMonths","subYears","date_1","date_2","getStartOfMonth","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor34","changeDurationValidationRules","changeAllowEquals","delay","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_equal_checked","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","getProposalInfo","setChartBarrier","query_params","duration_options","hasCallPutEqual","contract_type_list","check_callput_equal_duration","contract_duration_list","rise_fall_equal","hasDurationForCallPutEqual","is_allow_equal","_ref6","_callee4","_context4","refresh","prepareTradeStore","_x3","runInAction","_callee6","_context6","_this9","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","start_moment_clone","_value$split","_value$split2","_proposal_response$ec","Duration","StartDate","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeStartDate","onChangeExpiry","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_type","obj_expiry_date","obj_market_close_times","obj_expiry_time","obj_duration_min_max","createProposalRequestForContract","ask_price","contract_basis","obj_contract_basis","toFixed","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","getDurationFromUnit","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_header2","_error_boundary2","_app_contents2","_routes2","_PositionsDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","_ttReactCustomScrollbars","PositionsDrawer","toggleDrawer","body_content","_empty_portfolio_message2","_positions_drawer_card2","positions-drawer--open","IconMinimize","Scrollbars","autoHide","togglePositionsDrawer","IconArrow","classNamePath","IconCalendarToday","fillOpacity","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconClear","transform","IconBell","IconCashier","rx","IconHamburger","IconTrade","PositionsDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","SmartChart","form_wrapper_class","Suspense","fallback","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","padding","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","onSubmitButtonClick","handleInfoVisibility","handleInfoClick","handleNavigationClick","handleNextClick","navigationList","navigationLength","nextIndex","list_item","handlePrevClick","prevIndex","setWrapperRef","wrapper_ref","is_dialog_open","is_info_dialog_open","onWidgetClick","onBackButtonClick","getDisplayText","_this$props","findInArray","getStyles","container_classes","getNavigationList","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","_trade_type_info_dialog2","_trade_type_info_item2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","_icon_tooltip","ContractTypeItem","IconTooltip","TradeTypeInfoDialog","_trade_categories","TradeTypeInfoItem","TradeCategories","TradeTypeTemplate","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","_icon_price_move","ContractInfo","trade-container__error","IconPriceMove","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_DropDown2","is_alignment_left","_input_field2","_allow_equals2","observableObject","Dropdown","list_ref","createRef","curr_index","getItemFromValue","is_list_visible","onKeyPressed","is_single_option","getValueFromIndex","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","_native_select2","left_alignment_style","list_width","isArrayLike","dropdown-container--left","dropdown-container--show","dropdown-container--disabled","dropdown__display--clicked","select-arrow--left","enter","enterDone","exit","onEntered","offsetWidth","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","renderThumbHorizontal","_items2","highlightedIdx","items","Items","list__item--selected","list__item--highlighted","NativeSelect","isArray","AllowEquals","_Barriers","barrier_title","input_class","IconBarrierUp","IconBarrierDown","_icon_barrier_up","_icon_barrier_down","DurationWrapper","hasDurationUnit","duration_list","is_advanced_duration","du","new_duration_unit","new_duration_value","onChangeUiStore","onChangeMultiple","current_unit","advanced_duration_unit","simple_duration_unit","current_duration","simple_is_missing_duration_unit","current_duration_unit","has_missing_duration_unit","simple_is_not_type_duration","advanced_has_wrong_expiry","advanced_expiry_type","setDurationUnit","_duration2","duration_d","duration_h","duration_m","duration_s","duration_t","expiry_list","has_end_time","expiry","pop","duration_unit_text","changeDurationUnit","duration_value","shared_input","duration_name","number_input","has_toggle","_RangeSlider2","_advanced_duration2","number_input_props","shared_input_props","_simple_duration2","_duration_toggle2","new_trade_store_values","RangeSlider","first_tick","is_error","steps","_tick_steps2","TickSteps","arr_ticks","ticks__step--active","ticks__step--marked","DurationToggle","icon_className","advanced-simple-toggle__icon--active","AdvancedDuration","is_24_hours_contract","has_intraday_duration_unit","isSame","endtime_container_class","has-time","_button_toggle_menu2","_DatePicker2","_TimePicker2","TradingDatePicker","max_date_duration","min_date_expiry","has_today_btn","moment_contract_start_date_time","max_daily_duration","daily","disable_year_selector","disable_trading_events","min_date","max_date","DatePicker","date_value","holidays","is_datepicker_visible","is_clear_btn_visible","weekends","onClickOutside","mainNode","updateDatePickerValue","is_clearable","onSelectCalendar","onChangeInput","formatted_value","clearDatePickerInput","calendar","resetCalendar","new_value","new_date_value","new_date","current_date","_this$props2","renderInputField","_this$props3","initial_value","onChangeCalendarMonth","getTradingEvents","trading_events","events","dates","descrip","nativeEvent","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","_Calendar2","onSelect","defaultProps","Calendar","_initialiseProps","calendar_view","_state","_calendar_header2","navigateTo","switchView","_calendar_body2","_calendar_footer2","setToday","view","start_of_month","updateSelectedDate","_props2","dataset","is_before","is_after","stopPropagation","month","decade","_props3","default_date","_props4","now","_props5","start_of_period","endOf","arrayOf","shape","_panels","CalendarBody","calendar_body","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","days","moment_today","moment_cur_date","daysInMonth","moment_month_start","moment_month_end","moment_selected","padLeft","start_of_next_month","moment_start_date","is_active","is_today","has_events","is_closes_early","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--disabled","calendar__cell--other","data-date","getDays","moment_selected_date","data-month","_helper","_getDecade$split","_getDecade$split2","start_of_decade","end_of_decade","years","is_other_decade","data-year","decades","min_year","_decade$split","_decade$split2","is_other_century","data-decade","CalendarFooter","CalendarHeader","disable_month_selector","is_date_view","is_month_view","is_year_view","is_decade_view","century","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","_calendar_button2","calendar__nav--disabled","is_hidden","calendar__btn--disabled","CalendarButton","TradingTimePicker","expiry_date_time","expiry_date_market_close","is_expired_next_day","expiry_time_sessions","TimePicker","toggleDropDown","handleChange","arg","saveRef","nodeName","target_element","prefix_class","_dialog2","preClass","Dialog","start_time_moment","end_time_moment","milliseconds","to_compare_moment","selectOption","current_value","prev_value","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","is_enabled","selected","mm","SimpleDuration","has_label","arr","filtered_arr","filterMinutesAndTicks","arr_five","_number_selector2","arr_arr_numbers","selected_number","NumberSelector","getAttribute","arr_numbers","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","msg","_localize3","_icon_error2","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","last","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","SellInfo","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","_close_button2","CloseButton","ToastMessage","toast","_ToastMessage2","AppContents","app-contents--show-positions-drawer","app-contents--contract-mode","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","TogglePositions","NetworkStatus","_server_time2","ToggleFullScreen","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_positions","_toggle_settings","tooltip","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconPositions","IconSettings","toggle_positions_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","UpgradeButton","DepositButton","LoginButton","_account_info","_deposit_button","_install_pwa_button","_login_button","_upgrade_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","acc-info--show","acc-info--is-virtual","AccountSwitcher","_account_switcher","_Drawer","accounts_toggle_btn","handleLogout","account_loginid","main_account_title","acc-switcher-account--selected","doSwitch","acc-switcher__id__icon","virtual_loginid","IconLogout","account_switcher","virtual_account_loginid","prompt","userChoice","choice_result","outcome","Switch","_route_with_sub_routes2","LoginPrompt","onSignup","_localize2","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","ToggleNotificationsDrawer","Notifications","_notifications","_empty_notification","EmptyNotification","Routes","_Routes2","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"39da09f2ea1b2e706290\",\"account_password\":\"b16fe2887643dfdc5bf6\",\"api_toke\":\"c689c9db47881bfc50f0\",\"authorized_application\":\"1318b6647cb09c0042e8\",\"cashier_password\":\"57dfdbecfffe2520895e\",\"contract\":\"9c15b69ddc991b0ca7ab\",\"financial_assessment\":\"f08612d6df5331c100df\",\"limits\":\"27862110448f1f8a310f\",\"login_history\":\"e2a28c3d0c809190b9a7\",\"personal_details\":\"fcd19a49f9b3ee92fe38\",\"portfolio\":\"46ea1e5c5eddcfed9a96\",\"self_exclusion\":\"e0cd448eeebac464e985\",\"settings\":\"72a17141a334dc9a601a\",\"statement\":\"30049db61c458b970398\",\"vendors~smart_chart\":\"f65462015d6e20619806\",\"smart_chart\":\"9bd0d8fbfc8fc515eeca\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([261,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date_time';\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_calendar_today.jsx';\nexport * from './icon_calendar.jsx';\nexport * from './icon_chevron_double_left.jsx';\nexport * from './icon_chevron_double_right.jsx';\nexport * from './icon_chevron_left.jsx';\nexport * from './icon_chevron_right.jsx';\nexport * from './icon_clear.jsx';\nexport * from './icon_clock.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\nexport * from './icon_minimize.jsx';\nexport * from './icon_minus.jsx';\nexport * from './icon_plus.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            <span className={classNameSpan || undefined}>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={classNames(className, 'symbols', currency.toLowerCase())} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                        symbol.times.close;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { IconMinus }             from 'Assets/Common/icon_minus.jsx'; // implicit import here { IconMinus, IconPlus } from 'Assets/Common' breaks compilation\nimport { IconPlus }              from 'Assets/Common/icon_plus.jsx';\nimport Button                    from './button.jsx';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    classNameInput,\n    classNamePrefix,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_read_only = false,\n    is_signed = false,\n    is_unit_at_right = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    unit,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (unit) {\n            e.target.value = e.target.value.replace(unit, '').trim();\n        }\n\n        if (e.target.value === value && type !== 'checkbox') {\n            return;\n        }\n\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n            const signed_regex = is_signed ? '[+\\-\\.0-9]$' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const incrementValue = () => {\n        if  (max_is_disabled) return;\n\n        const increment_value = (+value) + 1;\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n\n        const decrement_value = (+value) - 1;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    let display_value = value;\n\n    if (unit) {\n        display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n    }\n\n    const input =\n        <input\n            checked={checked ? 'checked' : ''}\n            className={classNames({ error: has_error }, classNameInput)}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-value={data_value}\n            data-tip={data_tip}\n            id={id}\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            onChange={changeValue}\n            onClick={onClick}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={display_value || ''}\n            autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n        />;\n\n    const input_increment =\n        <div className='input-wrapper'>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--increment'}\n                is_disabled={max_is_disabled}\n                onClick={incrementValue}\n                tabIndex='-1'\n            >\n                <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n            </Button>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--decrement'}\n                is_disabled={min_is_disabled}\n                onClick={decrementValue}\n                tabIndex='-1'\n            >\n                <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n            </Button>\n            { input }\n        </div>;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip className={classNames('', { 'with-label': label })} alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <span className={classNames(classNamePrefix, 'symbols', prefix.toLowerCase())} />\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                {is_incrementable  &&  type === 'number' ? input_increment : input}\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked                 : PropTypes.number,\n    className               : PropTypes.string,\n    classNameInput          : PropTypes.string,\n    classNamePrefix         : PropTypes.string,\n    error_messages          : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits       : PropTypes.number,\n    helper                  : PropTypes.string,\n    id                      : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    alignment,\n    children,\n    className,\n    classNameIcon,\n    icon, // only question or info accepted\n    message,\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info' || icon === 'dot') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className={classNames(className, 'tooltip')} data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={classNames(classNameIcon, icon_class)} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const loading_class = classNames('loading', className);\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.string,\n    updateSelected  : PropTypes.func,\n};\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","export * from './icon_trade_types.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`${wrapperClassName || 'fullscreen-dialog__contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","export default from './range_slider.jsx';\n","import { localize } from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export * from './icon_maximize.jsx';\nexport * from './icon_positions.jsx';\nexport * from './icon_settings.jsx';\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","import ContractType from '../Helpers/contract_type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal_checked',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3.613 8.5l3.26 3.668a.5.5 0 1 1-.747.664l-4-4.5a.5.5 0 0 1 0-.664l4-4.5a.5.5 0 0 1 .748.664L3.614 7.5H13.5a.5.5 0 1 1 0 1H3.613z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconClock = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <g fill='none' fillRule='nonzero' stroke='#5C5C5C'>\n            <circle cx='8' cy='8' r='7.5' />\n            <path strokeLinecap='round' strokeLinejoin='round' d='M8 3.5v5h3.5' />\n        </g>\n    </svg>\n);\n\nIconClock.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClock };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport UILoader          from 'App/Components/Elements/ui_loader.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary btn-purchase'\n                has_effect\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n            >\n                <React.Fragment>\n                    <div className='btn-purchase__effect-main' />\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__content'>\n                        <div className='btn-purchase__trade-type'>\n                            <IconTradeType type={type.toLowerCase()} />\n                            <span className='btn-purchase__trade-type-text'>{localize('[_1]', trade_types[type])}</span>\n                        </div>\n                    </div>\n                    <div className='btn-purchase__info'>\n                        <div className='btn-purchase__return'>{is_disabled ? '---,-' : info.returns}</div>\n                        <div className='btn-purchase__profit'>\n                            {is_disabled ? '--,--' : <Money amount={info.profit} currency={currency} className='btn-purchase__currency' />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Button>\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader classNameBlock='purchase-container__loading' />\n                        }\n                        <ContractInfo\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                        this.props.ui_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules, ui }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n        ui_store       : ui,\n    })\n)(TradeParams);\n","export default from './dropdown.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Button     from './button.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={val.text}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return <div className='button-menu'>{menu}</div>;\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","export default from './trading_date_picker.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <SwitchButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst SwitchButton = ({ style, toggled }) => {\n    const toggle_style = style || 'switch-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nSwitchButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default SwitchButton;\n","export * from './icon_logout.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            <IconPortfolio className='portfolio-empty__icon' />\n            <span className='portfolio-empty__text'>{localize('No running contract')}</span>\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 207,\n\t\"./ja.js\": 207\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 469;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance, true);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base_store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid  = LocalStore.get('active_loginid');\n        this.accounts = LocalStore.getObject(storage_key);\n        this.switched = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }                                                                                                                                                 from './Helpers/chart_barriers';\nimport { createChartMarkers }                                                                                                                                                 from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const is_number      = typeof value === 'number';\n    // need to explicitly convert date string to a JS Date object then pass that into Moment\n    // to get rid of the warning: Deprecation warning: moment construction falls back to js Date\n    const formatted_date = moment(new Date(value)).format('YYYY-MM-DD');\n    return is_number ? epochToMoment(value) : moment.utc(formatted_date);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nconst store_name = 'smart_chart_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties, store_name });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format_response';\nimport BaseStore                        from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_allow_equal             = false;\n    @observable is_equal_checked           = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            store_name,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => [\n                this.symbol,\n                this.contract_type,\n                this.duration_unit,\n                this.expiry_type,\n                this.duration_units_list,\n                this.contract_types_list,\n            ],\n            () => {\n                this.changeAllowEquals();\n            },\n            { delay: 500 }\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, checked } = e.target;\n        let { value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (value === 'is_equal') {\n            if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type)) {\n                if (checked) {\n                    this.is_equal_checked = 1;\n                    value = 'rise_fall_equal';\n                } else {\n                    this.is_equal_checked = 0;\n                    value = 'rise_fall';\n                }\n            }\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        e.preventDefault();\n        WS.forgetAll('proposal').then(this.requestProposal());\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        WS.forgetAll('proposal');\n\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    changeAllowEquals() {\n        const hasCallPutEqual = (contract_type_list) => {\n            if (!contract_type_list) return false;\n\n            return getPropertyValue(contract_type_list, 'Up/Down')\n                .some(contract => contract.value === 'rise_fall_equal');\n        };\n        const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n            if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n            const contract_list = Object.keys(contract_type_list || {})\n                .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n            \n            const contract_duration_list = contract_list\n                .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n            // Check whether rise fall equal is exists and has the current store duration unit\n            return hasCallPutEqual(contract_type_list) ? contract_duration_list\n                .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n                .some(duration => duration.value === duration_unit) : false;\n        };\n        const check_callput_equal_duration = hasDurationForCallPutEqual(this.contract_types_list,\n            this.duration_unit, this.contract_start_type);\n\n        if (!(/^(rise_fall|rise_fall_equal)$/.test(this.contract_type))) {\n            this.is_allow_equal = false;\n            this.is_equal_checked = 0;\n        }\n\n        if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type) && (check_callput_equal_duration || this.expiry_type === 'endtime') && hasCallPutEqual(this.contract_types_list)) {\n            this.is_allow_equal = true;\n        } else {\n            this.is_allow_equal = false;\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start_date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract_type';\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n\n    const obj_market_close_times = { market_close_times: await ContractType.getTradingTimes(expiry_date, symbol) };\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_close_times,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('theme--dark'));\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PositionsDrawer             from './Components/Elements/PositionsDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <React.Fragment>\n                <div className='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PositionsDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer className='footer'>\n                    <Footer />\n                </footer>\n            </React.Fragment>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './positions_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconMinimize }               from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions_drawer_card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_positions_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PositionsDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('positions-drawer', { 'positions-drawer--open': is_positions_drawer_on })}>\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconMinimize />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        toggleDrawer          : ui.togglePositionsDrawer,\n    })\n)(PositionsDrawer);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className, classNamePath }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className={classNames(classNamePath, 'arrow-path')} d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='rgba(0, 0, 0, 0.8)' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconArrow };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path fill='#000' fillOpacity='.8' fillRule='nonzero' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinimize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#000' fillOpacity='0.8' fillRule='nonzero' d='M0 7h16v2H0z' />\n    </svg>\n);\n\nIconMinimize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMinimize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='14' viewBox='0 0 16 14'>\n        <g fill='none' fillRule='evenodd'>\n            <path fill='#000' fillOpacity='0.16' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2z' />\n            <path fill='#FFF' fillRule='nonzero' d='M1 8.128l2.804 1.557A2.5 2.5 0 0 0 5.018 10h5.964a2.5 2.5 0 0 0 1.214-.315L15 8.128V12.5a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5V8.128zm0-1.144V3.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v3.484L11.71 8.81a1.5 1.5 0 0 1-.728.189H5.018a1.5 1.5 0 0 1-.728-.189L1 6.984zM6.5 8h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0 0 1z' />\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PositionsDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink\n        className='positions-drawer-card'\n        to={getContractPath(id)}\n    >\n        <React.Fragment>\n            <div className='positions-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`positions-drawer-card__indicative positions-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='positions-drawer-card__symbol'>{underlying}</span>\n            <span className='positions-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPositionsDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path fill='#2A3052' d='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path fill='#2A3052' d='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path fill='#2A3052' d='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path fill='#2A3052' d='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\nimport TradeTypeInfoDialog   from '../TradeTypeInfo/trade_type_info_dialog.jsx';\nimport TradeTypeInfoItem     from '../TradeTypeInfo/trade_type_info_item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open     : false,\n            is_info_dialog_open: false,\n            item               : {},\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(navigationList[nextIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[0]);\n        }\n    };\n\n    handlePrevClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(navigationList[prevIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({ is_info_dialog_open: false, is_dialog_open: false });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    };\n\n    getNavigationList = () => {\n        const navigationList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && navigationList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return navigationList;\n    };\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.onWidgetClick}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                        handleInfoClick={this.handleInfoClick}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={this.props.is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={this.state.is_info_dialog_open}\n                    title={this.state.item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_mobile={this.props.is_mobile}\n                        item={this.state.item}\n                        navigationList={this.getNavigationList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    list           : MobxPropTypes.objectOrObservableObject,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTooltip }                from 'Assets/Common/icon_tooltip.jsx';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='trade-type-info-icon' onClick={() => handleInfoClick(contract)}>\n                <IconTooltip />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconTooltip = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM8 6a.75.75 0 1 0 0-1.5A.75.75 0 0 0 8 6zm0 1a.5.5 0 0 0-.5.5v4a.5.5 0 1 0 1 0v-4A.5.5 0 0 0 8 7z' />\n    </svg>\n);\n\nIconTooltip.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTooltip };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames='trade-type-info-popup'\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-popup'>\n                <div className='trade-type-info'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { Scrollbars }       from 'tt-react-custom-scrollbars';\nimport { IconBack }         from 'Assets/Common/icon_back.jsx';\nimport { IconChevronLeft }  from 'Assets/Common/icon_chevron_left.jsx';\nimport { IconChevronRight } from 'Assets/Common/icon_chevron_right.jsx';\nimport { TradeCategories }  from 'Assets/Trading/Categories/trade_categories.jsx';\nimport Button               from 'App/Components/Form/button.jsx';\nimport { localize }         from '_common/localize';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_mobile,\n    item,\n    navigationList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='info-header'>\n            <span onClick={() => onBackButtonClick()}>\n                <IconBack />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='info-gif'>\n            gif explanation\n        </div>\n        <div className='info-content'>\n            <Scrollbars\n                autoHide\n                style={{ height: '100%' }}\n            >\n                <TradeCategories category={item.value} />\n            </Scrollbars>\n        </div>\n        <div className='info-choose'>\n            <Button text={localize('Choose')} onClick={() => onSubmitButtonClick(item)} />\n        </div>\n        <div className='info-navigation'>\n            <div className='info-navigation__icon' onClick={() => handlePrevClick(navigationList)} >\n                <IconChevronLeft />\n            </div>\n            <div className='info-navigation__list'>\n                {\n                    navigationList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className={`circle-button ${contract.value === item.value ? 'active' : ''}`}\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='info-navigation__icon' onClick={() => handleNextClick(navigationList)} >\n                <IconChevronRight />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    navigationList       : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n\nconst TradeCategories = ({ category }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>\n                            { localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }\n                        </p>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to the barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.') }</p>\n                        <p>{ localize('If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to either the Low barrier or the High barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period') }</p>\n                        <p>{ localize('If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.') }</p>\n                        <p>{ localize('If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).') }</p>\n                        <p>{ localize('If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.') }</p>\n                        <p>{ localize('If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Touches\", you win the payout if the market touches the barrier at any time during the contract period.') }</p>\n                        <p>{ localize('If you select \"Does Not Touch\", you win the payout if the market never touches the barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('Asian options settle by comparing the last tick with the average spot over the period.') }</p>\n                        <p>{ localize('If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.') }</p>\n                        <p>{ localize('If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.') }</p>\n                        <p>{ localize('If the last tick is equal to the average of the ticks, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <p>\n                        not found\n                    </p>\n                );\n                break;\n        }\n    }\n    return (\n        <div>\n            {TradeTypeTemplate}\n        </div>\n    );\n};\n\nTradeCategories.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { TradeCategories };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    })\n                ))}\n                {popconfirm_element}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon_price_move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    proposal_info,\n}) => (\n    <React.Fragment>\n        {(proposal_info.has_error || !proposal_info.id) ?\n            <div\n                className={classNames({\n                    'trade-container__error': proposal_info.has_error,\n                })}\n            >\n                {proposal_info.message && <span className='trade-container__error-info'>{proposal_info.message}</span>}\n            </div>\n            :\n            <div className='trade-container__price'>\n                <div className='trade-container__price-info'>\n                    <div className='trade-container__price-info-basis'>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                    <div><Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} /></div>\n                    <div className='trade-container__price-info-movement'>\n                        {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                    </div>\n                </div>\n                <span>\n                    <Tooltip alignment='left' className='trade-container__price-tooltip' classNameIcon='trade-container__price-tooltip-i' icon='info' message={proposal_info.message} />\n                </span>\n            </div>\n        }\n    </React.Fragment>\n);\n\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-container__error'>\n            <div className='purchase-container__error-close-btn' onClick={onClick}>\n                <IconClose className='purchase-container__error-close-btn-ic' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-container__error-result'>\n        <div>\n            <strong className='purchase-container__error-result-header'>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Buy Price')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Payout')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='purchase-container__error-login-btn secondary orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-container__error-result'>\n        <span className='purchase-container__error-info'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='purchase-container__error-login-btn secondary orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p className='purchase-container__error-login-prompt'>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a className='purchase-container__error-login-link' href='javascript:;'><span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-container__lock'>\n        <div>\n            <IconLock className='purchase-container__lock-icon' />\n        </div>\n        <h4 className='purchase-container__lock-header'>{localize('Purchase Locked')}</h4>\n        <Button\n            className='purchase-container__lock-button flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='purchase-container__lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\n// import StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    // { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input_field.jsx';\nimport AllowEquals               from './allow_equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_allow_equal,\n    is_equal_checked,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames({ 'three-columns': !is_single_currency });\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <div className={amount_container_class}>\n                <Dropdown\n                    is_alignment_left\n                    is_nativepicker={is_nativepicker}\n                    list={basis_list}\n                    name='basis'\n                    value={basis}\n                    onChange={onChange}\n                    className='no-margin'\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        is_alignment_left\n                        is_nativepicker={is_nativepicker}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                }\n                <InputField\n                    classNameInput='trade-container__input'\n                    classNamePrefix='trade-container__currency'\n                    error_messages={validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_autocomplete_disabled\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n            <AllowEquals is_allow_equal={is_allow_equal} onChange={onChange} checked={is_equal_checked} />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_allow_equal    : PropTypes.bool,\n    is_equal_checked  : PropTypes.number,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native_select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown-container--left'    : this.props.is_alignment_left,\n                    'dropdown-container--show'    : this.state.is_list_visible,\n                    'dropdown-container--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', {\n                        'dropdown__display--clicked': this.state.is_list_visible,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                {\n                    !is_single_option && <IconArrow className={classNames('select-arrow', {\n                        'select-arrow--left': this.props.is_alignment_left,\n                    })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : 'dropdown__list--enter',\n                        enterDone: 'dropdown__list--enter--done',\n                        exit     : 'dropdown__list--exit',\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={classNames('list__item', {\n                    'list__item--selected'   : value === item.value,\n                    'list__item--highlighted': highlightedIdx === idx,\n                })}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nItems.propTypes = {\n    handleSelect  : PropTypes.func,\n    highlightedIdx: PropTypes.number,\n    name          : PropTypes.string,\n    value         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from '_common/localize';\nimport Tooltip        from 'App/Components/Elements/tooltip.jsx';\nimport InputField     from 'App/Components/Form/input_field.jsx';\n\nconst AllowEquals = ({\n    is_allow_equal,\n    checked,\n    onChange,\n}) => (\n    !!is_allow_equal &&\n        <div className='allow-equals'>\n            <InputField\n                classNameInput='trade-container__input'\n                id='allow_equals'\n                name='contract_type'\n                onChange={onChange}\n                value='is_equal'\n                type='checkbox'\n                checked={checked}\n            />\n            <label htmlFor='allow_equals'>{localize('Allow equals')}</label>\n            <Tooltip icon='info' message={localize('Win payout if exit spot is also equal to entry spot.')} alignment='left' />\n        </div>\n);\n\nAllowEquals.propTypes = {\n    checked       : PropTypes.number,\n    is_allow_equal: PropTypes.bool,\n    onChange      : PropTypes.func,\n};\n\nexport default AllowEquals;\n","import classNames     from 'classnames';\nimport { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    IconBarrierUp,\n    IconBarrierDown } from 'Assets/Trading/Barriers';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport InputField     from 'App/Components/Form/input_field.jsx';\nimport { localize }   from '_common/localize';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n    \n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <IconBarrierUp className='trade-container__barriers--up' />\n                        <IconBarrierDown className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","export * from './icon_barrier_up.jsx';\nexport * from './icon_barrier_down.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierUp = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M8.5 4.207V12.5a.5.5 0 1 1-1 0V4.207L4.854 6.854a.5.5 0 1 1-.708-.708l3.5-3.5a.5.5 0 0 1 .708 0l3.5 3.5a.5.5 0 1 1-.708.708L8.5 4.207z'\n        />\n    </svg>\n);\n\nIconBarrierUp.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierUp };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierDown = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M7.5 11.793V3.5a.5.5 0 0 1 1 0v8.293l2.646-2.647a.5.5 0 1 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 11.793z'\n        />\n    </svg>\n);\n\nIconBarrierDown.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierDown };\n","export default from './duration_wrapper.jsx';\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport Duration                 from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : new_duration_value,\n        });\n    }\n\n    componentDidMount() {\n        const current_unit = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration = this.props.getDurationFromUnit(this.props.duration_unit);\n\n        if (this.props.duration_unit !== current_unit) {\n            this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: this.props.duration_unit });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${current_unit}`, value: this.props.duration });\n        }\n    }\n\n    componentWillReact() {\n        const simple_is_missing_duration_unit = !this.props.is_advanced_duration && this.props.simple_duration_unit === 'd' && this.props.duration_units_list.length === 4;\n        const current_duration_unit           = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration                = this.props.getDurationFromUnit(this.props.duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_not_type_duration     = !this.props.is_advanced_duration && this.props.expiry_type !== 'duration';\n        const advanced_has_wrong_expiry       = this.props.is_advanced_duration\n            && this.props.expiry_type !== this.props.advanced_expiry_type && this.props.duration_units_list.length > 1;\n\n        // intercept changes to current contracts duration_units_list - if they are missing change duration_unit and value in trade_store and ui_store\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n            return;\n        }\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (advanced_has_wrong_expiry) {\n            this.props.onChange({ target: { name: 'expiry_type', value: this.props.advanced_expiry_type } });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${this.props.duration_unit}`, value: this.props.duration });\n        }\n    }\n\n    render() {\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_d: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_h: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_m: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_s      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_close_times  : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(DurationWrapper);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from '_common/localize';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration_toggle.jsx';\nimport AdvancedDuration               from './advanced_duration.jsx';\nimport SimpleDuration                 from './simple_duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    validation_errors,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        onChangeUiStore({ name: duration_name, value });\n        onChange({ target: { name, value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    let max_value, min_value;\n    if (duration_min_max[contract_expiry_type]) {\n        max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n    }\n\n    const props = {\n        shared_input: {\n            max_value,\n            min_value,\n            onChange: changeDurationValue,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n            error_messages  : validation_errors.duration || [],\n        },\n    };\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    ticks={10}\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_t      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick_steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    const is_error = ((value < min_value) || (value > max_value)) ? 'error' : '';\n\n    return (\n        <div className={classNames('range-slider', className, { 'error': is_error })}>\n            <label htmlFor='range'>\n                <input\n                    id='range'\n                    className='trade-container__input range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '1.6rem' : '1rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('ticks__step', {\n                        'ticks__step--active': (idx + 1) === parseInt(value),\n                        'ticks__step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { IconArrow }       from 'Assets/Common';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <IconArrow className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/button_toggle_menu.jsx';\nimport InputField                     from 'App/Components/Form/input_field.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n}) => {\n    const moment_expiry      = toMoment(expiry_date || server_time);\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || moment_expiry.isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                            // validation_errors={validation_errors.expiry_date} TODO: add validation_errors for expiry date\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    is_nativepicker    : PropTypes.bool,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default AdvancedDuration;\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\n\nconst TradingDatePicker = ({\n    duration_min_max,\n    duration_units_list,\n    validation_errors,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const moment_contract_start_date_time =\n        setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm')));\n\n    const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n\n    }\n    if (expiry_type === 'duration') {\n        min_date_expiry.add(1, 'day');\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={validation_errors.duration || []}\n            has_today_btn={has_today_btn}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={expiry_date}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n    })\n)(TradingDatePicker);\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }             from 'Assets/Common';\nimport InputField           from 'App/Components/Form/input_field.jsx';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from '_common/localize';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        this.setState({\n            holidays,\n            weekends,\n        });\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input'\n                classNameInput='trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <IconClear\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : 'datepicker__picker--enter',\n                        enterDone: 'datepicker__picker--enter-done',\n                        exit     : 'datepicker__picker--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport CalendarBody   from './calendar_body.jsx';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, footer, has_today_btn, start_date, holidays, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    weekends={weekends}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    has_today_btn={has_today_btn}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    holidays     : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { padLeft }      from '_common/string_util';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr } from 'Constants/date_time';\nimport {\n    addDays,\n    addMonths,\n    subDays,\n    subMonths,\n    toMoment }          from 'Utils/Date';\nimport CommonPropTypes  from './types';\nimport Tooltip          from '../../tooltip.jsx';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    holidays,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date = toMoment(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events      = !!events.length;\n        const is_closes_early = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message         = events.map(event => event.descrip)[0] || '';\n\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date)\n            || moment_date.isAfter(addDays(moment_start_date, 1)))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'  : is_active && !is_disabled,\n                    'calendar__cell--today'   : is_today,\n                    'calendar__cell--disabled': is_disabled,\n                    'calendar__cell--other'   : is_other_month,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day') }\n                data-date={date}\n            >\n                { ((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Tooltip\n                        alignment='top'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format: PropTypes.string,\n    holidays   : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date_time';\nimport { toMoment }      from 'Utils/Date';\nimport CommonPropTypes   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon calendar__icon--today'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport { month_headers }    from 'Constants/date_time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar_button.jsx';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date         : PropTypes.string,\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","export default from './trading_time_picker.jsx';\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    isTimeValid,\n    minDate,\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    onChange,\n    server_time,\n    start_date,\n    start_time,\n}) => {\n    const moment_expiry                   = toMoment(expiry_date || server_time);\n    const moment_contract_start_date_time =\n        setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm')));\n    const expiry_date_time                = setTime(moment_expiry.clone(), moment_contract_start_date_time.clone().add(5, 'minute').format('HH:mm'));\n    const expiry_date_market_close        = setTime(expiry_date_time.clone(), market_close_times.slice(-1)[0]);\n    const is_expired_next_day             = expiry_date_time.diff(moment_contract_start_date_time, 'day') === 1;\n    const min_date_expiry                 = moment_contract_start_date_time.clone().startOf('day');\n    const expiry_time_sessions            = [{\n        open : is_expired_next_day ? expiry_date_time.clone().startOf('day') : expiry_date_time.clone(),\n        close: is_expired_next_day ? minDate(expiry_date_time.clone().subtract(10, 'minute'), expiry_date_market_close) : expiry_date_market_close.clone(),\n    }];\n\n    return (\n        <TimePicker\n            end_time={expiry_time_sessions[0].close}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={expiry_time_sessions[0].open}\n            value={expiry_time || min_date_expiry.format('HH:mm')}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n    start_date        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_time        : modules.trade.expiry_time,\n        market_close_times : modules.trade.market_close_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n    })\n)(TradingTimePicker);\n","export default from './time_picker.jsx';\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../input_field.jsx';\nimport { IconClock } from '../../../../Assets/Common/icon_clock.jsx';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            value,\n            name,\n            is_nativepicker,\n            placeholder,\n            start_time,\n            end_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { 'padding': this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <IconClock className='time-picker-icon' />\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker-dialog-enter',\n                                        enterDone: 'time-picker-dialog-enter-done',\n                                        exit     : 'time-picker-dialog-exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        start_time={start_time}\n                                        end_time={end_time}\n                                        value={value}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    value: PropTypes.string,\n};\n\nexport default observer(TimePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    value,\n    start_time,\n    end_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time ? toMoment(start_time) : toMoment();\n    const end_time_moment       = end_time ? toMoment(end_time) : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = value.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}-dialog`, `${className}`)}>\n            <div className={`${preClass}-selector`}>\n                <div className={`${preClass}-hours`}>\n                    <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                    <div className='list-container'>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h).minute(minute);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment);\n                            return (\n                                <div\n                                    className={classNames('list-item',\n                                        { 'selected': (hour === h) },\n                                        { 'disabled': !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, value, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}-minutes`}>\n                    <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                    <div className='list-container'>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames('list-item',\n                                        { 'selected': (minute === mm) },\n                                        { 'disabled': !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, value, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange  : PropTypes.func,\n    preClass  : PropTypes.string,\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/button_toggle_menu.jsx';\nimport InputField                     from 'App/Components/Form/input_field.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit: PropTypes.func,\n    duration_t        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n};\n\nexport default SimpleDuration;\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number_selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={`number-selector__selection${selected_number === i ? ' selected' : ''}`}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-container'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\nimport Localize     from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({\n    children, is_contract_mode,\n    is_positions_drawer_on,\n}) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-positions-drawer': is_positions_drawer_on,\n            'app-contents--contract-mode'        : is_contract_mode,\n        })}\n    >\n        {/* Calculate height of user screen and offset height of header and footer */}\n        <Scrollbars\n            autoHide\n            style={{ height: 'calc(100vh - 83px)' }}\n        >\n            {children}\n        </Scrollbars>\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_positions_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ modules, ui }) => ({\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_language_dialog_visible,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_settings_dialog_on,\n    network_status,\n    togglePositionsDrawer,\n    toggleSettingsDialog,\n}) => (\n    <React.Fragment>\n        <div className='footer-links footer-links-left'>\n            {\n                is_logged_in &&\n                <TogglePositions\n                    is_positions_drawer_on={is_positions_drawer_on}\n                    togglePositionsDrawer={togglePositionsDrawer}\n                />\n            }\n        </div>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_language_visible={is_language_dialog_visible}\n                is_settings_visible={is_settings_dialog_on}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePositionsDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        network_status            : common.network_status,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_positions.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport classNames        from 'classnames';\n\nconst IconPositions = ({ className }) => {\n    const IconType = (\n        <g fill='none' fillRule='evenodd'>\n            <path className='color1-fill color3-fill' fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2zM1 8.128V12.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V8.128l-2.804 1.557a2.5 2.5 0 0 1-1.214.315H5.018a2.5 2.5 0 0 1-1.214-.315L1 8.128zm0-1.144L4.29 8.81A1.5 1.5 0 0 0 5.018 9h5.964a1.5 1.5 0 0 0 .728-.189L15 6.984V3.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v3.484zM6.5 8a.5.5 0 0 1 0-1h3a.5.5 0 0 1 0 1h-3z' />\n        </g>\n    );\n\n    return (\n        <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n            {IconType}\n        </svg>\n    );\n};\n\nIconPositions.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPositions };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPositions } from 'Assets/Footer';\n\nconst TogglePositions = ({\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames('ic-positions', {\n        'active': is_positions_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n        >\n            <IconPositions />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { withRouter }  from 'react-router';\nimport { formatMoney } from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    DepositButton,\n    InstallPWAButton,\n    LoginButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    UpgradeButton }    from 'App/Components/Layout/Header';\nimport header_links    from 'App/Constants/header_links';\nimport { connect }     from 'Stores/connect';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    is_virtual,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    is_virtual={is_virtual}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                                { !!(can_upgrade_to && is_virtual) &&\n                                <UpgradeButton />\n                                }\n                                { !(is_virtual) &&\n                                <DepositButton />\n                                }\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    can_upgrade_to           : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool,\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    is_virtual               : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func,\n    pwa_prompt_event         : PropTypes.object, // TODO: add click handler\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        can_upgrade_to           : client.can_upgrade_to,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        is_virtual               : client.is_virtual,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './deposit_button.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './upgrade_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    is_virtual,\n    onClickUpgrade,\n    toggleDialog,\n}) => (\n    <div className='acc-balance'>\n        <div className='acc-switcher-container'>\n            <div\n                className={classNames('acc-info', {\n                    'acc-info--show'      : is_dialog_on,\n                    'acc-info--is-virtual': is_virtual,\n                })}\n                onClick={toggleDialog}\n            >\n                <p\n                    className='acc-balance-id'\n                    title={loginid}\n                >\n                    {loginid}\n                </p>\n                {\n                    typeof balance !== 'undefined' &&\n                    <p className='acc-balance-amount'>\n                        <span\n                            className={classNames('symbols', (currency || '').toLowerCase())}\n                        />\n                        {balance}\n                    </p>\n                }\n                <IconArrow className='select-arrow' />\n            </div>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={200}\n                classNames={{\n                    enter    : 'acc-switcher-wrapper--enter',\n                    enterDone: 'acc-switcher-wrapper--enter-done',\n                    exit     : 'acc-switcher-wrapper--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='acc-switcher-wrapper'>\n                    <AccountSwitcher\n                        is_visible={is_dialog_on}\n                        toggle={toggleDialog}\n                        is_upgrade_enabled={is_upgrade_enabled}\n                        onClickUpgrade={onClickUpgrade}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_virtual        : PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services/index';\nimport { connect }       from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggle();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        requestLogout();\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n        // TODO: Once we allow other real accounts (apart from CR), assign correct title and group accounts into list with correct account title/types\n        // e.g - Real, Financial, Gaming, Investment\n\n        const main_account_title = localize('Real account');\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef}>\n                {\n                    // Make sure this block is not rendered if there are no real accounts\n                    !!(this.props.account_list.length > 0 && !(this.props.account_list[0].is_virtual)) &&\n                    <div className='acc-switcher__list__group'>\n                        <span className='acc-switcher__list__title'>\n                            {main_account_title}\n                        </span>\n                        {\n                            this.props.account_list.filter((accounts) => !accounts.is_virtual).map((account) => (\n                                <React.Fragment key={account.loginid}>\n                                    <div\n                                        className={classNames('acc-switcher-account', {\n                                            'acc-switcher-account--selected': (account.loginid === this.props.account_loginid),\n                                        })}\n                                        onClick={this.doSwitch.bind(this, account.loginid)}\n                                    >\n                                        <span\n                                            className={classNames('acc-switcher__id', {\n                                                'acc-switcher__id__icon': account.icon,\n                                            },\n                                            `acc-switcher__id__icon--${account.icon}`)}\n                                        >\n                                            {account.loginid}\n                                        </span>\n                                        <span className='acc-switcher__radio' />\n                                    </div>\n                                </React.Fragment>\n                            ))}\n\n                        {   // TODO: Add link to account opening page for upgrade or multi account page for new account.\n                            // Update text below for handling types of account to create :- e.g - Investment\n                            !!(this.props.is_upgrade_enabled && this.props.upgrade_info.can_open_multi) &&\n                            <div className='acc-switcher__new-account'>\n                                <span>{localize('Add new account')}</span>\n                            </div>\n                        }\n                    </div>\n                }\n                <div className='acc-switcher__list__virtual'>\n                    <span className='acc-switcher__list__title'>\n                        {localize('Virtual account')}\n                    </span>\n                    <div\n                        className={classNames('acc-switcher-account', {\n                            'acc-switcher-account--selected': (this.props.virtual_loginid === this.props.account_loginid),\n                        })}\n                        onClick={this.doSwitch.bind(this, this.props.virtual_loginid)}\n                    >\n                        <span className={classNames('acc-switcher__id', 'virtual')}>\n                            {this.props.virtual_loginid}\n                        </span>\n                        <span className='acc-switcher__radio' />\n                    </div>\n                </div>\n                { !!(this.props.is_upgrade_enabled && this.props.is_virtual) &&\n                <div className='acc-switcher__new-account'>\n                    <span>{localize('Upgrade to Real Account')}</span>\n                </div>\n                }\n                <div className='acc-logout' onClick={this.handleLogout}>\n                    <span className='acc-logout__text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list          : PropTypes.array,\n    account_loginid       : PropTypes.string,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_upgrade_enabled    : PropTypes.bool,\n    is_virtual            : PropTypes.bool,\n    is_visible            : PropTypes.bool,\n    onClickUpgrade        : PropTypes.func,\n    toggle                : PropTypes.func,\n    togglePositionsDrawer : PropTypes.func,\n    upgrade_info          : PropTypes.object,\n    virtual_loginid       : PropTypes.string,\n};\n\nconst account_switcher = connect(\n    ({ client, ui }) => ({\n        account_list          : client.account_list,\n        account_loginid       : client.loginid,\n        is_logged_in          : client.is_logged_in,\n        is_virtual            : client.is_virtual,\n        switchAccount         : client.switchAccount,\n        upgrade_info          : client.upgrade_info,\n        virtual_loginid       : client.virtual_account_loginid,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst DepositButton = () => (\n    <Button\n        className='primary orange'\n        has_effect\n        text={localize('Deposit')}\n        // TODO: Redirect to Deposit page in Cashier\n        // onClick={redirectToCashierDeposit}\n    />\n);\n\nexport { DepositButton };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <div className='menu-links'>\n            {\n                items.map((item, idx) => (\n                    <BinaryLink key={idx} to={item.link_to}>\n                        <span title={item.text}>{item.icon}{item.text}</span>\n                    </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes_config';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <SwitchButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_positions_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePositionsDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_positions_drawer_on) {\n                        togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePositionsDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { EmptyNotification } from './empty_notification.jsx';\nimport { DrawerItem }        from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <EmptyNotification />\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    list: PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport { IconBell } from 'Assets/Header/NavBar';\n\nconst EmptyNotification = () => (\n    <div className='no-notifications-container'>\n        <div className='notification-message'>\n            <div className='bell-icon'>\n                <IconBell />\n            </div>\n            <div>\n                <h4>{localize('No Notifications')}</h4>\n                <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n            </div>\n        </div>\n    </div>\n);\n\nexport { EmptyNotification };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        // TODO: Combine portfolio and statement into reports page\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Reports'),\n        link_to: routes.statement,\n    },\n];\n\nexport default header_links;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}