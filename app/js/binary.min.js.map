{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/subscription_manager.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker_input.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_panel.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_logout","forEach","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_close","_icon_exclamation","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","Button","_ref$className","className","has_effect","id","is_disabled","onClick","text","wrapperClassName","classes","button","_react2","default","disabled","wrapper","string","bool","func","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_date_time","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_localize","_Services","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","_time$split","split","_time$split2","_slicedToArray","moment","utc","isNaN","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","symbol","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getExpiryDate","expiry_date","moment_start","moment_expiry","isBefore","isAfter","clone","add","getExpiryTime","start_time","expiry_time","_moment2","end_moment","end_time","isSameOrBefore","is_end_of_day","is_end_of_session","getSessions","option","getStartTime","getContractCategories","contract_types_list","Fieldset","header","icon","onMouseEnter","onMouseLeave","tooltip","field_left_class","_classnames2","_tooltip2","alignment","message","array","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","loading_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","Tooltip","icon_name","icon_class","data-tooltip","data-tooltip-pos","node","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","duration","unit","max","duration_maps","u","sort","b","from_unit","to_unit","duration_string","match","getExpiryType","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","floor","day","CalendarPanelTypes","calendar_date","calendar_view","date_format","isPeriodDisabled","max_date","min_date","selected_date","_fill_template","Localize","str","replacers","localized","fillTemplate","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","some","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","payout","theme","is_dark_mode_on","portfolio_drawer","is_portfolio_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","ASIANU","ASIAND","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","_icon_trade_types","InputField","error_messages","fractional_digits","helper","is_float","_ref$is_signed","is_signed","label","max_length","onChange","placeholder","prefix","required","has_error","has_valid_length","input","data-for","data-tip","maxLength","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","htmlFor","MobxPropTypes","arrayOrObservableArray","_icon_maximize","_icon_quick_portfolio","_icon_settings","_ui","_connect","_Date","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_ref2","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","parseInt","current_session","open","close","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","non_proposal_query_string_variable","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconClose","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","_PopConfirm","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","_button2","stake","is_purchase_error","echo_req","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","contract_title","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","renderCards","_ref3","CalendarButton","is_hidden","TimePickerDropdown","selectOption","_this$props$value$spl","_this$props$value$spl2","prev_hour","prev_minute","is_type_selected","setState","last_updated_type","stopPropagation","resetValues","state","is_hour_selected","is_minute_selected","prevProps","prevState","_state","toggle","_props","preClass","start_moment_clone","_value$split","_value$split2","is_clearable","saveHourRef","is_enabled","saveMinuteRef","mm","TimePicker","toggleDropDown","is_open","handleChange","arg","saveRef","nodeName","wrapper_ref","target_element","handleClickOutside","contains","_props2","is_align_right","padding","prefix_class","readOnly","value_split","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_money2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","_toggle_button2","toggled","ToggleButton","toggle_style","_icon_logout","InkBar","inkbar_style","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","_Types","ContractTypeCell","IconTradeType","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","subscriptions","forget_requested","subscription_id","dispatch","sub_id","stream_id","sub_info","subscribers","fnc","forgetStream","fncCallback","forgets_list","hasCallbackFunction","hasValues","request_obj","values_obj","every","isDeepEqual","callback","msg_types","types_to_forget","sub_ids","forget_all","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","ServerTime","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","valueOf","landing_company_name","updateAccountList","account_list","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","upgrade_info","getBasicUpgradeInfo","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","acc","computed","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCryptocurrency","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","currentLanguage","getAllowedLanguages","exclude_languages","getAll","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","toMoment","epoch","convertToUnix","moment_obj","setTime","formatDate","daysFromTodayTo","diff","asDays","seconds","formatted_str","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","underlying","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor8","_descriptor9","wsSubscribe","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","subtract","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","time_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor31","changeDurationValidationRules","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","getProposalInfo","setChartBarrier","query_params","duration_options","_ref5","_callee4","_context4","refresh","prepareTradeStore","abrupt","_x3","runInAction","_callee6","_context6","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","set_query_string","getQueryParams","_x","_x2","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","_proposal_response$ec","Duration","StartDate","getMethodsList","extendOrReplace","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_date","obj_expiry_time","obj_duration_min_max","ask_price","returns","toFixed","display_value","new_req","createProposalRequestForContract","current_req","type_of_contract","obj_expiry","isSame","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_theme_wrapper2","_header2","_error_boundary2","_app_contents2","_routes2","_PortfolioDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","PortfolioDrawer","toggleDrawer","body_content","_empty_portfolio_message2","_portfolio_drawer_card2","portfolio-drawer--open","_simplebarReact2","togglePortfolioDrawer","IconArrow","IconBack","transform","IconBell","stroke","IconCashier","rx","IconHamburger","strokeLinecap","IconTrade","PortfolioDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","SmartChart","form_wrapper_class","Suspense","fallback","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","setWrapperRef","is_dialog_open","getDisplayText","_this$props","findInArray","getStyles","container_classes","tabIndex","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","ContractTypeItem","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","ContractInfo","icon_type","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_DropDown2","_input_field2","observableObject","Dropdown","onKeyPressed","getItemFromValue","getValueFromIndex","curr_index","is_list_visible","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","onKeyDown","isArrayLike","Items","highlightedIdx","items","expiry_list","now_date","min_date_duration","max_date_duration","min_date_expiry","min_day","max_day","start_date_time","moment_now","new_min_day","new_max_day","moment_today","startOf","is_same_day","date_time","_start_time$split","_start_time$split2","moment_start_date_time","duration_unit_text","datepicker_footer","has_end_time","expiry","pop","endtime_container_class","has-time","_DatePicker2","is_read_only","has_today_btn","_time_picker2","DatePicker","is_datepicker_visible","is_close_btn_visible","onClickOutside","mainNode","updateDatePickerValue","onSelectCalendar","isValid","onChangeInput","clearDatePickerInput","calendar","resetCalendar","new_date","current_date","_this$props2","nativeEvent","defaultValue","_date_picker_input2","class_name","_Calendar2","onSelect","defaultProps","Calendar","DatePickerInput","_initialiseProps","_calendar_header2","navigators","calendarViews","_calendar_panel2","panelSelectors","_calendar_footer2","setToday","nextMonth","navigateTo","previousMonth","nextYear","previousYear","nextDecade","previousDecade","nextCentury","previousCentury","updateSelectedDate","month","updateSelected","year","decade","is_add","_props3","moment_date","dataset","is_before","is_after","formatted_date","_props4","default_date","_props5","now","_props6","start_of_period","endOf","CalendarFooter","_calendar_button2","role","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","CalendarPanel","_panels","calendar_panel","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","week_headers","days","dates","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","first_day","last_day","moment_min_date","moment_max_date","moment_selected","padLeft","moment_start_date","is_active","is_today","today","data-date","getDays","selected_month","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","data-month","selected_year","current_year","years","data-year","decades","min_year","max_year","range","_range$split","_range$split2","start_year","end_year","data-decade","last_digit_numbers","current_date_config","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","_icon_error2","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","last","SellInfo","_localize3","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","_close_button2","shape","CloseButton","ToastMessage","toast","_ToastMessage2","arrayOf","AppContents","app-contents--show-portfolio-drawer","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","NetworkStatus","_server_time2","TogglePortfolio","ToggleFullScreen","ToggleSettings","is_settings_visible","is_language_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_portfolio","_toggle_settings","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconQuickPortfolio","IconSettings","toggle_portfolio_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","LoginButton","ToggleNotificationsDrawer","account_title","_account_info","_install_pwa_button","_login_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","_localize2","AccountSwitcher","_account_switcher","_upgrade_button","_Drawer","accounts_toggle_btn","doSwitch","UpgradeButton","IconLogout","account_switcher","prompt","userChoice","choice_result","outcome","_InkBar2","_inkbar","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","offsetWidth","active_el","other_props","Switch","_route_with_sub_routes2","LoginPrompt","onSignup","1_2","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","Notifications","_notifications","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","_Routes2","virtual_account_loginid","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"325ba522de5dbb775d01\",\"account_password\":\"449937d73eed8903ea65\",\"api_toke\":\"2ff326d47213a01fcf17\",\"authorized_application\":\"3588d5e2ccf2984a5cef\",\"cashier_password\":\"828328e67369556c7ca8\",\"contract\":\"f0fd9c9f8d0cbac6ae76\",\"financial_assessment\":\"f385ea58f7a356d7054d\",\"limits\":\"ae2345903bf414051d41\",\"login_history\":\"6b92e844ba1640e37304\",\"personal_details\":\"c8fa7ae3edc76910a548\",\"portfolio\":\"3f5284ba6896d3d205e9\",\"self_exclusion\":\"e4af408062e6caca9c88\",\"settings\":\"e509112b31feba7b23ef\",\"statement\":\"fd3728e164053ad7b949\",\"vendors~smart_chart\":\"fbf2812a1656b12fd982\",\"smart_chart\":\"816b05381089ce74634b\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([279,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties));\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n\n}\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","export * from './date_time';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import moment                    from 'moment';\nimport { localize }              from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }           from '_common/utility';\nimport { WS }                    from 'Services';\nimport { buildBarriersConfig }   from './barrier';\nimport { buildDurationConfig }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }         from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }          from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = time.split(':');\n        return moment.utc(isNaN(date) ? date : +date * 1000).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: getValidTime(sessions, buildMoment(start_date, start_time)),\n    });\n\n    const getExpiryDate = (expiry_date, start_date) => {\n        const moment_start  = moment.utc(start_date ? start_date * 1000 : undefined);\n        const moment_expiry = moment.utc(expiry_date || undefined);\n        // forward starting contracts should only show today and tomorrow as expiry date\n        const is_invalid = moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n        return {\n            expiry_date: (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD'),\n        };\n    };\n\n    // has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is after start time\n    const getExpiryTime = (sessions, start_date, start_time, expiry_date, expiry_time) => {\n        const start_moment = start_date ? buildMoment(start_date, start_time) : moment().utc();\n        const end_moment   = buildMoment(expiry_date, expiry_time);\n\n        let end_time = expiry_time;\n        if (sessions && !isSessionAvailable(sessions, end_moment)) {\n            end_time = getValidTime(sessions, end_moment, start_moment);\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n            const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n            end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n        }\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getExpiryDate,\n        getExpiryTime,\n        getSessions,\n        getStartTime,\n        getStartType,\n\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const field_left_class = classNames('field-info left', { icon }, icon);\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className='fieldset-header'>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && moment.utc(expiry_date).isAfter(moment(server_time).utc(), 'day');\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n","export default from './dropdown.jsx';\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport { isEmptyObject }   from '_common/utility';\nimport SubscriptionManager from './subscription_manager';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","export * from './icon_trade_types.jsx';\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    className,\n    error_messages,\n    fractional_digits,\n    helper,\n    is_disabled,\n    is_float,\n    is_signed = false,\n    label,\n    max_length,\n    name,\n    onChange,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const input =\n        <input\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-tip\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onChange={changeValue}\n            placeholder={placeholder || undefined}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value}\n        />;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                { input }\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.bool,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import moment from 'moment';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: moment.unix(option.open).utc(), close: moment.unix(option.close).utc() };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : moment.unix(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = moment.utc(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = moment.utc(),\n    start_moment           = moment.utc(),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, undefined, should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(should_only_check_hour ? session.open.clone().minute(0) : session.open, session.close, null, '[]')))\n);\n","// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'last_digit',\n    'start_date',\n    'symbol',\n];\n\nexport const non_proposal_query_string_variable = [\n    'contract_start_type',\n    'expiry_type',\n];\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from '_common/localize';\nimport { isEmptyObject }          from '_common/utility';\nimport { PopConfirm }             from 'App/Components/Elements/PopConfirm';\nimport UILoader                   from 'App/Components/Elements/ui_loader.jsx';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Fieldset                   from 'App/Components/Form/fieldset.jsx';\nimport { connect }                from 'Stores/connect';\nimport ContractInfo               from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox                 from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock               from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    barrier_count,\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green'\n                has_effect\n                text={localize('Purchase')}\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            />\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            barrier_count={barrier_count}\n                            contract_title={trade_types[type]}\n                            contract_type={type}\n                            currency={currency}\n                            proposal_info={info}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    barrier_count             : PropTypes.number,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        barrier_count             : modules.trade.barrier_count,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nexport default function CalendarButton({ children, className, is_hidden, label, onClick }) {\n    return (\n        <React.Fragment>\n            { !is_hidden &&\n                <span\n                    type='button'\n                    className={className}\n                    onClick={onClick}\n                >\n                    {label}\n                    {children}\n                </span>\n            }\n        </React.Fragment>\n    );\n}\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n","import {\n    observer,\n    PropTypes as MobxPropTypes }      from 'mobx-react';\nimport moment                         from 'moment';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { localize }                   from '_common/localize';\nimport { isSessionAvailable }         from 'Stores/Modules/Trading/Helpers/start_date';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = moment(start_date * 1000 || undefined).utc();\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <input\n                                    ref={this.saveRef}\n                                    type='text'\n                                    readOnly\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.number,\n    value          : PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.number,\n    toggle      : PropTypes.func,\n    value       : PropTypes.string,\n    value_split : PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","export * from './icon_logout.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <IconPortfolio className='portfolio-empty__icon' />\n        <span className='portfolio-empty__text'>{localize('No open positions.')}</span>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n\n// TODO Remove the below comments\n/**\n * The below lines are not necessary anymore since we are using `defer` in script tags.\n * It tells the browser to download the scripts without blocking the HTML parsing and\n * execute them after parsing is completely finished in the order they appear in the HTML.\n * Please let me know if you think we need to listen to this two events; otherwise, I will remove them totally in the next PR.\n */\n\n// document.addEventListener('DOMContentLoaded', initApp);\n// window.addEventListener('pageshow', (e) => { // Safari doesn't fire load event when using back button\n//     if (e.persisted) {\n//         initApp();\n//     }\n// });\n","var map = {\n\t\"./ja\": 218,\n\t\"./ja.js\": 218\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 487;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import BinarySocket   from '_common/base/socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '_common/utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        // find corresponding id(s)\n        const sub_ids = Object.keys(subscriptions).filter(id => (\n            subscriptions[id].msg_type === msg_type &&\n            hasCallbackFunction(id, fncCallback)\n        ));\n\n        const forgets_list = [];\n        sub_ids.forEach((id) => {\n            if (match_values && !hasValues(subscriptions[id].request, match_values)) {\n                return;\n            }\n            const stream_id = subscriptions[id].stream_id;\n            if (stream_id && subscriptions[id].subscribers.length === 1) {\n                delete subscriptions[id];\n                forgets_list.push(forgetStream(stream_id));\n            } else {\n                // there are other subscribers, or for some reason there is no stream_id:\n                // (i.e. returned an error, or forget() being called before the first response)\n                subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        subscribe,\n        forget,\n        forgetAll,\n    };\n})();\n\nexport default SubscriptionManager;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action }   from 'mobx';\nimport { localize } from '_common/localize';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError(localize('Your web browser is out of date and may affect your trading experience. Proceed at your own risk.'));\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base_store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            id !== this.loginid &&\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid      = LocalStore.get('active_loginid');\n        this.accounts     = LocalStore.getObject(storage_key);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.switched     = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }                                                                                                                                                 from './Helpers/chart_barriers';\nimport { createChartMarkers }                                                                                                                                                 from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const toMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nconst setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time.split(':');\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => moment(date || undefined, date_format).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = moment(date).utc().diff(moment().utc(), 'days');\n    return (!date || diff < 0) ? '' : diff + 1;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format_response';\nimport BaseStore                        from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject }                      from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    non_proposal_query_string_variable } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '09:40';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = '12:30';\n    @observable sessions         = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...non_proposal_query_string_variable,\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type = response.echo_req.contract_type;\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        param_object.sort();\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${param_object.toString()}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, query_string);\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall  : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low   : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch      : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end        : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay       : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian      : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd   : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call    : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put     : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low: { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize } from '_common/localize';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom', { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract_type';\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n\n    getMethodsList(store, new_state).forEach((fnc) => {\n        extendOrReplace(snapshot, fnc(snapshot));\n    });\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    Duration.onChangeExpiry,\n    StartDate.onChangeStartDate,\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = (store) => {\n    const { contract_type, start_date, duration_unit, expiry_time } = store;\n    let { start_time, expiry_date } = store;\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_date = ContractType.getExpiryDate(expiry_date, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    const obj_expiry_time = ContractType.getExpiryTime(sessions, start_date, start_time, expiry_date, expiry_time);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n    };\n};\n","import moment                                                                   from 'moment';\nimport { getDecimalPlaces }                                                     from '_common/base/currency_base';\nimport { isDeepEqual }                                                          from '_common/utility';\nimport { convertToUnix }                                                        from 'Utils/Date';\nimport { proposal_properties_alternative_names, removable_proposal_properties } from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response) => {\n    const proposal = response.proposal || {};\n    const profit   = (proposal.payout - proposal.ask_price) || 0;\n    const returns  = profit * 100 / (proposal.ask_price || 1);\n\n    return {\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake    : proposal.display_value,\n        payout   : proposal.payout,\n        id       : proposal.id || '',\n        message  : proposal.longcode || response.error.message,\n        has_error: !!response.error,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = moment.utc(store.expiry_date);\n        const start_date  = moment.unix(store.start_date || (store.root_store.common.server_time / 1000)).utc();\n        const is_same_day = expiry_date.isSame(start_date, 'day');\n        const expiry_time = is_same_day ? store.expiry_time : '23:59:59';\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport SimpleBar                      from 'simplebar-react';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                <div className='portfolio-drawer__header'>\n                    <span className='portfolio-drawer__icon-main ic-portfolio' />\n                    <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                    <div\n                        className='portfolio-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconClose />\n                    </div>\n                </div>\n                <div className='portfolio-drawer__body'>\n                    <SimpleBar style={{ height: '100%' }}>\n                        {body_content}\n                    </SimpleBar>\n                </div>\n            </div>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='8' width='10' height='1' rx='.5' />\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82l-2.137-1.71z' fillRule='nonzero' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' fillRule='nonzero' />\n                    </g>\n\n                );\n                break;\n            case 'call':\n                IconType = (\n                    <g fill='#2A3052'>\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82 3.812 8.11z' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' />\n                    </g>\n\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 6.75h-4v-1.5h4L4.5 4H6l1.5 2L6 8H4.5l1-1.25zM10.5 11.75h4v-1.5h-4l1-1.25H10l-1.5 2 1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M2.698 9.5H.218v-.537L1.36 7.762c.281-.32.422-.576.422-.764 0-.153-.033-.27-.1-.35-.067-.08-.163-.12-.29-.12a.362.362 0 0 0-.306.16.657.657 0 0 0-.117.4H.144A1.167 1.167 0 0 1 .762 6.05c.193-.104.41-.156.65-.156.383 0 .68.089.887.266.207.178.31.432.31.764 0 .14-.025.277-.077.41a1.793 1.793 0 0 1-.243.417 6.12 6.12 0 0 1-.531.584l-.46.53h1.4V9.5zM9.107 8.194h.47v.825h-.47V10h-1.07v-.98H6.252l-.064-.655 1.85-2.977v-.01h1.07v2.816zm-1.9 0h.83V6.772l-.066.108-.765 1.314zM15.205 5.894v.647h-.037c-.308 0-.56.074-.758.221a.933.933 0 0 0-.365.614.962.962 0 0 1 .703-.273c.308 0 .553.112.735.336.182.225.273.52.273.884 0 .226-.053.434-.16.623a1.141 1.141 0 0 1-.446.443c-.192.107-.404.16-.636.16-.253 0-.478-.058-.677-.172a1.183 1.183 0 0 1-.463-.492 1.62 1.62 0 0 1-.171-.738v-.33c0-.365.078-.695.235-.987.157-.292.381-.52.673-.687.291-.166.614-.249.97-.249h.124zm-.743 1.838a.47.47 0 0 0-.437.262v.246c0 .45.156.674.467.674.125 0 .23-.056.313-.168a.687.687 0 0 0 .126-.423.674.674 0 0 0-.128-.426.41.41 0 0 0-.34-.165z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 8.75H2v-1.5h3.5L4.5 6H6l1.5 2L6 10H4.5l1-1.25zM10.5 8.75H14v-1.5h-3.5l1-1.25H10L8.5 8l1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M2.041 9.5h-.825V6.873l-.81.237v-.625l1.56-.54h.075zM7.26 7.242h.505c.4 0 .6-.196.6-.587a.508.508 0 0 0-.143-.373c-.096-.096-.23-.145-.403-.145a.58.58 0 0 0-.37.124.378.378 0 0 0-.157.308h-1.07c0-.243.068-.46.203-.65.136-.191.323-.34.564-.446.24-.107.504-.16.792-.16.514 0 .918.117 1.212.352.294.234.441.557.441.968 0 .198-.06.386-.182.563a1.3 1.3 0 0 1-.532.43c.245.089.438.224.578.405.14.18.21.404.21.67 0 .414-.16.744-.477.991-.317.248-.734.371-1.25.371a2.05 2.05 0 0 1-.843-.172 1.32 1.32 0 0 1-.589-.48 1.246 1.246 0 0 1-.2-.696h1.076c0 .141.057.264.171.368a.605.605 0 0 0 .423.155.634.634 0 0 0 .45-.157.525.525 0 0 0 .168-.401c0-.233-.058-.398-.174-.495-.116-.098-.277-.146-.482-.146H7.26v-.797zM13.266 7.762l.217-1.817h2.078v.64h-1.409l-.08.706a.973.973 0 0 1 .23-.09c.096-.027.189-.04.28-.04.353 0 .625.105.814.314.19.209.285.502.285.88 0 .228-.051.434-.153.619a1.049 1.049 0 0 1-.428.426c-.184.1-.402.149-.652.149-.223 0-.432-.046-.628-.138a1.126 1.126 0 0 1-.459-.379.92.92 0 0 1-.163-.543h.825c.008.13.05.234.124.31a.395.395 0 0 0 .296.115c.277 0 .415-.205.415-.615 0-.38-.17-.569-.508-.569-.192 0-.335.062-.43.186l-.654-.154z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g transform='matrix(1 0 0 -1 0 16)' fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='#2A3052' fillRule='nonzero'>\n                        <path d='M9.839 9.87a.5.5 0 0 0 .707 0l2.019-2.019a.5.5 0 1 0-.707-.707l-1.666 1.665-3.794-3.793a.5.5 0 0 0-.707 0l-.454.454-.823-.824a.5.5 0 1 0-.707.708L4.884 6.53a.5.5 0 0 0 .707 0l.454-.454L9.839 9.87z' />\n                        <path d='M12.428 8.79a.5.5 0 1 0 1 0V6.667a.5.5 0 0 0-.5-.5h-2.12a.5.5 0 1 0 0 1h1.62v1.621zM3 11.7h10.5a.5.5 0 1 0 0-1H3a.5.5 0 1 0 0 1z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='stroke-white' d='M3 4h10.5' stroke='#2A3052' strokeLinecap='round' />\n                        <path d='M11.074 5.454a.5.5 0 0 0-.707-.708L5.924 9.191a.5.5 0 0 0 .041.744l.953.762-1.272 1.272a.5.5 0 0 0 .707.707l1.666-1.667a.5.5 0 0 0-.04-.744l-.953-.762 4.048-4.05z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M11.263 4.556l.034 3.944H10.282V6.26l-.676-.76H7.34v-.944z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='6.5' width='10' height='1' rx='.5' />\n                        <path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' fillRule='nonzero' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'put':\n                IconType = (\n                    <g fill='#2A3052'><path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconArrow }         from 'Assets/Common';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <IconArrow className='select-arrow' />\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst ContractInfo = ({\n    barrier_count,\n    contract_title,\n    contract_type,\n    currency,\n    proposal_info,\n}) => {\n    const icon_type = `${contract_type}${/^(call|put)$/i.test(contract_type) && barrier_count > 0 ? '_barrier' : ''}`.toLowerCase();\n\n    return (\n        <div className='box'>\n            <div className='left-column'>\n                <div className='type-wrapper'>\n                    <IconTradeType type={icon_type} className='type' />\n                </div>\n                <h4 className='trade-type'>{contract_title}</h4>\n            </div>\n            {(proposal_info.has_error || !proposal_info.id) ?\n                <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                    <span>{proposal_info.message}</span>\n                </div>\n                :\n                <div className='purchase-info-wrapper'>\n                    <span className='purchase-tooltip'>\n                        <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                    </span>\n                    <div className='info-wrapper'>\n                        <div>{localize('Stake')}:</div>\n                        <div><Money amount={proposal_info.stake} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Payout')}:</div>\n                        <div><Money amount={proposal_info.payout} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Net Profit')}:</div>\n                        <div><Money amount={proposal_info.profit} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Return')}:</div>\n                        <div>{proposal_info.returns}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    barrier_count : PropTypes.number,\n    contract_title: PropTypes.string,\n    contract_type : PropTypes.string,\n    currency      : PropTypes.string,\n    proposal_info : PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { localize }              from '_common/localize';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input_field.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !is_single_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages = {validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport SimpleBar         from 'simplebar-react';\nimport { IconArrow }     from 'Assets/Common';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex,\n}  from './helpers';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n            curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    onKeyPressed = (event) => {\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    tabIndex='0'\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            <SimpleBar style={{ 'height': '100%' }}>\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list-label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </SimpleBar>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''} ${highlightedIdx === idx ? 'highlighted' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport moment                   from 'moment';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Datepicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport { convertDurationUnit }  from 'Stores/Modules/Trading/Helpers/duration';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst expiry_list = [\n    { text: localize('Duration'), value: 'duration' },\n];\n\nlet now_date,\n    min_date_duration,\n    max_date_duration,\n    min_date_expiry,\n    min_day,\n    max_day,\n    start_date_time;\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n}) => {\n    if (duration_min_max[contract_expiry_type]) {\n        const moment_now  = moment(server_time);\n        const new_min_day = convertDurationUnit(duration_min_max[contract_expiry_type].min, 's', 'd');\n        const new_max_day = convertDurationUnit(duration_min_max[contract_expiry_type].max, 's', 'd');\n        if (!now_date || moment_now.date() !== now_date.date() || (duration_unit === 'd' && (min_day !== new_min_day || max_day !== new_max_day))) {\n            if (duration_unit === 'd') {\n                min_day = new_min_day;\n                max_day = new_max_day;\n            }\n\n            const moment_today = moment_now.clone().startOf('day');\n\n            now_date          = moment_now.clone();\n            min_date_duration = moment_today.clone().add(min_day || 1, 'd');\n            max_date_duration = moment_today.clone().add(max_day || 365, 'd');\n            min_date_expiry   = moment_today.clone();\n        }\n    }\n\n    const moment_expiry = moment.utc(expiry_date);\n    const is_same_day   = moment_expiry.isSame(moment(start_date * 1000 || undefined).utc(), 'day');\n    if (is_same_day) {\n        const date_time = moment.utc(start_date * 1000 || undefined);\n        if (start_date) {\n            const [ hour, minute ] = start_time.split(':');\n            date_time.hour(hour).minute(minute).second(0).add(5, 'minutes');\n        }\n        // only update start time every five minutes, since time picker shows five minute durations\n        const moment_start_date_time = moment.unix(start_date_time);\n        if (!start_date_time || moment_start_date_time.isAfter(date_time) || moment_start_date_time.clone().add(5, 'minutes').isBefore(date_time) ||\n            (moment_start_date_time.minutes() !== date_time.minutes() && date_time.minutes() % 5 === 0)) {\n            start_date_time = date_time.unix();\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n    const datepicker_footer = min_day > 1 ?\n        localize('The minimum duration is [_1] days', [min_day]) :\n        localize('The minimum duration is [_1] day',  [min_day]);\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_same_day,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        {duration_unit === 'd' && !is_nativepicker ?\n                            <Datepicker\n                                name='duration'\n                                min_date={min_date_duration}\n                                max_date={max_date_duration}\n                                mode='duration'\n                                onChange={onChange}\n                                value={duration || min_day}\n                                is_read_only\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                footer={datepicker_footer}\n                            /> :\n                            <InputField\n                                type='number'\n                                name='duration'\n                                value={duration}\n                                onChange={onChange}\n                                is_nativepicker={is_nativepicker}\n                                error_messages = {validation_errors.duration || []}\n                            />\n                        }\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <Datepicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable={false}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {is_same_day &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                value={expiry_time}\n                                placeholder='12:00'\n                                start_date={start_date_time}\n                                sessions={sessions}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time    : PropTypes.string,\n    expiry_type    : PropTypes.string,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    server_time    : PropTypes.object,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import classNames      from 'classnames';\nimport moment          from 'moment';\nimport React           from 'react';\nimport { IconArrow }   from 'Assets/Common';\nimport {\n    formatDate,\n    daysFromTodayTo }  from 'Utils/Date';\nimport DatePickerInput from './date_picker_input.jsx';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.PureComponent {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_close_btn_visible : false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { value, mode } = this.props;\n        this.updateDatePickerValue(value, mode);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_close_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_close_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!moment.utc(value).isValid) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value), 'duration');\n        } else {\n            this.updateDatePickerValue(value);\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value, this.props.mode);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: '' }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value, mode) => {\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const { date_format, start_date } = this.props;\n        const new_date = (mode === 'duration') ? moment.utc().add(value, 'days').format(date_format) : value;\n        if (this.calendar && (moment.utc(new_date, date_format).isValid() || !new_date)) {\n            if (!new_date) {\n                const current_date = moment.utc(start_date).format(date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker-display'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker-native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker-native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                <div\n                    className='datepicker-display-wrapper'\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                >\n                    <DatePickerInput\n                        class_name='datepicker-display'\n                        mode={this.props.mode}\n                        name={this.props.name}\n                        placeholder={this.props.placeholder}\n                        onClick={this.handleVisibility}\n                        is_read_only={true}\n                        value={this.state.value}\n                    />\n                    <span\n                        className={classNames('picker-calendar-icon', {\n                            show: !this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.handleVisibility}\n                    />\n                    <span\n                        className={classNames('close-circle-icon', {\n                            show: this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.clearDatePickerInput}\n                    />\n                </div>\n                <div\n                    className={classNames('datepicker-calendar', {\n                        show: this.state.is_datepicker_visible,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    >\n                        <DatePickerInput\n                            class_name='calendar-input'\n                            mode={this.props.mode}\n                            name={this.props.name}\n                            onChange={this.onChangeInput}\n                            placeholder={this.props.placeholder}\n                            is_read_only={'is_read_only' in this.props ? this.props.is_read_only : false}\n                            value={this.state.value}\n                        />\n                    </Calendar>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...DatePickerInput.propTypes,\n    ...Calendar.propTypes,\n};\n\nexport default DatePicker;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nexport default function DatePickerInput(props) {\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            className={props.class_name}\n            readOnly={props.is_read_only}\n            placeholder={props.placeholder\n                || (props.mode === 'duration' ? localize('Select a duration') : localize('Select date'))}\n            onChange={props.onChange}\n            onClick={props.onClick}\n            value={props.value}\n        />\n    );\n}\n\nDatePickerInput.propTypes = {\n    class_name  : PropTypes.string,\n    id          : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    is_read_only: PropTypes.bool,\n    mode        : PropTypes.string,\n    name        : PropTypes.string,\n    onChange    : PropTypes.func,\n    onClick     : PropTypes.func,\n    placeholder : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number, // duration\n        PropTypes.string, // date\n    ]),\n};\n","export default from './calendar.jsx';\n","import moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\nimport CalendarPanel  from './calendar_panel.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = moment.utc(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    // navigates to next or previous's month/year/decade/century\n    navigators = {\n        nextMonth      : () => { this.navigateTo(1,   'months', true); },\n        previousMonth  : () => { this.navigateTo(1,   'months', false); },\n        nextYear       : () => { this.navigateTo(1,   'years',  true); },\n        previousYear   : () => { this.navigateTo(1,   'years',  false); },\n        nextDecade     : () => { this.navigateTo(10,  'years',  true); },\n        previousDecade : () => { this.navigateTo(10,  'years',  false); },\n        nextCentury    : () => { this.navigateTo(100, 'years',  true); },\n        previousCentury: () => { this.navigateTo(100, 'years',  false); },\n    };\n\n    // selects a day, a month, a year, or a decade\n    panelSelectors = {\n        date  : (e, is_disabled) => { this.updateSelectedDate(e, is_disabled); },\n        month : (e) => { this.updateSelected(e, 'month'); },\n        year  : (e) => { this.updateSelected(e, 'year'); },\n        decade: (e) => { this.updateSelected(e, 'decade'); },\n    };\n\n    // sets Calendar active view\n    calendarViews = {\n        date  : () => { this.setState({ calendar_view: 'date'   }); },\n        month : () => { this.setState({ calendar_view: 'month'  }); },\n        year  : () => { this.setState({ calendar_view: 'year'   }); },\n        decade: () => { this.setState({ calendar_view: 'decade' }); },\n    };\n\n    navigateTo = (value, unit, is_add) => {\n        const { date_format, max_date, min_date } = this.props;\n\n        let new_date = moment.utc(this.state.calendar_date, date_format)[is_add ? 'add' : 'subtract'](value, unit).format(date_format);\n\n        if (unit === 'months' && this.isPeriodDisabled(new_date, 'month')) return;\n\n        if (unit === 'years'  && this.isPeriodDisabled(new_date, 'years')) {\n            new_date = is_add ? max_date : min_date;\n        }\n\n        this.setState({ calendar_date: moment.utc(new_date, date_format).format(date_format) }); // formatted date\n    };\n\n    updateSelectedDate = (e, is_disabled) => {\n        if (is_disabled) {\n            return;\n        }\n\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = moment.utc(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(moment.utc(min_date));\n        const is_after    = moment_date.isAfter(moment.utc(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = moment.utc(this.state.calendar_date, this.props.date_format)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = moment.utc(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = moment().utc().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = moment.utc(date).startOf(unit);\n        const end_of_period   = moment.utc(date).endOf(unit);\n        return end_of_period.isBefore(moment.utc(min_date))\n            || start_of_period.isAfter(moment.utc(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, max_date, min_date, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    onClick={this.navigators}\n                    onSelect={this.calendarViews}\n                    calendar_view={calendar_view}\n                />\n                <CalendarPanel\n                    calendar_date={calendar_date}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    max_date={max_date}\n                    min_date={min_date}\n                    start_date={start_date}\n                    onClick={this.panelSelectors}\n                    selected_date={selected_date}\n                    calendar_view={calendar_view}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    onClick={this.setToday}\n                    has_today_btn={has_today_btn}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : moment(0).utc().format('YYYY-MM-DD'),              // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : moment().utc().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarFooter({ footer, has_today_btn, onClick }) {\n    return (\n        <div className='calendar-footer'>\n            { footer && <span className='calendar-footer-extra'>{footer}</span> }\n            { has_today_btn &&\n                <CalendarButton className='calendar-footer-btn'>\n                    <a role='button' onClick={onClick}>{localize('Today')}</a>\n                </CalendarButton>\n            }\n        </div>\n    );\n}\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n","import classNames     from 'classnames';\nimport moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarHeader({ calendar_date, isPeriodDisabled, onClick, onSelect, calendar_view }) {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = moment.utc(calendar_date);\n\n    return (\n        <div className='calendar-header'>\n            <CalendarButton\n                className={classNames('calendar-prev-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    (is_date_view || is_month_view) && onClick.previousYear())\n                    || (is_year_view   && onClick.previousDecade())\n                    || (is_decade_view && onClick.previousCentury()\n                    )\n                }\n            />\n            <CalendarButton\n                className={classNames('calendar-prev-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.previousMonth}\n            />\n\n            <div className='calendar-select'>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar-select-month-btn'\n                        is_hidden={!is_date_view}\n                        label={moment_date.format('MMM')}\n                        onClick={onSelect.month}\n                    />\n                }\n                <CalendarButton\n                    className='calendar-select-year-btn'\n                    onClick={() => ((is_date_view || is_month_view) ? onSelect.year() : onSelect.decade())}\n                >\n                    { (is_date_view || is_month_view) && moment_date.year() }\n                    { is_year_view   && `${moment_date.clone().subtract(1, 'years').year()}-${moment_date.clone().add(10, 'years').year()}`  }\n                    { is_decade_view && `${moment_date.clone().subtract(10, 'years').year()}-${moment_date.clone().add(109, 'years').year()}` }\n                </CalendarButton>\n            </div>\n\n            <CalendarButton\n                className={classNames('calendar-next-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.nextMonth}\n            />\n            <CalendarButton\n                className={classNames('calendar-next-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    ((is_date_view || is_month_view) && onClick.nextYear())\n                    || (is_year_view   && onClick.nextDecade())\n                    || (is_decade_view && onClick.nextCentury())\n                )}\n            />\n        </div>\n    );\n}\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    onClick         : PropTypes.object,\n    onSelect        : PropTypes.object,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nexport default function CalendarPanel(props) {\n    const calendar_panel = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <div className='calendar-panel'>\n            { calendar_panel[props.calendar_view] }\n        </div>\n    );\n}\n\nCalendarPanel.propTypes = {\n    calendar_view: PropTypes.string,\n};\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { padLeft }        from '_common/string_util';\nimport CalendarPanelTypes from './types';\n\nconst getDays = ({ calendar_date, date_format, max_date, min_date, start_date, onClick, selected_date }) => {\n    const dates = [];\n    const days  = [];\n    const moment_today       = moment().utc().startOf('day');\n    const moment_cur_date    = moment.utc(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const first_day          = moment_month_start.day();\n    const last_day           = moment_month_end.day();\n    const moment_min_date    = moment.utc(min_date);\n    const moment_max_date    = moment.utc(max_date);\n    const moment_selected    = moment.utc(selected_date);\n\n    for (let i = first_day; i > 0; i--) {\n        dates.push(moment_month_start.clone().subtract(i, 'day').format(date_format));\n    }\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    for (let i = 1; i <= 6 - last_day; i++) {\n        dates.push(moment_month_end.clone().add(i, 'day').format(date_format));\n    }\n\n    const moment_start_date = moment.unix(start_date).utc().startOf('day');\n    dates.map((date) => {\n        const moment_date = moment.utc(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = moment_date.isBefore(moment_min_date) || moment_date.isAfter(moment_max_date) ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) || moment_date.isAfter(moment_start_date.clone().add(1, 'day'))));\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar-date', {\n                    active  : is_active && !is_disabled,\n                    today   : is_today,\n                    disabled: is_disabled,\n                })}\n                onClick={(e) => { onClick.date(e, is_disabled); }}\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst week_headers = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar-date-panel'>\n            {week_headers.map((item, idx) => (<span key={idx} className='calendar-date-header'>{item}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { localize }       from '_common/localize';\nimport CalendarPanelTypes from './types';\n\nconst getMonthHeaders = () => ({\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n});\n\nexport const CalendarMonths = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const moment_date    = moment.utc(calendar_date);\n    const selected_month = moment.utc(selected_date).month();\n    const month_headers  = getMonthHeaders();\n\n    return (\n        <div className='calendar-month-panel'>\n            {Object.keys(month_headers).map((month, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-month', {\n                        active  : idx === selected_month,\n                        disabled: isPeriodDisabled(moment_date.month(month), 'month'),\n                    })}\n                    onClick={onClick.month}\n                    data-month={idx}\n                >\n                    {month_headers[month]}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarYears = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n    const current_year  = moment_date.year();\n    const years         = [];\n    for (let year = current_year - 1; year < current_year + 11; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar-year-panel'>\n            {years.map((year, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-year', {\n                        disabled: isPeriodDisabled(moment_date.year(year), 'year'),\n                        active  : year === selected_year,\n                    })}\n                    onClick={onClick.year}\n                    data-year={year}\n                >\n                    {year}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarDecades = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n\n    const decades = [];\n    let min_year  = moment_date.year() - 10;\n    for (let i = 0; i < 12; i++) {\n        const max_year = min_year + 9;\n        const range    = `${min_year}-${max_year}`;\n        decades.push(range);\n        min_year = max_year + 1;\n    }\n\n    return (\n        <div className='calendar-decade-panel'>\n            {decades.map((range, idx) => {\n                const [start_year, end_year] = range.split('-');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar-decade', {\n                            disabled: isPeriodDisabled(moment_date.year(start_year), 'year') && isPeriodDisabled(moment_date.year(end_year), 'year'),\n                            active  : start_year === selected_year,\n                        })}\n                        onClick={onClick.decade}\n                        data-decade={range}\n                    >\n                        {range}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Dropdown     from 'App/Components/Form/DropDown';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\n\nconst last_digit_numbers = [...Array(10).keys()].map(number => ({\n    text : number,\n    value: number,\n}));\n\nconst LastDigit = ({\n    is_minimized,\n    is_nativepicker,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            icon='digits'\n        >\n            <Dropdown\n                list={last_digit_numbers}\n                value={+last_digit}\n                name='last_digit'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    last_digit     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {!is_today &&\n                <React.Fragment>\n                    <TimePicker\n                        onChange={onChange}\n                        is_align_right\n                        name='start_time'\n                        value={start_time}\n                        placeholder='12:00'\n                        start_date={start_date}\n                        sessions={sessions}\n                        is_clearable={false}\n                        is_nativepicker={is_nativepicker}\n                    />\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized    : PropTypes.bool,\n    is_nativepicker : PropTypes.bool,\n    onChange        : PropTypes.func,\n    sessions        : MobxPropTypes.arrayOrObservableArray,\n    start_date      : PropTypes.number,\n    start_dates_list: MobxPropTypes.arrayOrObservableArray,\n    start_time      : PropTypes.string,\n};\n\nexport default observer(StartDate);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\n\nconst ErrorComponent = ({ type, message }) => (\n    <div className='error-container'>\n        <IconError type={type} />\n        <p>{message || localize('Sorry, an error occured while processing your request.')}</p>\n    </div>\n);\n\nErrorComponent.propTypes = {\n    message: PropTypes.string,\n    type   : PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import React from 'react';\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const wrapper   = replacers[pair_code];\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from 'App/Components/Layout/Header';\nimport header_links             from 'App/Constants/header_links';\nimport { connect }              from 'Stores/connect';\n\nconst Header = ({\n    account_type,\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    account_type={account_type}\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    account_type             : PropTypes.string,\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        account_type             : client.account_title,\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport Localize            from 'App/Components/Elements/localize.jsx';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n    account_type,\n}) => (\n    <div className='acc-balance'>\n        <div className='acc-switcher-container'>\n            <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                <p className='acc-balance-type'>\n                    <Localize str={`${account_type} Account`} />\n                </p>\n                <p className='acc-balance-id'>{loginid}</p>\n                <IconArrow className='select-arrow' />\n            </div>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={400}\n                classNames='acc-switcher-wrapper'\n                unmountOnExit\n            >\n                <div className='acc-switcher-wrapper'>\n                    <AccountSwitcher\n                        is_visible={is_dialog_on}\n                        toggle={toggleDialog}\n                        is_upgrade_enabled={is_upgrade_enabled}\n                        onClickUpgrade={onClickUpgrade}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n        {typeof balance !== 'undefined' &&\n        <p className='acc-balance-amount'>\n            <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n            {balance}\n        </p>\n        }\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { UpgradeButton } from 'App/Components/Elements/AccountSwitcher/upgrade_button.jsx';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services/index';\nimport { connect }       from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.props.account_list.length > 0) &&\n                this.props.account_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={this.doSwitch.bind(this, account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list      : PropTypes.array,\n    is_logged_in      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nconst account_switcher = connect(\n    ({ client }) => ({\n        account_list : client.account_list,\n        is_logged_in : client.is_logged_in,\n        switchAccount: client.switchAccount,\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes_config';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_portfolio_drawer_on) {\n                        togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}