{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker_input.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_panel.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number_selector.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_date_time","forEach","_logout","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_close","_icon_exclamation","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","Button","_ref$className","className","has_effect","id","is_disabled","onClick","text","wrapperClassName","classes","button","_react2","default","disabled","wrapper","string","bool","func","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_Date","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","moment_date","toMoment","isTimeValid","_time$split","split","_time$split2","_slicedToArray","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","symbol","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getExpiryDate","expiry_date","moment_start","moment_expiry","is_invalid","isBefore","isAfter","clone","add","getExpiryTime","start_time","expiry_time","end_moment","end_time","isSameOrBefore","is_end_of_day","is_end_of_session","getSessions","option","getStartTime","getContractCategories","contract_types_list","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","Fieldset","header","icon","is_center","onMouseEnter","onMouseLeave","tooltip","fieldset_class","_classnames2","field_left_class","_tooltip2","alignment","message","array","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","loading_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","Tooltip","icon_name","icon_class","data-tooltip","data-tooltip-pos","node","_fill_template","Localize","str","replacers","localized","fillTemplate","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","duration","payout","theme","is_dark_mode_on","portfolio_drawer","is_portfolio_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","unit","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","getExpiryType","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","InputField","error_messages","fractional_digits","helper","is_float","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","label","max_length","onChange","placeholder","prefix","required","has_error","has_valid_length","input","data-for","data-tip","maxLength","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","readOnly","htmlFor","MobxPropTypes","arrayOrObservableArray","CalendarPanelTypes","calendar_date","calendar_view","date_format","isPeriodDisabled","max_date","min_date","selected_date","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","some","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","ASIANU","ASIAND","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","isBeforeDate","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","open","close","should_only_check_hour","now_moment","second","unix","session","isBetween","_icon_trade_types","_icon_maximize","_icon_quick_portfolio","_icon_settings","_ui","_connect","RemainingTime","_ref$end_time","remaining_time","formatDuration","getDiffDuration","isRequired","_ref2","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconClose","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","_PopConfirm","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","_button2","stake","is_purchase_error","echo_req","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","contract_title","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","renderCards","_ref3","CalendarButton","is_hidden","TimePickerDropdown","selectOption","_this$props$value$spl","_this$props$value$spl2","prev_hour","prev_minute","is_type_selected","setState","last_updated_type","stopPropagation","resetValues","state","is_hour_selected","is_minute_selected","prevProps","prevState","_state","toggle","_props","preClass","start_moment_clone","_value$split","_value$split2","is_clearable","saveHourRef","is_enabled","saveMinuteRef","mm","TimePicker","toggleDropDown","is_open","handleChange","arg","saveRef","nodeName","wrapper_ref","target_element","handleClickOutside","contains","_props2","is_align_right","padding","prefix_class","_input_field2","value_split","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_money2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","_toggle_button2","toggled","ToggleButton","toggle_style","_icon_logout","InkBar","inkbar_style","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","_Types","ContractTypeCell","IconTradeType","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","ServerTime","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","upgrade_info","getBasicUpgradeInfo","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCryptocurrency","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","epochToMoment","epoch","isValid","isUTC","moment_obj","convertToUnix","setTime","formatDate","daysFromTodayTo","diff","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","date_str","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","underlying","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","subtract","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor31","changeDurationValidationRules","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","getProposalInfo","setChartBarrier","query_params","duration_options","_ref5","_callee4","_context4","refresh","prepareTradeStore","abrupt","_x3","runInAction","_callee6","_context6","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","_x2","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","_proposal_response$ec","Duration","StartDate","getMethodsList","fnc","extendOrReplace","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_date","obj_expiry_time","obj_duration_min_max","createProposalRequestForContract","ask_price","returns","toFixed","display_value","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","isSame","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_theme_wrapper2","_header2","_error_boundary2","_app_contents2","_routes2","_PortfolioDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","PortfolioDrawer","toggleDrawer","body_content","_empty_portfolio_message2","_portfolio_drawer_card2","portfolio-drawer--open","_simplebarReact2","togglePortfolioDrawer","IconArrow","IconBack","transform","IconBell","stroke","IconCashier","rx","IconHamburger","strokeLinecap","IconTrade","PortfolioDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","SmartChart","form_wrapper_class","Suspense","fallback","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","setWrapperRef","is_dialog_open","getDisplayText","_this$props","findInArray","getStyles","container_classes","tabIndex","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","ContractTypeItem","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","ContractInfo","icon_type","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_DropDown2","observableObject","Dropdown","onKeyPressed","getItemFromValue","getValueFromIndex","curr_index","is_list_visible","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","onKeyDown","isArrayLike","Items","highlightedIdx","items","expiry_list","now_date","min_date_duration","max_date_duration","min_date_expiry","min_day","max_day","start_date_time","moment_now","new_min_day","new_max_day","moment_today","startOf","is_same_day","date_time","_start_time$split","_start_time$split2","moment_start_date_time","duration_unit_text","datepicker_footer","has_end_time","expiry","pop","endtime_container_class","has-time","_DatePicker2","has_today_btn","_time_picker2","DatePicker","is_datepicker_visible","is_close_btn_visible","onClickOutside","mainNode","updateDatePickerValue","onSelectCalendar","onChangeInput","clearDatePickerInput","calendar","resetCalendar","new_date","current_date","_this$props2","nativeEvent","defaultValue","_date_picker_input2","class_name","_Calendar2","onSelect","defaultProps","Calendar","DatePickerInput","_initialiseProps","_calendar_header2","navigators","calendarViews","_calendar_panel2","panelSelectors","_calendar_footer2","setToday","nextMonth","navigateTo","previousMonth","nextYear","previousYear","nextDecade","previousDecade","nextCentury","previousCentury","updateSelectedDate","month","updateSelected","year","decade","is_add","_props3","dataset","is_before","is_after","formatted_date","_props4","default_date","_props5","now","_props6","start_of_period","endOf","CalendarFooter","_calendar_button2","role","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","CalendarPanel","_panels","calendar_panel","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","week_headers","days","dates","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","first_day","last_day","moment_min_date","moment_max_date","moment_selected","padLeft","moment_start_date","is_active","is_today","today","data-date","getDays","selected_month","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","data-month","selected_year","current_year","years","data-year","decades","min_year","max_year","range","_range$split","_range$split2","start_year","end_year","data-decade","arr_five","_number_selector2","arr_arr_numbers","selected_number","NumberSelector","getAttribute","arr_numbers","data-value","arrayOf","current_date_config","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","msg","_localize3","_icon_error2","shape","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","last","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","SellInfo","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","_close_button2","CloseButton","ToastMessage","toast","_ToastMessage2","AppContents","app-contents--show-portfolio-drawer","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","NetworkStatus","_server_time2","TogglePortfolio","ToggleFullScreen","ToggleSettings","is_settings_visible","is_language_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_portfolio","_toggle_settings","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconQuickPortfolio","IconSettings","toggle_portfolio_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","LoginButton","ToggleNotificationsDrawer","account_title","_account_info","_install_pwa_button","_login_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","_localize2","AccountSwitcher","_account_switcher","_upgrade_button","_Drawer","accounts_toggle_btn","doSwitch","UpgradeButton","IconLogout","account_switcher","prompt","userChoice","choice_result","outcome","_InkBar2","_inkbar","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","offsetWidth","active_el","Switch","_route_with_sub_routes2","LoginPrompt","onSignup","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","Notifications","_notifications","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","_Routes2","virtual_account_loginid","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"8df8b654c04d123cb91f\",\"account_password\":\"0021e9657aeda605ff8d\",\"api_toke\":\"c683cc016bc780b5d9cc\",\"authorized_application\":\"4ca78b07a6e4affb5a10\",\"cashier_password\":\"1958ce89e6359d26281b\",\"contract\":\"e0078cffff60e759c109\",\"financial_assessment\":\"cba9848491e8250f85e1\",\"limits\":\"f07a0ac69618000678b2\",\"login_history\":\"4218caceccc031624dfb\",\"personal_details\":\"2ad343f49fd93874a6bd\",\"portfolio\":\"f2ffc30cf1c753948cec\",\"self_exclusion\":\"d4a379e9d67047d1d3cc\",\"settings\":\"8c4b875044457270acd5\",\"statement\":\"12988a5445736b90ca0d\",\"vendors~smart_chart\":\"bbae1c1e6f1a2eebd4d8\",\"smart_chart\":\"1a5b2533e927f1ae37ed\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([279,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date_time';\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import { localize }              from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }           from '_common/utility';\nimport { WS }                    from 'Services';\nimport { isTimeValid, toMoment } from 'Utils/Date';\nimport { buildBarriersConfig }   from './barrier';\nimport { buildDurationConfig }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }         from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }          from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const moment_date = toMoment(date);\n        if (!time || !isTimeValid(time)) return moment_date;\n        const [ hour, minute ] = time.split(':');\n        return moment_date.hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getExpiryDate = (expiry_date, start_date, expiry_type) => {\n        const moment_start  = toMoment(start_date);\n        const moment_expiry = toMoment(expiry_date);\n        // forward starting contracts should only show today and tomorrow as expiry date\n        const is_invalid = moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n        return {\n            expiry_date: expiry_type === 'endtime' ? (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD') : null,\n        };\n    };\n\n    // has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is after start time\n    const getExpiryTime = (sessions, start_date, start_time, expiry_date, expiry_time) => {\n        const start_moment = start_date ? buildMoment(start_date, start_time) : toMoment();\n        const end_moment   = buildMoment(expiry_date, expiry_time);\n\n        let end_time = expiry_time;\n        if (sessions && !isSessionAvailable(sessions, end_moment)) {\n            end_time = getValidTime(sessions, end_moment, start_moment);\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n            const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n            end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n        }\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getExpiryDate,\n        getExpiryTime,\n        getSessions,\n        getStartTime,\n        getStartType,\n\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const fieldset_class   = classNames('fieldset-header', is_center ? 'center-text' : '');\n    const field_left_class = classNames('field-info', { icon }, icon, is_center ? 'center' : 'left');\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_class}>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && toMoment(expiry_date).isAfter(toMoment(server_time), 'day');\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    className,\n    error_messages,\n    fractional_digits,\n    helper,\n    is_disabled,\n    is_float,\n    is_read_only = false,\n    is_signed = false,\n    label,\n    max_length,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const input =\n        <input\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-tip\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onChange={changeValue}\n            onClick={onClick}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value || ''}\n        />;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                { input }\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.string,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_read_only     : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    onClick          : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(),\n    start_moment           = toMoment(),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, undefined, should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(should_only_check_hour ? session.open.clone().minute(0) : session.open, session.close, null, '[]')))\n);\n","export * from './icon_trade_types.jsx';\n","export default from './dropdown.jsx';\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ContractType from '../Helpers/contract_type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from '_common/localize';\nimport { isEmptyObject }          from '_common/utility';\nimport { PopConfirm }             from 'App/Components/Elements/PopConfirm';\nimport UILoader                   from 'App/Components/Elements/ui_loader.jsx';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Fieldset                   from 'App/Components/Form/fieldset.jsx';\nimport { connect }                from 'Stores/connect';\nimport ContractInfo               from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox                 from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock               from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    barrier_count,\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green'\n                has_effect\n                text={localize('Purchase')}\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            />\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            barrier_count={barrier_count}\n                            contract_title={trade_types[type]}\n                            contract_type={type}\n                            currency={currency}\n                            proposal_info={info}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    barrier_count             : PropTypes.number,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        barrier_count             : modules.trade.barrier_count,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nexport default function CalendarButton({ children, className, is_hidden, label, onClick }) {\n    return (\n        <React.Fragment>\n            { !is_hidden &&\n                <span\n                    type='button'\n                    className={className}\n                    onClick={onClick}\n                >\n                    {label}\n                    {children}\n                </span>\n            }\n        </React.Fragment>\n    );\n}\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n","import {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { localize }              from '_common/localize';\nimport { isSessionAvailable }    from 'Stores/Modules/Trading/Helpers/start_date';\nimport { toMoment }              from 'Utils/Date';\nimport InputField                from './input_field.jsx';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled && this.props.value) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = toMoment(start_date);\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.number,\n    value          : PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.number,\n    toggle      : PropTypes.func,\n    value       : PropTypes.string,\n    value_split : PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","export * from './icon_logout.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <IconPortfolio className='portfolio-empty__icon' />\n        <span className='portfolio-empty__text'>{localize('No open positions.')}</span>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 219,\n\t\"./ja.js\": 219\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 487;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base_store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            id !== this.loginid &&\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid      = LocalStore.get('active_loginid');\n        this.accounts     = LocalStore.getObject(storage_key);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.switched     = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }                                                                                                                                                 from './Helpers/chart_barriers';\nimport { createChartMarkers }                                                                                                                                                 from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const moment_obj = epochToMoment(value);\n    return moment_obj.isValid() ? moment_obj : moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nconst setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time.split(':');\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => moment(date || undefined, date_format).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = moment(date).utc().diff(moment().utc(), 'days');\n    return (!date || diff < 0) ? '' : diff + 1;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^(\\d{1,2}):(\\d{2})(:00)?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String} date_str date\n */\nexport const isDateValid = date_str => typeof date_str === 'string' && moment(date_str).isValid();\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format_response';\nimport BaseStore                        from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject }                      from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '09:40';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type = response.echo_req.contract_type;\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall  : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low   : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch      : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end        : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay       : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian      : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd   : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call    : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put     : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low: { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start_date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract_type';\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n\n    getMethodsList(store, new_state).forEach((fnc) => {\n        extendOrReplace(snapshot, fnc(snapshot));\n    });\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    Duration.onChangeExpiry,\n    StartDate.onChangeStartDate,\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = (store) => {\n    const { contract_type, start_date, duration_unit, expiry_time, expiry_type } = store;\n    let { start_time, expiry_date } = store;\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_date = ContractType.getExpiryDate(expiry_date, start_date, expiry_type);\n    expiry_date           = obj_expiry_date.expiry_date;\n    const obj_expiry_time = ContractType.getExpiryTime(sessions, start_date, start_time, expiry_date, expiry_time);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response) => {\n    const proposal = response.proposal || {};\n    const profit   = (proposal.payout - proposal.ask_price) || 0;\n    const returns  = profit * 100 / (proposal.ask_price || 1);\n\n    return {\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake    : proposal.display_value,\n        payout   : proposal.payout,\n        id       : proposal.id || '',\n        message  : proposal.longcode || response.error.message,\n        has_error: !!response.error,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        const start_date  = toMoment(store.start_date || store.root_store.common.server_time);\n        const is_same_day = expiry_date.isSame(start_date, 'day');\n        const expiry_time = is_same_day ? store.expiry_time : '23:59:59';\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport SimpleBar                      from 'simplebar-react';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                <div className='portfolio-drawer__header'>\n                    <span className='portfolio-drawer__icon-main ic-portfolio' />\n                    <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                    <div\n                        className='portfolio-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconClose />\n                    </div>\n                </div>\n                <div className='portfolio-drawer__body'>\n                    <SimpleBar style={{ height: '100%' }}>\n                        {body_content}\n                    </SimpleBar>\n                </div>\n            </div>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='8' width='10' height='1' rx='.5' />\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82l-2.137-1.71z' fillRule='nonzero' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' fillRule='nonzero' />\n                    </g>\n\n                );\n                break;\n            case 'call':\n                IconType = (\n                    <g fill='#2A3052'>\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82 3.812 8.11z' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' />\n                    </g>\n\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 6.75h-4v-1.5h4L4.5 4H6l1.5 2L6 8H4.5l1-1.25zM10.5 11.75h4v-1.5h-4l1-1.25H10l-1.5 2 1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M2.698 9.5H.218v-.537L1.36 7.762c.281-.32.422-.576.422-.764 0-.153-.033-.27-.1-.35-.067-.08-.163-.12-.29-.12a.362.362 0 0 0-.306.16.657.657 0 0 0-.117.4H.144A1.167 1.167 0 0 1 .762 6.05c.193-.104.41-.156.65-.156.383 0 .68.089.887.266.207.178.31.432.31.764 0 .14-.025.277-.077.41a1.793 1.793 0 0 1-.243.417 6.12 6.12 0 0 1-.531.584l-.46.53h1.4V9.5zM9.107 8.194h.47v.825h-.47V10h-1.07v-.98H6.252l-.064-.655 1.85-2.977v-.01h1.07v2.816zm-1.9 0h.83V6.772l-.066.108-.765 1.314zM15.205 5.894v.647h-.037c-.308 0-.56.074-.758.221a.933.933 0 0 0-.365.614.962.962 0 0 1 .703-.273c.308 0 .553.112.735.336.182.225.273.52.273.884 0 .226-.053.434-.16.623a1.141 1.141 0 0 1-.446.443c-.192.107-.404.16-.636.16-.253 0-.478-.058-.677-.172a1.183 1.183 0 0 1-.463-.492 1.62 1.62 0 0 1-.171-.738v-.33c0-.365.078-.695.235-.987.157-.292.381-.52.673-.687.291-.166.614-.249.97-.249h.124zm-.743 1.838a.47.47 0 0 0-.437.262v.246c0 .45.156.674.467.674.125 0 .23-.056.313-.168a.687.687 0 0 0 .126-.423.674.674 0 0 0-.128-.426.41.41 0 0 0-.34-.165z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 8.75H2v-1.5h3.5L4.5 6H6l1.5 2L6 10H4.5l1-1.25zM10.5 8.75H14v-1.5h-3.5l1-1.25H10L8.5 8l1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M2.041 9.5h-.825V6.873l-.81.237v-.625l1.56-.54h.075zM7.26 7.242h.505c.4 0 .6-.196.6-.587a.508.508 0 0 0-.143-.373c-.096-.096-.23-.145-.403-.145a.58.58 0 0 0-.37.124.378.378 0 0 0-.157.308h-1.07c0-.243.068-.46.203-.65.136-.191.323-.34.564-.446.24-.107.504-.16.792-.16.514 0 .918.117 1.212.352.294.234.441.557.441.968 0 .198-.06.386-.182.563a1.3 1.3 0 0 1-.532.43c.245.089.438.224.578.405.14.18.21.404.21.67 0 .414-.16.744-.477.991-.317.248-.734.371-1.25.371a2.05 2.05 0 0 1-.843-.172 1.32 1.32 0 0 1-.589-.48 1.246 1.246 0 0 1-.2-.696h1.076c0 .141.057.264.171.368a.605.605 0 0 0 .423.155.634.634 0 0 0 .45-.157.525.525 0 0 0 .168-.401c0-.233-.058-.398-.174-.495-.116-.098-.277-.146-.482-.146H7.26v-.797zM13.266 7.762l.217-1.817h2.078v.64h-1.409l-.08.706a.973.973 0 0 1 .23-.09c.096-.027.189-.04.28-.04.353 0 .625.105.814.314.19.209.285.502.285.88 0 .228-.051.434-.153.619a1.049 1.049 0 0 1-.428.426c-.184.1-.402.149-.652.149-.223 0-.432-.046-.628-.138a1.126 1.126 0 0 1-.459-.379.92.92 0 0 1-.163-.543h.825c.008.13.05.234.124.31a.395.395 0 0 0 .296.115c.277 0 .415-.205.415-.615 0-.38-.17-.569-.508-.569-.192 0-.335.062-.43.186l-.654-.154z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g transform='matrix(1 0 0 -1 0 16)' fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='#2A3052' fillRule='nonzero'>\n                        <path d='M9.839 9.87a.5.5 0 0 0 .707 0l2.019-2.019a.5.5 0 1 0-.707-.707l-1.666 1.665-3.794-3.793a.5.5 0 0 0-.707 0l-.454.454-.823-.824a.5.5 0 1 0-.707.708L4.884 6.53a.5.5 0 0 0 .707 0l.454-.454L9.839 9.87z' />\n                        <path d='M12.428 8.79a.5.5 0 1 0 1 0V6.667a.5.5 0 0 0-.5-.5h-2.12a.5.5 0 1 0 0 1h1.62v1.621zM3 11.7h10.5a.5.5 0 1 0 0-1H3a.5.5 0 1 0 0 1z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='stroke-white' d='M3 4h10.5' stroke='#2A3052' strokeLinecap='round' />\n                        <path d='M11.074 5.454a.5.5 0 0 0-.707-.708L5.924 9.191a.5.5 0 0 0 .041.744l.953.762-1.272 1.272a.5.5 0 0 0 .707.707l1.666-1.667a.5.5 0 0 0-.04-.744l-.953-.762 4.048-4.05z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M11.263 4.556l.034 3.944H10.282V6.26l-.676-.76H7.34v-.944z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='6.5' width='10' height='1' rx='.5' />\n                        <path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' fillRule='nonzero' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'put':\n                IconType = (\n                    <g fill='#2A3052'><path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconArrow }         from 'Assets/Common';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <IconArrow className='select-arrow' />\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst ContractInfo = ({\n    barrier_count,\n    contract_title,\n    contract_type,\n    currency,\n    proposal_info,\n}) => {\n    const icon_type = `${contract_type}${/^(call|put)$/i.test(contract_type) && barrier_count > 0 ? '_barrier' : ''}`.toLowerCase();\n\n    return (\n        <div className='box'>\n            <div className='left-column'>\n                <div className='type-wrapper'>\n                    <IconTradeType type={icon_type} className='type' />\n                </div>\n                <h4 className='trade-type'>{contract_title}</h4>\n            </div>\n            {(proposal_info.has_error || !proposal_info.id) ?\n                <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                    <span>{proposal_info.message}</span>\n                </div>\n                :\n                <div className='purchase-info-wrapper'>\n                    <span className='purchase-tooltip'>\n                        <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                    </span>\n                    <div className='info-wrapper'>\n                        <div>{localize('Stake')}:</div>\n                        <div><Money amount={proposal_info.stake} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Payout')}:</div>\n                        <div><Money amount={proposal_info.payout} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Net Profit')}:</div>\n                        <div><Money amount={proposal_info.profit} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Return')}:</div>\n                        <div>{proposal_info.returns}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    barrier_count : PropTypes.number,\n    contract_title: PropTypes.string,\n    contract_type : PropTypes.string,\n    currency      : PropTypes.string,\n    proposal_info : PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { localize }              from '_common/localize';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input_field.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !is_single_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages = {validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport SimpleBar         from 'simplebar-react';\nimport { IconArrow }     from 'Assets/Common';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex,\n}  from './helpers';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n            curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    onKeyPressed = (event) => {\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    tabIndex='0'\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            <SimpleBar style={{ 'height': '100%' }}>\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list-label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </SimpleBar>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''} ${highlightedIdx === idx ? 'highlighted' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Datepicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport { convertDurationUnit }  from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    toMoment }                  from 'Utils/Date';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst expiry_list = [\n    { text: localize('Duration'), value: 'duration' },\n];\n\nlet now_date,\n    min_date_duration,\n    max_date_duration,\n    min_date_expiry,\n    min_day,\n    max_day,\n    start_date_time;\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n}) => {\n    if (duration_min_max[contract_expiry_type]) {\n        const moment_now  = toMoment(server_time);\n        const new_min_day = convertDurationUnit(duration_min_max[contract_expiry_type].min, 's', 'd');\n        const new_max_day = convertDurationUnit(duration_min_max[contract_expiry_type].max, 's', 'd');\n        if (!now_date || moment_now.date() !== now_date.date() || (duration_unit === 'd' && (min_day !== new_min_day || max_day !== new_max_day))) {\n            if (duration_unit === 'd') {\n                min_day = new_min_day;\n                max_day = new_max_day;\n            }\n\n            const moment_today = moment_now.clone().startOf('day');\n\n            now_date          = moment_now.clone();\n            min_date_duration = moment_today.clone().add(min_day || 1, 'd');\n            max_date_duration = moment_today.clone().add(max_day || 365, 'd');\n            min_date_expiry   = moment_today.clone();\n        }\n    }\n\n    const moment_expiry = toMoment(expiry_date);\n    const is_same_day   = moment_expiry.isSame(toMoment(start_date), 'day');\n    if (is_same_day) {\n        const date_time = toMoment(start_date);\n        if (start_date && isTimeValid(start_time)) {\n            const [ hour, minute ] = start_time.split(':');\n            date_time.hour(hour).minute(minute).second(0).add(5, 'minutes');\n        }\n        // only update start time every five minutes, since time picker shows five minute durations\n        const moment_start_date_time = toMoment(start_date_time);\n        if (!start_date_time || moment_start_date_time.isAfter(date_time) || moment_start_date_time.clone().add(5, 'minutes').isBefore(date_time) ||\n            (moment_start_date_time.minutes() !== date_time.minutes() && date_time.minutes() % 5 === 0)) {\n            start_date_time = date_time.unix();\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n    const datepicker_footer = min_day > 1 ?\n        localize('The minimum duration is [_1] days', [min_day]) :\n        localize('The minimum duration is [_1] day',  [min_day]);\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_same_day,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        {duration_unit === 'd' && !is_nativepicker ?\n                            <Datepicker\n                                name='duration'\n                                min_date={min_date_duration}\n                                max_date={max_date_duration}\n                                mode='duration'\n                                onChange={onChange}\n                                value={duration || min_day}\n                                is_read_only\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                footer={datepicker_footer}\n                            /> :\n                            <InputField\n                                type='number'\n                                name='duration'\n                                value={duration}\n                                onChange={onChange}\n                                is_nativepicker={is_nativepicker}\n                                error_messages = {validation_errors.duration || []}\n                            />\n                        }\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <Datepicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable={false}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {is_same_day &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                value={expiry_time}\n                                placeholder='12:00'\n                                start_date={start_date_time}\n                                sessions={sessions}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time    : PropTypes.string,\n    expiry_type    : PropTypes.string,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    server_time    : PropTypes.object,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { IconArrow }   from 'Assets/Common';\nimport {\n    daysFromTodayTo,\n    formatDate,\n    isDateValid,\n    toMoment }         from 'Utils/Date';\nimport DatePickerInput from './date_picker_input.jsx';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.PureComponent {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_close_btn_visible : false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { value, mode } = this.props;\n        this.updateDatePickerValue(value, mode);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_close_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_close_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value), 'duration');\n        } else {\n            this.updateDatePickerValue(value);\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value, this.props.mode);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: '' }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value, mode) => {\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const { date_format, start_date } = this.props;\n        const new_date = (mode === 'duration') ? toMoment().add(value, 'days').format(date_format) : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = toMoment(start_date).format(date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker-display'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker-native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker-native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                <div\n                    className='datepicker-display-wrapper'\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                >\n                    <DatePickerInput\n                        class_name='datepicker-display'\n                        mode={this.props.mode}\n                        name={this.props.name}\n                        placeholder={this.props.placeholder}\n                        onClick={this.handleVisibility}\n                        is_read_only={true}\n                        value={this.state.value}\n                    />\n                    <span\n                        className={classNames('picker-calendar-icon', {\n                            show: !this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.handleVisibility}\n                    />\n                    <span\n                        className={classNames('close-circle-icon', {\n                            show: this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.clearDatePickerInput}\n                    />\n                </div>\n                <div\n                    className={classNames('datepicker-calendar', {\n                        show: this.state.is_datepicker_visible,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    >\n                        <DatePickerInput\n                            class_name='calendar-input'\n                            mode={this.props.mode}\n                            name={this.props.name}\n                            onChange={this.onChangeInput}\n                            placeholder={this.props.placeholder}\n                            is_read_only={'is_read_only' in this.props ? this.props.is_read_only : false}\n                            value={this.state.value}\n                        />\n                    </Calendar>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...DatePickerInput.propTypes,\n    ...Calendar.propTypes,\n};\n\nexport default DatePicker;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nexport default function DatePickerInput(props) {\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            className={props.class_name}\n            readOnly={props.is_read_only}\n            placeholder={props.placeholder\n                || (props.mode === 'duration' ? localize('Select a duration') : localize('Select date'))}\n            onChange={props.onChange}\n            onClick={props.onClick}\n            value={props.value || ''}\n        />\n    );\n}\n\nDatePickerInput.propTypes = {\n    class_name  : PropTypes.string,\n    id          : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    is_read_only: PropTypes.bool,\n    mode        : PropTypes.string,\n    name        : PropTypes.string,\n    onChange    : PropTypes.func,\n    onClick     : PropTypes.func,\n    placeholder : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number, // duration\n        PropTypes.string, // date\n    ]),\n};\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { toMoment }   from 'Utils/Date';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\nimport CalendarPanel  from './calendar_panel.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = toMoment(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    // navigates to next or previous's month/year/decade/century\n    navigators = {\n        nextMonth      : () => { this.navigateTo(1,   'months', true); },\n        previousMonth  : () => { this.navigateTo(1,   'months', false); },\n        nextYear       : () => { this.navigateTo(1,   'years',  true); },\n        previousYear   : () => { this.navigateTo(1,   'years',  false); },\n        nextDecade     : () => { this.navigateTo(10,  'years',  true); },\n        previousDecade : () => { this.navigateTo(10,  'years',  false); },\n        nextCentury    : () => { this.navigateTo(100, 'years',  true); },\n        previousCentury: () => { this.navigateTo(100, 'years',  false); },\n    };\n\n    // selects a day, a month, a year, or a decade\n    panelSelectors = {\n        date  : (e, is_disabled) => { this.updateSelectedDate(e, is_disabled); },\n        month : (e) => { this.updateSelected(e, 'month'); },\n        year  : (e) => { this.updateSelected(e, 'year'); },\n        decade: (e) => { this.updateSelected(e, 'decade'); },\n    };\n\n    // sets Calendar active view\n    calendarViews = {\n        date  : () => { this.setState({ calendar_view: 'date'   }); },\n        month : () => { this.setState({ calendar_view: 'month'  }); },\n        year  : () => { this.setState({ calendar_view: 'year'   }); },\n        decade: () => { this.setState({ calendar_view: 'decade' }); },\n    };\n\n    navigateTo = (value, unit, is_add) => {\n        const { date_format, max_date, min_date } = this.props;\n\n        let new_date = toMoment(this.state.calendar_date)[is_add ? 'add' : 'subtract'](value, unit).format(date_format);\n\n        if (unit === 'months' && this.isPeriodDisabled(new_date, 'month')) return;\n\n        if (unit === 'years'  && this.isPeriodDisabled(new_date, 'years')) {\n            new_date = is_add ? max_date : min_date;\n        }\n\n        this.setState({ calendar_date: toMoment(new_date).format(date_format) }); // formatted date\n    };\n\n    updateSelectedDate = (e, is_disabled) => {\n        if (is_disabled) {\n            return;\n        }\n\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).startOf(unit);\n        const end_of_period   = toMoment(date).endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, max_date, min_date, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    onClick={this.navigators}\n                    onSelect={this.calendarViews}\n                    calendar_view={calendar_view}\n                />\n                <CalendarPanel\n                    calendar_date={calendar_date}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    max_date={max_date}\n                    min_date={min_date}\n                    start_date={start_date}\n                    onClick={this.panelSelectors}\n                    selected_date={selected_date}\n                    calendar_view={calendar_view}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    onClick={this.setToday}\n                    has_today_btn={has_today_btn}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarFooter({ footer, has_today_btn, onClick }) {\n    return (\n        <div className='calendar-footer'>\n            { footer && <span className='calendar-footer-extra'>{footer}</span> }\n            { has_today_btn &&\n                <CalendarButton className='calendar-footer-btn'>\n                    <a role='button' onClick={onClick}>{localize('Today')}</a>\n                </CalendarButton>\n            }\n        </div>\n    );\n}\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { toMoment }   from 'Utils/Date';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarHeader({ calendar_date, isPeriodDisabled, onClick, onSelect, calendar_view }) {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    return (\n        <div className='calendar-header'>\n            <CalendarButton\n                className={classNames('calendar-prev-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    (is_date_view || is_month_view) && onClick.previousYear())\n                    || (is_year_view   && onClick.previousDecade())\n                    || (is_decade_view && onClick.previousCentury()\n                    )\n                }\n            />\n            <CalendarButton\n                className={classNames('calendar-prev-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.previousMonth}\n            />\n\n            <div className='calendar-select'>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar-select-month-btn'\n                        is_hidden={!is_date_view}\n                        label={moment_date.format('MMM')}\n                        onClick={onSelect.month}\n                    />\n                }\n                <CalendarButton\n                    className='calendar-select-year-btn'\n                    onClick={() => ((is_date_view || is_month_view) ? onSelect.year() : onSelect.decade())}\n                >\n                    { (is_date_view || is_month_view) && moment_date.year() }\n                    { is_year_view   && `${moment_date.clone().subtract(1, 'years').year()}-${moment_date.clone().add(10, 'years').year()}`  }\n                    { is_decade_view && `${moment_date.clone().subtract(10, 'years').year()}-${moment_date.clone().add(109, 'years').year()}` }\n                </CalendarButton>\n            </div>\n\n            <CalendarButton\n                className={classNames('calendar-next-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.nextMonth}\n            />\n            <CalendarButton\n                className={classNames('calendar-next-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    ((is_date_view || is_month_view) && onClick.nextYear())\n                    || (is_year_view   && onClick.nextDecade())\n                    || (is_decade_view && onClick.nextCentury())\n                )}\n            />\n        </div>\n    );\n}\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    onClick         : PropTypes.object,\n    onSelect        : PropTypes.object,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nexport default function CalendarPanel(props) {\n    const calendar_panel = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <div className='calendar-panel'>\n            { calendar_panel[props.calendar_view] }\n        </div>\n    );\n}\n\nCalendarPanel.propTypes = {\n    calendar_view: PropTypes.string,\n};\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { padLeft }        from '_common/string_util';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nconst getDays = ({ calendar_date, date_format, max_date, min_date, start_date, onClick, selected_date }) => {\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const first_day          = moment_month_start.day();\n    const last_day           = moment_month_end.day();\n    const moment_min_date    = toMoment(min_date);\n    const moment_max_date    = toMoment(max_date);\n    const moment_selected    = toMoment(selected_date);\n\n    for (let i = first_day; i > 0; i--) {\n        dates.push(moment_month_start.clone().subtract(i, 'day').format(date_format));\n    }\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    for (let i = 1; i <= 6 - last_day; i++) {\n        dates.push(moment_month_end.clone().add(i, 'day').format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n    dates.map((date) => {\n        const moment_date = toMoment(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = moment_date.isBefore(moment_min_date) || moment_date.isAfter(moment_max_date) ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) || moment_date.isAfter(moment_start_date.clone().add(1, 'day'))));\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar-date', {\n                    active  : is_active && !is_disabled,\n                    today   : is_today,\n                    disabled: is_disabled,\n                })}\n                onClick={(e) => { onClick.date(e, is_disabled); }}\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst week_headers = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar-date-panel'>\n            {week_headers.map((item, idx) => (<span key={idx} className='calendar-date-header'>{item}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { localize }       from '_common/localize';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nconst getMonthHeaders = () => ({\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n});\n\nexport const CalendarMonths = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const moment_date    = toMoment(calendar_date);\n    const selected_month = toMoment(selected_date).month();\n    const month_headers  = getMonthHeaders();\n\n    return (\n        <div className='calendar-month-panel'>\n            {Object.keys(month_headers).map((month, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-month', {\n                        active  : idx === selected_month,\n                        disabled: isPeriodDisabled(moment_date.month(month), 'month'),\n                    })}\n                    onClick={onClick.month}\n                    data-month={idx}\n                >\n                    {month_headers[month]}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarYears = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = toMoment(selected_date).year();\n    const moment_date   = toMoment(calendar_date);\n    const current_year  = moment_date.year();\n    const years         = [];\n    for (let year = current_year - 1; year < current_year + 11; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar-year-panel'>\n            {years.map((year, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-year', {\n                        disabled: isPeriodDisabled(moment_date.year(year), 'year'),\n                        active  : year === selected_year,\n                    })}\n                    onClick={onClick.year}\n                    data-year={year}\n                >\n                    {year}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarDecades = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = toMoment(selected_date).year();\n    const moment_date   = toMoment(calendar_date);\n\n    const decades = [];\n    let min_year  = moment_date.year() - 10;\n    for (let i = 0; i < 12; i++) {\n        const max_year = min_year + 9;\n        const range    = `${min_year}-${max_year}`;\n        decades.push(range);\n        min_year = max_year + 1;\n    }\n\n    return (\n        <div className='calendar-decade-panel'>\n            {decades.map((range, idx) => {\n                const [start_year, end_year] = range.split('-');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar-decade', {\n                            disabled: isPeriodDisabled(moment_date.year(start_year), 'year') && isPeriodDisabled(moment_date.year(end_year), 'year'),\n                            active  : start_year === selected_year,\n                        })}\n                        onClick={onClick.decade}\n                        data-decade={range}\n                    >\n                        {range}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number_selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={`number-selector__selection${selected_number === i ? ' selected' : ''}`}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n    validation_errors,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {(!is_today && start_time) &&\n                <TimePicker\n                    onChange={onChange}\n                    is_align_right\n                    name='start_time'\n                    value={start_time}\n                    placeholder='12:00'\n                    start_date={start_date}\n                    sessions={sessions}\n                    is_clearable={false}\n                    is_nativepicker={is_nativepicker}\n                    validation_errors={validation_errors.start_time}\n                />\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized     : PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    onChange         : PropTypes.func,\n    sessions         : MobxPropTypes.arrayOrObservableArray,\n    start_date       : PropTypes.number,\n    start_dates_list : MobxPropTypes.arrayOrObservableArray,\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(StartDate);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\nimport Localize     from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from 'App/Components/Layout/Header';\nimport header_links             from 'App/Constants/header_links';\nimport { connect }              from 'Stores/connect';\n\nconst Header = ({\n    account_type,\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    account_type={account_type}\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    account_type             : PropTypes.string,\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        account_type             : client.account_title,\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport Localize            from 'App/Components/Elements/localize.jsx';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n    account_type,\n}) => (\n    <div className='acc-balance'>\n        <div className='acc-switcher-container'>\n            <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                <p className='acc-balance-type'>\n                    <Localize str={`${account_type} Account`} />\n                </p>\n                <p className='acc-balance-id'>{loginid}</p>\n                <IconArrow className='select-arrow' />\n            </div>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={400}\n                classNames='acc-switcher-wrapper'\n                unmountOnExit\n            >\n                <div className='acc-switcher-wrapper'>\n                    <AccountSwitcher\n                        is_visible={is_dialog_on}\n                        toggle={toggleDialog}\n                        is_upgrade_enabled={is_upgrade_enabled}\n                        onClickUpgrade={onClickUpgrade}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n        {typeof balance !== 'undefined' &&\n        <p className='acc-balance-amount'>\n            <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n            {balance}\n        </p>\n        }\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { UpgradeButton } from 'App/Components/Elements/AccountSwitcher/upgrade_button.jsx';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services/index';\nimport { connect }       from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.props.account_list.length > 0) &&\n                this.props.account_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={this.doSwitch.bind(this, account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list      : PropTypes.array,\n    is_logged_in      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nconst account_switcher = connect(\n    ({ client }) => ({\n        account_list : client.account_list,\n        is_logged_in : client.is_logged_in,\n        switchAccount: client.switchAccount,\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes_config';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_portfolio_drawer_on) {\n                        togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}