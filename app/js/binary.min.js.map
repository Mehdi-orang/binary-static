{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Stores/base-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/index.js","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui-loader.jsx","webpack:///./src/javascript/app_2/Services/ws-methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Common/icon-clock.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-error.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-blue.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-price-move.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Form/button-toggle-menu.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/Constants/date-time.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Containers/remaining-time.jsx","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query-string.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/allow-equals.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon-back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-outline.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-question.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-red-dot.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-success.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-warning.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/VerticalTabs/vertical-tab-content-container.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/VerticalTabs/vertical-tab-headers.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Media/index.js","webpack:///./src/javascript/app_2/App/Components/Form/Checkbox/index.js","webpack:///./src/javascript/app_2/App/Components/Form/Radio/radio.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Constants/routes-config.js","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract-type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm-element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade-params.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route-with-sub-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty-portfolio-message.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/digits.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info-box.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon-flag.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network-monitor.js","webpack:///./src/javascript/app_2/Services/socket-general.js","webpack:///./src/javascript/app_2/Services/outdated-browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client-store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative-validation-rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common-store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-marker-helpers.js","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-spot-label.jsx","webpack:///./src/javascript/app_2/Utils/Date/date-time.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade-store.js","webpack:///./src/javascript/app_2/Utils/URL/url-helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract-type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui-store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base-name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar-today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-country-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minimize.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-plus.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-positions.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-link.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/contract-type-cell.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon-trade-types.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-details.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-details-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./src/images/app_2/portfolio/ic-check.svg","webpack:///./src/images/app_2/portfolio/ic-cross.svg","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close-button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast-message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app-contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server-time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network-status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/VerticalTabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/VerticalTabs/vertical-tab.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-chart.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill-template.js","webpack:///./src/javascript/app_2/App/Components/Elements/Media/media-description.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Media/media-heading.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Media/media-icon.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Media/media-item.jsx","webpack:///./src/javascript/app_2/App/Components/Form/Checkbox/checkbox.jsx","webpack:///./src/javascript/app_2/App/Components/Form/Radio/index.js","webpack:///./src/javascript/app_2/App/Components/Form/Radio/radio-group.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language-dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-purchase.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-theme.jsx","webpack:///./src/images/app_2/settings/img-theme-dark.svg","webpack:///./src/images/app_2/settings/img-theme-light.svg","webpack:///./src/javascript/app_2/Assets/Settings/index.js","webpack:///./src/javascript/app_2/Assets/Settings/icon-charts.jsx","webpack:///./src/javascript/app_2/Assets/Settings/icon-close.jsx","webpack:///./src/javascript/app_2/Assets/Settings/icon-language.jsx","webpack:///./src/javascript/app_2/Assets/Settings/icon-purchase.jsx","webpack:///./src/javascript/app_2/Assets/Settings/icon-theme.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account-info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/index.js","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/icon_accounts_currency.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon-logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/deposit-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install-pwa-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/upgrade-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu-links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Routes/binary-link.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form-layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon-trade-categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/trade-categories.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message-box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase-lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-lock.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/purchase-button.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/items.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/native-select.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/App/Components/Form/InputField/input-field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/increment-buttons.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/input.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-up.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-down.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/helpers.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/dialog.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/end-time.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number-selector.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile-widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-prediction.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit-display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit-spot.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-particles.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-pointer.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract-error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-expired.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-button.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-longcode.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/chart-close-btn.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon-contract-close.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button-link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login-prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app-config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/signup-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/switch-button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle-drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-notifications-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/empty-notification.jsx","webpack:///./src/javascript/app_2/App/Constants/header-links.js","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-component.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial-of-service.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register-service-worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_dateTime","forEach","_iconArrow","_iconBack","_iconCalendarToday","_iconCalendar","_iconChevronDoubleLeft","_iconChevronDoubleRight","_iconChevronLeft","_iconChevronRight","_iconCountryFlag","_iconClear","_iconClock","_iconClose","_iconError","_iconExclamation","_iconInfoBlue","_iconInfoOutline","_iconFlag","_iconMinimize","_iconMinus","_iconPlus","_iconQuestion","_iconRedDot","_iconSuccess","_iconWarning","Button","_ref$className","className","classNameSpan","has_effect","id","is_disabled","onClick","tabIndex","text","wrapperClassName","classes","_classnames2","default","effect","button","_react2","disabled","wrapper","node","string","bool","func","_logout","BinarySocketGeneral","WS","_localize","_fillTemplate","Localize","str","replacers","localized","localize","test","Fragment","fillTemplate","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_Services","_Date","_barrier","_duration","_startDate","_contract","ContractType","available_contract_types","available_categories","contract_types","trading_times","has_only_forward_starting_contracts","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","forward_starting_dates","find","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","isTimeValid","split","_ref2","_slicedToArray","toMoment","ServerTime","getTradingTimes","_ref3","trading_times_response","submarkets","symbols","symbol","underlying","abrupt","sent","markets","echo_req","open","times","close","_x2","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","contractsFor","contracts_for","available","start_type","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","sub_cats","title","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","clone","add","isSameOrBefore","getExpiryTime","expiry_time","market_close_times","start_time","end_time","market_close_time","end_moment","expiry_sessions","minDate","diff","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getContractCategories","contract_types_list","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","toLowerCase","oneOfType","number","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","domain","RegExp","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","getChartConfig","contract_info","start_epoch","date_start","end_epoch","getEndSpotTime","date_expiry","granularity","calculateGranularity","chart_type","hour_to_granularity_map","duration","getDisplayStatus","status","isEnded","profit","getEndSpot","isUserSold","sell_spot","exit_tick","sell_spot_time","exit_tick_time","getFinalPrice","sell_price","bid_price","getIndicativePrice","getLastTickFromTickStream","tick_stream","is_expired","is_settleable","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","Tooltip","state","show_tooltip_balloon_icon","onMouseEnter","setState","onMouseLeave","_props","alignment","classNameIcon","has_error","icon","message","icon_class","tooltip--error","data-tooltip","data-tooltip-pos","IconInfoOutline","IconInfoBlue","tooltip__balloon-icon--show","IconQuestion","IconRedDot","_iconBell","_iconCashier","_iconHamburger","_iconPortfolio","_iconStatement","_iconTrade","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","unit","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","some","Fieldset","header","is_center","fieldset_header_class","fieldset_info_class","array","error404","apps","exclusion","financial","history","index","personal","root","token","trade","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","payout","theme","is_dark_mode_on","positions_drawer","is_positions_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","pushDataLayer","_logic","isDigitContract","getDigitInfo","digits_info","_getLastTickFromTickS","tick","epoch","current","createDigitInfo","spot","spot_time","digit","_iconMaximize","_iconPositions","_iconSettings","CommonPropTypes","calendar_date","isPeriodDisabled","selected_date","updateSelected","_drawerHeader","_drawerItem","_drawerItems","_drawer","_drawerToggle","_toggleDrawer","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","getContractTypeDisplay","ASIANU","ASIAND","CALL","CALLE","PUT","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYMISS","EXPIRYRANGE","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","_iconTradeTypes","UILoader","classNameBlock","loading_class","block_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","contract_id","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","is_forced","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeProposalOpenContractOnBuy","buy_request","addSubscriptionFromRequest","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconClock","_ref$height","height","_ref$width","width","xmlns","fillRule","stroke","strokeLinecap","strokeLinejoin","IconError","transform","x","y","rx","IconPriceMove","classNamePath","IconType","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","IconClose","any","ButtonToggleMenu","buttons_arr","onChange","menu","val","idx","button-menu__button--active","_button2","selected_value","changeValue","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","week_headers_abbr","getDaysOfTheWeek","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","getDecade","moment_date","year","getCentury","_reactRouter","normalizePath","path","findRouteByPath","routes_config","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","_connect","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_ui","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpotLabel","SPOT_ENTRY","MarkerSpot","MARKER_TYPES_CONFIG","LINE_END","marker_config","content_config","line_style","label","LINE_PURCHASE","LINE_START","SPOT_EXIT","spot_className","SPOT_MIDDLE","spot_count","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","is_equal","proposal_properties_alternative_names","is_digit","removable_proposal_properties","hasCallPutEqual","contract_type_list","hasDurationForCallPutEqual","contract_duration_list","rise_fall_equal","isRiseFallEqual","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconBack","IconChevronLeft","IconChevronRight","IconSuccess","IconWarning","_positionsHelper","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","VerticalTabContentContainer","PureComponent","selected","items","TabContent","VerticalTabHeaders","IconComponent","vertical-tab__header--active","vertical-tab__header__icon--active","_mediaDescription","_mediaHeading","_mediaIcon","Radio","clickHandler","radio-group__circle--selected","_iconLogout","_react","_reactRouterDom","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","routesConfig","route_default","component","Redirect","to","icon_component","IconPortfolio","exact","IconStatement","Trade","FullPageModal","cancel_button_text","confirm_button_text","onConfirm","onCancel","is_visible","Contract","is_mobile","_contractTypeWidget2","_iconTradeCategories","_PopConfirm","Purchase","is_contract_mode","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","resetPurchase","togglePurchaseLock","purchase_info","proposal_info","info","is_high_low","is_loading","purchase_button","_purchaseButton2","is_purchase_error","_fieldset2","_MessageBox2","_PurchaseLock2","_contractInfo2","has_increased","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","_classNames","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","ui_store","renderCards","MobxPropTypes","arrayOrObservableArray","_login","_appConfig","Route","render","_loginPrompt2","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","handleClickOutside","contains","is_open","toggle","drawer_bg_class","drawer--show","drawer_class","CSSTransition","in","classNames","enter","enterDone","exit","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","_Footer","IconPositions","_digits","_LastDigitPrediction","Digits","display_status","is_trade_page","last_digit","is_ended","LastDigitPrediction","_InfoBox","InfoBox","onClickNewTrade","removeError","sell_info","box_class","ended","Contents","InfoBoxLongcode","_contractError2","error_message","onClickClose","_chartCloseBtn2","removeSellError","onCloseContract","IconFlag","color","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","utc","valueOf","landing_company_name","updateAccountList","account_list","upgrade_info","getBasicUpgradeInfo","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarativeValidationRules","input","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCrypto","isCryptocurrency","has_tooltip","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chartBarriers","_chartMarkers","_details","is_left_epoch_set","forget_id","chart_config","tick_count","setTickChartView","purchase_time","createChartBarrier","createChartMarkers","handleDigits","has_left_epoch","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","cleanupContractChartView","drawChart","extendObservable","handleSell","proposal_response","sold_for","transaction_id","getDetailsExpiry","getDetailsInfo","removeBarriers","createBarriers","not_draggable","updateBarrierShade","_chartMarkerHelpers","_markers","addTickMarker","addMarker","marker_spots","marker_lines","createMarkerSpotEntry","_marker_spots","createMarkerSpotExit","createMarkerStartTime","_marker_lines","createMarkerExpiry","createMarkerPurchaseTime","marker_obj","marker_type","markers","createMarker","addLabelAlignment","arr","prev_tick","align_label","unique","is_entry_spot","is_middle_spot","is_exit_spot","createMarkerSpotMiddle","createMarkerConfig","_extend2","getSpotCount","end_spot_time","entry_tick_time","component_props","spot_value","entry_tick","spot_epoch","handleHoverToggle","show_label","has_hover_toggle","marker_spot","_markerSpot2","chart-spot-label__value-container--won","chart-spot-label__value-container--lost","defaultProps","oneOf","createFromInputFallback","_d","Date","NaN","epochToMoment","isValid","isUTC","setTime","moment_obj","convertToUnix","toGMTFormat","formatDate","date_format","daysFromTodayTo","startOf","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","addDays","num_of_days","addMonths","num_of_months","addYears","num_of_years","subDays","subMonths","subYears","date_1","date_2","getStartOfMonth","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","is_sold_before_start","txt_start_time","txt_entry_spot","_money2","end_spot","indicative_price","is_user_sold","_formatResponse","positions","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","getPositionIndexById","populateResultDetails","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","profit_loss","current_tick","getCurrentTick","unshift","clearTable","initializePortfolio","findIndex","purchase","portfolio_pos","active_positions","portfolioHandler","transactionHandler","contract_response","current_spot","getDurationTime","getDurationUnitText","getDurationPeriod","parseFloat","details","longcode","getDurationUnitValue","obj_duration","duration_ms","asMilliseconds","unit_map","name_plural","name_singular","_chartBarrierStore","_chartMarkerStore","_chart","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","scroll_to_left_epoch","scroll_to_left_epoch_offset","percentage","zoom","removeMarkers","resetScrollZoom","is_title_enabled","updateGranularity","updateEpochScrollToOffset","updateChartZoom","updateEpochScrollToValue","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_queryString","_allowEquals","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validationRules2","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","query","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor35","_descriptor36","changeDurationValidationRules","onAllowEqualsChange","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","validateAllProperties","is_over","processPurchase","onMount","openPositionsDrawer","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","obj_old_values","prev_currency","getMinPayout","onChangeSymbolAsync","setHasOnlyForwardingContracts","processTradeParams","is_query_string_applied","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","getQueryString","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","getProposalInfo","setChartBarrier","query_params","duration_options","_ref5","_callee4","_context4","refresh","prepareTradeStore","_x4","runInAction","_callee6","_context6","_this9","query_string","URL","search","URLSearchParams","encodeURI","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","stake","multiplier","rise_fall","high_low","touch","end","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","start_moment_clone","_value$split","_value$split2","_value$split3","_value$split4","_proposal_response$ec","Duration","StartDate","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeStartDate","onChangeExpiry","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","market_open_times","createProposalRequestForContract","ask_price","returns","display_value","contract_basis","obj_contract_basis","toFixed","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","getDurationFromUnit","handleResize","autorun","screen_width","innerWidth","is_blurred","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_baseName2","_header2","_errorBoundary2","_appContents2","_routes2","_PositionsDrawer2","_toastMessage2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","_ttReactCustomScrollbars","PositionsDrawer","onUnmount","active_contract_id","is_empty","onClickSell","onClickRemove","openContract","toggleDrawer","body_content","_emptyPortfolioMessage2","_positionsDrawerCard2","active_position","positions-drawer--open","positions-drawer--contract-mode","IconMinimize","Scrollbars","style","autoHide","removePositionById","togglePositionsDrawer","IconArrow","_ref$is_bold","is_bold","fillOpacity","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconCountryFlag","IconCountry","xlinkHref","mask","strokeOpacity","IconClear","IconMinus","IconPlus","IconMaximize","IconSettings","_iconPriceMove","PositionsDrawerCard","getTimePercentage","positions-drawer-card__wrapper--active","_resultOverlay2","_contractLink2","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--red","display_name","_contractTypeCell2","_ProgressSlider2","ticks_count","has_result","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","positions-drawer-card__indicative--movement-complete","btn--loading","_resultDetails2","contract_end_time","ContractLink","_Types","ContractTypeCell","IconTradeType","ProgressSlider","_positionsProgressTicks2","_remainingTime2","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","ProgressTicks","arr_ticks","progress-slider__ticks-step--marked","ResultDetails","toggleDetails","result-details__wrapper--is-open","_resultDetailsItem2","transaction_ids","getBarrierLabel","getBarrierValue","addCommaToNumber","result-details__toggle--is-open","num","digitTypeMap","current_time","duration_from_purchase","round","isDigitType","ResultDetailsItem","ResultOverlay","positions-drawer-card__result--won","positions-drawer-card__result--lost","result__caption--won","result__caption--lost","_icCheck2","_icCross2","styles","_objectWithoutProperties","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","_closeButton2","shape","CloseButton","ToastMessage","toast","_ToastMessage2","arrayOf","AppContents","app-contents--show-positions-drawer","app-contents--contract-mode","app-contents--is-blurred","ProptTypes","withRouter","Footer","hideBlur","is_dark_mode","is_language_dialog_visible","showBlur","toggleSettingsDialog","TogglePositions","NetworkStatus","_serverTime2","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","ToggleFullScreen","gmt_time","_networkStatus","_toggleFullscreen","_togglePositions","_toggleSettings","_tooltip2","tooltip","network-status__circle--offline","class","network-status__circle--online","network-status__circle--blinker","onFullScreen","is_full_screen","fullscreen_map","element","toggleFullScreen","stopPropagation","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","toggle_positions_class","ic-positions--active","_settingsDialog","toggle_settings_class","ic-settings--active","SettingsDialog","toggleDialog","_SettingsDialog","_Settings","footer_settings_btn","wrapper_ref","setWrapperRef","settings_content","IconTheme","ThemeSelectSettings","IconLanguage","LanguageSettings","IconCharts","ChartSettings","IconPurchase","PurchaseSettings","modal_root","removeChild","settings_dialog_container_class","settings-dialog__container--hide","ReactDOM","createPortal","_VerticalTabs2","classNameHeader","_verticalTabContentContainer","_verticalTabHeaders","VerticalTab","changeSelected","_Media","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_Media2","MediaHeading","_localize3","MediaDescription","MediaIcon","_Radio2","onToggle","_Checkbox2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","cloneElement","last","Checkbox","checkbox__box--active","_radio","RadioGroup","_localize2","is_settings_on","_languageDialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","settings-dialog__language-dialog-container--show","settings-dialog__language-link--active","settings-dialog__language-name--active","is_purchase_confirmed","togglePurchaseConfirmation","toggleDarkMode","_imgThemeDark2","theme-select-settings__option__icon--active","_imgThemeLight2","xmlnsXlink","x1","y1","x2","y2","stopColor","stopOpacity","_iconCharts","_iconLanguage","_iconPurchase","_iconTheme","_Header","Header","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","AccountInfo","is_upgrade_enabled","is_dialog_on","UpgradeButton","DepositButton","LoginButton","SignupButton","hideInstallButton","_accountInfo","_depositButton","_installPwaButton","_loginButton","_upgradeButton","_menuLinks","_signupButton","_toggleMenuDrawer","_toggleNotificationsDrawer","_AccountSwitcher","acc-info--show","acc-info--is-virtual","AccountSwitcher","_accountSwitcher","_AccountsCurrency","_Drawer","accounts_toggle_btn","handleLogout","account_loginid","real_accounts","vrt_account","main_account_title","acc-switcher__account--selected","doSwitch","IconAccountsCurrency","virtual_loginid","IconLogout","account_switcher","virtual_account_loginid","_icon_accounts_currency","IconCurrency","InstallPWAButton","prompt_event","prompt","userChoice","choice_result","outcome","login_only","active_class","_routesConfig2","NavLink","activeClassName","IconBell","IconCashier","IconHamburger","IconTrade","SmartChart","form_wrapper_class","should_show_last_digit_stats","Suspense","fallback","_uiLoader2","_digits2","_infoBox2","onSymbolChange","updateChartType","scroll_to_epoch","scroll_to_offset","chart_zoom","_test2","_formLayout2","is_contract_visible","_fullPageModal2","websiteUrl","Test","setVisibility","stateVisibility","container","fontSize","lineHeight","zIndex","background","padding","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","entries","v","_ref4","FormLayout","_screenSmall2","_screenLarge2","ScreenLarge","sidebar__items--blur","_contractType2","_tradeParams2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","onSubmitButtonClick","handleInfoVisibility","handleInfoClick","handleNavigationClick","handleNextClick","navigationList","navigationLength","nextIndex","list_item","handlePrevClick","prevIndex","is_dialog_open","is_info_dialog_open","onWidgetClick","onBackButtonClick","getDisplayText","_this$props","findInArray","getNavigationList","contract-type-widget__display--clicked","IconTradeCategory","category","_contractTypeDialog2","_contractTypeList2","_tradeTypeInfoDialog2","_tradeTypeInfoItem2","IconCategory","ContractTypeDialog","_fullScreenDialog2","ContractTypeList","_contractTypeItem2","objectOrObservableObject","ContractTypeItem","TradeTypeInfoDialog","_tradeCategories","TradeTypeInfoItem","TradeCategories","trade-type-info-navigation__circle-button--active","TradeTypeTemplate","_popconfirm","_popconfirmElement","handleClose","handleOpen","popconfirm_element","Children","child","ContractInfo","is_loaded_with_error","trade-container__error","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_errorBalance","_errorGeneral","_errorLogin","_iconLock","PurchaseLock","IconLock","btn-purchase--disabled","btn-purchase--disabled-bar","btn-purchase--animated","Barrier","LastDigit","Amount","is_single_currency","_InputField2","classNameInlinePrefix","classNameInput","error_messages","fractional_digits","inline_prefix","is_autocomplete_disabled","is_float","is_incrementable","is_negative_disabled","max_length","_buttonToggleMenu2","_DropDown2","trade-container__currency-options-dropdown","classNameDisplay","has_symbol","is_alignment_left","_allowEquals2","observableObject","Dropdown","list_ref","createRef","curr_index","getItemFromValue","is_list_visible","onKeyPressed","is_single_option","getValueFromIndex","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","_nativeSelect2","left_alignment_style","list_width","isArrayLike","dropdown--left","dropdown--show","dropdown--disabled","dropdown__display--clicked","dropdown__display--has-symbol","onKeyDown","dropdown__select-arrow--left","onEntered","offsetWidth","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","renderThumbHorizontal","_items2","Items","list__item--selected","getCurrencyName","NativeSelect","isArray","InputField","checked","classNamePrefix","data_tip","data_value","helper","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","_ref$is_unit_at_right","is_unit_at_right","max_value","min_value","placeholder","prefix","required","has_valid_length","max_is_disabled","min_is_disabled","getDecimals","array_value","incrementValue","increment_value","decimal_places","new_value","pow","calculateDecrementedValue","decrement_value","decrementValue","is_increment_input","_input2","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","input--error","increment_buttons","_incrementButtons2","input_tooltip","with-label","htmlFor","IncrementButtons","Input","autoComplete","data-for","data-tip","data-value","maxLength","navigator","userAgent","cursor","selectionStart","selectionEnd","readOnly","AllowEquals","has_callputequal_duration","has_callputequal","_Barriers","barrier_title","input_class","IconBarrierUp","IconBarrierDown","_iconBarrierUp","_iconBarrierDown","DurationWrapper","hasDurationUnit","duration_list","is_advanced_duration","du","new_duration_unit","new_duration_value","onChangeUiStore","onChangeMultiple","current_unit","advanced_duration_unit","simple_duration_unit","current_duration","simple_is_missing_duration_unit","current_duration_unit","has_missing_duration_unit","simple_is_not_type_duration","advanced_has_wrong_expiry","advanced_expiry_type","setDurationUnit","_duration2","duration_d","duration_h","duration_m","duration_s","duration_t","expiry_list","has_end_time","expiry","pop","duration_unit_text","changeDurationUnit","duration_value","shared_input","duration_name","number_input","has_toggle","_RangeSlider2","_advancedDuration2","number_input_props","shared_input_props","_simpleDuration2","_durationToggle2","new_trade_store_values","RangeSlider","first_tick","range-slider__error","steps","_tickSteps2","TickSteps","range-slider__ticks-step--active","range-slider__ticks-step--marked","DurationToggle","icon_className","advanced-simple-toggle__icon--active","AdvancedDuration","is_24_hours_contract","has_intraday_duration_unit","isSame","endtime_container_class","has-time","_DatePicker2","_TimePicker2","TradingDatePicker","max_date_duration","min_date_expiry","has_today_btn","has_intraday_unit","min_duration","daily","moment_contract_start_date_time","max_daily_duration","disable_year_selector","disable_trading_events","has_range_selection","min_date","max_date","DatePicker","date_value","holidays","is_datepicker_visible","is_clear_btn_visible","weekends","onClickOutside","mainNode","updateDatePickerValue","is_clearable","onSelectCalendar","onChangeInput","formatted_value","clearDatePickerInput","calendar","resetCalendar","new_date_value","new_date","current_date","_this$props2","renderInputField","_this$props3","initial_value","onChangeCalendarMonth","getTradingEvents","trading_events","events","dates","descrip","nativeEvent","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","_Calendar2","onSelect","duration_date","Calendar","_initialiseProps","calendar_view","hovered_date","_state","default_message","is_minimum","_calendarHeader2","navigateTo","switchView","_calendarBody2","onMouseOver","_calendarFooter2","setToday","view","start_of_month","getAttribute","updateSelectedDate","_props2","dataset","is_before","is_after","formatted_date","month","decade","_props3","default_date","_props4","now","_props5","start_of_period","endOf","_panels","CalendarBody","calendar_body","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendarDays","_calendarMonths","_calendarYears","_calendarDecades","days","moment_today","moment_cur_date","daysInMonth","moment_month_start","moment_month_end","moment_selected","padLeft","start_of_next_month","moment_start_date","moment_hovered","is_active","is_today","has_events","is_closes_early","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","getDays","moment_selected_date","data-month","_helper","_getDecade$split","_getDecade$split2","start_of_decade","end_of_decade","years","is_other_decade","data-year","decades","min_year","_decade$split","_decade$split2","is_other_century","data-decade","CalendarFooter","CalendarHeader","disable_month_selector","is_date_view","is_month_view","is_year_view","is_decade_view","century","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","_calendarButton2","calendar__nav--disabled","is_hidden","calendar__btn--disabled","CalendarButton","_endTime","TradingTimePicker","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","getBoundaries","selected_time","getSelectedTime","start","TimePicker","toggleDropDown","handleChange","arg","saveRef","nodeName","target_element","prefix_class","_dialog2","preClass","Dialog","start_time_moment","end_time_moment","milliseconds","to_compare_moment","_selected_time$split","_selected_time$split2","selectOption","current_value","prev_value","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","start_time_reset_minute","is_hour_enabled","is_minute_enabled","is_enabled","mm","getClosestTime","interval","market_open_time","SimpleDuration","has_label","filtered_arr","filterMinutesAndTicks","arr_five","_numberSelector2","arr_arr_numbers","selected_number","NumberSelector","arr_numbers","number-selector__selection--selected","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobileWidget2","MobileWidget","handleDialogClose","handleWidgetClick","display_array","from","getBarrier","querySelectorAll","offsetLeft","latest_digit","is_won","is_lost","_digitDisplay2","_lastDigitPointer2","_lastDigitParticles2","DigitDisplay","is_latest","is_selected","digits__digit--win","digits__digit--loss","_digitSpot2","_digit2","Digit","digits__digit-value--latest","digits__digit-value--selected","digits__digit-value--blink","digits__digit-value--win","digits__digit-value--loss","DigitSpot","digits__digit-spot-last--win","digits__digit-spot-last--loss","LastDigitParticles","digits__particles--explode","marginLeft","LastDigitPointer","digits__icon--win","digits__icon--loss","ContractError","_ref$message","InfoBoxExpired","InfoBoxGeneral","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","profit_percentage","percentage_text","_sellInfo2","_iconFlag2","SellInfo","is_started","_contractSell2","ContractSell","_sellButton2","SellButton","sell_message","validation_error","ChartCloseBtn","_iconContractClose2","IconContractClose","Link","Switch","_routeWithSubRoutes2","LoginPrompt","onSignup","3_2","website_name","_url","ToggleDrawer","_menuDrawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer__parent-item--show","drawer_items_class","drawer__items--show","DrawerToggle","to_toggle","_switchButton2","toggled","SwitchButton","toggle_style","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","ToggleNotificationsDrawer","Notifications","_notifications","_emptyNotification","EmptyNotification","Routes","_Errors2","_Routes2","msg","DenialOfServiceModal","denial_of_service","unregister","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"f6307caa50367ac7342a\",\"account_password\":\"801381c559fbdd3e94fe\",\"api_toke\":\"479acd239ebd59c62430\",\"authorized_application\":\"a481917cc20e30d72770\",\"cashier_password\":\"3fa546693aa15639a393\",\"contract\":\"89b3f56f0a0b33402b59\",\"financial_assessment\":\"c1d13f966e4ad9a67a85\",\"limits\":\"4b4ccdc61124569f0e66\",\"login_history\":\"146c1fcc99295d012f24\",\"personal_details\":\"dae5ad873d2dc1b44ebb\",\"portfolio\":\"861e9ce4e6de6cef042a\",\"self_exclusion\":\"cfadf39a1133f48ee86b\",\"settings\":\"b9014fd2746ad4d3e3f3\",\"statement\":\"193179c71db7d4ae9c37\",\"vendors~smart_chart\":\"b1f998d0a094bb2474ec\",\"smart_chart\":\"63b4d2795db1758221c4\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([270,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date-time';\n","export * from './icon-arrow.jsx';\nexport * from './icon-back.jsx';\nexport * from './icon-calendar-today.jsx';\nexport * from './icon-calendar.jsx';\nexport * from './icon-chevron-double-left.jsx';\nexport * from './icon-chevron-double-right.jsx';\nexport * from './icon-chevron-left.jsx';\nexport * from './icon-chevron-right.jsx';\nexport * from './icon-country-flag.jsx';\nexport * from './icon-clear.jsx';\nexport * from './icon-clock.jsx';\nexport * from './icon-close.jsx';\nexport * from './icon-error.jsx';\nexport * from './icon-exclamation.jsx';\nexport * from './icon-info-blue.jsx';\nexport * from './icon-info-outline.jsx';\nexport * from './icon-flag.jsx';\nexport * from './icon-minimize.jsx';\nexport * from './icon-minus.jsx';\nexport * from './icon-plus.jsx';\nexport * from './icon-question.jsx';\nexport * from './icon-red-dot.jsx';\nexport * from './icon-success.jsx';\nexport * from './icon-warning.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            { text &&\n                <span className={classNames('btn__text', classNameSpan)}>\n                    {text}\n                </span>\n            }\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill-template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        has_only_forward_starting_contracts = !r.contracts_for.available.find((contract) => contract.start_type !== 'forward');\n        if (has_only_forward_starting_contracts) return;\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n        }),\n    };\n})();\n\nexport default ContractType;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","export const getChartConfig = (contract_info) => {\n    const start_epoch = contract_info.date_start;\n    const end_epoch   = getEndSpotTime(contract_info) || contract_info.date_expiry;\n    const granularity = calculateGranularity(end_epoch - start_epoch);\n\n    return {\n        granularity,\n        chart_type: granularity ? 'candle' : 'mountain',\n        end_epoch,\n        start_epoch,\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nexport const calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\nexport const getEndSpot = (contract_info) => (\n    isUserSold(contract_info) ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    isUserSold(contract_info) ? +contract_info.sell_spot_time : +contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const getLastTickFromTickStream = (tick_stream = []) => (\n    tick_stream[tick_stream.length - 1] || {}\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconInfoBlue }    from 'Assets/Common/icon-info-blue.jsx';\nimport { IconInfoOutline } from 'Assets/Common/icon-info-outline.jsx';\nimport { IconQuestion }    from 'Assets/Common/icon-question.jsx';\nimport { IconRedDot }      from 'Assets/Common/icon-red-dot.jsx';\n\nclass Tooltip extends React.Component {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            has_error,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip', { 'tooltip--error': has_error })}\n                data-tooltip={message}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <IconInfoOutline\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <IconInfoBlue\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <IconQuestion className={icon_class} />}\n                {icon === 'dot'      && <IconRedDot className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    has_error    : PropTypes.bool,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","export default from './input-field.jsx';\n","export * from './icon-bell.jsx';\nexport * from './icon-cashier.jsx';\nexport * from './icon-hamburger.jsx';\nexport * from './icon-portfolio.jsx';\nexport * from './icon-statement.jsx';\nexport * from './icon-trade.jsx';\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import { getLastTickFromTickStream } from './logic';\n\nexport const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const { tick_stream } = contract_info;\n    const { tick, epoch } = getLastTickFromTickStream(tick_stream);\n\n    if (!tick || !epoch) return {}; // filter out empty responses\n\n    const current = (epoch in digits_info) ? {} : // filter out duplicated responses\n        createDigitInfo(tick, epoch);\n\n    return {\n        ...current,\n    };\n};\n\nconst createDigitInfo = (spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            spot,\n        },\n    };\n};\n","export * from './icon-maximize.jsx';\nexport * from './icon-positions.jsx';\nexport * from './icon-settings.jsx';\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.string,\n    updateSelected  : PropTypes.func,\n};\n","export * from './drawer-header.jsx';\nexport * from './drawer-item.jsx';\nexport * from './drawer-items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer-toggle.jsx';\nexport * from './toggle-drawer.jsx';\n","export BinaryLink         from './binary-link.jsx';\nexport ButtonLink         from './button-link.jsx';\nexport default            from './binary-routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export * from './icon-trade-types.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const loading_class = classNames('block-ui__loading', className);\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeProposalOpenContractOnBuy = (buy_request) =>\n        SubscriptionManager.addSubscriptionFromRequest(\n            'proposal_open_contract',\n            { ...buy_request, subscribe: 1 },\n            { proposal_open_contract: 1, subscribe: 1 },\n            ['contract_id'],\n        );\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeProposalOpenContractOnBuy,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconClock = ({\n    className,\n    onClick,\n    height = '16',\n    width = '16',\n}) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 16 16'\n        width={width}\n        height={height}\n        className={className}\n        onClick={onClick}\n    >\n        <g fill='none' fillRule='nonzero' stroke='#5C5C5C'>\n            <circle cx='8' cy='8' r='7.5' />\n            <path strokeLinecap='round' strokeLinejoin='round' d='M8 3.5v5h3.5' />\n        </g>\n    </svg>\n);\n\nIconClock.propTypes = {\n    className: PropTypes.string,\n    height   : PropTypes.string,\n    onClick  : PropTypes.func,\n    width    : PropTypes.string,\n};\n\nexport { IconClock };\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport { IconError };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconInfoBlue = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#2196F3' />\n            <g fill='#FFF' transform='translate(6.5 4)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <rect width='2' height='5' x='.5' y='3' rx='1' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconInfoBlue.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoBlue };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className, classNamePath }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className={classNamePath || undefined} fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className={classNamePath || undefined} fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path className={classNamePath || undefined} fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        type &&\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Button     from './button.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={val.text}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return <div className='button-menu'>{menu}</div>;\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","export default from './range-slider.jsx';\n","import { localize } from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","import { localize }    from '_common/localize';\nimport MarkerLine      from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpotLabel from 'Modules/SmartChart/Components/Markers/marker-spot-label.jsx';\nimport MarkerSpot      from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpotLabel,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n    SPOT_ENTRY: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type          : 'LINE_END',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'dash',  label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type          : 'LINE_PURCHASE',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type          : 'LINE_START',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type          : 'SPOT_ENTRY',\n        marker_config : MARKER_CONTENT_TYPES.SPOT_ENTRY,\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_EXIT: {\n        type          : 'SPOT_EXIT',\n        marker_config : MARKER_CONTENT_TYPES.SPOT,\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type          : 'SPOT_MIDDLE',\n        marker_config : MARKER_CONTENT_TYPES.SPOT,\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React        from 'react';\n\nconst MarkerSpot = ({\n    className,\n    spot_count,\n}) => (\n    <div\n        className={classNames('chart-spot', className)}\n    >{spot_count}\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    className : PropTypes.string,\n    spot_count: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n};\n\nexport default observer(MarkerSpot);\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list\n    .filter(barrier => barrier !== undefined && barrier !== null)\n    .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","import ContractType from '../Helpers/contract-type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type, is_equal } = store;\n\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n        ...(is_equal                          ? ['is_equal'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","import { getPropertyValue } from '_common/utility';\nimport ContractType         from './contract-type';\n\nexport const hasCallPutEqual = (contract_type_list) => {\n    if (!contract_type_list) return false;\n\n    return getPropertyValue(contract_type_list, 'Up/Down')\n        .some(contract => contract.value === 'rise_fall_equal');\n};\n\nexport const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {})\n        .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n\n    const contract_duration_list = contract_list\n        .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    return hasCallPutEqual(contract_type_list) ? contract_duration_list\n        .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n        .some(duration => duration.value === duration_unit) : false;\n};\n\nexport const isRiseFallEqual = (contract_type) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3.613 8.5l3.26 3.668a.5.5 0 1 1-.747.664l-4-4.5a.5.5 0 0 1 0-.664l4-4.5a.5.5 0 0 1 .748.664L3.614 7.5H13.5a.5.5 0 1 1 0 1H3.613z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconInfoOutline = ({ className, onMouseEnter, onMouseLeave }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        height='16'\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        viewBox='0 0 16 16'\n        width='16'\n        xmlns='http://www.w3.org/2000/svg'\n    >\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.16)' fillRule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM8 6a.75.75 0 1 0 0-1.5A.75.75 0 0 0 8 6zm0 1a.5.5 0 0 0-.5.5v4a.5.5 0 1 0 1 0v-4A.5.5 0 0 0 8 7z' />\n    </svg>\n);\n\nIconInfoOutline.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoOutline };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconQuestion = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='#FFF' fillRule='evenodd'>\n            <path d='M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm0-1A7 7 0 1 0 8 1a7 7 0 0 0 0 14z' fillRule='nonzero' />\n            <path d='M7.39 9.518c.007-.373.052-.668.134-.885.082-.216.25-.456.503-.72l.646-.636c.276-.298.415-.618.415-.96 0-.33-.09-.588-.272-.774-.18-.187-.444-.28-.789-.28-.335 0-.605.084-.809.254a.842.842 0 0 0-.306.682H6c.007-.508.196-.918.57-1.23.373-.313.859-.469 1.457-.469.622 0 1.106.16 1.453.478.347.318.52.755.52 1.31 0 .55-.266 1.091-.799 1.625l-.538.508c-.24.255-.36.62-.36 1.097h-.912zm-.039 1.492a.5.5 0 0 1 .136-.355c.09-.096.224-.144.402-.144.178 0 .312.048.404.144a.493.493 0 0 1 .139.355.477.477 0 0 1-.139.351c-.092.093-.226.139-.404.139-.178 0-.312-.046-.402-.139a.481.481 0 0 1-.136-.35z' />\n        </g>\n    </svg>\n);\n\nIconQuestion.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuestion };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconRedDot = ({ className }) => (\n    <svg className={className} width='4' height='4' xmlns='http://www.w3.org/2000/svg'>\n        <circle cx='1163' cy='626' r='2' transform='translate(-1161 -624)' fill='#E31C4B' fillRule='nonzero' />\n    </svg>\n);\n\nIconRedDot.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconRedDot };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconSuccess = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4CAF50' />\n            <path fill='#FFF' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconSuccess.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSuccess };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconWarning = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V4a1 1 0 0 1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconWarning.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconWarning };\n","export * from './positions-helper';\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React from 'react';\n\nclass VerticalTabContentContainer extends React.PureComponent {\n    render() {\n        const selected   = this.props.items.find(item => item.label === this.props.selected.label);\n        const TabContent = selected.value;\n\n        return (\n            <div className='vertical-tab__content'>\n                <TabContent\n                    key={selected.label}\n                    className='item-id'\n                />\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabContentContainer };\n","import classNames from 'classnames';\nimport React      from 'react';\n\nclass VerticalTabHeaders extends React.PureComponent {\n    render() {\n        return (\n            <div className='vertical-tab__tab'>\n                {this.props.items.map(item => {\n                    const IconComponent = item.icon;\n                    return (\n                        <div\n                            className={\n                                classNames('vertical-tab__header', {\n                                    'vertical-tab__header--active': this.props.selected.label === item.label,\n                                })\n                            }\n                            key={item.label}\n                            onClick={() => this.props.onChange(item)}\n                        >\n                            <IconComponent className={classNames('vertical-tab__header__icon', {\n                                'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                            })}\n                            />\n                            <a\n                                key={item.label}\n                                className='vertical-tab__header__link'\n                            >\n                                {item.label}\n                            </a>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabHeaders };\n","export *       from './media-description.jsx';\nexport *       from './media-heading.jsx';\nexport *       from './media-icon.jsx';\nexport default from './media-item.jsx';\n","export default from './checkbox.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nclass Radio extends React.PureComponent {\n    clickHandler = () => {\n        if (!this.props.selected) {\n            this.props.onClick(this.props.value);\n        }\n    };\n\n    render() {\n        const { selected, children } = this.props;\n\n        return (\n            <div className='radio-group__item' onClick={this.clickHandler}>\n                <div className={classNames('radio-group__circle', {\n                    'radio-group__circle--selected': selected,\n                })}\n                />\n                <div className='radio-group__label'>{children}</div>\n            </div>\n        );\n    }\n}\n\nRadio.propTypes = {\n    children: PropTypes.node,\n    onClick : PropTypes.func,\n    selected: PropTypes.bool,\n    value   : PropTypes.bool,\n};\n\nexport { Radio };\n","export * from './icon-logout.jsx';\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account-password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api-token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized-applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier-password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial-assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login-history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal-details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self-exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\nimport Button     from 'App/Components/Form/button.jsx';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='full-page-modal__dialog'>\n                    <h1 className='full-page-modal__header'>{title}</h1>\n                    <p className='full-page-modal__content'>{children}</p>\n                    <div className='full-page-modal__footer'>\n                        <Button\n                            className={classNames('full-page-modal__button', 'btn--secondary btn--secondary--orange')}\n                            has_effect\n                            text={cancel_button_text}\n                            onClick={onCancel}\n                        />\n                        <Button\n                            className={classNames('full-page-modal__button', 'btn--primary btn--primary--orange')}\n                            has_effect\n                            text={confirm_button_text}\n                            onClick={onConfirm}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon-trade-categories.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract-info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\nimport PurchaseButton    from '../Components/Elements/purchase-button.jsx';\n\nconst Purchase = ({\n    contract_type,\n    currency,\n    is_contract_mode,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    resetPurchase,\n    togglePurchaseLock,\n    purchase_info,\n    proposal_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled\n            || !is_trade_enabled\n            || !info.id\n            || !is_client_allowed_to_visit;\n        const is_high_low = /high_low/.test(contract_type.toLowerCase());\n        const is_loading  = !info.has_error && !info.id;\n        const purchase_button = (\n            <PurchaseButton\n                currency={currency}\n                info={info}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                onClickPurchase={onClickPurchase}\n                trade_types={trade_types}\n                type={type}\n            />\n        );\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {is_purchase_error &&\n                <MessageBox\n                    purchase_info={purchase_info}\n                    onClick={resetPurchase}\n                    currency={currency}\n                />\n                }\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                <React.Fragment>\n                    <ContractInfo\n                        currency={currency}\n                        proposal_info={info}\n                        has_increased={info.has_increased}\n                        is_visible={!is_contract_mode}\n                    />\n                    <div className='btn-purchase__shadow-wrapper'>\n                        {\n                            is_purchase_confirm_on ?\n                                <PopConfirm\n                                    alignment='left'\n                                    cancel_text={localize('Cancel')}\n                                    confirm_text={localize('Purchase')}\n                                    message={localize('Are you sure you want to purchase this contract?')}\n                                >\n                                    {purchase_button}\n                                </PopConfirm>\n                                :\n                                purchase_button\n                        }\n                    </div>\n                </React.Fragment>\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_contract_mode          : PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_contract_mode          : modules.smart_chart.is_contract_mode,\n        contract_type             : modules.trade.contract_type,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', `popconfirm--${alignment}`, {\n        [`popconfirm--${alignment}--open`]: is_visible,\n        'popconfirm--open'                : is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm__title'>\n                <IconExclamation className='popconfirm__icon_exclamation' />\n                <h4 className='popconfirm__header'>{message}</h4>\n            </div>\n            <div className='popconfirm__button-wrapper'>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onClose}\n                >\n                    <span className='popconfirm__button-text'>{cancel_text}</span>\n                </div>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onConfirm}\n                >\n                    <span className='popconfirm__button-text'>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                        this.props.ui_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules, ui }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n        ui_store       : ui,\n    })\n)(TradeParams);\n","export default from './dropdown.jsx';\n","export default from './trading-date-picker.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer__header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='drawer__icons drawer__icons-btn-close' onClick={closeBtn}>\n                        <IconClose className='drawer__icons-icon-close' />\n                    </div>\n                    <div className='drawer__notifications'>\n                        <h4 className='drawer__notifications-header'>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='drawer__icons drawer__icons-btn-close' onClick={closeBtn}>\n                        <IconClose className='drawer__icons-icon-close' />\n                    </div>\n                    <div className='drawer__icons drawer__brand-logo'>\n                        <div className='drawer__image' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer__item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' className='drawer__item-link' onClick={custom_action}>\n                        <span className='drawer__item-link-text'>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink className='drawer__item-link' to={link_to}>\n                        <span className='drawer__item-link-text'>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer-header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer__bg', {\n            'drawer--show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', { [`drawer--${alignment}`]: alignment });\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames={{\n                    enter    : 'drawer__container--enter',\n                    enterDone: 'drawer__container--enter-done',\n                    exit     : 'drawer__container--exit',\n                }}\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","export default from './error-component.jsx';\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPositions } from 'Assets/Footer';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            <IconPositions className='portfolio-empty__icon' />\n            <span className='portfolio-empty__text'>{localize('No running contract')}</span>\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","export default from './date-picker.jsx';\n","import PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { CSSTransition }       from 'react-transition-group';\nimport { connect }             from 'Stores/connect';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }             from 'Stores/Modules/Contract/Helpers/logic';\nimport { LastDigitPrediction } from '../Components/LastDigitPrediction';\n\nconst Digits = ({\n    contract_info,\n    digits_info,\n    display_status,\n    is_trade_page,\n    last_digit,\n}) => {\n    const { barrier, contract_type } = contract_info;\n    const is_digit = isDigitContract(contract_type);\n    const is_ended = isEnded(contract_info);\n\n    return (\n        <CSSTransition\n            in={is_digit}\n            timeout={250}\n            classNames={{\n                enter    : 'digits--enter',\n                enterDone: 'digits--enter-done',\n                exit     : 'digits--exit',\n            }}\n            unmountOnExit\n        >\n            <LastDigitPrediction\n                barrier={+barrier || +last_digit} // fallback to last_digit if barrier from contract_info is null\n                contract_type={contract_type}\n                digits_info={digits_info}\n                is_ended={is_ended}\n                is_trade_page={is_trade_page}\n                status={display_status}\n            />\n        </CSSTransition>\n    );\n};\n\nDigits.propTypes = {\n    contract_info : PropTypes.object,\n    digits_info   : PropTypes.object,\n    display_status: PropTypes.string,\n    is_trade_page : PropTypes.bool,\n    last_digit    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        digits_info   : modules.contract.digits_info,\n        display_status: modules.contract.display_status,\n        last_digit    : modules.trade.last_digit,\n    })\n)(Digits);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract-error.jsx';\nimport { InfoBoxLongcode } from '../Components/InfoBox';\nimport ChartCloseBtn       from '../../SmartChart/Components/chart-close-btn.jsx';\n\nconst InfoBox = ({\n    is_contract_mode,\n    contract_info,\n    onClickNewTrade,\n    onClose,\n    removeError,\n    sell_info,\n}) => {\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    const Contents = InfoBoxLongcode;\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        <CSSTransition\n            in={is_contract_mode}\n            timeout={250}\n            classNames={{\n                enter    : 'info-box-container--enter',\n                enterDone: 'info-box-container--enter-done',\n                exit     : 'info-box-containert--exit',\n            }}\n            unmountOnExit\n        >\n            <React.Fragment>\n                <div className='info-box-container'>\n                    { contract_info.contract_type &&\n                        <div className={box_class}>\n                            <Contents\n                                contract_info={contract_info}\n                                is_ended={is_ended}\n                                sell_info={sell_info}\n                            />\n                        </div>\n                    }\n                    <ContractError\n                        message={sell_info.error_message}\n                        onClickClose={removeError}\n                    />\n                    <ChartCloseBtn\n                        is_contract_mode={is_contract_mode}\n                        onClose={(e) => {\n                            onClose();\n                            onClickNewTrade(e);\n                        }}\n                    />\n                </div>\n            </React.Fragment>\n        </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info   : PropTypes.object,\n    is_contract_mode: PropTypes.bool,\n    is_trade_page   : PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onClose         : PropTypes.func,\n    removeError     : PropTypes.func,\n    sell_info       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info   : modules.contract.contract_info,\n        removeError     : modules.contract.removeSellError,\n        sell_info       : modules.contract.sell_info,\n        onClickNewTrade : modules.trade.onClickNewTrade,\n        onClose         : modules.contract.onCloseContract,\n        is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg className='chart-spot__icon' xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 211,\n\t\"./ja.js\": 211\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 478;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance, true);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base-store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().utc().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid  = LocalStore.get('active_loginid');\n        this.accounts = LocalStore.getObject(storage_key);\n        this.switched = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract-store';\nimport PortfolioStore  from './Portfolio/portfolio-store';\nimport SmartChartStore from './SmartChart/smart-chart-store';\nimport StatementStore  from './Statement/statement-store';\nimport TradeStore      from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                  from 'mobx';\nimport { isEmptyObject }          from '_common/utility';\nimport { localize }               from '_common/localize';\nimport { WS }                     from 'Services';\nimport { createChartBarrier }     from './Helpers/chart-barriers';\nimport { createChartMarkers }     from './Helpers/chart-markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base-store';\n\nexport default class ContractStore extends BaseStore {\n    // --- Observable properties ---\n    @observable contract_id;\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // ---- Normal properties ---\n    forget_id;\n    is_left_epoch_set = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    drawChart(SmartChartStore, contract_info) {\n        this.forget_id = contract_info.id;\n        if (isEnded(contract_info) || !!(getEndSpotTime(contract_info))) {\n            this.chart_config = getChartConfig(contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n\n            if (!this.is_left_epoch_set && contract_info.tick_count) {\n                this.is_left_epoch_set = true;\n                SmartChartStore.setTickChartView(contract_info.purchase_time);\n            }\n        }\n\n        createChartBarrier(SmartChartStore, contract_info);\n        createChartMarkers(SmartChartStore, contract_info);\n\n        this.handleDigits();\n    }\n\n    @action.bound\n    onMount(contract_id, has_left_epoch) {\n        if (contract_id === +this.contract_id) return;\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        this.has_error         = false;\n        this.error_message     = '';\n        this.contract_id       = contract_id;\n        this.smart_chart       = this.root_store.modules.smart_chart;\n        this.is_left_epoch_set = has_left_epoch;\n\n        if (contract_id) {\n            this.smart_chart.setContractMode(true);\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        this.smart_chart.setContractMode(false);\n        return new Promise((resolve) => resolve(this.onCloseContract()));\n    }\n\n    @action.bound\n    onCloseContract() {\n        this.forgetProposalOpenContract();\n        this.chart_config      = {};\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.error_message     = '';\n        this.forget_id         = null;\n        this.has_error         = false;\n        this.is_sell_requested = false;\n        this.is_left_epoch_set = false;\n        this.sell_info         = {};\n\n        this.smart_chart.cleanupContractChartView();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.onCloseContract();\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            this.contract_id   = null;\n            this.smart_chart.setContractMode(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== +this.contract_id) return;\n        this.contract_info = response.proposal_open_contract;\n        this.drawChart(this.smart_chart, this.contract_info);\n\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { id: this.forget_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import {\n    createMarkerExpiry,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime,\n    createMarkerSpotMiddle }     from './chart-marker-helpers';\nimport { unique } from '../../../../../_common/utility';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info) => {\n    if (contract_info) {\n        if (contract_info.tick_count) {\n            addTickMarker(SmartChartStore, contract_info);\n        } else {\n            addMarker(marker_spots, SmartChartStore, contract_info);\n        }\n        addMarker(marker_lines, SmartChartStore, contract_info);\n    }\n};\n\nconst marker_spots = {\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]: createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type] : createMarkerSpotExit,\n};\n\nconst marker_lines = {\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerExpiry,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n};\n\nconst addMarker = (marker_obj, SmartChartStore, contract_info) => {\n    Object.keys(marker_obj).forEach(createMarker);\n\n    function createMarker(marker_type) {\n        if (marker_type in SmartChartStore.markers) return;\n\n        const marker_config = marker_obj[marker_type](contract_info);\n        if (marker_config) {\n            SmartChartStore.createMarker(marker_config);\n        }\n    }\n};\n\nconst addLabelAlignment = (tick, idx, arr) => {\n    if (idx > 0 && arr.length) {\n        const prev_tick = arr[idx - 1];\n\n        if (+tick > +prev_tick.tick) tick.align_label = 'top';\n        if (+tick.tick < +prev_tick.tick) tick.align_label = 'bottom';\n        if (+tick.tick === +prev_tick.tick) tick.align_label = prev_tick.align_label;\n    }\n\n    return tick;\n};\n\nconst addTickMarker = (SmartChartStore, contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch').map(addLabelAlignment);\n\n    tick_stream.forEach((tick, idx) => {\n        const is_entry_spot  = idx === 0 && +tick.epoch !== contract_info.exit_tick_time;\n        const is_middle_spot = idx > 0 && +tick.epoch !== +contract_info.exit_tick_time;\n        const is_exit_spot   = +tick.epoch === +contract_info.exit_tick_time;\n\n        let marker_config;\n        if (is_entry_spot) marker_config = createMarkerSpotEntry(contract_info);\n        if (is_middle_spot) marker_config = createMarkerSpotMiddle(contract_info, tick, idx);\n        if (is_exit_spot) marker_config = createMarkerSpotExit(contract_info, tick, idx);\n\n        if (marker_config) {\n            if (marker_config.type in SmartChartStore.markers) return;\n\n            SmartChartStore.createMarker(marker_config);\n        }\n    });\n};\n","import extend                  from 'extend';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport {\n    getEndSpotTime,\n    isUserSold }               from 'Stores/Modules/Contract/Helpers/logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n\nconst getSpotCount = (contract_info, spot_count) =>\n    isDigitContract(contract_info.contract_type) ? spot_count + 1 : spot_count;\n\n// -------------------- Lines --------------------\nexport const createMarkerExpiry = (contract_info) => {\n    const end_spot_time = getEndSpotTime(contract_info);\n    if (contract_info.status === 'open' || !end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        +end_spot_time,\n    );\n};\n\nexport const createMarkerPurchaseTime = (contract_info) => {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        +contract_info.purchase_time,\n    );\n};\n\nexport const createMarkerStartTime = (contract_info) => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        +contract_info.date_start,\n    );\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = (contract_info) => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type      = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props  = {};\n\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n\n        component_props = {\n            spot_value: `${contract_info.entry_tick}`,\n            spot_epoch: `${contract_info.entry_tick_time}`,\n            spot_count: 1,\n        };\n    }\n\n    return createMarkerConfig(\n        marker_type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        component_props,\n    );\n};\n\nexport const createMarkerSpotExit = (contract_info, tick, idx) => {\n    if (!contract_info.exit_tick_time || isUserSold(contract_info)) return false;\n\n    let spot_count, align_label;\n    if (tick) {\n        spot_count = getSpotCount(contract_info, idx);\n        align_label = tick.align_label;\n    }\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        +contract_info.exit_tick_time,\n        +contract_info.exit_tick,\n        {\n            spot_value: `${contract_info.exit_tick}`,\n            spot_epoch: `${contract_info.exit_tick_time}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n            align_label,\n            spot_count,\n        },\n    );\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, idx) => {\n    const spot_count = getSpotCount(contract_info, idx);\n\n    const marker_config = createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_MIDDLE.type,\n        +tick.epoch,\n        +tick.tick,\n        {\n            spot_value : `${tick.tick}`,\n            spot_epoch : `${tick.epoch}`,\n            align_label: tick.align_label,\n            spot_count,\n        },\n    );\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    return marker_config;\n};\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n        <div className='chart-marker-line__label'>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer }  from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { addComma }  from '_common/base/currency_base';\nimport { toMoment }  from 'Utils/Date';\nimport { IconClock } from 'Assets/Common/icon-clock.jsx';\nimport MarkerSpot    from './marker-spot.jsx';\n\nclass MarkerSpotLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_label: !this.props.has_hover_toggle,\n        };\n    }\n\n    handleHoverToggle = () => {\n        this.setState((state) =>  ({ show_label: !state.show_label }));\n    }\n\n    render() {\n        let marker_spot =\n            <MarkerSpot\n                className={this.props.spot_className}\n                spot_count={this.props.spot_count}\n            />;\n\n        if (this.props.has_hover_toggle) {\n            marker_spot =\n                <div className='marker-hover-container' onMouseEnter={this.handleHoverToggle} onMouseLeave={this.handleHoverToggle}>\n                    { marker_spot }\n                </div>;\n        }\n\n        return (\n            <div className={'chart-spot-label'}>\n                {this.state.show_label &&\n                    <div className='chart-spot-label__info-container'>\n                        <div className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${this.props.align_label}`}>\n                            <div className='chart-spot-label__time-container'>\n                                <IconClock height='10' width='10' className='chart-spot-label__time-icon' />\n                                <p className='chart-spot-label__time'>{toMoment(+this.props.spot_epoch).format('HH:mm:ss')}</p>\n                            </div>\n                            <div\n                                className={classNames('chart-spot-label__value-container', {\n                                    'chart-spot-label__value-container--won' : this.props.status === 'won',\n                                    'chart-spot-label__value-container--lost': this.props.status === 'lost',\n                                })}\n                            >\n                                <p>{addComma(this.props.spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { marker_spot }\n            </div>);\n    }\n}\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label     : PropTypes.oneOf(['top', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    spot_className  : PropTypes.string,\n    spot_count      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_epoch      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_value      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status          : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\nimport ServerTime   from '../../../_common/base/server_time';\n\n// Disables moment's fallback to native Date object\n// moment will return `Invalid Date` if date cannot be parsed\nmoment.createFromInputFallback = function (config) {\n    config._d = new Date(NaN);\n};\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return ServerTime.get() || moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    if (typeof value === 'number') return epochToMoment(value); // returns epochToMoment() if not a date\n\n    return (/invalid/i.test(moment(value))) ? moment.utc(value, 'DD MMM YYYY') : moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const formatMoney = (currency, amount) => <Money amount={amount} currency={currency} />;\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport {\n    getCurrentTick,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText }          from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            const i = this.getPositionIndexById(contract_id);\n            this.positions[i].is_loading = true;\n            WS.subscribeProposalOpenContract(contract_id, this.populateResultDetails, false);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        // fix for missing barrier and entry_spot in proposal_open_contract API response, only re-assign if valid\n        if (proposal.barrier) portfolio_position.barrier = +proposal.barrier;\n        if (proposal.entry_spot) portfolio_position.entry_spot = +proposal.entry_spot;\n\n        // store contract proposal details that require modifiers\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n        // store contract proposal details that do not require modifiers\n        portfolio_position.contract_info    = proposal;\n\n        // for tick contracts\n        if (proposal.tick_count) {\n            const current_tick = (portfolio_position.current_tick > getCurrentTick(proposal)) ?\n                portfolio_position.current_tick : getCurrentTick(proposal);\n            portfolio_position.current_tick = current_tick;\n        }\n\n        if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'loss';\n        } else {\n            portfolio_position.status = null;\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        const { bid_price } = this.positions[i].contract_info;\n        this.positions[i].is_sell_requested = false;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        // Toast messages are temporary UI for prompting user of sold contracts\n        if (response.error) {\n            // If unable to sell due to error, give error via toast message if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n            this.root_store.ui.addToastMessage({\n                message: response.error.message,\n                type   : 'error',\n            });\n        } else if (!response.error && response.sell) {\n            const i = this.getPositionIndexById(response.sell.contract_id);\n            this.positions[i].is_sell_requested = false;\n            // update contract store sell info after sell\n            this.root_store.modules.contract.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addToastMessage({\n                message: `Contract was sold for ${response.sell.sold_for}.`,\n                type   : 'info',\n            });\n        }\n    }\n\n    @action.bound\n    populateResultDetails = (response) => {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n\n        this.positions[i].contract_info    = contract_response;\n        this.positions[i].exit_spot        = getEndSpot(contract_response) || contract_response.current_spot; // workaround if no exit_spot in proposal_open_contract, use latest spot\n        this.positions[i].duration         = getDurationTime(contract_response);\n        this.positions[i].duration_unit    = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n        this.positions[i].result           = getDisplayStatus(contract_response);\n        this.positions[i].sell_time        = getEndSpotTime(contract_response) || contract_response.current_spot_time; // same as exit_spot, use latest spot time if no exit_tick_time\n        this.positions[i].status           = 'complete';\n\n        // fix for missing barrier and entry_spot\n        if (!this.positions[i].contract_info.barrier || !this.positions[i].contract_info.entry_spot) {\n            this.positions[i].contract_info.barrier    = this.positions[i].barrier;\n            this.positions[i].contract_info.entry_spot = this.positions[i].entry_spot;\n        }\n\n        this.positions[i].is_loading = false;\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const is_contract_mode = this.root_store.modules.smart_chart.is_contract_mode;\n        let i = this.getPositionIndexById(contract_id);\n        // check if position to be removed is out of range from the maximum amount rendered in drawer\n        if (this.positions.length > 4) i += 1;\n        this.positions.splice(i, 1);\n        // check if chart is in contract_mode before removing contract details from chart\n        if (is_contract_mode) {\n            this.root_store.modules.contract.onCloseContract();\n            this.root_store.modules.trade.requestProposal();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        contract_info: portfolio_pos,\n        details      : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        id           : portfolio_pos.contract_id,\n        indicative   : 0,\n        payout,\n        purchase,\n        reference    : +portfolio_pos.transaction_id,\n        type         : portfolio_pos.contract_type,\n    };\n};\n","import { localize }        from '_common/localize';\nimport { unique }          from '_common/utility';\nimport {\n    epochToMoment,\n    getDiffDuration }      from 'Utils/Date';\nimport { isDigitContract } from '../../Contract/Helpers/digits';\n\nexport const getCurrentTick = (contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch');\n    const current_tick = isDigitContract(contract_info.contract_type) ? tick_stream.length : tick_stream.length - 1;\n    return (!current_tick || current_tick < 0) ? 0 : current_tick;\n};\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n\n    if (duration_ms >= 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60 * 24));\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        return Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / (1000));\n    }\n    return Math.floor(duration_ms / (1000));\n};\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        d: { name_plural: localize('days'),    name_singular: localize('day') },\n        h: { name_plural: localize('hours'),   name_singular: localize('hour') },\n        m: { name_plural: localize('minutes'), name_singular: localize('minute') },\n        s: { name: localize('seconds') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            return (duration_ms === 8640000) ? unit_map.d.name_singular : unit_map.d.name_plural;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            return (duration_ms === 360000) ? unit_map.h.name_singular : unit_map.h.name_plural;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            return (duration_ms === 60000) ? unit_map.m.name_singular : unit_map.m.name_plural;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n\nexport const getDurationPeriod = (contract_info) => (\n    getDiffDuration(\n        epochToMoment(contract_info.purchase_time || contract_info.date_start),\n        epochToMoment(contract_info.date_expiry)\n    )\n);\n\nexport const getDurationTime = (contract_info) => (\n    contract_info.tick_count ?\n        contract_info.tick_count\n        :\n        getDurationUnitValue(getDurationPeriod(contract_info))\n);\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nconst store_name = 'smart_chart_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_contract_mode = false;\n    @observable is_title_enabled = true;\n\n    @observable chart_type                  = 'mountain';\n    @observable granularity                 = 0;\n    @observable scroll_to_left_epoch        = null;\n    @observable scroll_to_left_epoch_offset = 0;\n    @observable zoom;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties, store_name });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    updateEpochScrollToValue(epoch) {\n        this.scroll_to_left_epoch = epoch;\n    }\n\n    @action.bound\n    updateEpochScrollToOffset(offset) {\n        this.scroll_to_left_epoch_offset = offset;\n    }\n\n    @action.bound\n    updateChartZoom(percentage) {\n        this.zoom = percentage;\n    }\n\n    @action.bound\n    cleanupContractChartView() {\n        this.removeBarriers();\n        this.removeMarkers();\n        this.resetScrollZoom();\n        this.setContractMode(false);\n    }\n\n    @action.bound\n    resetScrollZoom() {\n        this.zoom = (this.zoom === 100) ? -100 : 0;\n        this.scroll_to_left_epoch = null;\n        this.scroll_to_left_epoch_offset = null;\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // --------- Tick Contracts ---------\n    @action.bound\n    setTickChartView(scroll_to_left_epoch) {\n        if (this.granularity !== 0) {\n            this.updateGranularity(0);\n        }\n        this.updateEpochScrollToOffset(1);\n        this.updateChartZoom(100);\n        this.updateEpochScrollToValue(scroll_to_left_epoch);\n    }\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative       = /^[+-]/.test(high);\n        }\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format-response';\nimport BaseStore                        from '../../base-store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n        WS.forgetAll('proposal');\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url-helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query-string';\nimport getValidationRules                from './Constants/validation-rules';\nimport { isRiseFallEqual }               from './Helpers/allow-equals';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract-type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_equal                   = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount     = 10;\n    @observable basis      = '';\n    @observable basis_list = [];\n    @observable currency   = '';\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Query string\n    query = '';\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            store_name,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            },\n        );\n    }\n\n    @action.bound\n    refresh = () => {\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        this.currency           = this.root_store.client.currency;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        // Checks for is_equal in query string and update the contract_type to rise_fall or rise_fall_equal\n        const { contract_type, is_equal } = query_string_values;\n        if (isRiseFallEqual(contract_type)) {\n            URLHelper.setQueryParam({ 'contract_type': parseInt(is_equal) ? 'rise_fall_equal' : 'rise_fall' });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.validateAllProperties();\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    // toggle smartcharts to contract mode\n                    const contract_id = getPropertyValue(response, ['buy', 'contract_id']);\n                    if (contract_id) {\n                        this.root_store.modules.contract.onMount(contract_id);\n                        this.root_store.ui.openPositionsDrawer();\n                    }\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n                this.is_purchase_enabled = true;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        e.preventDefault();\n        WS.forgetAll('proposal').then(this.requestProposal());\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false, obj_old_values = {}) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        WS.forgetAll('proposal');\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values))\n        ) {\n            const prev_currency = obj_old_values &&\n            !isEmptyObject(obj_old_values) &&\n            obj_old_values.currency ? obj_old_values.currency : this.currency;\n            if (isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency)) {\n                obj_new_values.amount = is_changed_by_user && obj_new_values.amount ?\n                    obj_new_values.amount : getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (/symbol/.test(Object.keys(obj_new_values))) {\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol);\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n            this.query = URLHelper.getQueryString();\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.processNewValuesAsync(\n                { currency: this.root_store.client.currency },\n                { currency: this.currency }\n            );\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal', 'ticks_history');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        [...query_params].forEach(value => {\n            // by default, URL encoding replaces '+' with white-spaces\n            // but for barrier, we want to keep '+' sign. so, we need to encode white-spaces\n            // and then replace %20 to '+'.\n            query_params.set(value[0], encodeURI(value[1]).replace(/%20/g, '+'));\n        });\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.keys().length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n\n    /**\n     * Gets the query string\n     *\n     * @param {String|null} url\n     */\n    static getQueryString(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        return query_string;\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) =>\n    WS.subscribeProposalOpenContractOnBuy({ buy: proposal_id, price });\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['stake', 'payout'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['stake', 'payout'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['stake', 'payout'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['stake', 'payout'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['stake', 'payout'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Expiry time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query-string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base-store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    @observable has_only_forward_starting_contracts = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    @observable is_blurred = false;\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    showBlur() {\n        this.is_blurred = true;\n    }\n\n    @action.bound\n    hideBlur() {\n        this.is_blurred = false;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    openPositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n\n    @action.bound\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base-name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport PositionsDrawer             from './Components/Elements/PositionsDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast-message.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <React.Fragment>\n                <div className='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PositionsDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer className='footer'>\n                    <Footer />\n                </footer>\n            </React.Fragment>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './positions-drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { CSSTransition }              from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconMinimize }               from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            active_contract_id,\n            active_positions,\n            error,\n            currency,\n            is_contract_mode,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            openContract,\n            toggleDrawer,\n            server_time,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            // Show only 4 most recent open contracts\n            body_content = active_positions.slice(0, 4).map((portfolio_position) => (\n                <CSSTransition\n                    key={portfolio_position.id}\n                    in={!!(portfolio_position.contract_info.underlying)}\n                    timeout={150}\n                    classNames={{\n                        enter    : 'positions-drawer-card__wrapper--enter',\n                        enterDone: 'positions-drawer-card__wrapper--enter-done',\n                        exit     : 'positions-drawer-card__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <PositionsDrawerCard\n                        active_position={active_contract_id}\n                        onClickSell={onClickSell}\n                        onClickRemove={onClickRemove}\n                        openContract={openContract}\n                        server_time={server_time}\n                        key={portfolio_position.id}\n                        currency={currency}\n                        {...portfolio_position}\n                    />\n                </CSSTransition>\n            ));\n        }\n\n        return (\n            <div className={classNames(\n                'positions-drawer', {\n                    'positions-drawer--open'         : is_positions_drawer_on,\n                    'positions-drawer--contract-mode': is_contract_mode,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconMinimize />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n                {/* TODO: Re-enable reports button positions drawer footer once implemented */}\n                {/* <div className='positions-drawer__footer'> */}\n                {/* <a className='btn btn--link btn--alternate' href='javascript:;'> */}\n                {/* <span className='btn__text'> */}\n                {/* {localize('Go to Reports')} */}\n                {/* </span> */}\n                {/* </a> */}\n                {/* </div> */}\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id    : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_contract_mode      : PropTypes.bool,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    openContract          : PropTypes.func,\n    server_time           : PropTypes.object,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, modules, client, ui }) => ({\n        server_time           : common.server_time,\n        currency              : client.currency,\n        active_contract_id    : modules.contract.contract_id,\n        active_positions      : modules.portfolio.active_positions,\n        error                 : modules.portfolio.error,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        is_empty              : modules.portfolio.is_empty,\n        is_loading            : modules.portfolio.is_loading,\n        onClickSell           : modules.portfolio.onClickSell,\n        onClickRemove         : modules.portfolio.removePositionById,\n        openContract          : modules.contract.onMount,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        toggleDrawer          : ui.togglePositionsDrawer,\n    })\n)(PositionsDrawer);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className, classNamePath, is_bold = false }) => (\n    is_bold ?\n        <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                className={classNames(classNamePath, 'color1-fill')}\n                fill='#000'\n                fillOpacity='.8'\n                fillRule='evenodd'\n                d='M8 9.586l5.293-5.293a1 1 0 0 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 1.414-1.414L8 9.586z'\n            />\n        </svg>\n        :\n        <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                className={classNames(classNamePath, 'color1-fill')}\n                fill='rgba(0, 0, 0, 0.8)'\n                fillRule='nonzero'\n                d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z'\n            />\n        </svg>\n);\n\nIconArrow.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconArrow };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, classNamePath, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path className={classNamePath || 'color1-fill'} fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    onClick      : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={classNames('inline-icon', className)}\n        onClick={onClick}\n    >\n        <path className='color1-fill' fill='#000' fillOpacity='.8' fillRule='nonzero' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCountryFlag = ({ type, className }) => {\n    let IconCountry;\n    if (type) {\n        switch (type) {\n            case 'de':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#333' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#FFCD00' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#F10000' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'es':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#DD172C' mask='url(#b)' d='M0 0h24v4H0zm0 12h24v4H0z' />\n                            <path fill='#FFD133' mask='url(#b)' d='M0 4h24v8H0z' />\n                            <g mask='url(#b)'>\n                                <path fill='#FFEDB1' d='M5.333 7.333h1.334V8H5.333z' />\n                                <path d='M4.054 7.3l.167 2.007a1.138 1.138 0 0 0 1.112 1.026c.566 0 1.065-.461 1.112-1.026L6.613 7.3c.014-.174-.105-.3-.288-.3H4.341c-.176 0-.301.133-.287.3z' stroke='#A41517' strokeWidth='.667' />\n                                <path fill='#A41517' d='M4 8h2.667v.667H6L5.333 10l-.666-1.333H4zM2 6h1.333v4.667H2zm5.333 0h1.333v4.667H7.333zM4 5.333c0-.368.306-.666.673-.666h1.32c.372 0 .674.296.674.666v.33A.33.33 0 0 1 6.34 6H4.327A.327.327 0 0 1 4 5.664v-.33z' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'fr':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#001F9B' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF002D' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'id':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#E12237' mask='url(#b)' d='M0 0h24v8H0z' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 8h24v8H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'it':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#1BB65D' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#E43D4C' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'pl':\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M0 14.16c0 1.01.805 1.827 1.797 1.827h20.406c.992 0 1.797-.818 1.797-1.826V8H0v6.16z' fill='#F44336' />\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84V8h24V1.84C24 .83 23.195.012 22.203.012z' fill='#FFF' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n            case 'pt':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#128415' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF2936' mask='url(#b)' d='M8 0h16v16H8z' />\n                            <circle stroke='#FAF94F' mask='url(#b)' cx='8' cy='8' r='3.5' />\n                            <g mask='url(#b)'>\n                                <path d='M6.5 6.341c0-.188.145-.341.333-.341h2.334c.184 0 .333.152.333.341v2.327C9.5 9.404 8.907 10 8.175 10h-.35C7.093 10 6.5 9.41 6.5 8.668V6.341z' fill='#FFF' />\n                                <path d='M8 8.92c.414 0 .75-1.086.75-1.5a.75.75 0 1 0-1.5 0c0 .414.336 1.5.75 1.5z' fill='#1D50B5' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'ru':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#FFF' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#E53B35' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#0C47B7' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'th':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#F12532' xlinkHref='#a' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 3h24v10H0z' />\n                            <path fill='#322B6C' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'vi':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#EA403F' xlinkHref='#a' />\n                            <path fill='#FFFE4E' mask='url(#b)' d='M12 10.45l-2.939 2.095 1.084-3.442-2.9-2.148 3.609-.033L12 3.5l1.146 3.422 3.61.033-2.901 2.148 1.084 3.442z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_cn':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M7.742 7.186h1.04V13h-1.04V7.186zm7.453 5.77h-.952l-.255-.927.996.032c.244 0 .366-.161.366-.474V6.883h-4.11v-.938h5.15v5.922c0 .723-.399 1.09-1.196 1.09zM9.968 7.64h4.175v4.207H9.968V7.639zm3.2 3.355v-.863h-2.203v.863h2.203zM10.965 9.31h2.203v-.842h-2.203v.842zM9.082 5.503c.576.496 1.019.938 1.329 1.327l-.775.517c-.333-.41-.776-.863-1.33-1.38l.776-.464zm-.3-.874a7.406 7.406 0 0 1-.896 1.23L7 5.298C7.664 4.586 8.13 3.82 8.417 3l1.02.216c-.067.183-.145.356-.211.518h2.746v.895h-1.461c.232.324.42.636.564.917l-.93.334a9.512 9.512 0 0 0-.73-1.251h-.632zm4.707 0a6.6 6.6 0 0 1-.686 1.068l-.886-.561c.543-.658.93-1.37 1.152-2.125l1.007.216c-.066.172-.121.345-.177.507H17v.895h-1.661c.21.291.387.572.531.83l-.93.335a9.04 9.04 0 0 0-.697-1.165h-.754z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_tw':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M8.602 4.413c-.13.151-.26.302-.38.432h3.605c0 .431-.011.83-.033 1.175h.617v.648h-.67l-.098.68h.444v.528h-.563c-.022.065-.033.119-.054.173l.314.237c-.585.291-1.18.54-1.786.744a165.06 165.06 0 0 1 2.23-.075c.454-.227.908-.475 1.374-.734l.725.475a18.267 18.267 0 0 1-4.091 1.683 126.13 126.13 0 0 0 4.177-.248c-.238-.173-.487-.356-.746-.53l.725-.441c1.028.647 1.818 1.208 2.37 1.704l-.812.561a12.63 12.63 0 0 0-.768-.69c-.93.054-1.818.108-2.663.15v1.263c0 .56-.335.852-.995.852h-1.018l-.173-.82c.314.033.617.054.899.054.205 0 .313-.108.313-.302v-1.003c-1.287.065-2.478.108-3.56.14l-.217-.841c.282.01.552.021.823.021.78-.162 1.59-.42 2.446-.766l-2.468.087-.151-.712c.368 0 .617-.033.768-.097a12.58 12.58 0 0 0 1.44-.637c.021-.086.054-.173.075-.248H7.574c.075-.41.14-.81.205-1.208h-.703V6.02h.779c.043-.312.076-.614.097-.916a6.4 6.4 0 0 1-.422.366L7 4.834c.595-.442 1.115-1.047 1.548-1.823l.844.183c-.098.173-.195.345-.292.507h3.181v.712h-3.68zm0 2.168l-.13.766h1.656a7.341 7.341 0 0 0-1.147-.41l.227-.356h-.606zm1.558.766h.671a9.43 9.43 0 0 0 .13-.766h-1.71c.422.12.8.249 1.147.4l-.238.366zm.844-1.219l.033-.766H8.742c-.021.26-.054.518-.086.766h1.504a6.009 6.009 0 0 0-1.017-.399l.249-.356c.39.108.757.26 1.093.432l-.206.323h.725zm2.587-1.337a3.23 3.23 0 0 0 .941 1.424c.347-.41.617-.885.79-1.424h-1.731zm.335 1.985a4.244 4.244 0 0 1-.876-1.316 7.07 7.07 0 0 1-.52.582l-.54-.647c.562-.583 1.049-1.381 1.46-2.395l.877.194c-.108.28-.227.54-.346.788h2.813v.809h-.627c-.195.776-.52 1.413-.953 1.93.498.324 1.093.594 1.786.82l-.465.81c-.78-.28-1.429-.615-1.948-1.004-.542.432-1.202.745-1.96.95l-.475-.745c.714-.172 1.298-.431 1.774-.776zm-.173 4.347c1.082.259 2.078.583 2.976.97l-.519.81a16.903 16.903 0 0 0-2.965-1.025l.508-.755zm-3.798.043l.54.615c-.8.453-1.785.83-2.943 1.133l-.379-.799c1.126-.237 2.056-.56 2.782-.949z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            default: // en\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84v12.322c0 1.008.805 1.826 1.797 1.826h20.406c.992 0 1.797-.818 1.797-1.826V1.839C24 .831 23.195.013 22.203.013z' fill='#0D47A1' />\n                            <path d='M23.975 1.537A1.806 1.806 0 0 0 22.203.013h-.468l-7.666 5.102V.013H9.931v5.102L2.265.013h-.468C.906.013.167.673.025 1.537l6.552 4.361H0v4.204h6.577l-6.552 4.36a1.806 1.806 0 0 0 1.772 1.525h.468l7.666-5.102v5.102h4.138v-5.102l7.666 5.102h.468c.891 0 1.63-.66 1.772-1.524l-6.552-4.361H24V5.898h-6.577l6.552-4.36z' fill='#FFF' />\n                            <path d='M13.241.013V6.74H24v2.52H13.241v6.726H10.76V9.26H0V6.74h10.759V.013h2.482zM1.162 15.87a1.8 1.8 0 0 1-.73-.52l7.956-5.247h1.52L1.162 15.87zm15.075-5.767l7.527 4.963a1.82 1.82 0 0 1-.576.623l-8.471-5.586h1.52zM.19 1.022C.316.767.5.545.725.374l8.378 5.525h-1.52L.19 1.023zm15.399 4.876h-1.52L22.824.125a1.8 1.8 0 0 1 .735.517l-7.97 5.256z' fill='#F44336' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='24' height='16' viewBox='0 0 24 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconCountry}\n        </svg>\n\n    );\n};\n\nIconCountryFlag.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconCountryFlag };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconFlag = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n        <g fillRule='nonzero' fill='none'>\n            <path d='M-6-4h32v32H-6z' />\n            <path className='color1-fill' d='M2 2h18a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2v5a1 1 0 0 1-2 0V1a1 1 0 1 1 2 0v1zm6 2v4h4V4H8zm4 4v4h4V8h-4zm4-4v4h4V4h-4zm0 8v4h4v-4h-4zm-8 0v4h4v-4H8zM4 8v4h4V8H4z' fill='#7F8397' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconFlag };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinimize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#000' fillOpacity='0.8' fillRule='nonzero' d='M0 7h16v2H0z' />\n    </svg>\n);\n\nIconMinimize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMinimize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#7f8397' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#7f8397' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport classNames        from 'classnames';\n\nconst IconPositions = ({ className }) => {\n    const IconType = (\n        <g fill='none' fillRule='evenodd'>\n            <path className='color1-fill color3-fill' fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2zM1 8.128V12.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V8.128l-2.804 1.557a2.5 2.5 0 0 1-1.214.315H5.018a2.5 2.5 0 0 1-1.214-.315L1 8.128zm0-1.144L4.29 8.81A1.5 1.5 0 0 0 5.018 9h5.964a1.5 1.5 0 0 0 .728-.189L15 6.984V3.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v3.484zM6.5 8a.5.5 0 0 1 0-1h3a.5.5 0 0 1 0 1h-3z' />\n        </g>\n    );\n\n    return (\n        <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n            {IconType}\n        </svg>\n    );\n};\n\nIconPositions.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPositions };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { CSSTransition }     from 'react-transition-group';\nimport ContractLink          from 'Modules/Contract/Containers/contract-link.jsx';\nimport { localize }          from '_common/localize';\nimport { IconPriceMove }     from 'Assets/Trading/icon-price-move.jsx';\nimport ContractTypeCell      from './contract-type-cell.jsx';\nimport ProgressSlider        from './ProgressSlider';\nimport ResultDetails         from './result-details.jsx';\nimport ResultOverlay         from './result-overlay.jsx';\nimport { getTimePercentage } from './helpers';\nimport Money                 from '../money.jsx';\nimport Button                from '../../Form/button.jsx';\n\nconst PositionsDrawerCard = ({\n    active_position,\n    className,\n    contract_info,\n    currency,\n    current_tick,\n    duration,\n    duration_unit,\n    exit_spot,\n    indicative,\n    id,\n    is_loading,\n    is_sell_requested,\n    is_valid_to_sell,\n    profit_loss,\n    onClickSell,\n    onClickRemove,\n    openContract,\n    result,\n    sell_time,\n    server_time,\n    status,\n    type,\n}) => {\n    const percentage = getTimePercentage(server_time, contract_info.purchase_time, contract_info.date_expiry);\n    return (\n        <div className={classNames(\n            'positions-drawer-card__wrapper', {\n                'positions-drawer-card__wrapper--active': (parseInt(active_position) === id),\n            },\n            className)}\n        >\n            <ResultOverlay\n                contract_id={id}\n                onClickRemove={onClickRemove}\n                onClick={openContract}\n                result={result}\n            />\n            <ContractLink\n                className={classNames(\n                    'positions-drawer-card', {\n                        'positions-drawer-card--active': (parseInt(active_position) === id),\n                        'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                        'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                    }\n                )}\n                contract_id={id}\n            >\n                <React.Fragment>\n                    <div className={classNames(\n                        'positions-drawer-card__grid',\n                        'positions-drawer-card__grid-underlying-trade'\n                    )}\n                    >\n                        <div className='positions-drawer-card__underlying-name'>\n                            <div\n                                className={classNames(\n                                    'icons-underlying',\n                                    `icons-underlying__ic-${contract_info.underlying || 'unknown'}`\n                                )}\n                            />\n                            <span className='positions-drawer-card__symbol'>{contract_info.display_name}</span>\n                        </div>\n                        <div className='positions-drawer-card__type'>\n                            <ContractTypeCell type={type} />\n                        </div>\n                    </div>\n                    <ProgressSlider\n                        is_loading={is_loading}\n                        remaining_time={contract_info.date_expiry}\n                        percentage={percentage}\n                        current_tick={current_tick}\n                        ticks_count={contract_info.tick_count}\n                        has_result={!!(result)}\n                    />\n                    <div className={classNames(\n                        'positions-drawer-card__grid',\n                        'positions-drawer-card__grid-profit-payout'\n                    )}\n                    >\n                        <div className={classNames(\n                            'positions-drawer-card__profit-loss',\n                            'positions-drawer-card__profit-loss-label',\n                        )}\n                        >\n                            {result ? localize('P/L:') : localize('Potential P/L:')}\n                        </div>\n                        <div className={classNames(\n                            'positions-drawer-card__indicative',\n                            'positions-drawer-card__indicative-label',\n                        )}\n                        >\n                            {!result ? localize('Potential Payout:') : localize('Payout:')}\n                        </div>\n                        <div className={classNames(\n                            'positions-drawer-card__profit-loss', {\n                                'positions-drawer-card__profit-loss--negative': (profit_loss < 0),\n                                'positions-drawer-card__profit-loss--positive': (profit_loss > 0),\n                            })}\n                        >\n                            <Money amount={Math.abs(profit_loss)} currency={currency} />\n                        </div>\n                        <div className='positions-drawer-card__indicative'>\n                            <Money amount={indicative} currency={currency} />\n                            <div className={classNames(\n                                'positions-drawer-card__indicative--movement', {\n                                    'positions-drawer-card__indicative--movement-complete': (status === 'complete'),\n                                },\n                            )}\n                            >\n                                <IconPriceMove\n                                    type={(status !== 'complete') ? status : null}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='positions-drawer-card__purchase-price'>\n                        <span className='positions-drawer-card__purchase-label'>\n                            {localize('Purchase price')}\n                        </span>\n                        <Money amount={contract_info.buy_price} currency={currency} />\n                    </div>\n                </React.Fragment>\n            </ContractLink>\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        className={classNames(\n                            'btn--primary',\n                            'btn--primary--orange',\n                            'btn--sell', {\n                                'btn--loading': is_sell_requested,\n                            })}\n                        is_disabled={!is_valid_to_sell || is_sell_requested}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n            <ResultDetails\n                contract_info={contract_info}\n                contract_end_time={sell_time}\n                duration={duration}\n                duration_unit={duration_unit}\n                exit_spot={exit_spot}\n                has_result={!!(result)}\n            />\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className        : PropTypes.string,\n    contract_info    : PropTypes.object,\n    currency         : PropTypes.string,\n    current_tick     : PropTypes.number,\n    duration         : PropTypes.number,\n    duration_unit    : PropTypes.string,\n    exit_spot        : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id               : PropTypes.number,\n    indicative       : PropTypes.number,\n    is_loading       : PropTypes.bool,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClickRemove    : PropTypes.func,\n    onClickSell      : PropTypes.func,\n    openContract     : PropTypes.func,\n    profit_loss      : PropTypes.number,\n    result           : PropTypes.string,\n    sell_time        : PropTypes.number,\n    server_time      : PropTypes.object,\n    status           : PropTypes.string,\n    type             : PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nconst ContractLink = ({\n    contract_id,\n    children,\n    className,\n    openContract,\n}) => (\n    <a\n        className={className}\n        href='javascript:;'\n        onClick={() => openContract(contract_id, true)}\n    >\n        {children}\n    </a>\n);\n\nContractLink.propTypes = {\n    children   : PropTypes.node,\n    className  : PropTypes.string,\n    contract_id: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onMount: PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        openContract: modules.contract.onMount,\n    }),\n)(ContractLink);\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='contract-type__type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='category-type' />\n        </div>\n        <span className='contract-type__type-label'>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' className='color1-fill' fill='#2A3052'fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path className='color1-fill' fill='#2A3052'd='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('trade-type-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './positions-progress-slider.jsx';\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    current_tick,\n    has_result,\n    is_loading,\n    percentage,\n    remaining_time,\n    ticks_count,\n}) => {\n    if (!percentage && !ticks_count || has_result || !remaining_time) return <div className='progress-slider--completed' />;\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {(ticks_count) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={remaining_time} />\n                    </span>\n                    {(is_loading || (percentage < 1)) ?\n                        <div className='progress-slider__infinite-loader'>\n                            <div className='progress-slider__infinite-loader--indeterminate' />\n                        </div>\n                        :\n                        /* Calculate line width based on percentage of time left */\n                        <div className='progress-slider__track'>\n                            <div\n                                className={classNames('progress-slider__line', {\n                                    'progress-slider__line--green' : (percentage >= 50),\n                                    'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                    'progress-slider__line--red'   : (percentage < 20),\n                                })}\n                                style={{ width: `${percentage}%` }}\n                            />\n                        </div>\n                    }\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className     : PropTypes.string,\n    current_tick  : PropTypes.number,\n    has_result    : PropTypes.bool,\n    is_loading    : PropTypes.bool,\n    percentage    : PropTypes.number,\n    remaining_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default ProgressSlider;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst ProgressTicks = ({\n    current_tick,\n    ticks_count,\n}) => {\n    const arr_ticks   = [...Array(ticks_count).keys()];\n    return (\n        <div className='progress-slider__ticks'>\n            <span className='progress-slider__ticks-caption'>\n                {localize('Tick [_1]', current_tick.toString()) }\n            </span>\n            <div className='progress-slider__ticks-wrapper'>\n                {arr_ticks.map(idx =>\n                    <div\n                        key={idx}\n                        className={classNames('progress-slider__ticks-step', {\n                            'progress-slider__ticks-step--marked': (idx + 1) <= parseInt(current_tick),\n                        })}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconArrow }     from 'Assets/Common';\nimport { localize }      from '_common/localize';\nimport {\n    epochToMoment,\n    toGMTFormat }        from 'Utils/Date';\nimport {\n    addCommaToNumber,\n    getBarrierLabel,\n    getBarrierValue  }   from './helpers';\nimport ResultDetailsItem from './result-details-item.jsx';\n\nclass ResultDetails extends React.PureComponent {\n    state = {\n        is_open: false,\n    };\n\n    toggleDetails = () => {\n        this.setState({ is_open: !this.state.is_open });\n    }\n\n    render() {\n        const {\n            contract_end_time,\n            contract_info,\n            duration,\n            duration_unit,\n            exit_spot,\n            has_result,\n        } = this.props;\n        if (!has_result) return null;\n        return (\n            <React.Fragment>\n                <div className={classNames('result-details__wrapper', {\n                    'result-details__wrapper--is-open': this.state.is_open,\n                })}\n                >\n                    <div className='result-details__grid'>\n                        <ResultDetailsItem\n                            label={localize('Ref. ID (Buy)')}\n                            value={contract_info.transaction_ids.buy}\n                        />\n                        <ResultDetailsItem\n                            label={localize('Ref. ID (Sell)')}\n                            value={contract_info.transaction_ids.sell}\n                        />\n                    </div>\n                    <div className='result-details__grid'>\n                        <ResultDetailsItem\n                            label={localize('Duration')}\n                            value={(contract_info.tick_count > 0) ?\n                                `${contract_info.tick_count} ${(contract_info.tick_count < 2) ? localize('tick') : localize('ticks')}`\n                                :\n                                `${duration} ${duration_unit}`}\n                        />\n                        <ResultDetailsItem\n                            label={getBarrierLabel(contract_info)}\n                            value={getBarrierValue(contract_info) || ' - '}\n                        />\n                    </div>\n                    <div className='result-details__grid'>\n                        <ResultDetailsItem\n                            label={localize('Entry spot')}\n                            value={addCommaToNumber(contract_info.entry_spot) || ' - '}\n                        />\n                        <ResultDetailsItem\n                            label={localize('Exit spot')}\n                            value={addCommaToNumber(exit_spot) || ' - '}\n                        />\n                    </div>\n                    <div className='result-details__grid'>\n                        <ResultDetailsItem\n                            label={localize('Start time')}\n                            value={toGMTFormat(epochToMoment(contract_info.purchase_time)) || ' - '}\n                        />\n                        <ResultDetailsItem\n                            label={localize('End time')}\n                            value={toGMTFormat(epochToMoment(contract_end_time)) || ' - '}\n                        />\n                    </div>\n                </div>\n                <div\n                    className={classNames('result-details__toggle', {\n                        'result-details__toggle--is-open': this.state.is_open,\n                    })}\n                    onClick={this.toggleDetails}\n                >\n                    <IconArrow className='result-details__select-arrow' />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nResultDetails.propTypes = {\n    contract_end_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    contract_info: PropTypes.object,\n    duration     : PropTypes.number,\n    duration_unit: PropTypes.string,\n    exit_spot    : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    has_result   : PropTypes.bool,\n};\n\nexport default ResultDetails;\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\nexport const addCommaToNumber = num => {\n    const n = String(num);\n    const p = n.indexOf('.');\n    return n.replace(\n        /\\d(?=(?:\\d{3})+(?:\\.|$))/g,\n        (m, i) => p <= 0 || i < p ? `${m},` : m\n    );\n};\n\nexport const getTimePercentage = (current_time, purchase_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(purchase_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(current_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) {\n        percentage = 0;\n    } else if (percentage > 100) {\n        percentage = 100;\n    }\n\n    return Math.round(percentage);\n};\n\nexport const getBarrierLabel = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nconst digitTypeMap = (contract_info) => ({\n    DIGITDIFF : localize('Not [_1]', contract_info.barrier),\n    DIGITEVEN : localize('Even'),\n    DIGITMATCH: localize('Equals [_1]', contract_info.barrier),\n    DIGITODD  : localize('Odd'),\n    DIGITOVER : localize('Over [_1]', contract_info.barrier),\n    DIGITUNDER: localize('Under [_1]', contract_info.barrier),\n});\n\nconst isDigitType = (contract_type) => (/digit/.test(contract_type.toLowerCase()));\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ResultDetailsItem = ({\n    label,\n    value,\n}) => (\n    <div className='result-details__item'>\n        <span className='result-details__label'>\n            {label}\n        </span>\n        <span className='result-details__value'>\n            {value}\n        </span>\n    </div>\n);\n\nResultDetailsItem.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ResultDetailsItem;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport IconCheck         from 'Images/app_2/portfolio/ic-check.svg';\nimport IconCross         from 'Images/app_2/portfolio/ic-cross.svg';\nimport { localize }      from '_common/localize';\n\nconst ResultOverlay = ({\n    contract_id,\n    onClick,\n    onClickRemove,\n    result,\n}) => (\n    <React.Fragment>\n        <CSSTransition\n            in={!!(result)}\n            timeout={250}\n            classNames={{\n                enter    : 'positions-drawer-card__result--enter',\n                enterDone: 'positions-drawer-card__result--enter-done',\n                exit     : 'positions-drawer-card__result--exit',\n            }}\n            unmountOnExit\n        >\n            <div className={classNames('positions-drawer-card__result', {\n                'positions-drawer-card__result--won' : (result === 'won'),\n                'positions-drawer-card__result--lost': (result === 'lost'),\n            })}\n            >\n                <span\n                    className='result__close-btn'\n                    onClick={() => onClickRemove(contract_id)}\n                />\n                <span\n                    className={classNames('result__caption', {\n                        'result__caption--won' : (result === 'won'),\n                        'result__caption--lost': (result === 'lost'),\n                    }\n                    )}\n                    onClick={() => onClick(contract_id)}\n                >\n                    {\n                        (result === 'won') ?\n                            <React.Fragment>\n                                {localize('won')}\n                                <IconCheck className='result__icon' />\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                {localize('lost')}\n                                <IconCross className='result__icon' />\n                            </React.Fragment>\n                    }\n                </span>\n            </div>\n        </CSSTransition>\n    </React.Fragment>\n);\n\nResultOverlay.propTypes = {\n    contract_id  : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    onClick      : PropTypes.func,\n    onClickRemove: PropTypes.func,\n    result       : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"#4BBFAB\" }),\n      React.createElement(\"path\", { fill: \"#FFF\", fillRule: \"nonzero\", d: \"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" })\n    )\n  );\n});","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"#E31C4B\", fillRule: \"nonzero\" }),\n      React.createElement(\"path\", { stroke: \"#FFF\", strokeLinecap: \"round\", d: \"M10.5 5.5l-5 5m5 0l-5-5\" })\n    )\n  );\n});","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport classNames       from 'classnames';\nimport { IconError }    from 'Assets/Common/icon-error.jsx';\nimport { IconInfoBlue } from 'Assets/Common/icon-info-blue.jsx';\nimport { IconWarning }  from 'Assets/Common/icon-warning.jsx';\nimport { IconSuccess }  from 'Assets/Common/icon-success.jsx';\nimport CloseButton      from './close-button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }             from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                { data.type === 'ERROR'   && <IconError className='toast__icon-type' /> }\n                { data.type === 'INFO'    && <IconInfoBlue className='toast__icon-type' /> }\n                { data.type === 'SUCCESS' && <IconSuccess className='toast__icon-type' /> }\n                { data.type === 'WARNING' && <IconWarning className='toast__icon-type' /> }\n            </div>\n            <div className='toast__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({\n    children, is_contract_mode,\n    is_positions_drawer_on,\n    is_blurred,\n}) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-positions-drawer': is_positions_drawer_on,\n            'app-contents--contract-mode'        : is_contract_mode,\n            'app-contents--is-blurred'           : is_blurred,\n        })}\n    >\n        {/* Calculate height of user screen and offset height of header and footer */}\n        <Scrollbars\n            autoHide\n            style={{ height: 'calc(100vh - 83px)' }}\n        >\n            {children}\n        </Scrollbars>\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_positions_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ modules, ui }) => ({\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        is_blurred            : ui.is_blurred,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    hideBlur,\n    is_dark_mode,\n    is_language_dialog_visible,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_settings_dialog_on,\n    network_status,\n    showBlur,\n    togglePositionsDrawer,\n    toggleSettingsDialog,\n}) => (\n    <React.Fragment>\n        <div className='footer__links footer__links--left'>\n            {\n                is_logged_in &&\n                <TogglePositions\n                    is_positions_drawer_on={is_positions_drawer_on}\n                    togglePositionsDrawer={togglePositionsDrawer}\n                />\n            }\n        </div>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer__links'>\n            <ToggleSettings\n                is_dark_mode={is_dark_mode}\n                is_language_visible={is_language_dialog_visible}\n                is_settings_visible={is_settings_dialog_on}\n                toggleSettings={toggleSettingsDialog}\n                showBlur={showBlur}\n                hideBlur={hideBlur}\n            />\n            <ToggleFullScreen />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePositionsDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        hideBlur                  : ui.hideBlur,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_logged_in              : client.is_logged_in,\n        network_status            : common.network_status,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        showBlur                  : ui.showBlur,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network-status.jsx';\nexport * from './toggle-fullscreen.jsx';\nexport * from './toggle-positions.jsx';\nexport * from './toggle-settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPositions } from 'Assets/Footer';\n\nconst TogglePositions = ({\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames('ic-positions', 'footer__link', {\n        'ic-positions--active': is_positions_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n        >\n            <IconPositions className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { CSSTransition }  from 'react-transition-group';\nimport { SettingsDialog } from 'App/Components/Elements/SettingsDialog/settings-dialog.jsx';\nimport { IconSettings }   from 'Assets/Footer';\n\nconst ToggleSettings = ({\n    hideBlur,\n    is_dark_mode,\n    is_language_visible,\n    is_settings_visible,\n    showBlur,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer__icon ic-settings__icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames={{\n                    enter    : 'settings-dialog--enter',\n                    enterDone: 'settings-dialog--enter-done',\n                    exit     : 'settings-dialog--exit',\n                }}\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                    is_dark_mode={is_dark_mode}\n                    showBlur={showBlur}\n                    hideBlur={hideBlur}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    hideBlur           : PropTypes.func,\n    is_dark_mode       : PropTypes.bool,\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    showBlur           : PropTypes.func,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport ReactDOM           from 'react-dom';\nimport { localize }       from '_common/localize';\nimport VerticalTab        from 'App/Components/Elements/VerticalTabs';\nimport {\n    ChartSettings,\n    LanguageSettings,\n    ThemeSelectSettings,\n    PurchaseSettings,\n}                         from 'App/Containers/SettingsDialog';\nimport {\n    IconCharts,\n    IconClose,\n    IconLanguage,\n    IconPurchase,\n    IconTheme,\n}                         from 'Assets/Settings';\n\nclass SettingsDialog extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n        this.state = {\n            modal_root: document.getElementById('modal_root'),\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.el.classList.add('settings-dialog');\n        this.props.showBlur();\n        this.state.modal_root.appendChild(this.el);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        this.state.modal_root.removeChild(this.el);\n        this.props.hideBlur();\n    }\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings ic-settings--active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    render() {\n        const settings_dialog_container_class = classNames('settings-dialog__container', {\n            'settings-dialog__container--hide': this.props.is_language_dialog_visible,\n        });\n        return ReactDOM.createPortal(\n            <div ref={this.setWrapperRef} className={settings_dialog_container_class}>\n                <div className='dialog-header'>\n                    <h3 className='dialog-header__sidebar'>{localize('Platform settings')}</h3>\n                    <div className='dialog-header__main'>\n                        <div className='dialog-header__close' onClick={this.props.toggleDialog}>\n                            <IconClose />\n                        </div>\n                    </div>\n                </div>\n                <VerticalTab\n                    alignment='center'\n                    classNameHeader='settings-dialog__tab-header'\n                    list={this.settings_content()}\n                />\n            </div>,\n            this.el\n        );\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    settings_content = () => [\n        {\n            icon : IconTheme,\n            label: localize('Themes'),\n            value: ThemeSelectSettings,\n        }, {\n            icon : IconLanguage,\n            label: localize('Language'),\n            value: LanguageSettings,\n        }, {\n            icon : IconCharts,\n            label: localize('Charts'),\n            value: ChartSettings,\n        }, {\n            icon : IconPurchase,\n            label: localize('Purchase Section'),\n            value: PurchaseSettings,\n        },\n    ]\n}\n\nSettingsDialog.propTypes = {\n    hideBlur                  : PropTypes.func,\n    is_dark_mode              : PropTypes.bool,\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    showBlur                  : PropTypes.func,\n    toggleDialog              : PropTypes.func,\n};\n\nexport { SettingsDialog };\n","export default from './vertical-tab.jsx';\nexport *       from './vertical-tab-content-container.jsx';\nexport *       from './vertical-tab-headers.jsx';\n","import PropTypes                       from 'prop-types';\nimport React                           from 'react';\nimport { VerticalTabContentContainer } from './vertical-tab-content-container.jsx';\nimport { VerticalTabHeaders }          from './vertical-tab-headers.jsx';\n\nclass VerticalTab extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: props.list[0],\n        };\n    }\n\n    changeSelected = (e) => {\n        this.setState({\n            selected: e,\n        });\n    };\n\n    render() {\n        return (\n            <div className='vertical-tab'>\n                <VerticalTabHeaders\n                    items={this.props.list}\n                    onChange={this.changeSelected}\n                    selected={this.state.selected}\n                />\n                <VerticalTabContentContainer\n                    items={this.props.list}\n                    selected={this.state.selected}\n                />\n            </div>\n        );\n    }\n}\n\nVerticalTab.propTypes = {\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            icon : PropTypes.func,\n            label: PropTypes.string,\n            value: PropTypes.func,\n        })\n    ).isRequired,\n};\n\nexport default VerticalTab;\n","export ChartSettings       from './settings-chart.jsx';\nexport LanguageSettings    from './settings-language.jsx';\nexport PurchaseSettings    from './settings-purchase.jsx';\nexport ThemeSelectSettings from './settings-theme.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport Localize        from 'App/Components/Elements/localize.jsx';\nimport MediaItem, {\n    MediaHeading,\n    MediaIcon,\n    MediaDescription,\n}                      from 'App/Components/Elements/Media';\nimport Checkbox        from 'App/Components/Form/Checkbox';\nimport RadioGroup      from 'App/Components/Form/Radio';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='settings-chart'>\n        <MediaItem>\n            <MediaHeading>\n                <Localize str='Chart Control Position' />\n            </MediaHeading>\n            <MediaDescription>\n                <MediaIcon />\n                <div className='media__form'>\n                    <p><Localize str='Chart control position' /></p>\n                    <RadioGroup\n                        items={[\n                            {\n                                label: 'Bottom',  // localization will be handled in RadioGroup\n                                value: true,\n                            },\n                            {\n                                label: 'Left',\n                                value: false,\n                            },\n                        ]}\n                        selected={is_layout_default}\n                        onToggle={toggleLayout}\n                    />\n                </div>\n            </MediaDescription>\n        </MediaItem>\n        <MediaItem>\n            <MediaHeading>\n                <Localize str='Asset Information' />\n            </MediaHeading>\n            <MediaDescription>\n                <MediaIcon />\n                <div className='media__form'>\n                    <Checkbox\n                        value={is_asset_visible}\n                        label={localize('Visible Asset')}\n                        onClick={toggleAsset}\n                    />\n                </div>\n            </MediaDescription>\n        </MediaItem>\n        <MediaItem>\n            <MediaHeading>\n                <Localize str='Scale Countdown' />\n            </MediaHeading>\n            <MediaDescription>\n                <MediaIcon />\n                <div className='media__form'>\n                    <Checkbox\n                        value={is_countdown_visible}\n                        label={localize('Visible Countdown')}\n                        onClick={toggleCountdown}\n                    />\n                </div>\n            </MediaDescription>\n        </MediaItem>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(({ ui }) => (\n    {\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    }\n))(ChartSettings);\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import React from 'react';\n\nconst MediaDescription = (props) => (\n    <div className='media__description'>\n        {props.children}\n    </div>\n);\n\nexport { MediaDescription };\n","import React from 'react';\n\nconst MediaHeading = (props)  => (\n    <div className='media__heading'>\n        {props.children}\n    </div>\n);\n\nexport { MediaHeading };\n","import React from 'react';\n\nconst MediaIcon = () => (\n    <div className='media__icon' />\n);\n\nexport { MediaIcon };\n","import React from 'react';\n\nconst MediaItem = (props) => (\n    <div className='media'>\n        {props.children}\n    </div>\n);\n\nexport default MediaItem;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nclass Checkbox extends React.PureComponent {\n    onClick = () => {\n        this.props.onClick(!this.props.value);\n    };\n\n    render() {\n        const { value, label } = this.props;\n        return (\n            <div\n                className='checkbox'\n                onClick={this.onClick}\n            >\n                <div className={classNames('checkbox__box', {\n                    'checkbox__box--active': value,\n                })}\n                />\n                <div className='checkbox__label'>{label}</div>\n            </div>\n        );\n    }\n}\n\nCheckbox.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.bool,\n};\n\nexport default Checkbox;\n","export *        from './radio.jsx';\nexport default  from './radio-group.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Localize  from 'App/Components/Elements/localize.jsx';\nimport { Radio } from './radio.jsx';\n\nclass RadioGroup extends React.PureComponent {\n    render() {\n        const { selected, items } = this.props;\n        return (\n            <div className='radio-group'>\n                {items.map(item => (\n                    <Radio\n                        key={item.label}\n                        value={item.value}\n                        selected={selected === item.value}\n                        onClick={this.props.onToggle}\n                    >\n                        {item.label && <Localize str={item.label} />}\n                    </Radio>\n                ))}\n            </div>\n        );\n    }\n}\n\nRadioGroup.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            value: PropTypes.bool.isRequired,\n        })\n    ),\n    onToggle: PropTypes.func,\n    selected: PropTypes.bool,\n};\n\nexport default RadioGroup;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language-dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Localize            from 'App/Components/Elements/localize.jsx';\nimport { IconCountryFlag } from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL,\n    currentLanguage,\n}                          from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('settings-dialog__language-dialog-container', {\n        'settings-dialog__language-dialog-container--show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='settings-dialog__language-header' onClick={hide}>\n                <span>\n                    <Localize str='Select language' />\n                </span>\n            </div>\n            <div className='settings-dialog__language-container'>\n                {Object.keys(getAllowedLanguages())\n                    .map(key => (\n                        <a\n                            key={key}\n                            className={classNames('settings-dialog__language-link', {\n                                'settings-dialog__language-link--active': key === currentLanguage,\n                            })}\n                            href={getURL(key)}\n                        >\n                            <IconCountryFlag\n                                className={'settings-dialog__language-link-flag settings-dialog__language-flag'}\n                                type={key.replace(/(\\s|_)/, '-').toLowerCase()}\n                            />\n                            <span\n                                className={classNames('settings-dialog__language-name', {\n                                    'settings-dialog__language-name--active': key === currentLanguage,\n                                })}\n                            >\n                                {getAllowedLanguages()[key]}\n                            </span>\n                        </a>\n                    ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { localize }           from '_common/localize';\nimport MediaItem, {\n    MediaDescription,\n    MediaHeading,\n    MediaIcon,\n}                             from 'App/Components/Elements/Media';\nimport Localize               from 'App/Components/Elements/localize.jsx';\nimport Checkbox               from 'App/Components/Form/Checkbox';\nimport { connect }            from 'Stores/connect';\n\nconst PurchaseSettings = ({\n    is_purchase_confirmed,\n    is_purchase_locked,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='settings-dialog__purchase'>\n        <MediaItem>\n            <MediaHeading>\n                <Localize str='Purchase confirmation' />\n            </MediaHeading>\n            <MediaDescription>\n                <MediaIcon />\n                <div className='media__form'>\n                    <Checkbox\n                        value={is_purchase_confirmed}\n                        label={localize('Purchase confirmation')}\n                        onClick={togglePurchaseConfirmation}\n                    />\n                </div>\n            </MediaDescription>\n        </MediaItem>\n        <MediaItem>\n            <MediaHeading>\n                <Localize str='Purchase Lock' />\n            </MediaHeading>\n            <MediaDescription>\n                <MediaIcon />\n                <div className='media__form'>\n                    <Checkbox\n                        value={is_purchase_locked}\n                        label={localize('Purchase Lock')}\n                        onClick={togglePurchaseLock}\n                    />\n                </div>\n            </MediaDescription>\n        </MediaItem>\n    </div>\n);\n\nPurchaseSettings.propTypes = {\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(({ ui }) => (\n    {\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }\n))(PurchaseSettings);\n","import classNames    from 'classnames';\nimport React         from 'react';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport DarkModeIcon  from 'Images/app_2/settings/img-theme-dark.svg';\nimport LightModeIcon from 'Images/app_2/settings/img-theme-light.svg';\nimport { connect }   from 'Stores/connect';\n\nconst ThemeSelectSettings = ({ is_dark_mode, toggleDarkMode }) => {\n    const darkOnClick = () => {\n        if (!is_dark_mode) {\n            toggleDarkMode();\n        }\n    };\n\n    const lightOnClick = () => {\n        if (is_dark_mode) {\n            toggleDarkMode();\n        }\n    };\n    return (\n        <React.Fragment>\n            <div className='theme-select-settings'>\n                <h4 className='theme-select-settings__title'>\n                    <Localize str='Select theme' />\n                </h4>\n                <div className='theme-select-settings__content'>\n                    <div className='theme-select-settings__option'>\n                        <DarkModeIcon\n                            className={classNames('theme-select-settings__option__icon', {\n                                'theme-select-settings__option__icon--active': is_dark_mode,\n                            })}\n                            onClick={darkOnClick}\n                        />\n                        <p className='theme-select-settings__option__title'><Localize str='Dark mode' /></p>\n                    </div>\n                    <div className='theme-select-settings__option'>\n                        <LightModeIcon\n                            className={classNames('theme-select-settings__option__icon', {\n                                'theme-select-settings__option__icon--active': !is_dark_mode,\n                            })}\n                            onClick={lightOnClick}\n                        />\n                        <p className='theme-select-settings__option__title'><Localize str='Light mode' /></p>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default connect(({ ui }) => (\n    {\n        is_dark_mode  : ui.is_dark_mode_on,\n        toggleDarkMode: ui.toggleDarkMode,\n    }\n))(ThemeSelectSettings);\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ width: \"236\", height: \"180\", xmlnsXlink: \"http://www.w3.org/1999/xlink\" }, props),\n    React.createElement(\n      \"defs\",\n      null,\n      React.createElement(\"path\", { id: \"a\", d: \"M0 0h236v180H0z\" }),\n      React.createElement(\n        \"linearGradient\",\n        { x1: \"50%\", y1: \"147.77%\", x2: \"50%\", y2: \"10.76%\", id: \"c\" },\n        React.createElement(\"stop\", { stopColor: \"#101320\", stopOpacity: \"0\", offset: \"0%\" }),\n        React.createElement(\"stop\", { stopColor: \"#FFF\", stopOpacity: \".16\", offset: \"100%\" })\n      )\n    ),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\n        \"mask\",\n        { id: \"b\", fill: \"#fff\" },\n        React.createElement(\"use\", { xlinkHref: \"#a\" })\n      ),\n      React.createElement(\"use\", { fill: \"#101320\", xlinkHref: \"#a\" }),\n      React.createElement(\"path\", { d: \"M155.5 123H61v57h-1v-57H0v-1h60V32H0v-1h60V0h1v31h94.5V0h1v31H236v1h-79.5v90H236v1h-79.5v57h-1v-57zm0-1V32H61v90h94.5z\", fill: \"#191C31\", fillRule: \"nonzero\", mask: \"url(#b)\" }),\n      React.createElement(\n        \"g\",\n        { mask: \"url(#b)\" },\n        React.createElement(\"path\", { fill: \"url(#c)\", d: \"M156 81l-6.5 6.5-5 32-3-15-2-75-2-15-16-14-9 15-14 14h-11l-5 15-2-30-3 30h-4l-5 30-2-15-12-15-2-14-23 14-4 15-3-29-9 44H0V165h156z\", transform: \"translate(0 15)\" }),\n        React.createElement(\"path\", { d: \"M149 102.42a.5.5 0 0 1 .15-.27l6.5-6.5a.5.5 0 1 1 .7.7l-6.38 6.39-4.98 31.84c-.08.55-.87.57-.98.02L141 119.5l-2-74.94-1.97-14.82-15.4-13.48-8.7 14.49-.08.1-14 14a.5.5 0 0 1-.35.14H87.86l-4.89 14.66c-.17.52-.93.42-.97-.13l-1.6-24L78 59.54a.5.5 0 0 1-.5.45h-3.58L69 89.58c-.1.57-.91.56-.99-.01L66.02 74.7 54.11 59.81a.5.5 0 0 1-.1-.24l-1.9-13.25-22.18 13.5-3.95 14.8c-.14.55-.92.48-.98-.07L22.34 48.8 13.99 89.6a.5.5 0 0 1-.49.4H0v-1h13.1L22 45.4c.11-.56.93-.52.99.05l2.72 26.3 3.3-12.38a.5.5 0 0 1 .22-.3l23-14a.5.5 0 0 1 .75.36l1.98 13.86L66.9 74.2a.5.5 0 0 1 .1.24l1.57 11.7L73 59.42a.5.5 0 0 1 .49-.42h3.55L80 29.45c.06-.61.96-.6 1 .02l1.83 27.46 4.2-12.59a.5.5 0 0 1 .47-.34h10.8l13.8-13.81 8.97-14.95a.5.5 0 0 1 .76-.12l16 14a.5.5 0 0 1 .17.31l2 15.06 1.99 74.91 2.45 12.25 4.57-29.23z\", fill: \"#FFF\", fillRule: \"nonzero\" })\n      ),\n      React.createElement(\n        \"g\",\n        { mask: \"url(#b)\", fill: \"#F93\", fillRule: \"nonzero\" },\n        React.createElement(\n          \"g\",\n          { transform: \"translate(153 84)\" },\n          React.createElement(\"path\", { d: \"M52 0h31v24H52L42 12z\" }),\n          React.createElement(\"path\", { d: \"M38 11.5h6v1h-6zm-8 0h4v1h-4zm-8 0h4v1h-4zm-8 0h4v1h-4zm-10 0h6v1H4z\" }),\n          React.createElement(\"circle\", { cx: \"3\", cy: \"12\", r: \"3\" })\n        )\n      )\n    )\n  );\n});","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ width: \"236\", height: \"180\", xmlnsXlink: \"http://www.w3.org/1999/xlink\" }, props),\n    React.createElement(\n      \"defs\",\n      null,\n      React.createElement(\"path\", { id: \"a\", d: \"M0 0h236v180H0z\" }),\n      React.createElement(\n        \"linearGradient\",\n        { x1: \"50%\", y1: \"126.02%\", x2: \"50%\", y2: \"32.91%\", id: \"c\" },\n        React.createElement(\"stop\", { stopColor: \"#FFF\", stopOpacity: \"0\", offset: \"0%\" }),\n        React.createElement(\"stop\", { stopColor: \"#999CAC\", stopOpacity: \".16\", offset: \"100%\" })\n      )\n    ),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\n        \"mask\",\n        { id: \"b\", fill: \"#fff\" },\n        React.createElement(\"use\", { xlinkHref: \"#a\" })\n      ),\n      React.createElement(\"use\", { fill: \"#FFF\", xlinkHref: \"#a\" }),\n      React.createElement(\"path\", { d: \"M155.5 123H61v57h-1v-57H0v-1h60V32H0v-1h60V0h1v31h94.5V0h1v31H236v1h-79.5v90H236v1h-79.5v57h-1v-57zm0-1V32H61v90h94.5z\", fill: \"#F4F4F6\", fillRule: \"nonzero\", mask: \"url(#b)\" }),\n      React.createElement(\n        \"g\",\n        { mask: \"url(#b)\" },\n        React.createElement(\"path\", { fill: \"url(#c)\", d: \"M156 81l-6.5 6.5-5 32-3-15-2-75-2-15-16-14-9 15-14 14h-11l-5 15-2-30-3 30h-4l-5 30-2-15-12-15-2-14-23 14-4 15-3-29-9 44H0V165h156z\", transform: \"translate(0 15)\" }),\n        React.createElement(\"path\", { d: \"M149 102.42a.5.5 0 0 1 .15-.27l6.5-6.5a.5.5 0 1 1 .7.7l-6.38 6.39-4.98 31.84c-.08.55-.87.57-.98.02L141 119.5l-2-74.94-1.97-14.82-15.4-13.48-8.7 14.49-.08.1-14 14a.5.5 0 0 1-.35.14H87.86l-4.89 14.66c-.17.52-.93.42-.97-.13l-1.6-24L78 59.54a.5.5 0 0 1-.5.45h-3.58L69 89.58c-.1.57-.91.56-.99-.01L66.02 74.7 54.11 59.81a.5.5 0 0 1-.1-.24l-1.9-13.25-22.18 13.5-3.95 14.8c-.14.55-.92.48-.98-.07L22.34 48.8 13.99 89.6a.5.5 0 0 1-.49.4H0v-1h13.1L22 45.4c.11-.56.93-.52.99.05l2.72 26.3 3.3-12.38a.5.5 0 0 1 .22-.3l23-14a.5.5 0 0 1 .75.36l1.98 13.86L66.9 74.2a.5.5 0 0 1 .1.24l1.57 11.7L73 59.42a.5.5 0 0 1 .49-.42h3.55L80 29.45c.06-.61.96-.6 1 .02l1.83 27.46 4.2-12.59a.5.5 0 0 1 .47-.34h10.8l13.8-13.81 8.97-14.95a.5.5 0 0 1 .76-.12l16 14a.5.5 0 0 1 .17.31l2 15.06 1.99 74.91 2.45 12.25 4.57-29.23z\", fill: \"#999CAC\", fillRule: \"nonzero\" })\n      ),\n      React.createElement(\n        \"g\",\n        { mask: \"url(#b)\", fill: \"#F93\", fillRule: \"nonzero\" },\n        React.createElement(\n          \"g\",\n          { transform: \"translate(153 84)\" },\n          React.createElement(\"path\", { d: \"M52 0h31v24H52L42 12z\" }),\n          React.createElement(\"path\", { d: \"M38 11.5h6v1h-6zm-8 0h4v1h-4zm-8 0h4v1h-4zm-8 0h4v1h-4zm-10 0h6v1H4z\" }),\n          React.createElement(\"circle\", { cx: \"3\", cy: \"12\", r: \"3\" })\n        )\n      )\n    )\n  );\n});","export * from './icon-charts.jsx';\nexport * from './icon-close.jsx';\nexport * from './icon-language.jsx';\nexport * from './icon-purchase.jsx';\nexport * from './icon-theme.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCharts = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path\n                fill='#000'\n                fillOpacity='0.8'\n                className='color1-fill'\n                d='M2 14h14v1H2v1H1v-1H0v-1h1V0h1v14zm1.724-.83l-.895-.446L5.321 7.74 9.266 10.7l3.262-8.698 2.604 7.814-.948.316-1.712-5.134L9.734 12.3 5.679 9.26l-1.955 3.91z'\n            />\n        </g>\n    </svg>\n);\n\nIconCharts.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCharts };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n    >\n        <path\n            className='color1-fill'\n            fillOpacity='0.8'\n            d='M8 6.587l4.293-4.294a1 1 0 0 1 1.414 1.414L9.414 8.002l4.293 4.294a1 1 0 0 1-1.414 1.414L8 9.416 3.707 13.71a1 1 0 1 1-1.414-1.414l4.293-4.294-4.293-4.295a1 1 0 1 1 1.414-1.414L8 6.587z'\n        />\n    </svg>\n\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLanguage = ({ className }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n    >\n        <g fill='none' fillRule='evenodd'>\n            <path\n                className='color1-fill'\n                fill='#000'\n                fillOpacity='0.8'\n                d='M8 15.794l-2.75-3.407H0V0h16v12.387h-5.25L8 15.794zm-7-4.44h4.75L8 14.143l2.25-2.787H15V1.032H1v10.323zM11 9.29H3V8.258h8V9.29zm2-2.58H3V5.677h10V6.71zm0-2.581H3V3.097h10v1.032z'\n            />\n        </g>\n    </svg>\n);\n\nIconLanguage.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLanguage };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPurchase = ({ className }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n    >\n        <g fill='none' fillRule='evenodd'>\n            <path\n                className='color1-fill'\n                fill='#000'\n                fillOpacity='0.8'\n                d='M9 9l-1-.001V11H7V9H5.503V5.501a.501.501 0 1 0-1.003 0V10l.003 1.89L6 14.36V15h4v-.651l1-1.5V10.5a1.5 1.5 0 0 0-1-1.415V11H9V9zM3.5 5.5a1.501 1.501 0 0 1 3.003 0V8H9.5a2.5 2.5 0 0 1 2.5 2.5v2.651l-1 1.5V16H5v-1.36l-1.497-2.471V11L3.5 5.501zM1 6h2v1H0V0h16v7H7V6h8V1H1v5z'\n            />\n        </g>\n    </svg>\n);\n\nIconPurchase.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPurchase };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTheme = ({ className }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n    >\n        <g fill='none' fillRule='evenodd'>\n            <path\n                fill='#000'\n                className='color1-fill'\n                fillOpacity='0.8'\n                d='M8 15A7 7 0 0 0 8 1v14zm0 1a7.982 7.982 0 0 1-6.1-2.823A8 8 0 1 1 8 16z'\n            />\n        </g>\n    </svg>\n);\n\nIconTheme.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTheme };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { withRouter }  from 'react-router';\nimport { formatMoney } from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    DepositButton,\n    // InstallPWAButton,\n    LoginButton,\n    MenuLinks,\n    SignupButton,\n    ToggleMenuDrawer,\n    UpgradeButton }    from 'App/Components/Layout/Header';\nimport header_links    from 'App/Constants/header-links';\nimport { connect }     from 'Stores/connect';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    // hideInstallButton,\n    is_acc_switcher_on,\n    // is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    is_virtual,\n    loginid,\n    onClickUpgrade,\n    // pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks\n                        is_logged_in={is_logged_in}\n                        items={header_links}\n                    />\n                </div>\n                <div className='header__menu-right'>\n                    <div className='acc-info__container'>\n                        {/* TODO: uncomment to show PWA Install button */}\n                        {/* { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                className='acc-info__button'\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        } */}\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    is_virtual={is_virtual}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                                { !!(can_upgrade_to && is_virtual) &&\n                                <UpgradeButton className='acc-info__button' />\n                                }\n                                { !(is_virtual) &&\n                                <DepositButton className='acc-info__button' />\n                                }\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                <LoginButton className='acc-info__button' />\n                                <SignupButton className='acc-info__button' />\n                            </React.Fragment>\n                        }\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    can_upgrade_to           : PropTypes.string,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool,\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    is_virtual               : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func,\n    pwa_prompt_event         : PropTypes.object, // TODO: add click handler\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        can_upgrade_to           : client.can_upgrade_to,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        is_virtual               : client.is_virtual,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account-info.jsx';\nexport * from './deposit-button.jsx';\nexport * from './install-pwa-button.jsx';\nexport * from './login-button.jsx';\nexport * from './upgrade-button.jsx';\nexport * from './menu-links.jsx';\nexport * from './signup-button.jsx';\nexport * from './toggle-menu-drawer.jsx';\nexport * from './toggle-notifications-drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    is_virtual,\n    onClickUpgrade,\n    toggleDialog,\n}) => (\n    <div className='acc-info__wrapper'>\n        <div\n            className={classNames('acc-info', {\n                'acc-info--show'      : is_dialog_on,\n                'acc-info--is-virtual': is_virtual,\n            })}\n            onClick={toggleDialog}\n        >\n            <p\n                className='acc-info__id'\n                title={loginid}\n            >\n                {loginid}&nbsp;\n            </p>\n            {\n                typeof balance !== 'undefined' &&\n                <p className='acc-info__balance'>\n                    <span\n                        className={classNames('symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })}\n                    />\n                    {balance}\n                </p>\n            }\n            <IconArrow className='acc-info__select-arrow' is_bold={true} />\n        </div>\n        <CSSTransition\n            in={is_dialog_on}\n            timeout={200}\n            classNames={{\n                enter    : 'acc-switcher__wrapper--enter',\n                enterDone: 'acc-switcher__wrapper--enter-done',\n                exit     : 'acc-switcher__wrapper--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='acc-switcher__wrapper'>\n                <AccountSwitcher\n                    is_visible={is_dialog_on}\n                    toggle={toggleDialog}\n                    is_upgrade_enabled={is_upgrade_enabled}\n                    onClickUpgrade={onClickUpgrade}\n                />\n            </div>\n        </CSSTransition>\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_virtual        : PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account-switcher.jsx';\n","import classNames               from 'classnames';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport { isEmptyObject }        from '_common/utility';\nimport { IconAccountsCurrency } from 'Assets/Header/AccountsCurrency';\nimport { IconLogout }           from 'Assets/Header/Drawer';\nimport { requestLogout }        from 'Services/index';\nimport { connect }              from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggle();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        requestLogout();\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n        // TODO: Once we allow other real accounts (apart from CR), assign correct title and group accounts into list with correct account title/types\n        // e.g - Real, Financial, Gaming, Investment\n        const real_accounts = this.props.account_list.filter(acc => !acc.is_virtual);\n        const vrt_account   = this.props.account_list.find(acc => acc.is_virtual);\n\n        const main_account_title = real_accounts.length > 1 ? localize('Real accounts') : localize('Real account');\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef}>\n                {\n                    // Make sure this block is not rendered if there are no real accounts\n                    !!(this.props.account_list.length && real_accounts.length) &&\n                    <div className='acc-switcher__list-group'>\n                        <span className='acc-switcher__list-title'>\n                            {main_account_title}\n                        </span>\n                        <div className='acc-switcher__accounts'>\n                            {\n                                real_accounts.map((account) => (\n                                    <div\n                                        key={account.loginid}\n                                        className={classNames('acc-switcher__account', {\n                                            'acc-switcher__account--selected': (account.loginid === this.props.account_loginid),\n                                        })}\n                                        onClick={this.doSwitch.bind(this, account.loginid)}\n                                    >\n                                        <span className={'acc-switcher__id'}>\n                                            <IconAccountsCurrency\n                                                className={`acc-switcher__id-icon acc-switcher__id-icon--${account.icon}`}\n                                                type={account.icon}\n                                            />\n                                            {account.loginid}\n                                        </span>\n                                    </div>\n                                ))\n                            }\n                        </div>\n\n                        {   // TODO: Add link to account opening page for upgrade or multi account page for new account.\n                            // Update text below for handling types of account to create :- e.g - Investment\n                            !!(this.props.is_upgrade_enabled && this.props.upgrade_info.can_open_multi) &&\n                            <div className='acc-switcher__new-account'>\n                                <span className='acc-switcher__new-account-title'>{localize('Add new account')}</span>\n                            </div>\n                        }\n                    </div>\n                }\n                {\n                    !isEmptyObject(vrt_account) &&\n                    <div className='acc-switcher__list--virtual'>\n                        <span className='acc-switcher__list-title'>\n                            {localize('Virtual account')}\n                        </span>\n                        <div className='acc-switcher__accounts'>\n                            <div\n                                className={classNames('acc-switcher__account', {\n                                    'acc-switcher__account--selected': (this.props.virtual_loginid === this.props.account_loginid),\n                                })}\n                                onClick={this.doSwitch.bind(this, this.props.virtual_loginid)}\n                            >\n                                <span className={classNames('acc-switcher__id', 'acc-switcher__id--virtual')}>\n                                    {this.props.virtual_loginid}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { !!(this.props.is_upgrade_enabled && this.props.is_virtual) &&\n                <div className='acc-switcher__new-account'>\n                    <span className='acc-switcher__new-account-title'>{localize('Upgrade to Real Account')}</span>\n                </div>\n                }\n                <div className='acc-switcher__logout' onClick={this.handleLogout}>\n                    <span className='acc-switcher__logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='acc-switcher__logout-icon drawer__icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list          : PropTypes.array,\n    account_loginid       : PropTypes.string,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_upgrade_enabled    : PropTypes.bool,\n    is_virtual            : PropTypes.bool,\n    is_visible            : PropTypes.bool,\n    onClickUpgrade        : PropTypes.func,\n    toggle                : PropTypes.func,\n    togglePositionsDrawer : PropTypes.func,\n    upgrade_info          : PropTypes.object,\n    virtual_loginid       : PropTypes.string,\n};\n\nconst account_switcher = connect(\n    ({ client, ui }) => ({\n        account_list          : client.account_list,\n        account_loginid       : client.loginid,\n        is_logged_in          : client.is_logged_in,\n        is_virtual            : client.is_virtual,\n        switchAccount         : client.switchAccount,\n        upgrade_info          : client.upgrade_info,\n        virtual_loginid       : client.virtual_account_loginid,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","export * from './icon_accounts_currency.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconAccountsCurrency = ({ type, className }) => {\n    let IconCurrency;\n    if (type) {\n        switch (type) {\n            case 'aud':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#FFF'>\n                            <path d='M6.853 15.319l.674-.84-1.04.188-.362-1.008-.393 1.008-1.062-.188.675.821-.701.821 1.069-.168.36.988.393-.987 1.09.194zM14.819 16.06l.382-.475-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.606-.095.204.56.222-.56.618.111zM14.819 5.542l.382-.477-.59.107-.205-.57-.222.57-.603-.107.383.466-.397.465.606-.095.204.56.222-.56.618.11zM17.291 8.263l.382-.476-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11zM12.68 9.473l.382-.476-.59.107-.204-.572-.223.572-.602-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11z' />\n                        </g>\n                        <g fill='#283991'>\n                            <path d='M2.099 3.87c-.157.202-.307.41-.448.623h1.07L2.1 3.87zM7.26 9.993h.962l-.963-.962zM4.068 1.947c-.23.169-.45.348-.664.536l.664.663v-1.2zM3.105 9.993h.963V9.03zM9.993 0c-.948 0-1.864.135-2.734.382v2.764L9.993.412V0zM9.993 9.072V7.684H8.606zM.412 9.993l2.31-2.309H.272A10.004 10.004 0 0 0 0 9.994h.412zM8.605 4.493h1.388V3.105z' />\n                        </g>\n                        <g fill='#FFF'>\n                            <path d='M9.993 9.363v-.291L8.606 7.684h1.387v-.496H7.818zM2.722 4.493H1.65c-.107.162-.209.328-.307.497H3.45l-1.25-1.25a9.019 9.019 0 0 0-.1.13l.623.623zM4.068 9.03v.963h.497v-1.69l-1.69 1.69h.23zM7.26.382c-.168.047-.334.099-.497.155v3.336l3.23-3.23v-.23L7.26 3.146V.382zM4.05 7.684l.018-.017.48-.48H.401c-.048.165-.091.33-.13.497h2.45l-2.31 2.31h1.33l2.309-2.31z' />\n                            <path d='M.412 9.993l2.31-2.309-2.31 2.31zM9.993 4.99v-.497H8.605l1.388-1.388v-1.33L6.78 4.99z' />\n                            <path d='M9.993 3.105L8.605 4.493l1.388-1.388zM4.068 3.146l-.664-.663c-.235.207-.461.425-.676.653l1.34 1.34.014.015.483.482V1.605c-.169.11-.335.222-.497.342v1.2zM7.26 9.03l.962.963H9.49L6.763 7.266v2.727h.496z' />\n                        </g>\n                        <path d='M4.068 4.476l.034.034-.034-.034z' fill='#D32030' />\n                        <path d='M8.314 7.684l-.496-.496h2.175V4.99H6.78l-.016.017V4.99h.016l3.214-3.214V.643l-3.23 3.23V.537a9.957 9.957 0 0 0-2.198 1.068v3.368l.017.017h-.017v-.017l-.483-.482.003.002h-.017v-.017l-1.34-1.34c-.184.195-.36.396-.528.605L3.449 4.99H1.344a9.918 9.918 0 0 0-.942 2.198h4.145l.018-.018v.018h-.018l-.479.48v.017h-.017L1.74 9.993h1.134l1.69-1.69v1.69h2.198V7.266L9.49 9.993h.375c.043-.044.087-.089.129-.135v-.495l-1.68-1.679z' fill='#F44336' />\n                        <path fill='#D32030' d='M6.763 3.873l3.23-3.23zM4.092 7.709v-.042l-.041.042zM4.589 7.17l-.042.042h.042zM6.763 5.03l.04-.04h-.04zM4.068 4.517h.04l-.006-.007-.034-.034zM4.606 5.013l-.041-.04v.04z' />\n                    </g>\n                );\n                break;\n            case 'bch':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#8DC351' cx='10' cy='10' r='10' />\n                        <path d='M13.254 6.584c-.485-1.233-1.7-1.344-3.117-1.069l-.505-1.758-1.07.307.492 1.712c-.281.08-.568.169-.852.256L7.708 4.31l-1.07.306.504 1.758c-.23.071-.456.141-.678.205l-.002-.006-1.476.423.328 1.144s.786-.243.777-.224c.433-.124.646.087.75.292l.575 2.003a.951.951 0 0 1 .115-.025l-.113.032.804 2.807c.02.142.002.382-.3.47.017.008-.779.222-.779.222l.155 1.34 1.392-.4c.26-.074.516-.142.766-.213l.51 1.778 1.07-.306-.505-1.76c.287-.075.573-.155.858-.237l.501 1.752 1.07-.307-.508-1.775c1.77-.62 2.899-1.434 2.57-3.169-.263-1.396-1.077-1.82-2.169-1.772.53-.494.758-1.161.401-2.063zm-.406 4.231c.381 1.33-1.937 1.83-2.662 2.04l-.676-2.357c.725-.208 2.94-1.069 3.338.318v-.001zm-1.451-3.181c.346 1.21-1.592 1.612-2.196 1.785l-.613-2.137c.604-.173 2.447-.909 2.809.352z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'btc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#F7931A' cx='10' cy='10' r='10' />\n                        <path d='M14.493 8.762c.196-1.31-.802-2.014-2.165-2.484l.442-1.775-1.08-.269-.431 1.729c-.284-.072-.575-.138-.866-.204l.434-1.74-1.08-.269-.442 1.774c-.235-.053-.466-.106-.69-.162l.001-.006-1.49-.372-.287 1.154s.802.184.785.195c.437.11.516.399.503.629l-.504 2.022a.96.96 0 0 1 .113.035l-.115-.028-.706 2.833c-.054.132-.19.332-.496.256.012.016-.785-.196-.785-.196l-.536 1.237 1.406.35c.262.066.518.135.77.199l-.447 1.795 1.08.269.442-1.775c.295.08.581.153.861.223l-.441 1.767 1.08.27.447-1.792c1.842.349 3.227.208 3.81-1.458.47-1.341-.023-2.116-.992-2.62.706-.163 1.237-.627 1.38-1.587zm-2.469 3.462c-.333 1.342-2.592.616-3.325.434l.594-2.378c.733.183 3.08.545 2.731 1.944zm.335-3.48c-.305 1.22-2.185.6-2.794.447l.537-2.156c.61.152 2.574.435 2.257 1.708z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'dai':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle stroke='#F7B14A' strokeWidth='.625' cx='10' cy='10' r='9.688' />\n                        <path fill='#FFCC80' d='M3.75 10H10v6.25z' />\n                        <path fill='#FFB74D' d='M10 3.75v8.125L3.75 10z' />\n                        <path fill='#FFF' d='M5.625 10L10 5.625v2.5L8.125 10z' />\n                        <path fill='#F7C57B' d='M16.25 10H10v6.25z' />\n                        <path fill='#F7B14A' d='M10 3.75v8.125L16.25 10z' />\n                        <path fill='#FFF' d='M14.375 10L10 5.625v2.5L11.875 10z' />\n                    </g>\n                );\n                break;\n            case 'eth' :\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#EBF0F1' cx='10' cy='10' r='10' />\n                        <g fill='#12100B'>\n                            <path fillOpacity='.8' d='M10.311 2.5v10.353l4.686-2.715z' />\n                            <path fillOpacity='.45' d='M10.311 2.5l-4.686 7.638 4.686 2.718z' />\n                            <path fillOpacity='.8' d='M10.311 13.73v3.767L15 11.01z' />\n                            <path fillOpacity='.45' d='M10.311 17.497v-3.768L5.625 11.01z' />\n                            <path fillOpacity='.6' d='M10.311 12.858l4.686-2.72-4.686-2.093zM5.625 10.137l4.686 2.721V8.045z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'eur':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#F8D12E'>\n                            <path d='M9.976 1.733l.244.75h.789l-.639.464.244.75-.638-.464-.638.464.244-.75-.639-.464h.79zM9.976 15.894l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM13.862 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM16.514 5.604l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM16.577 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.639-.464h.79zM3.534 5.604l.244.75h.788l-.638.464.244.75-.638-.463-.638.463.243-.75-.638-.464h.79zM17.129 8.757l.243.75h.79l-.639.463.244.75-.638-.463-.639.464.244-.75-.638-.464h.789zM2.931 8.757l.244.75h.789l-.639.463.244.75-.638-.463-.638.464.244-.75-.638-.464h.788zM3.448 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.638-.464h.789zM13.977 14.942l.243.75h.79l-.639.464.244.75-.638-.464-.639.464.244-.75-.638-.464h.79zM6.215 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM5.928 14.894l.243.75h.79l-.639.464.244.75-.638-.464-.638.464.243-.75-.638-.464h.789z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'gbp':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <g fill='#283991'>\n                            <path d='M2.067 3.912a9.964 9.964 0 0 0-1.723 3.48h5.203l-3.48-3.48zM19.656 7.391a9.964 9.964 0 0 0-1.723-3.48l-3.48 3.48h5.203zM.344 12.609a9.965 9.965 0 0 0 1.723 3.48l3.48-3.48H.344zM16.088 2.067a9.964 9.964 0 0 0-3.48-1.723v5.203l3.48-3.48zM3.912 17.933a9.964 9.964 0 0 0 3.48 1.723v-5.203l-3.48 3.48zM7.391.344a9.965 9.965 0 0 0-3.48 1.723l3.48 3.48V.344zM12.609 19.656a9.965 9.965 0 0 0 3.48-1.723l-3.48-3.48v5.203zM14.453 12.609l3.48 3.48a9.964 9.964 0 0 0 1.723-3.48h-5.203z' />\n                        </g>\n                        <g fill='#F44336'>\n                            <path d='M19.915 8.696h-8.61V.085a10.1 10.1 0 0 0-2.61 0v8.61H.086a10.1 10.1 0 0 0 0 2.61h8.61v8.61a10.099 10.099 0 0 0 2.61 0v-8.61h8.61a10.099 10.099 0 0 0 0-2.61z' />\n                            <path d='M12.609 12.609l4.462 4.462c.205-.205.401-.42.588-.642l-3.82-3.82h-1.23zM7.391 12.609L2.93 17.07c.205.205.42.401.642.588l3.82-3.82v-1.23zM7.394 7.391L2.932 2.93c-.206.205-.401.42-.588.642l3.82 3.82h1.23zM12.609 7.391L17.07 2.93c-.205-.205-.42-.401-.642-.588l-3.82 3.82v1.23z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'ltc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#BFBBBB' cx='10' cy='10' r='10' />\n                        <path fill='#FFF' d='M6.517 12.009l-.892.346.43-1.724.902-.363L8.258 5h3.206l-.95 3.873.882-.357-.425 1.718-.892.357-.53 2.177h4.826L13.829 15H5.783z' />\n                    </g>\n                );\n                break;\n            case 'usd':\n                IconCurrency = (\n                    <g fill='none' fillRule='evenodd'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <path d='M12.18 1.833h3.583A9.951 9.951 0 0 0 10.578.018h-.308c.906.114 1.323.783 1.91 1.815zm.926 3.628h5.799a9.976 9.976 0 0 0-1.186-1.814h-5.066c.179.564.33 1.173.453 1.814zm6.839 3.629a9.913 9.913 0 0 0-.331-1.814h-6.19c.062.594.103 1.202.123 1.814h6.398zm-.345 3.629a9.885 9.885 0 0 0 .341-1.814h-6.24c-.022.612-.064 1.22-.127 1.814h6.025zm-6.789 3.629h4.865a9.985 9.985 0 0 0 1.203-1.815h-5.61a15.76 15.76 0 0 1-.458 1.815zm-2.818 3.627a9.845 9.845 0 0 0 5.698-1.812h-3.616c-.642 1.122-1.066 1.812-2.082 1.812z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M4.223 1.833h8.288C11.924.8 11.176.132 10.27.018h-.861a9.95 9.95 0 0 0-5.186 1.815zM2.268 3.647A9.983 9.983 0 0 0 1.082 5.46H13.73a15.962 15.962 0 0 0-.453-1.814H2.267zM.041 9.09h14.077c-.02-.612-.062-1.22-.124-1.814H.373A9.9 9.9 0 0 0 .04 9.09zm.346 3.629H13.99a25.53 25.53 0 0 0 .127-1.814H.046a9.87 9.87 0 0 0 .341 1.814zm.721 1.814a9.97 9.97 0 0 0 1.202 1.815h10.952c.18-.564.334-1.173.458-1.815H1.108zm8.462 5.433l.061.002c.12.004.24.007.362.007 1.016 0 1.845-.69 2.487-1.813H4.295a9.843 9.843 0 0 0 5.275 1.804z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M9.787.005A9.99 9.99 0 0 0 .043 9.093h9.744V.005z' fill='#283991' fillRule='nonzero' />\n                        <path fill='#EFEFEF' fillRule='nonzero' d='M2 5.65l.152.468h.493l-.399.289.152.468L2 6.585l-.4.29.153-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.399.289.152.468L2 8.238l-.4.29.153-.468-.399-.29h.493zM3.656 3.17l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.468-.399-.29h.494zm0 1.653l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.469-.399-.289h.494zm0 1.653l.152.468h.493l-.399.29.153.467-.399-.289-.399.29.152-.469-.399-.289h.494zM.742 7.701L.59 7.233l.398-.289H.496L.484 6.91a9.53 9.53 0 0 0-.148.507l.007-.005.399.29zM1.6 5.222l.4-.29.398.29-.152-.468.399-.29h-.493l-.153-.467-.152.468h-.182a9.409 9.409 0 0 0-.099.154l.187.135-.152.468zm2.056-2.769l.399.29-.153-.468.4-.29h-.286a9.92 9.92 0 0 0-.7.573l-.06.185.4-.29zm1.258-.537l.398-.29.4.29-.153-.468.399-.289h-.493l-.021-.063a9.895 9.895 0 0 0-.494.268l.116.084-.152.468zm.398.428l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm1.657-5.786l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.469-.399-.289h.493zm0 1.653l.152.468h.493l-.398.29.152.467-.4-.289-.398.29.152-.469-.399-.289h.493zM8.625.691l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.289h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494z' />\n                    </g>\n                );\n                break;\n            case 'ust':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M10 0c5.523 0 10 4.477 10 10s-4.478 10-10 10S0 15.524 0 10 4.477 0 10 0' fill='#53AE94' />\n                        <path d='M11.234 8.668V7.18h3.402V4.913H5.373V7.18h3.402v1.486c-2.765.127-4.844.675-4.844 1.331 0 .656 2.08 1.204 4.844 1.331v4.765h2.46v-4.765c2.76-.127 4.835-.675 4.835-1.33s-2.075-1.203-4.835-1.33m0 2.256c-.07.004-.426.025-1.22.025-.635 0-1.081-.018-1.239-.026v.002c-2.443-.108-4.266-.534-4.266-1.043 0-.509 1.824-.934 4.266-1.042v1.661c.16.011.618.038 1.25.038.758 0 1.14-.032 1.21-.038V8.84c2.437.109 4.257.534 4.257 1.042 0 .507-1.82.933-4.258 1.041' fill='#FFF' />\n                    </g>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'>\n            {IconCurrency}\n        </svg>\n\n    );\n};\n\nIconAccountsCurrency.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconAccountsCurrency };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path\n            className='color1-fill'\n            fill='#000'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M14.293 8.5H8.5a.5.5 0 0 1 0-1h5.793l-1.647-1.646a.5.5 0 1 1 .708-.708l2.5 2.5a.5.5 0 0 1 0 .708l-2.5 2.5a.5.5 0 1 1-.708-.708L14.293 8.5zM11 10.962a.5.5 0 0 1 1 0v1.692C12 13.4 11.38 14 10.625 14h-5.25C4.619 14 4 13.401 4 12.654V3.346C4 2.6 4.62 2 5.375 2h5.25C11.381 2 12 2.599 12 3.346v1.692a.5.5 0 0 1-1 0V3.346C11 3.16 10.836 3 10.625 3h-5.25C5.165 3 5 3.159 5 3.346v9.308c0 .187.164.346.375.346h5.25c.21 0 .375-.159.375-.346v-1.692z'\n        />\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst DepositButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Deposit')}\n        // TODO: Redirect to Deposit page in Cashier\n        // onClick={redirectToCashierDeposit}\n    />\n);\n\nDepositButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { DepositButton };\n","import classNames   from 'classnames';\nimport React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    className,\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className={classNames(className, 'btn--primary btn--primary--orange')}\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    className   : PropTypes.string,\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        <div className='header__navbar-icons header__navbar-icons--binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    (item.login_only && (item.login_only !== is_logged_in)) ?\n                        null\n                        :\n                        <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                            <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}</span>\n                        </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        is_logged_in: PropTypes.bool,\n        link_to     : PropTypes.string,\n        text        : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M5 3v-.5A1.5 1.5 0 0 1 6.5 1h3A1.5 1.5 0 0 1 11 2.5V3h3.5A1.5 1.5 0 0 1 16 4.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 13.5v-9A1.5 1.5 0 0 1 1.5 3H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V3zM1 9.128V13.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V9.128l-2.804 1.557a2.5 2.5 0 0 1-1.214.315H5.018a2.5 2.5 0 0 1-1.214-.315L1 9.128zm0-1.144L4.29 9.81a1.5 1.5 0 0 0 .728.189h5.964a1.5 1.5 0 0 0 .728-.189L15 7.984V4.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v3.484zM6.5 9a.5.5 0 0 1 0-1h3a.5.5 0 0 1 0 1h-3z' />\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport URL                  from '_common/url';\nimport { getPropertyValue } from '_common/utility';\nimport FullPageModal        from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize             from 'App/Components/Elements/localize.jsx';\nimport UILoader             from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form-layout.jsx';\nimport Digits               from '../../Contract/Containers/digits.jsx';\nimport InfoBox              from '../../Contract/Containers/info-box.jsx';\nimport { localize }         from '../../../../_common/localize';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_last_digit_stats = ['match_diff', 'even_odd', 'over_under'].includes(this.props.contract_type)\n            && !this.props.is_contract_mode;\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                Digits={<Digits is_trade_page />}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                                scroll_to_epoch={this.props.scroll_to_epoch}\n                                scroll_to_offset={this.props.scroll_to_offset}\n                                start_epoch={this.props.start_epoch}\n                                end_epoch={this.props.end_epoch}\n                                chart_zoom={this.props.chart_zoom}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id || this.props.is_contract_mode}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                </div>\n                <FullPageModal\n                    confirm_button_text={localize('No, Stay on BinaryNex')}\n                    cancel_button_text={localize('Go to SmartTrader')}\n                    is_visible={this.props.has_only_forward_starting_contracts}\n                    onConfirm={() => this.props.setHasOnlyForwardingContracts(false)}\n                    onCancel={() => window.open(URL.websiteUrl()) && this.props.setHasOnlyForwardingContracts(false)}\n                    title={localize('Market is unavailable')}\n                >\n                    <Localize str='Sorry, but this market is not supported yet on BinaryNex. Do you want to trade this market on SmartTrader?' />\n                </FullPageModal>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id                           : PropTypes.number,\n    chart_zoom                         : PropTypes.number,\n    contract_type                      : PropTypes.string,\n    end_epoch                          : PropTypes.number,\n    has_only_forward_starting_contracts: PropTypes.bool,\n    is_contract_mode                   : PropTypes.bool,\n    is_mobile                          : PropTypes.bool,\n    is_trade_enabled                   : PropTypes.bool,\n    onClickNewTrade                    : PropTypes.func,\n    onMount                            : PropTypes.func,\n    onSymbolChange                     : PropTypes.func,\n    onUnmount                          : PropTypes.func,\n    purchase_info                      : PropTypes.object,\n    scroll_to_epoch                    : PropTypes.number,\n    scroll_to_offset                   : PropTypes.number,\n    setHasOnlyForwardingContracts      : PropTypes.func,\n    start_epoch                        : PropTypes.number,\n    symbol                             : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        start_epoch                        : modules.contract.chart_config.start_epoch,\n        end_epoch                          : modules.contract.chart_config.end_epoch,\n        scroll_to_epoch                    : modules.smart_chart.scroll_to_left_epoch,\n        scroll_to_offset                   : modules.smart_chart.scroll_to_left_epoch_offset,\n        chart_zoom                         : modules.smart_chart.zoom,\n        chart_type                         : modules.smart_chart.chart_type,\n        granularity                        : modules.smart_chart.granularity,\n        is_contract_mode                   : modules.smart_chart.is_contract_mode,\n        updateChartType                    : modules.smart_chart.updateChartType,\n        updateGranularity                  : modules.smart_chart.updateGranularity,\n        chart_id                           : modules.trade.chart_id,\n        contract_type                      : modules.trade.contract_type,\n        is_trade_enabled                   : modules.trade.is_trade_enabled,\n        onClickNewTrade                    : modules.trade.onClickNewTrade,\n        onMount                            : modules.trade.onMount,\n        onSymbolChange                     : modules.trade.onChange,\n        onUnmount                          : modules.trade.onUnmount,\n        purchase_info                      : modules.trade.purchase_info,\n        symbol                             : modules.trade.symbol,\n        has_only_forward_starting_contracts: ui.has_only_forward_starting_contracts,\n        is_mobile                          : ui.is_mobile,\n        setHasOnlyForwardingContracts      : ui.setHasOnlyForwardingContracts,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen-large.jsx';\nimport ScreenSmall  from './screen-small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--blur': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconArrow }         from 'Assets/Common';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract-type-dialog.jsx';\nimport ContractTypeList      from './contract-type-list.jsx';\nimport TradeTypeInfoDialog   from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem     from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open     : false,\n            is_info_dialog_open: false,\n            item               : {},\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(navigationList[nextIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[0]);\n        }\n    };\n\n    handlePrevClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(navigationList[prevIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({ is_info_dialog_open: false, is_dialog_open: false });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getNavigationList = () => {\n        const navigationList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && navigationList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return navigationList;\n    };\n\n    render() {\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className='contract-type-widget dropdown--left'\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': this.state.is_dialog_open,\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <IconTradeCategory category={this.props.value} className='contract-type-widget__icon-wrapper' />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                    <IconArrow className='contract-type-widget__select-arrow contract-type-widget__select-arrow--left' />\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                        handleInfoClick={this.handleInfoClick}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={this.props.is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={this.state.is_info_dialog_open}\n                    title={this.state.item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_mobile={this.props.is_mobile}\n                        item={this.state.item}\n                        navigationList={this.getNavigationList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category, className }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)}>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category : PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    list           : MobxPropTypes.objectOrObservableObject,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconInfoOutline }            from 'Assets/Common';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`contract-type-item ${value === contract.value ? 'contract-type-item--selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <IconTradeCategory category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <IconInfoOutline />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { Scrollbars }       from 'tt-react-custom-scrollbars';\nimport { IconBack }         from 'Assets/Common/icon-back.jsx';\nimport { IconChevronLeft }  from 'Assets/Common/icon-chevron-left.jsx';\nimport { IconChevronRight } from 'Assets/Common/icon-chevron-right.jsx';\nimport { TradeCategories }  from 'Assets/Trading/Categories/trade-categories.jsx';\nimport Button               from 'App/Components/Form/button.jsx';\nimport { localize }         from '_common/localize';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_mobile,\n    item,\n    navigationList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <IconBack />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__gif'>\n            gif explanation\n        </div>\n        <div className='trade-type-info-dialog__content'>\n            <Scrollbars\n                autoHide\n                style={{ height: '100%' }}\n            >\n                <TradeCategories category={item.value} />\n            </Scrollbars>\n        </div>\n        <div>\n            <Button className='trade-type-info-dialog__choose-button' text={localize('Choose')} onClick={() => onSubmitButtonClick(item)} />\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(navigationList)} >\n                <IconChevronLeft />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                {\n                    navigationList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className={classNames('trade-type-info-navigation__circle-button', {\n                                    'trade-type-info-navigation__circle-button--active': contract.value === item.value,\n                                })}\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(navigationList)} >\n                <IconChevronRight />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    navigationList       : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n\nconst TradeCategories = ({ category }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>\n                            { localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }\n                        </p>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to the barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.') }</p>\n                        <p>{ localize('If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to either the Low barrier or the High barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period') }</p>\n                        <p>{ localize('If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.') }</p>\n                        <p>{ localize('If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).') }</p>\n                        <p>{ localize('If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.') }</p>\n                        <p>{ localize('If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Touches\", you win the payout if the market touches the barrier at any time during the contract period.') }</p>\n                        <p>{ localize('If you select \"Does Not Touch\", you win the payout if the market never touches the barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('Asian options settle by comparing the last tick with the average spot over the period.') }</p>\n                        <p>{ localize('If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.') }</p>\n                        <p>{ localize('If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.') }</p>\n                        <p>{ localize('If the last tick is equal to the average of the ticks, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <p>\n                        not found\n                    </p>\n                );\n                break;\n        }\n    }\n    return (\n        <div>\n            {TradeTypeTemplate}\n        </div>\n    );\n};\n\nTradeCategories.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { TradeCategories };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm-element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm-element.jsx';\n\nclass PopConfirm extends React.PureComponent {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    })\n                ))}\n                {popconfirm_element}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    is_visible,\n    proposal_info,\n}) => {\n    const is_loading = !proposal_info.has_error && !proposal_info.id;\n    const is_loaded_with_error = proposal_info.has_error || !proposal_info.id;\n\n    return (\n        <React.Fragment>\n            {is_loading &&\n                <div className='trade-container__loader'>\n                    <div className='trade-container__loader--loading' />\n                </div>\n            }\n            {is_loaded_with_error ?\n                <div\n                    className={classNames({\n                        'trade-container__error': proposal_info.has_error,\n                    })}\n                >\n                    {proposal_info.message && <span className='trade-container__error-info'>{proposal_info.message}</span>}\n                </div>\n                :\n                <div className='trade-container__price'>\n                    <div className='trade-container__price-info'>\n                        <div className='trade-container__price-info-basis'>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                        <div className='trade-container__price-info-value'><Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} /></div>\n                        {is_visible &&\n                            <div className='trade-container__price-info-movement'>\n                                {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                            </div>\n                        }\n                    </div>\n                    <span>\n                        <Tooltip alignment='left' className='trade-container__price-tooltip' classNameIcon='trade-container__price-tooltip-i' icon='info' message={proposal_info.message} />\n                    </span>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    is_visible   : PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message-box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon-close.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n    if (!has_error) return null;\n    return (\n        <div className='message-box'>\n            <div className='message-box__close-btn' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {ErrorComponent}\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","export * from './error-balance.jsx';\nexport * from './error-general.jsx';\nexport * from './error-login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='message-box__login'>\n        <span className='message-box__info message-box__login-info'>\n            {localize('You have an insufficient amount of balance.')}\n        </span>\n        <Button\n            className='btn--secondary btn--secondary--orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='message-box__result'>\n        <span className='message-box__info'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='message-box__login'>\n        <span className='message-box__info message-box__login-info'>\n            {localize('Please log in to purchase the contract')}\n        </span>\n        <Button\n            className='btn--secondary btn--secondary--orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p className='message-box__login-prompt'>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a className='message-box__login-link' href='javascript:;'>\n            <span className='message-box__info message-box__login-info'>\n                {localize('Create one now')}\n            </span>\n        </a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase-lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon-lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-container__lock'>\n        <div>\n            <IconLock className='purchase-container__lock-icon' />\n        </div>\n        <h4 className='purchase-container__lock-header'>{localize('Purchase Locked')}</h4>\n        <Button\n            className='purchase-container__lock-button btn--secondary btn--secondary--orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='purchase-container__lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect className='color1-stroke' width='9' height='7' x='.5' y='6.5' stroke='none' rx='1' />\n            <circle className='color1-fill' cx='5' cy='10' r='1' fill='none' />\n            <path className='color1-stroke' stroke='none' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst PurchaseButton = ({\n    currency,\n    info,\n    is_contract_mode,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    onClickPurchase,\n    trade_types,\n    type,\n}) => (\n    <Button\n        is_disabled={ is_contract_mode || is_disabled }\n        id={`purchase_${type}`}\n        className={classNames(\n            'btn-purchase',\n            { 'btn-purchase--disabled': (is_contract_mode || is_disabled) && !is_loading },\n            { 'btn-purchase--disabled-bar': !is_contract_mode && is_disabled },\n            { 'btn-purchase--animated': is_loading })}\n        has_effect\n        onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n    >\n        <React.Fragment>\n            <div className='btn-purchase__trade-type'>\n                <div className='btn-purchase__icon_wrapper'>\n                    <IconTradeType\n                        className='btn-purchase__icon'\n                        type={!is_disabled ? (!is_high_low ? type.toLowerCase() : `${type.toLowerCase()}_barrier`) : ''}\n                    />\n                </div>\n                <div className='btn-purchase__text_wrapper'>\n                    <span className='btn-purchase__text'>{!is_disabled && localize('[_1]', trade_types[type])}</span>\n                </div>\n            </div>\n            <div className='btn-purchase__effect-detail' />\n            <div className='btn-purchase__info'>\n                <div className='btn-purchase__return'>\n                    <div className='btn-purchase__text_wrapper'>\n                        <span className='btn-purchase__text'>{!is_disabled && info.returns}</span>\n                    </div>\n                </div>\n                <div className='btn-purchase__profit'>\n                    <div className='btn-purchase__text_wrapper'>\n                        <span className='btn-purchase__text'>{!is_disabled && <Money amount={info.profit} currency={currency} className='btn-purchase__currency' />}</span>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    </Button>\n);\n\nexport default PurchaseButton;\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\n// import StartDate from 'Modules/Trading/Components/Form/TradeParams/start-date.jsx';\n\nexport const form_components = [\n    // { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport ButtonToggleMenu          from 'App/Components/Form/button-toggle-menu.jsx';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/InputField';\nimport AllowEquals               from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    currencies_list,\n    currency,\n    duration_unit,\n    expiry_type,\n    is_equal,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n\n    const input =\n        <InputField\n            className='trade-container__amount'\n            classNameInlinePrefix='trade-container__currency'\n            classNameInput='trade-container__input'\n            currency={currency}\n            error_messages={validation_errors.amount}\n            fractional_digits={getDecimalPlaces(currency)}\n            id='amount'\n            inline_prefix={is_single_currency ? currency : null}\n            is_autocomplete_disabled\n            is_float\n            is_incrementable\n            is_nativepicker={is_nativepicker}\n            is_negative_disabled\n            max_length={10}\n            name='amount'\n            onChange={onChange}\n            type='tel'\n            value={amount}\n        />;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <ButtonToggleMenu\n                buttons_arr={basis_list}\n                className='dropdown--no-margin'\n                name='basis'\n                onChange={onChange}\n                value={basis}\n            />\n            {!is_single_currency ?\n                <div className='trade-container__currency-options'>\n                    <Dropdown\n                        className={classNames({ 'trade-container__currency-options-dropdown': !is_single_currency })}\n                        classNameDisplay='trade-container__currency-options--display'\n                        has_symbol\n                        is_alignment_left\n                        is_nativepicker={false}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                    {input}\n                </div>\n                :\n                input\n\n            }\n            <AllowEquals\n                contract_start_type={contract_start_type}\n                contract_type={contract_type}\n                contract_types_list={contract_types_list}\n                duration_unit={duration_unit}\n                expiry_type={expiry_type}\n                onChange={onChange}\n                value={parseInt(is_equal)}\n            />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis              : PropTypes.string,\n    basis_list         : MobxPropTypes.arrayOrObservableArray,\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: MobxPropTypes.observableObject,\n    currencies_list    : MobxPropTypes.observableObject,\n    currency           : PropTypes.string,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', this.props.classNameDisplay, {\n                        'dropdown__display--clicked'   : this.state.is_list_visible,\n                        'dropdown__display--has-symbol': this.props.has_symbol,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    {this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className={`symbols dropdown__display-symbol symbols--${(this.props.value || '').toLowerCase()}`} />\n                    }\n                    {!this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                    }\n                </div>\n                {\n                    !is_single_option && <IconArrow className={classNames('dropdown__select-arrow', {\n                        'dropdown__select-arrow--left': this.props.is_alignment_left,\n                    })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        handleSelect={this.handleSelect}\n                                        has_symbol={this.props.has_symbol}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                handleSelect={this.handleSelect}\n                                                has_symbol={this.props.has_symbol}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    classNameDisplay : PropTypes.string,\n    has_symbol       : PropTypes.bool,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Tooltip             from 'App/Components/Elements/tooltip.jsx';\nimport { getCurrencyName } from '_common/base/currency_base';\n\nconst Items = ({\n    handleSelect,\n    has_symbol,\n    items,\n    name,\n    value,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={classNames('list__item', {\n                    'list__item--selected': value === item.value,\n                })}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                {!!has_symbol && item.has_tooltip &&\n                <Tooltip alignment='top' className='list__item-tooltip' message={getCurrencyName(item.value)}>\n                    <i><span className={`symbols list__item-tooltip-symbols symbols--${(item.text || '').toLowerCase()}`} /></i>\n                </Tooltip>\n                }\n                {!!has_symbol && !item.has_tooltip &&\n                <span className={`list__item-text symbols symbols--${(item.text || '').toLowerCase()}`} />\n                }\n                {!has_symbol && <span className='list__item-text'>{item.text}</span>}\n            </div>\n        </React.Fragment>\n    ))\n);\n\nItems.propTypes = {\n    handleSelect: PropTypes.func,\n    has_symbol  : PropTypes.bool,\n    name        : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { isCryptocurrency }      from '_common/base/currency_base';\nimport IncrementButtons          from './increment-buttons.jsx';\nimport Input                     from './input.jsx';\nimport Tooltip                   from '../../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    classNameInlinePrefix,\n    classNameInput,\n    classNamePrefix,\n    currency,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_negative_disabled,\n    is_read_only = false,\n    is_signed = false,\n    is_unit_at_right = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    unit,\n    value,\n}) => {\n    const has_error       = error_messages && !!error_messages.length;\n    let has_valid_length  = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e, callback) => {\n        if (unit) {\n            e.target.value = e.target.value.replace(unit, '').trim();\n        }\n\n        if (e.target.value === value && type !== 'checkbox') {\n            return;\n        }\n\n        if (type === 'number' || type === 'tel') {\n            const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n            const signed_regex = is_signed ? '^([+\\-\\.0-9])' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if (((is_number) || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation || type === 'tel'\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n        if (callback) {\n            callback(e);\n        }\n    };\n\n    const getDecimals = (val) => {\n        const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n        return array_value && array_value.length > 1 ? array_value[1].length : 0;\n    };\n\n    const incrementValue = () => {\n        if (max_is_disabled) return;\n        let increment_value;\n\n        const decimal_places = value ? getDecimals(value) : 0;\n        const is_crypto      = !!currency && isCryptocurrency(currency);\n\n        if (is_crypto || (!currency && is_float)) {\n            const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n            increment_value = parseFloat(new_value).toFixed(decimal_places);\n        } else {\n            increment_value = parseFloat((+value) + 1).toFixed(decimal_places);\n        }\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const calculateDecrementedValue = () => {\n        let decrement_value;\n\n        const decimal_places = value ? getDecimals(value) : 0;\n        const is_crypto      = !!currency && isCryptocurrency(currency);\n\n        if (is_crypto || (!currency && is_float)) {\n            const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n            decrement_value = parseFloat(new_value).toFixed(decimal_places);\n        } else {\n            decrement_value = parseFloat((+value) - 1).toFixed(decimal_places);\n        }\n        return decrement_value;\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n        const decrement_value = calculateDecrementedValue();\n        if (is_negative_disabled && decrement_value < 0) return;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    let display_value = value;\n\n    if (unit) {\n        display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n    }\n\n    const is_increment_input = is_incrementable && (type === 'number' || type === 'tel');\n\n    const input =\n        <Input\n            changeValue={changeValue}\n            checked={checked}\n            className={classNames(is_increment_input ? 'input-wrapper__input' : '', inline_prefix ? 'input--has-inline-prefix' : '', 'input', { 'input--error': has_error }, classNameInput)}\n            classNameInlinePrefix={classNameInlinePrefix}\n            data_tip={data_tip}\n            data_value={data_value}\n            display_value={display_value}\n            fractional_digits={fractional_digits}\n            has_error={has_error}\n            id={id}\n            inline_prefix={inline_prefix}\n            is_autocomplete_disabled={is_autocomplete_disabled}\n            is_disabled={is_disabled}\n            is_incrementable={is_increment_input}\n            is_read_only={is_read_only}\n            max_length={max_length}\n            name={name}\n            onClick={onClick}\n            onKeyPressed={onKeyPressed}\n            placeholder={placeholder}\n            required={required}\n            type={type}\n        />;\n\n    const increment_buttons =\n        <IncrementButtons\n            max_is_disabled={max_is_disabled}\n            incrementValue={incrementValue}\n            min_is_disabled={min_is_disabled || (is_negative_disabled && calculateDecrementedValue() < 0)}\n            decrementValue={decrementValue}\n        />;\n\n    const input_tooltip =\n        <Tooltip className={classNames('', { 'with-label': label })} alignment='left' message={has_error ? error_messages[0] : null } has_error={has_error}>\n            {!!label &&\n            <label htmlFor={name} className='input-field__label'>{label}</label>\n            }\n            {!!helper &&\n            <span className='input-field__helper'>{helper}</span>\n            }\n            {is_increment_input ?\n                <div className='input-wrapper'>\n                    {increment_buttons}\n                    {input}\n                </div>\n                :\n                input\n            }\n        </Tooltip>;\n\n    return (\n        <React.Fragment>\n            {!!prefix &&\n                <div className={classNamePrefix}>\n                    <span className={classNames(`${classNamePrefix}--symbol`, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                </div>\n            }\n            <div\n                className={classNames('input-field', className)}\n            >\n                {input_tooltip}\n            </div>\n        </React.Fragment>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className               : PropTypes.string,\n    classNameInlinePrefix   : PropTypes.string,\n    classNameInput          : PropTypes.string,\n    classNamePrefix         : PropTypes.string,\n    currency                : PropTypes.string,\n    error_messages          : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits       : PropTypes.number,\n    helper                  : PropTypes.string,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_negative_disabled    : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Button                    from '../button.jsx';\nimport { IconMinus, IconPlus }   from '../../../../Assets/Common';\n\nconst IncrementButtons = ({\n    decrementValue,\n    incrementValue,\n    max_is_disabled,\n    min_is_disabled,\n}) => (\n    <React.Fragment>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--increment'}\n            is_disabled={max_is_disabled}\n            onClick={incrementValue}\n            tabIndex='-1'\n        >\n            <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n        </Button>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--decrement'}\n            is_disabled={min_is_disabled}\n            onClick={decrementValue}\n            tabIndex='-1'\n        >\n            <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n        </Button>\n    </React.Fragment>\n);\n\nIncrementButtons.propTypes = {\n    decrementValue : PropTypes.func,\n    incrementValue : PropTypes.func,\n    max_is_disabled: PropTypes.bool,\n    min_is_disabled: PropTypes.bool,\n};\n\nexport default IncrementButtons;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Input = ({\n    changeValue,\n    checked,\n    className,\n    classNameInlinePrefix,\n    data_value,\n    data_tip,\n    display_value,\n    fractional_digits,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_incrementable,\n    is_read_only,\n    max_length,\n    name,\n    onClick,\n    onKeyPressed,\n    placeholder,\n    required,\n    type,\n}) => {\n    const onChange = (e) => {\n        /**\n         * fix for Safari\n         * we have to keep track of the current cursor position, update the value in store,\n         * then reset the cursor position to the current cursor position\n         */\n        // TODO: find better ways to target browsers\n        if (navigator.userAgent.indexOf('Safari') !== -1 && type !== 'checkbox') {\n            const cursor = e.target.selectionStart;\n            changeValue(e, (evt) => {\n                evt.target.selectionEnd = cursor; // reset the cursor position in callback\n            });\n        } else {\n            changeValue(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {!!inline_prefix &&\n            <div className={classNameInlinePrefix}>\n                <span className={classNames(classNameInlinePrefix ? `${classNameInlinePrefix}--symbol` : '', 'symbols', `symbols--${inline_prefix.toLowerCase()}`)} />\n            </div>\n            }\n            <input\n                autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n                checked={checked}\n                className={classNames(className)}\n                data-for={`error_tooltip_${name}`}\n                data-tip={data_tip}\n                data-value={data_value}\n                disabled={is_disabled}\n                id={id}\n                maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n                name={name}\n                onChange={onChange}\n                onClick={onClick}\n                onKeyDown={is_incrementable ? onKeyPressed : undefined}\n                placeholder={placeholder || undefined}\n                readOnly={is_read_only}\n                required={required || undefined}\n                type={type === 'number' ? 'text' : type}\n                value={display_value || ''}\n            />\n        </React.Fragment>\n    );\n};\n\nInput.propTypes = {\n    changeValue: PropTypes.func,\n    checked    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    data_tip             : PropTypes.string,\n    data_value           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    display_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    fractional_digits       : PropTypes.number,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onClick                 : PropTypes.func,\n    onKeyPressed            : PropTypes.func,\n    placeholder             : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Input;\n","import React                    from 'react';\nimport PropTypes                from 'prop-types';\nimport { localize }             from '_common/localize';\nimport Tooltip                  from 'App/Components/Elements/tooltip.jsx';\nimport InputField               from 'App/Components/Form/InputField';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual }           from 'Stores/Modules/Trading/Helpers/allow-equals';\n\nconst AllowEquals = ({\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    duration_unit,\n    expiry_type,\n    onChange,\n    value,\n}) => {\n    const has_callputequal_duration = hasDurationForCallPutEqual(contract_types_list,\n        duration_unit, contract_start_type);\n    const has_callputequal          = hasCallPutEqual(contract_types_list);\n\n    const has_allow_equals = isRiseFallEqual(contract_type) &&\n            ((has_callputequal_duration || expiry_type === 'endtime') && has_callputequal);\n\n    const changeValue = (e) => {\n        const { name, checked } = e.target;\n        onChange({ target: { name, value: Number(checked) } });\n    };\n\n    return (\n        has_allow_equals &&\n            <div className='allow-equals'>\n                <InputField\n                    className='allow-equals__input-field'\n                    classNameInput='allow-equals__input trade-container__input'\n                    checked={value}\n                    id='allow_equals'\n                    name='is_equal'\n                    onChange={changeValue}\n                    type='checkbox'\n                    value={value}\n                />\n                <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n                <Tooltip\n                    alignment='left'\n                    className='allow-equals__tooltip'\n                    classNameIcon='allow-equals__tooltip-info'\n                    icon='info'\n                    message={localize('Win payout if exit spot is also equal to entry spot.')}\n                />\n            </div>\n    );\n};\n\nAllowEquals.propTypes = {\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    onChange           : PropTypes.func,\n    value              : PropTypes.number,\n};\n\nexport default AllowEquals;\n","import classNames     from 'classnames';\nimport { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    IconBarrierUp,\n    IconBarrierDown } from 'Assets/Trading/Barriers';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport InputField     from 'App/Components/Form/InputField';\n\nimport { localize }   from '_common/localize';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n    \n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <IconBarrierUp className='trade-container__barriers--up' />\n                        <IconBarrierDown className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","export * from './icon-barrier-up.jsx';\nexport * from './icon-barrier-down.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierUp = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M8.5 4.207V12.5a.5.5 0 1 1-1 0V4.207L4.854 6.854a.5.5 0 1 1-.708-.708l3.5-3.5a.5.5 0 0 1 .708 0l3.5 3.5a.5.5 0 1 1-.708.708L8.5 4.207z'\n        />\n    </svg>\n);\n\nIconBarrierUp.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierUp };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierDown = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M7.5 11.793V3.5a.5.5 0 0 1 1 0v8.293l2.646-2.647a.5.5 0 1 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 11.793z'\n        />\n    </svg>\n);\n\nIconBarrierDown.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierDown };\n","export default from './duration-wrapper.jsx';\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport Duration                 from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : new_duration_value,\n        });\n    }\n\n    componentDidMount() {\n        const current_unit = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration = this.props.getDurationFromUnit(this.props.duration_unit);\n\n        if (this.props.duration_unit !== current_unit) {\n            this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: this.props.duration_unit });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${current_unit}`, value: this.props.duration });\n        }\n    }\n\n    componentWillReact() {\n        const simple_is_missing_duration_unit = !this.props.is_advanced_duration && this.props.simple_duration_unit === 'd' && this.props.duration_units_list.length === 4;\n        const current_duration_unit           = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration                = this.props.getDurationFromUnit(this.props.duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_not_type_duration     = !this.props.is_advanced_duration && this.props.expiry_type !== 'duration';\n        const advanced_has_wrong_expiry       = this.props.is_advanced_duration\n            && this.props.expiry_type !== this.props.advanced_expiry_type && this.props.duration_units_list.length > 1;\n\n        // intercept changes to current contracts duration_units_list - if they are missing change duration_unit and value in trade_store and ui_store\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n            return;\n        }\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (advanced_has_wrong_expiry) {\n            this.props.onChange({ target: { name: 'expiry_type', value: this.props.advanced_expiry_type } });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${this.props.duration_unit}`, value: this.props.duration });\n        }\n    }\n\n    render() {\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_d: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_h: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_m: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_s      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(DurationWrapper);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from '_common/localize';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    validation_errors,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        onChangeUiStore({ name: duration_name, value });\n        onChange({ target: { name, value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    let max_value, min_value;\n    if (duration_min_max[contract_expiry_type]) {\n        max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n    }\n\n    const props = {\n        shared_input: {\n            max_value,\n            min_value,\n            onChange: changeDurationValue,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n            error_messages  : validation_errors.duration || [],\n        },\n    };\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    ticks={10}\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_t      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick-steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    return (\n        <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n            <label className='range-slider__label' htmlFor='range'>\n                <input\n                    id='range'\n                    className='input trade-container__input range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='range-slider__ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '1.6rem' : '1rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span className='range-slider__caption--first'>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span className='range-slider__caption-title'>\n                        {+value === 1 && localize('[_1] Tick', value)}\n                        {+value > 1 && localize('[_1] Ticks', value)}\n                    </span>\n                }\n                <span className='range-slider__caption--last'>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active': (idx + 1) === parseInt(value),\n                        'range-slider__ticks-step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { IconArrow }       from 'Assets/Common';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <IconArrow className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default AdvancedDuration;\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\n\nconst TradingDatePicker = ({\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const has_intraday_unit = hasIntradayDurationUnit(duration_units_list);\n    const min_duration = has_intraday_unit ? toMoment(server_time) : toMoment(server_time).add(duration_min_max.daily.min, 'second');\n    const moment_contract_start_date_time =\n        setTime(toMoment(min_duration), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (expiry_type === 'duration') {\n        if (has_intraday_unit) {\n            min_date_expiry.add(1, 'day');\n        }\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    const error_messages = expiry_type === 'duration' ? validation_errors.duration : validation_errors.expiry_date;\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={error_messages || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={expiry_date}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n    })\n)(TradingDatePicker);\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }             from 'Assets/Common';\nimport InputField           from 'App/Components/Form/InputField';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from '_common/localize';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    }\n\n    onClickOutside = (e) => {\n        if (/purchase_/ig.test(e.target.id)) {\n            return;\n        }\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        this.setState({\n            holidays,\n            weekends,\n        });\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <IconClear\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from '_common/localize';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment(0).format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","export * from './calendar-days.jsx';\nexport * from './calendar-months.jsx';\nexport * from './calendar-years.jsx';\nexport * from './calendar-decades.jsx';\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { padLeft }      from '_common/string_util';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr } from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    subDays,\n    subMonths,\n    toMoment }          from 'Utils/Date';\nimport { localize }     from '_common/localize';\nimport CommonPropTypes  from './types';\nimport Tooltip          from '../../tooltip.jsx';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Tooltip\n                        alignment='top'\n                        className='calendar__cell-tooltip'\n                        classNameIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport CommonPropTypes   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\nimport { localize }          from '_common/localize';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport { month_headers }    from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date         : PropTypes.string,\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","export default from './trading-time-picker.jsx';\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime  = setTime(moment_expiry_date.clone(), market_open_times[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n    \n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","export default from './time-picker.jsx';\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../InputField';\nimport { IconClock }     from '../../../../Assets/Common/icon-clock.jsx';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={`${selected_time} GMT`}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <IconClock className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h);\n                            const start_time_reset_minute = start_time_moment.clone().minute(0);\n                            const is_hour_enabled = to_compare_moment.isBetween(\n                                start_time_reset_minute,\n                                end_time_moment);\n                            const is_minute_enabled = to_compare_moment.isBetween(\n                                start_time_moment,\n                                end_time_moment,\n                                'minute');\n                            // The minute number after which the last block/interval of `Minutes` selection will be disabled\n                            const last_interval_of_hour = 52;\n                            const is_enabled = to_compare_moment.minutes() > last_interval_of_hour\n                                ? is_hour_enabled && is_minute_enabled\n                                : is_hour_enabled;\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute(Math.round(time.minute() / interval) * interval);\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    let value = selected_time.isBefore(market_open_time)\n        ? market_open_time.isBefore(server_time)\n            ? server_time\n            : market_open_time\n        : selected_time;\n\n    value = getClosestTime(value, 5);\n    return value.format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit: PropTypes.func,\n    duration_t        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n};\n\nexport default SimpleDuration;\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile-widget.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-container'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full-screen-dialog.jsx';\nimport TradeParams      from '../../Containers/trade-params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","export LastDigitPrediction from './last-digit-prediction.jsx';\n","import { observer }       from 'mobx-react';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport DigitDisplay       from './digit-display.jsx';\nimport LastDigitParticles from './last-digit-particles.jsx';\nimport LastDigitPointer   from './last-digit-pointer.jsx';\n\nconst display_array = Array.from(Array(10).keys()); // digits array [0 - 9]\nclass LastDigitPrediction extends React.Component {\n    state = {};\n\n    componentDidMount() {\n        this.node.querySelectorAll('.digits__digit').forEach((el, idx) => {\n            // get offsetLeft of each Digits\n            this.setState({\n                [idx]: el.offsetLeft,\n            });\n        });\n    }\n\n    getBarrier = (num) => {\n        const  { barrier, contract_type } = this.props;\n\n        const barrier_map = {\n            DIGITMATCH: (val) => val === barrier,\n            DIGITDIFF : (val) => val !== barrier,\n            DIGITOVER : (val) => val > barrier,\n            DIGITUNDER: (val) => val < barrier,\n            DIGITODD  : (val) => val % 2,\n            DIGITEVEN : (val) => !(val % 2),\n        };\n        if (!contract_type) return null;\n        return barrier_map[contract_type](num) ? num : null;\n    };\n\n    render() {\n        const { digits_info, is_ended, is_trade_page, status } = this.props;\n        const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n        const latest_digit = digits_array.slice(-1)[0] || {};\n\n        // 'won' or 'lost' status exists after contract expiry\n        const is_won  = is_ended && status === 'won';\n        // need to explicitly have is_lost condition here\n        // because negating is_won would always be true,\n        // but we only need is_lost condition only once we have the 'won' or 'lost' status\n        const is_lost = is_ended && status === 'lost';\n\n        const position = this.state[latest_digit.digit];\n\n        return (\n            <div\n                ref={node => this.node = node}\n                className='digits'\n            >\n                { display_array.map((idx) => (\n                    <DigitDisplay\n                        barrier={this.getBarrier(idx)}\n                        is_lost={is_lost}\n                        is_trade_page={is_trade_page}\n                        is_won={is_won}\n                        key={idx}\n                        latest_digit={latest_digit}\n                        value={idx}\n                    />\n                ))}\n                { latest_digit.digit >= 0 &&\n                    <LastDigitPointer\n                        is_lost={is_lost}\n                        is_won={is_won}\n                        position={position}\n                    />\n                }\n                <LastDigitParticles\n                    is_won={is_won}\n                    position={position}\n                />\n            </div>\n        );\n    }\n}\n\nLastDigitPrediction.propTypes = {\n    barrier      : PropTypes.number,\n    contract_type: PropTypes.string,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n    status       : PropTypes.string,\n};\n\nexport default observer(LastDigitPrediction);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Digit        from './digit.jsx';\nimport DigitSpot    from './digit-spot.jsx';\n\nconst DigitDisplay = ({\n    barrier,\n    is_lost,\n    is_trade_page,\n    is_won,\n    latest_digit,\n    value,\n}) => {\n    const { digit, spot } = latest_digit;\n    const is_latest       = value === digit;\n    const is_selected     = value === barrier;\n\n    return (\n        <div\n            className={classNames('digits__digit', {\n                'digits__digit--win' : is_won && is_latest,\n                'digits__digit--loss': is_lost && is_latest,\n            })}\n        >\n            { is_latest && spot &&\n                <DigitSpot\n                    current_spot={spot}\n                    is_lost={is_lost}\n                    is_won={is_won}\n                />\n            }\n            <Digit\n                is_latest={is_latest}\n                is_lost={is_lost}\n                is_trade_page={is_trade_page}\n                is_selected={is_selected}\n                is_won={is_won}\n                value={value}\n            />\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    barrier      : PropTypes.number,\n    is_lost      : PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won       : PropTypes.bool,\n    latest_digit : PropTypes.object,\n    value        : PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Digit = ({\n    is_latest,\n    is_lost,\n    is_selected,\n    is_trade_page,\n    is_won,\n    value,\n}) => (\n    <span\n        className={classNames('digits__digit-value', {\n            'digits__digit-value--latest'  : is_latest,\n            'digits__digit-value--selected': is_selected,\n            'digits__digit-value--blink'   : is_won && is_latest && is_trade_page,\n            'digits__digit-value--win'     : is_won && is_latest,\n            'digits__digit-value--loss'    : is_lost && is_latest,\n        })}\n    >\n        {value}\n    </span>\n);\n\nDigit.propTypes = {\n    is_latest    : PropTypes.bool,\n    is_lost      : PropTypes.bool,\n    is_selected  : PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won       : PropTypes.bool,\n    value        : PropTypes.number,\n};\n\nexport default Digit;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst DigitSpot = ({\n    current_spot,\n    is_lost,\n    is_won,\n}) => (\n    <div className='digits__digit-spot'>\n        <span className='digits__digit-spot-value'>\n            {current_spot.slice(0, -1)}\n        </span>\n        <span\n            className={classNames('digits__digit-spot-last', {\n                'digits__digit-spot-last--win' : is_won,\n                'digits__digit-spot-last--loss': is_lost,\n            })}\n        >\n            {current_spot.slice(-1)}\n        </span>\n    </div>\n);\n\nDigitSpot.propTypes = {\n    current_spot: PropTypes.string,\n    is_lost     : PropTypes.bool,\n    is_won      : PropTypes.bool,\n};\n\nexport default DigitSpot;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst LastDigitParticles = ({\n    is_won,\n    position,\n}) => (\n    <div\n        className={classNames('digits__particles', {\n            'digits__particles--explode': is_won,\n        })}\n        style={{ marginLeft: position }}\n    >\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n    </div>\n);\n\nLastDigitParticles.propTypes = {\n    is_won  : PropTypes.bool,\n    position: PropTypes.number,\n};\n\nexport default LastDigitParticles;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst LastDigitPointer = ({\n    is_lost,\n    is_won,\n    position,\n}) => (\n    <span\n        className='digits__pointer'\n        style={{ marginLeft: position }}\n    >\n        <IconPriceMove\n            className={classNames('digits__icon', {\n                'digits__icon--win' : is_won,\n                'digits__icon--loss': is_lost,\n            })}\n            classNamePath='digits__icon-color'\n            type='profit'\n        />\n    </span>\n);\n\nLastDigitPointer.propTypes = {\n    is_lost : PropTypes.bool,\n    is_won  : PropTypes.bool,\n    position: PropTypes.number,\n};\n\nexport default LastDigitPointer;\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxExpired  from './info-box-expired.jsx';\nexport InfoBoxGeneral  from './info-box-general.jsx';\nexport InfoBoxLongcode from './info-box-longcode.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport SellInfo     from '../Sell/sell-info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining-time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract-sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell-button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='btn--secondary btn--secondary--green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { IconFlag } from 'Assets/Common';\n\nconst InfoBoxLongcode = ({\n    contract_info,\n}) => (\n    <div className='info-box-longcode'>\n        <IconFlag className='info-box-longcode-icon' />\n        <span className='info-box-longcode-text'>{contract_info.longcode}</span>\n    </div>\n);\n\nInfoBoxLongcode.propTypes = {\n    longcode: PropTypes.string,\n};\n\nexport default observer(InfoBoxLongcode);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport IconContractClose from '../../../Assets/Contract/icon-contract-close.jsx';\n\nconst ChartCloseBtn = ({\n    is_contract_mode,\n    onClose,\n}) => {\n    if (!is_contract_mode) return null;\n    return (\n        <div\n            className='chart-close-btn'\n            onClick={onClose}\n        >\n            <IconContractClose\n                className='ic-chart-close'\n            />\n        </div>\n    );\n};\n\nChartCloseBtn.propTypes = {\n    is_contract_mode: PropTypes.bool,\n    onClose         : PropTypes.func,\n};\n\nexport default ChartCloseBtn;\n","import classNames from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconContractClose = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='32' height='32' viewBox='0 0 32 32'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n        <path className={classNamePath || 'color1-fill'}  fill='#7F8397' fillRule='nonzero' d='M16 14.586l-4.293-4.293a1 1 0 0 0-1.414 1.414L14.586 16l-4.293 4.293a1 1 0 0 0 1.414 1.414L16 17.414l4.293 4.293a1 1 0 0 0 1.414-1.414L17.414 16l4.293-4.293a1 1 0 0 0-1.414-1.414L16 14.586zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z' />\n    </svg>\n\n);\n\nIconContractClose.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport default IconContractClose;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport UILoader           from 'App/Components/Elements/ui-loader.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='login-prompt__icon-svg disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { urlFor }          from '_common/url';\nimport Button              from '../../Form/button.jsx';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Sign up')}\n        onClick={() => { window.open(urlFor('new-account', undefined, undefined, true)); }}\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu-drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='header__menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer-item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('drawer__parent-item', {\n            'drawer__parent-item--show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer__items', {\n            'drawer__items--show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer__item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <SwitchButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst SwitchButton = ({ style, toggled }) => {\n    const toggle_style = style || 'switch-button';\n    const icon_class = classNames(toggle_style, {\n        [`${toggle_style}--toggled`]: toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nSwitchButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default SwitchButton;\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('header__navbar-icons', `header__navbar-icons--${icon_class}`);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_positions_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePositionsDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer__items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer__icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer__icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer__icon' />}\n                    link_to={routes.statement}\n                />\n                <hr className='hr' />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer__footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer__icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_positions_drawer_on) {\n                        togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePositionsDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { EmptyNotification } from './empty-notification.jsx';\nimport { DrawerItem }        from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <EmptyNotification />\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    list: PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport { IconBell } from 'Assets/Header/NavBar';\n\nconst EmptyNotification = () => (\n    <div className='drawer__no-notifications-container'>\n        <div className='drawer__no-notifications'>\n            <div className='drawer__bell'>\n                <IconBell className='drawer__bell-icon' />\n            </div>\n            <div>\n                <h4 className='drawer__no-notifications-header'>{localize('No Notifications')}</h4>\n                <span className='drawer__no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n            </div>\n        </div>\n    </div>\n);\n\nexport { EmptyNotification };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    // IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='header__icon' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    // {\n    //     icon      : <IconStatement className='header__icon' />,\n    //     text      : localize('Reports'),\n    //     link_to   : routes.statement,\n    //     login_only: true,\n    // },\n];\n\nexport default header_links;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconError } from 'Assets/Common/icon-error.jsx';\nimport { localize }  from '_common/localize';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error__container'>\n            <IconError type={type} />\n            <p className='error__message'>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","export default from './denial-of-service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","export default        from './register-service-worker';\nexport { unregister } from './register-service-worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}