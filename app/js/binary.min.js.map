{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Stores/base-store.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./src/javascript/app_2/App/Components/Form/input-field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui-loader.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws-methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon-flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Assets/Common/icon-error.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-blue.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/Constants/date-time.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining-time.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query-string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon-back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clock.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-outline.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-plus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-question.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-red-dot.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-success.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-warning.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes-config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract-type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm-element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade-params.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button-toggle-menu.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs-wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/switch-button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route-with-sub-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty-portfolio-message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract-type-cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info-box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network-monitor.js","webpack:///./src/javascript/app_2/Services/socket-general.js","webpack:///./src/javascript/app_2/Services/outdated-browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client-store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative-validation-rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common-store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon-entry-spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date-time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade-store.js","webpack:///./src/javascript/app_2/Utils/URL/url-helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract-type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui-store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base-name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar-today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-country-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minimize.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon-trade-types.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form-layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon-trade-categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/trade-categories.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-price-move.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message-box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase-result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase-lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/items.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/native-select.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-up.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-down.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/helpers.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number-selector.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile-widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon-tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-component.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill-template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract-error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit-display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close-button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast-message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app-contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server-time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network-status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-positions.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language-dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account-info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/index.js","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/icon_accounts_currency.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon-logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/deposit-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install-pwa-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/upgrade-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu-links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Routes/button-link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login-prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app-config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle-drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-notifications-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/empty-notification.jsx","webpack:///./src/javascript/app_2/App/Constants/header-links.js","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial-of-service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register-service-worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_dateTime","forEach","_iconArrow","_iconBack","_iconCalendarToday","_iconCalendar","_iconChevronDoubleLeft","_iconChevronDoubleRight","_iconChevronLeft","_iconChevronRight","_iconCountryFlag","_iconClear","_iconClock","_iconClose","_iconError","_iconExclamation","_iconInfoBlue","_iconInfoOutline","_iconMinimize","_iconMinus","_iconPlus","_iconQuestion","_iconRedDot","_iconSuccess","_iconWarning","_logout","BinarySocketGeneral","WS","Button","_ref$className","className","classNameSpan","has_effect","id","is_disabled","onClick","tabIndex","text","wrapperClassName","classes","_classnames2","default","effect","button","_react2","disabled","wrapper","node","string","bool","func","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_iconBell","_iconCashier","_iconHamburger","_iconPortfolio","_iconStatement","_iconTrade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_Date","_barrier","_duration","_startDate","_contract","ContractType","available_contract_types","available_categories","contract_types","trading_times","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","isTimeValid","split","_ref2","_slicedToArray","toMoment","ServerTime","getTradingTimes","_ref3","trading_times_response","submarkets","symbols","symbol","underlying","abrupt","sent","markets","echo_req","times","close","_x2","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","clone","add","isSameOrBefore","getExpiryTime","expiry_time","market_close_times","start_time","end_time","market_close_time","end_moment","expiry_sessions","open","minDate","diff","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getContractCategories","contract_types_list","InputField","checked","classNameInput","classNamePrefix","data_tip","data_value","error_messages","fractional_digits","helper","is_autocomplete_disabled","is_float","is_incrementable","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","_ref$is_unit_at_right","is_unit_at_right","label","max_length","max_value","min_value","onChange","placeholder","prefix","required","unit","has_error","has_valid_length","max_is_disabled","min_is_disabled","incrementValue","decrementValue","display_value","is_increment_input","input","input--error","data-for","data-value","data-tip","maxLength","onKeyDown","keyCode","trim","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","readOnly","autoComplete","input_increment","_button2","IconPlus","IconMinus","_tooltip2","with-label","alignment","message","htmlFor","MobxPropTypes","arrayOrObservableArray","Fieldset","header","is_center","onMouseEnter","onMouseLeave","fieldset_header_class","fieldset_info_class","array","Tooltip","state","show_tooltip_balloon_icon","setState","_props","classNameIcon","icon","icon_class","data-tooltip","data-tooltip-pos","IconInfoOutline","IconInfoBlue","tooltip-balloon-icon--show","IconQuestion","IconRedDot","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","duration","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","some","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","classNameBlock","loading_class","block_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","payout","theme","is_dark_mode_on","positions_drawer","is_positions_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","CommonPropTypes","calendar_date","isPeriodDisabled","selected_date","updateSelected","_fillTemplate","Localize","str","replacers","localized","fillTemplate","_drawerHeader","_drawerItem","_drawerItems","_drawer","_drawerToggle","_toggleDrawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","is_forced","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","IconError","transform","x","y","rx","_iconTradeTypes","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","IconClose","any","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","week_headers_abbr","getDaysOfTheWeek","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","getDecade","moment_date","year","getCentury","_iconMaximize","_iconPositions","_iconSettings","_ui","_connect","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconBack","IconChevronLeft","classNamePath","IconChevronRight","IconClock","stroke","strokeLinecap","strokeLinejoin","IconSuccess","IconWarning","_reactRouterDom","to","_objectWithoutProperties","_routesConfig2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","routesConfig","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contractTypeWidget2","_iconTradeCategories","_PopConfirm","_Types","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","stake","IconTradeType","returns","_money2","is_purchase_error","_fieldset2","_PurchaseLock2","_MessageBox2","_uiLoader2","_contractInfo2","has_increased","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","_classNames","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","ui_store","renderCards","ButtonToggleMenu","buttons_arr","menu","val","button-menu__button--active","selected_value","changeValue","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sellInfo2","_iconFlag2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabsItem","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","toggle","_switchButton2","toggled","SwitchButton","toggle_style","_iconLogout","_login","_appConfig","Route","render","_loginPrompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","handleClickOutside","contains","is_open","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","ContractTypeCell","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_detailsHeader2","display_status","_detailsContents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contractError2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","upgrade_info","getBasicUpgradeInfo","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarativeValidationRules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","$","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCryptocurrency","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chartBarriers","_chartMarkers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_iconEntrySpot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","epochToMoment","epoch","isValid","isUTC","formatted_date","Date","setTime","moment_obj","convertToUnix","formatDate","date_format","daysFromTodayTo","startOf","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","addDays","num_of_days","addMonths","num_of_months","addYears","num_of_years","subDays","subMonths","subYears","date_1","date_2","getStartOfMonth","_formatResponse","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chartBarrierStore","_chartMarkerStore","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_queryString","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validationRules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor34","changeDurationValidationRules","changeAllowEquals","delay","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_equal_checked","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","getProposalInfo","setChartBarrier","query_params","duration_options","hasCallPutEqual","contract_type_list","check_callput_equal_duration","contract_duration_list","rise_fall_equal","hasDurationForCallPutEqual","is_allow_equal","_ref6","_callee4","_context4","refresh","prepareTradeStore","_x3","runInAction","_callee6","_context6","_this9","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","start_moment_clone","_value$split","_value$split2","_proposal_response$ec","Duration","StartDate","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeStartDate","onChangeExpiry","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_type","obj_expiry_date","obj_market_close_times","obj_expiry_time","obj_duration_min_max","createProposalRequestForContract","ask_price","contract_basis","obj_contract_basis","toFixed","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","getDurationFromUnit","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_baseName2","_header2","_errorBoundary2","_appContents2","_routes2","_PositionsDrawer2","_toastMessage2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","_ttReactCustomScrollbars","PositionsDrawer","toggleDrawer","body_content","_emptyPortfolioMessage2","_positions_drawer_card2","positions-drawer--open","IconMinimize","Scrollbars","autoHide","togglePositionsDrawer","IconArrow","IconCalendarToday","fillOpacity","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconCountryFlag","IconCountry","xlinkHref","mask","strokeOpacity","IconClear","IconBell","IconCashier","IconHamburger","IconTrade","PositionsDrawerCard","_binaryLink2","_contractTypeCell2","_remainingTime2","IconType","SmartChart","form_wrapper_class","Suspense","fallback","_infoBox2","onSymbolChange","updateChartType","updateGranularity","_test2","_formLayout2","is_contract_visible","_contractDetails2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","padding","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","entries","v","_ref4","FormLayout","_screenSmall2","_screenLarge2","ScreenLarge","sidebar-items__slideout","_contractType2","_tradeParams2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","onSubmitButtonClick","handleInfoVisibility","handleInfoClick","handleNavigationClick","handleNextClick","navigationList","navigationLength","nextIndex","list_item","handlePrevClick","prevIndex","setWrapperRef","wrapper_ref","is_dialog_open","is_info_dialog_open","onWidgetClick","onBackButtonClick","getDisplayText","_this$props","findInArray","getNavigationList","contract-type-widget__display--clicked","IconTradeCategory","category","_contractTypeDialog2","_contractTypeList2","_tradeTypeInfoDialog2","_tradeTypeInfoItem2","IconCategory","ContractTypeDialog","_fullScreenDialog2","enter","enterDone","exit","element","ContractTypeList","_contractTypeItem2","objectOrObservableObject","ContractTypeItem","TradeTypeInfoDialog","_tradeCategories","TradeTypeInfoItem","TradeCategories","trade-type-info-navigation__circle-button--active","TradeTypeTemplate","_popconfirm","_popconfirmElement","handleClose","handleOpen","popconfirm_element","cloneElement","_iconPriceMove","ContractInfo","trade-container__error","IconPriceMove","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchaseResult2","PurchaseResult","_errorBalance","_errorGeneral","_errorLogin","_iconLock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_DropDown2","is_alignment_left","_inputField2","_allowEquals2","observableObject","Dropdown","list_ref","createRef","curr_index","getItemFromValue","is_list_visible","onKeyPressed","is_single_option","getValueFromIndex","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","_nativeSelect2","left_alignment_style","list_width","isArrayLike","dropdown--left","dropdown--show","dropdown--disabled","dropdown__display--clicked","dropdown__select-arrow--left","onEntered","offsetWidth","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","renderThumbHorizontal","_items2","highlightedIdx","items","Items","list__item--selected","list__item--highlighted","NativeSelect","isArray","AllowEquals","_Barriers","barrier_title","input_class","IconBarrierUp","IconBarrierDown","_iconBarrierUp","_iconBarrierDown","DurationWrapper","hasDurationUnit","duration_list","is_advanced_duration","du","new_duration_unit","new_duration_value","onChangeUiStore","onChangeMultiple","current_unit","advanced_duration_unit","simple_duration_unit","current_duration","simple_is_missing_duration_unit","current_duration_unit","has_missing_duration_unit","simple_is_not_type_duration","advanced_has_wrong_expiry","advanced_expiry_type","setDurationUnit","_duration2","duration_d","duration_h","duration_m","duration_s","duration_t","expiry_list","has_end_time","expiry","pop","duration_unit_text","changeDurationUnit","duration_value","shared_input","duration_name","number_input","has_toggle","_RangeSlider2","_advancedDuration2","number_input_props","shared_input_props","_simpleDuration2","_durationToggle2","new_trade_store_values","RangeSlider","first_tick","range-slider__error","steps","_tickSteps2","TickSteps","arr_ticks","range-slider__ticks-step--active","range-slider__ticks-step--marked","DurationToggle","icon_className","advanced-simple-toggle__icon--active","AdvancedDuration","is_24_hours_contract","has_intraday_duration_unit","isSame","endtime_container_class","has-time","_buttonToggleMenu2","_DatePicker2","_TimePicker2","TradingDatePicker","max_date_duration","min_date_expiry","has_today_btn","moment_contract_start_date_time","max_daily_duration","daily","disable_year_selector","disable_trading_events","min_date","max_date","DatePicker","date_value","holidays","is_datepicker_visible","is_clear_btn_visible","weekends","onClickOutside","mainNode","updateDatePickerValue","is_clearable","onSelectCalendar","onChangeInput","formatted_value","clearDatePickerInput","calendar","resetCalendar","new_value","new_date_value","new_date","current_date","_this$props2","renderInputField","_this$props3","initial_value","onChangeCalendarMonth","getTradingEvents","trading_events","events","dates","descrip","nativeEvent","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","_Calendar2","onSelect","defaultProps","Calendar","_initialiseProps","calendar_view","_state","_calendarHeader2","navigateTo","switchView","_calendarBody2","_calendarFooter2","setToday","view","start_of_month","updateSelectedDate","_props2","dataset","is_before","is_after","stopPropagation","month","decade","_props3","default_date","_props4","now","_props5","start_of_period","endOf","arrayOf","shape","_panels","CalendarBody","calendar_body","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendarDays","_calendarMonths","_calendarYears","_calendarDecades","days","moment_today","moment_cur_date","daysInMonth","moment_month_start","moment_month_end","moment_selected","padLeft","start_of_next_month","moment_start_date","is_active","is_today","has_events","is_closes_early","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--disabled","calendar__cell--other","data-date","getDays","moment_selected_date","data-month","_helper","_getDecade$split","_getDecade$split2","start_of_decade","end_of_decade","years","is_other_decade","data-year","decades","min_year","_decade$split","_decade$split2","is_other_century","data-decade","CalendarFooter","CalendarHeader","disable_month_selector","is_date_view","is_month_view","is_year_view","is_decade_view","century","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","_calendarButton2","calendar__nav--disabled","is_hidden","calendar__btn--disabled","CalendarButton","TradingTimePicker","expiry_date_time","expiry_date_market_close","is_expired_next_day","expiry_time_sessions","TimePicker","toggleDropDown","handleChange","arg","saveRef","nodeName","target_element","prefix_class","_dialog2","preClass","Dialog","start_time_moment","end_time_moment","milliseconds","to_compare_moment","selectOption","current_value","prev_value","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","is_enabled","mm","SimpleDuration","has_label","arr","filtered_arr","filterMinutesAndTicks","arr_five","_numberSelector2","arr_arr_numbers","selected_number","NumberSelector","getAttribute","arr_numbers","number-selector__selection--selected","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobileWidget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_detailsGroup2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_iconTick2","won","lost","IconTick","circle_color","tick_color","msg","_localize3","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","last","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digitDisplay2","digit_info","digit_number","_infoBoxExpired2","DigitDisplay","_ref$digit_info","digit_class","SellInfo","is_started","_contractSell2","onClickSell","ContractSell","_sellButton2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","_closeButton2","CloseButton","ToastMessage","toast","_ToastMessage2","AppContents","app-contents--show-positions-drawer","app-contents--contract-mode","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","TogglePositions","NetworkStatus","_serverTime2","ToggleFullScreen","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","gmt_time","_networkStatus","_toggleFullscreen","_togglePositions","_toggleSettings","tooltip","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconPositions","IconSettings","toggle_positions_class","toggle_settings_class","_settingsDialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings-dialog__container--show","settings_dialog_container_class","settings-dialog__container--hide","Tabs","classNameHeader","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabsWrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","icon_name","tab__icon","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settingsControl2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_languageDialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","settings-dialog__language-dialog-container--show","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","UpgradeButton","DepositButton","LoginButton","_accountInfo","_depositButton","_installPwaButton","_loginButton","_upgradeButton","_menuLinks","_toggleMenuDrawer","_toggleNotificationsDrawer","_AccountSwitcher","acc-info--show","acc-info--is-virtual","AccountSwitcher","_accountSwitcher","_AccountsCurrency","_Drawer","accounts_toggle_btn","handleLogout","account_loginid","main_account_title","acc-switcher__account--selected","doSwitch","IconAccountsCurrency","virtual_loginid","IconLogout","account_switcher","virtual_account_loginid","_icon_accounts_currency","IconCurrency","prompt","userChoice","choice_result","outcome","Switch","_routeWithSubRoutes2","LoginPrompt","onSignup","_localize2","3_2","website_name","ToggleDrawer","_menuDrawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","ToggleNotificationsDrawer","Notifications","_notifications","_emptyNotification","EmptyNotification","Routes","_Routes2","onCancel","DenialOfServiceModal","_fullPageModal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"2c5385386e6c010fb04d\",\"account_password\":\"1dc8fc8808b1ffdff710\",\"api_toke\":\"fc1da4bfb053abd21bc4\",\"authorized_application\":\"3f59f3c213fde2fc9f0b\",\"cashier_password\":\"6b8bb8bed78becd5a455\",\"contract\":\"6107de68e55ee68be85c\",\"financial_assessment\":\"5ede4a0a4e67cb99ed60\",\"limits\":\"e8d10a4d82f2ba14c743\",\"login_history\":\"05be9ac83f97020efe2e\",\"personal_details\":\"c39c8ebd7bc1818e4319\",\"portfolio\":\"53879f65a084ab77edf6\",\"self_exclusion\":\"72636b3a814b78b2ede3\",\"settings\":\"75c812e225818fb66039\",\"statement\":\"b0cce234d6ab6514866c\",\"vendors~smart_chart\":\"821c47246a4d0994fc9e\",\"smart_chart\":\"4d9828a738eec01eb37d\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([268,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date-time';\n","export * from './icon-arrow.jsx';\nexport * from './icon-back.jsx';\nexport * from './icon-calendar-today.jsx';\nexport * from './icon-calendar.jsx';\nexport * from './icon-chevron-double-left.jsx';\nexport * from './icon-chevron-double-right.jsx';\nexport * from './icon-chevron-left.jsx';\nexport * from './icon-chevron-right.jsx';\nexport * from './icon-country-flag.jsx';\nexport * from './icon-clear.jsx';\nexport * from './icon-clock.jsx';\nexport * from './icon-close.jsx';\nexport * from './icon-error.jsx';\nexport * from './icon-exclamation.jsx';\nexport * from './icon-info-blue.jsx';\nexport * from './icon-info-outline.jsx';\nexport * from './icon-minimize.jsx';\nexport * from './icon-minus.jsx';\nexport * from './icon-plus.jsx';\nexport * from './icon-question.jsx';\nexport * from './icon-red-dot.jsx';\nexport * from './icon-success.jsx';\nexport * from './icon-warning.jsx';\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            <span className={classNames('btn__text', classNameSpan)}>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={classNames(className, 'symbols', currency.toLowerCase())} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","export * from './icon-bell.jsx';\nexport * from './icon-cashier.jsx';\nexport * from './icon-hamburger.jsx';\nexport * from './icon-portfolio.jsx';\nexport * from './icon-statement.jsx';\nexport * from './icon-trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                        symbol.times.close;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { IconMinus }             from 'Assets/Common/icon-minus.jsx'; // implicit import here { IconMinus, IconPlus } from 'Assets/Common' breaks compilation\nimport { IconPlus }              from 'Assets/Common/icon-plus.jsx';\nimport Button                    from './button.jsx';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    classNameInput,\n    classNamePrefix,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_read_only = false,\n    is_signed = false,\n    is_unit_at_right = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    unit,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (unit) {\n            e.target.value = e.target.value.replace(unit, '').trim();\n        }\n\n        if (e.target.value === value && type !== 'checkbox') {\n            return;\n        }\n\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n            const signed_regex = is_signed ? '[+\\-\\.0-9]$' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const incrementValue = () => {\n        if  (max_is_disabled) return;\n\n        const increment_value = (+value) + 1;\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n\n        const decrement_value = (+value) - 1;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    let display_value = value;\n\n    if (unit) {\n        display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n    }\n\n    const is_increment_input = is_incrementable && type === 'number';\n\n    const input =\n        <input\n            checked={checked ? 'checked' : ''}\n            className={classNames(is_increment_input ? 'input-wrapper__input' : '', 'input', { 'input--error': has_error }, classNameInput)}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-value={data_value}\n            data-tip={data_tip}\n            id={id}\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            onChange={changeValue}\n            onClick={onClick}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={display_value || ''}\n            autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n        />;\n\n    const input_increment =\n        <div className='input-wrapper'>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--increment'}\n                is_disabled={max_is_disabled}\n                onClick={incrementValue}\n                tabIndex='-1'\n            >\n                <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n            </Button>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--decrement'}\n                is_disabled={min_is_disabled}\n                onClick={decrementValue}\n                tabIndex='-1'\n            >\n                <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n            </Button>\n            { input }\n        </div>;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip className={classNames('', { 'with-label': label })} alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-field__label'>{label}</label>\n                }\n                {!!prefix &&\n                    <span className={classNames(classNamePrefix, 'symbols', prefix.toLowerCase())} />\n                }\n                {!!helper &&\n                    <span className='input-field__helper'>{helper}</span>\n                }\n                {is_increment_input ? input_increment : input}\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked                 : PropTypes.number,\n    className               : PropTypes.string,\n    classNameInput          : PropTypes.string,\n    classNamePrefix         : PropTypes.string,\n    error_messages          : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits       : PropTypes.number,\n    helper                  : PropTypes.string,\n    id                      : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconInfoBlue }    from 'Assets/Common/icon-info-blue.jsx';\nimport { IconInfoOutline } from 'Assets/Common/icon-info-outline.jsx';\nimport { IconQuestion }    from 'Assets/Common/icon-question.jsx';\nimport { IconRedDot }      from 'Assets/Common/icon-red-dot.jsx';\n\nclass Tooltip extends React.Component {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip')}\n                data-tooltip={message}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <IconInfoOutline\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <IconInfoBlue\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip-balloon-icon', {\n                                'tooltip-balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <IconQuestion className={icon_class} />}\n                {icon === 'dot'      && <IconRedDot className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const loading_class = classNames('block-ui__loading', className);\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.string,\n    updateSelected  : PropTypes.func,\n};\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill-template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","export * from './drawer-header.jsx';\nexport * from './drawer-item.jsx';\nexport * from './drawer-items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer-toggle.jsx';\nexport * from './toggle-drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary-link.jsx';\nexport ButtonLink         from './button-link.jsx';\nexport default            from './binary-routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport { IconError };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconInfoBlue = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#2196F3' />\n            <g fill='#FFF' transform='translate(6.5 4)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <rect width='2' height='5' x='.5' y='3' rx='1' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconInfoBlue.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoBlue };\n","export * from './icon-trade-types.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`${wrapperClassName || 'fullscreen-dialog__contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","export default from './range-slider.jsx';\n","import { localize } from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export * from './icon-maximize.jsx';\nexport * from './icon-positions.jsx';\nexport * from './icon-settings.jsx';\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export default from './error-component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","import ContractType from '../Helpers/contract-type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal_checked',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3.613 8.5l3.26 3.668a.5.5 0 1 1-.747.664l-4-4.5a.5.5 0 0 1 0-.664l4-4.5a.5.5 0 0 1 .748.664L3.614 7.5H13.5a.5.5 0 1 1 0 1H3.613z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconClock = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <g fill='none' fillRule='nonzero' stroke='#5C5C5C'>\n            <circle cx='8' cy='8' r='7.5' />\n            <path strokeLinecap='round' strokeLinejoin='round' d='M8 3.5v5h3.5' />\n        </g>\n    </svg>\n);\n\nIconClock.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClock };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconInfoOutline = ({ className, onMouseEnter, onMouseLeave }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        height='16'\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        viewBox='0 0 16 16'\n        width='16'\n        xmlns='http://www.w3.org/2000/svg'\n    >\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.16)' fillRule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM8 6a.75.75 0 1 0 0-1.5A.75.75 0 0 0 8 6zm0 1a.5.5 0 0 0-.5.5v4a.5.5 0 1 0 1 0v-4A.5.5 0 0 0 8 7z' />\n    </svg>\n);\n\nIconInfoOutline.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoOutline };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconQuestion = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='#FFF' fillRule='evenodd'>\n            <path d='M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm0-1A7 7 0 1 0 8 1a7 7 0 0 0 0 14z' fillRule='nonzero' />\n            <path d='M7.39 9.518c.007-.373.052-.668.134-.885.082-.216.25-.456.503-.72l.646-.636c.276-.298.415-.618.415-.96 0-.33-.09-.588-.272-.774-.18-.187-.444-.28-.789-.28-.335 0-.605.084-.809.254a.842.842 0 0 0-.306.682H6c.007-.508.196-.918.57-1.23.373-.313.859-.469 1.457-.469.622 0 1.106.16 1.453.478.347.318.52.755.52 1.31 0 .55-.266 1.091-.799 1.625l-.538.508c-.24.255-.36.62-.36 1.097h-.912zm-.039 1.492a.5.5 0 0 1 .136-.355c.09-.096.224-.144.402-.144.178 0 .312.048.404.144a.493.493 0 0 1 .139.355.477.477 0 0 1-.139.351c-.092.093-.226.139-.404.139-.178 0-.312-.046-.402-.139a.481.481 0 0 1-.136-.35z' />\n        </g>\n    </svg>\n);\n\nIconQuestion.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuestion };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconRedDot = ({ className }) => (\n    <svg className={className} width='4' height='4' xmlns='http://www.w3.org/2000/svg'>\n        <circle cx='1163' cy='626' r='2' transform='translate(-1161 -624)' fill='#E31C4B' fillRule='nonzero' />\n    </svg>\n);\n\nIconRedDot.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconRedDot };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconSuccess = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4CAF50' />\n            <path fill='#FFF' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconSuccess.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSuccess };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconWarning = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V4a1 1 0 0 1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconWarning.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconWarning };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account-password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api-token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized-applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier-password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial-assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login-history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal-details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self-exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon-trade-categories.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport UILoader          from 'App/Components/Elements/ui-loader.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract-info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='btn--primary btn-purchase'\n                has_effect\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n            >\n                <React.Fragment>\n                    <div className='btn-purchase__effect-main' />\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__content'>\n                        <div className='btn-purchase__trade-type'>\n                            <IconTradeType type={type.toLowerCase()} className='btn-purchase__trade-type-icon' />\n                            <span className='btn-purchase__trade-type-text'>{localize('[_1]', trade_types[type])}</span>\n                        </div>\n                    </div>\n                    <div className='btn-purchase__info'>\n                        <div className='btn-purchase__return'>{is_disabled ? '---,-' : info.returns}</div>\n                        <div className='btn-purchase__profit'>\n                            {is_disabled ? '--,--' : <Money amount={info.profit} currency={currency} className='btn-purchase__currency' />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Button>\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader classNameBlock='purchase-container__loading' />\n                        }\n                        <ContractInfo\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', `popconfirm--${alignment}`, {\n        [`popconfirm--${alignment}--open`]: is_visible,\n        'popconfirm--open'                : is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm__title'>\n                <IconExclamation className='popconfirm__icon_exclamation' />\n                <h4 className='popconfirm__header'>{message}</h4>\n            </div>\n            <div className='popconfirm__button-wrapper'>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onClose}\n                >\n                    <span className='popconfirm__button-text'>{cancel_text}</span>\n                </div>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onConfirm}\n                >\n                    <span className='popconfirm__button-text'>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                        this.props.ui_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules, ui }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n        ui_store       : ui,\n    })\n)(TradeParams);\n","export default from './dropdown.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Button     from './button.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={val.text}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return <div className='button-menu'>{menu}</div>;\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","export default from './trading-date-picker.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport SellInfo     from '../Sell/sell-info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs-item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-dialog__row' onClick={toggle || onClick}>\n        <span className='settings-dialog__row-name'>{name}</span>\n        {toggle ?\n            <SwitchButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst SwitchButton = ({ style, toggled }) => {\n    const toggle_style = style || 'switch-button';\n    const icon_class = classNames(toggle_style, {\n        [`${toggle_style}--toggled`]: toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nSwitchButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default SwitchButton;\n","export * from './icon-logout.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer-header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            <IconPortfolio className='portfolio-empty__icon' />\n            <span className='portfolio-empty__text'>{localize('No running contract')}</span>\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date-picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui-loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details-contents.jsx';\nimport DetailsHeader   from '../Components/Details/details-header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn btn--link btn--secondary btn--secondary--orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract-error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 209,\n\t\"./ja.js\": 209\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 476;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance, true);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base-store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid  = LocalStore.get('active_loginid');\n        this.accounts = LocalStore.getObject(storage_key);\n        this.switched = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract-store';\nimport PortfolioStore  from './Portfolio/portfolio-store';\nimport SmartChartStore from './SmartChart/smart-chart-store';\nimport StatementStore  from './Statement/statement-store';\nimport TradeStore      from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }    from './Helpers/chart-barriers';\nimport { createChartMarkers }    from './Helpers/chart-markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base-store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon-entry-spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon-flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const is_number      = typeof value === 'number';\n    // need to explicitly convert date string to a JS Date object then pass that into Moment\n    // to get rid of the warning: Deprecation warning: moment construction falls back to js Date\n    const formatted_date = moment(new Date(value)).format('YYYY-MM-DD');\n    return is_number ? epochToMoment(value) : moment.utc(formatted_date);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nconst store_name = 'smart_chart_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties, store_name });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format-response';\nimport BaseStore                        from '../../base-store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url-helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query-string';\nimport getValidationRules                from './Constants/validation-rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract-type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_allow_equal             = false;\n    @observable is_equal_checked           = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            store_name,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => [\n                this.symbol,\n                this.contract_type,\n                this.duration_unit,\n                this.expiry_type,\n                this.duration_units_list,\n                this.contract_types_list,\n            ],\n            () => {\n                this.changeAllowEquals();\n            },\n            { delay: 500 }\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, checked } = e.target;\n        let { value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (value === 'is_equal') {\n            if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type)) {\n                if (checked) {\n                    this.is_equal_checked = 1;\n                    value = 'rise_fall_equal';\n                } else {\n                    this.is_equal_checked = 0;\n                    value = 'rise_fall';\n                }\n            }\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        e.preventDefault();\n        WS.forgetAll('proposal').then(this.requestProposal());\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        WS.forgetAll('proposal');\n\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    changeAllowEquals() {\n        const hasCallPutEqual = (contract_type_list) => {\n            if (!contract_type_list) return false;\n\n            return getPropertyValue(contract_type_list, 'Up/Down')\n                .some(contract => contract.value === 'rise_fall_equal');\n        };\n        const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n            if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n            const contract_list = Object.keys(contract_type_list || {})\n                .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n            \n            const contract_duration_list = contract_list\n                .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n            // Check whether rise fall equal is exists and has the current store duration unit\n            return hasCallPutEqual(contract_type_list) ? contract_duration_list\n                .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n                .some(duration => duration.value === duration_unit) : false;\n        };\n        const check_callput_equal_duration = hasDurationForCallPutEqual(this.contract_types_list,\n            this.duration_unit, this.contract_start_type);\n\n        if (!(/^(rise_fall|rise_fall_equal)$/.test(this.contract_type))) {\n            this.is_allow_equal = false;\n            this.is_equal_checked = 0;\n        }\n\n        if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type) && (check_callput_equal_duration || this.expiry_type === 'endtime') && hasCallPutEqual(this.contract_types_list)) {\n            this.is_allow_equal = true;\n        } else {\n            this.is_allow_equal = false;\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n\n    const obj_market_close_times = { market_close_times: await ContractType.getTradingTimes(expiry_date, symbol) };\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_close_times,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query-string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base-store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('theme--dark'));\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base-name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport PositionsDrawer             from './Components/Elements/PositionsDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast-message.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <React.Fragment>\n                <div className='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PositionsDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer className='footer'>\n                    <Footer />\n                </footer>\n            </React.Fragment>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './positions-drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconMinimize }               from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions_drawer_card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_positions_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PositionsDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('positions-drawer', { 'positions-drawer--open': is_positions_drawer_on })}>\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconMinimize />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        toggleDrawer          : ui.togglePositionsDrawer,\n    })\n)(PositionsDrawer);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className={classNames(classNamePath, 'color1-fill')} d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='rgba(0, 0, 0, 0.8)' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconArrow };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, classNamePath, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path className={classNamePath || 'color1-fill'} fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    onClick      : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={classNames('inline-icon', className)}\n        onClick={onClick}\n    >\n        <path className='color1-fill' fill='#000' fillOpacity='.8' fillRule='nonzero' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCountryFlag = ({ type, className }) => {\n    let IconCountry;\n    if (type) {\n        switch (type) {\n            case 'de':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#333' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#FFCD00' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#F10000' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'es':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#DD172C' mask='url(#b)' d='M0 0h24v4H0zm0 12h24v4H0z' />\n                            <path fill='#FFD133' mask='url(#b)' d='M0 4h24v8H0z' />\n                            <g mask='url(#b)'>\n                                <path fill='#FFEDB1' d='M5.333 7.333h1.334V8H5.333z' />\n                                <path d='M4.054 7.3l.167 2.007a1.138 1.138 0 0 0 1.112 1.026c.566 0 1.065-.461 1.112-1.026L6.613 7.3c.014-.174-.105-.3-.288-.3H4.341c-.176 0-.301.133-.287.3z' stroke='#A41517' strokeWidth='.667' />\n                                <path fill='#A41517' d='M4 8h2.667v.667H6L5.333 10l-.666-1.333H4zM2 6h1.333v4.667H2zm5.333 0h1.333v4.667H7.333zM4 5.333c0-.368.306-.666.673-.666h1.32c.372 0 .674.296.674.666v.33A.33.33 0 0 1 6.34 6H4.327A.327.327 0 0 1 4 5.664v-.33z' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'fr':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#001F9B' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF002D' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'id':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#E12237' mask='url(#b)' d='M0 0h24v8H0z' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 8h24v8H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'it':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#1BB65D' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#E43D4C' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'pl':\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M0 14.16c0 1.01.805 1.827 1.797 1.827h20.406c.992 0 1.797-.818 1.797-1.826V8H0v6.16z' fill='#F44336' />\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84V8h24V1.84C24 .83 23.195.012 22.203.012z' fill='#FFF' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n            case 'pt':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#128415' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF2936' mask='url(#b)' d='M8 0h16v16H8z' />\n                            <circle stroke='#FAF94F' mask='url(#b)' cx='8' cy='8' r='3.5' />\n                            <g mask='url(#b)'>\n                                <path d='M6.5 6.341c0-.188.145-.341.333-.341h2.334c.184 0 .333.152.333.341v2.327C9.5 9.404 8.907 10 8.175 10h-.35C7.093 10 6.5 9.41 6.5 8.668V6.341z' fill='#FFF' />\n                                <path d='M8 8.92c.414 0 .75-1.086.75-1.5a.75.75 0 1 0-1.5 0c0 .414.336 1.5.75 1.5z' fill='#1D50B5' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'ru':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#FFF' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#E53B35' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#0C47B7' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'th':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#F12532' xlinkHref='#a' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 3h24v10H0z' />\n                            <path fill='#322B6C' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'vi':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#EA403F' xlinkHref='#a' />\n                            <path fill='#FFFE4E' mask='url(#b)' d='M12 10.45l-2.939 2.095 1.084-3.442-2.9-2.148 3.609-.033L12 3.5l1.146 3.422 3.61.033-2.901 2.148 1.084 3.442z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_cn':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M7.742 7.186h1.04V13h-1.04V7.186zm7.453 5.77h-.952l-.255-.927.996.032c.244 0 .366-.161.366-.474V6.883h-4.11v-.938h5.15v5.922c0 .723-.399 1.09-1.196 1.09zM9.968 7.64h4.175v4.207H9.968V7.639zm3.2 3.355v-.863h-2.203v.863h2.203zM10.965 9.31h2.203v-.842h-2.203v.842zM9.082 5.503c.576.496 1.019.938 1.329 1.327l-.775.517c-.333-.41-.776-.863-1.33-1.38l.776-.464zm-.3-.874a7.406 7.406 0 0 1-.896 1.23L7 5.298C7.664 4.586 8.13 3.82 8.417 3l1.02.216c-.067.183-.145.356-.211.518h2.746v.895h-1.461c.232.324.42.636.564.917l-.93.334a9.512 9.512 0 0 0-.73-1.251h-.632zm4.707 0a6.6 6.6 0 0 1-.686 1.068l-.886-.561c.543-.658.93-1.37 1.152-2.125l1.007.216c-.066.172-.121.345-.177.507H17v.895h-1.661c.21.291.387.572.531.83l-.93.335a9.04 9.04 0 0 0-.697-1.165h-.754z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_tw':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M8.602 4.413c-.13.151-.26.302-.38.432h3.605c0 .431-.011.83-.033 1.175h.617v.648h-.67l-.098.68h.444v.528h-.563c-.022.065-.033.119-.054.173l.314.237c-.585.291-1.18.54-1.786.744a165.06 165.06 0 0 1 2.23-.075c.454-.227.908-.475 1.374-.734l.725.475a18.267 18.267 0 0 1-4.091 1.683 126.13 126.13 0 0 0 4.177-.248c-.238-.173-.487-.356-.746-.53l.725-.441c1.028.647 1.818 1.208 2.37 1.704l-.812.561a12.63 12.63 0 0 0-.768-.69c-.93.054-1.818.108-2.663.15v1.263c0 .56-.335.852-.995.852h-1.018l-.173-.82c.314.033.617.054.899.054.205 0 .313-.108.313-.302v-1.003c-1.287.065-2.478.108-3.56.14l-.217-.841c.282.01.552.021.823.021.78-.162 1.59-.42 2.446-.766l-2.468.087-.151-.712c.368 0 .617-.033.768-.097a12.58 12.58 0 0 0 1.44-.637c.021-.086.054-.173.075-.248H7.574c.075-.41.14-.81.205-1.208h-.703V6.02h.779c.043-.312.076-.614.097-.916a6.4 6.4 0 0 1-.422.366L7 4.834c.595-.442 1.115-1.047 1.548-1.823l.844.183c-.098.173-.195.345-.292.507h3.181v.712h-3.68zm0 2.168l-.13.766h1.656a7.341 7.341 0 0 0-1.147-.41l.227-.356h-.606zm1.558.766h.671a9.43 9.43 0 0 0 .13-.766h-1.71c.422.12.8.249 1.147.4l-.238.366zm.844-1.219l.033-.766H8.742c-.021.26-.054.518-.086.766h1.504a6.009 6.009 0 0 0-1.017-.399l.249-.356c.39.108.757.26 1.093.432l-.206.323h.725zm2.587-1.337a3.23 3.23 0 0 0 .941 1.424c.347-.41.617-.885.79-1.424h-1.731zm.335 1.985a4.244 4.244 0 0 1-.876-1.316 7.07 7.07 0 0 1-.52.582l-.54-.647c.562-.583 1.049-1.381 1.46-2.395l.877.194c-.108.28-.227.54-.346.788h2.813v.809h-.627c-.195.776-.52 1.413-.953 1.93.498.324 1.093.594 1.786.82l-.465.81c-.78-.28-1.429-.615-1.948-1.004-.542.432-1.202.745-1.96.95l-.475-.745c.714-.172 1.298-.431 1.774-.776zm-.173 4.347c1.082.259 2.078.583 2.976.97l-.519.81a16.903 16.903 0 0 0-2.965-1.025l.508-.755zm-3.798.043l.54.615c-.8.453-1.785.83-2.943 1.133l-.379-.799c1.126-.237 2.056-.56 2.782-.949z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            default: // en\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84v12.322c0 1.008.805 1.826 1.797 1.826h20.406c.992 0 1.797-.818 1.797-1.826V1.839C24 .831 23.195.013 22.203.013z' fill='#0D47A1' />\n                            <path d='M23.975 1.537A1.806 1.806 0 0 0 22.203.013h-.468l-7.666 5.102V.013H9.931v5.102L2.265.013h-.468C.906.013.167.673.025 1.537l6.552 4.361H0v4.204h6.577l-6.552 4.36a1.806 1.806 0 0 0 1.772 1.525h.468l7.666-5.102v5.102h4.138v-5.102l7.666 5.102h.468c.891 0 1.63-.66 1.772-1.524l-6.552-4.361H24V5.898h-6.577l6.552-4.36z' fill='#FFF' />\n                            <path d='M13.241.013V6.74H24v2.52H13.241v6.726H10.76V9.26H0V6.74h10.759V.013h2.482zM1.162 15.87a1.8 1.8 0 0 1-.73-.52l7.956-5.247h1.52L1.162 15.87zm15.075-5.767l7.527 4.963a1.82 1.82 0 0 1-.576.623l-8.471-5.586h1.52zM.19 1.022C.316.767.5.545.725.374l8.378 5.525h-1.52L.19 1.023zm15.399 4.876h-1.52L22.824.125a1.8 1.8 0 0 1 .735.517l-7.97 5.256z' fill='#F44336' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='24' height='16' viewBox='0 0 24 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconCountry}\n        </svg>\n\n    );\n};\n\nIconCountryFlag.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconCountryFlag };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinimize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#000' fillOpacity='0.8' fillRule='nonzero' d='M0 7h16v2H0z' />\n    </svg>\n);\n\nIconMinimize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMinimize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='14' viewBox='0 0 16 14'>\n        <g fill='none' fillRule='evenodd'>\n            <path fill='#000' fillOpacity='0.16' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2z' />\n            <path fill='#FFF' fillRule='nonzero' d='M1 8.128l2.804 1.557A2.5 2.5 0 0 0 5.018 10h5.964a2.5 2.5 0 0 0 1.214-.315L15 8.128V12.5a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5V8.128zm0-1.144V3.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v3.484L11.71 8.81a1.5 1.5 0 0 1-.728.189H5.018a1.5 1.5 0 0 1-.728-.189L1 6.984zM6.5 8h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0 0 1z' />\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract-type-cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary-link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining-time.jsx';\n\nconst PositionsDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink\n        className='positions-drawer-card'\n        to={getContractPath(id)}\n    >\n        <React.Fragment>\n            <div className='positions-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`positions-drawer-card__indicative positions-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='positions-drawer-card__symbol'>{underlying}</span>\n            <span className='positions-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPositionsDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' className='color1-fill' fill='#2A3052'fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path className='color1-fill' fill='#2A3052'd='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('trade-type-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form-layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract-details.jsx';\nimport InfoBox              from '../../Contract/Containers/info-box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen-large.jsx';\nimport ScreenSmall  from './screen-small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import classNames           from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract-type-dialog.jsx';\nimport ContractTypeList      from './contract-type-list.jsx';\nimport TradeTypeInfoDialog   from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem     from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open     : false,\n            is_info_dialog_open: false,\n            item               : {},\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(navigationList[nextIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[0]);\n        }\n    };\n\n    handlePrevClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(navigationList[prevIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({ is_info_dialog_open: false, is_dialog_open: false });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getNavigationList = () => {\n        const navigationList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && navigationList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return navigationList;\n    };\n\n    render() {\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={'contract-type-widget'}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': this.state.is_dialog_open,\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <IconTradeCategory category={this.props.value} className='contract-type-widget__icon-wrapper' />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                        handleInfoClick={this.handleInfoClick}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={this.props.is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={this.state.is_info_dialog_open}\n                    title={this.state.item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_mobile={this.props.is_mobile}\n                        item={this.state.item}\n                        navigationList={this.getNavigationList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category, className }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)}>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category : PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    list           : MobxPropTypes.objectOrObservableObject,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconInfoOutline }            from 'Assets/Common';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`contract-type-item ${value === contract.value ? 'contract-type-item--selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <IconTradeCategory category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <IconInfoOutline />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { Scrollbars }       from 'tt-react-custom-scrollbars';\nimport { IconBack }         from 'Assets/Common/icon-back.jsx';\nimport { IconChevronLeft }  from 'Assets/Common/icon-chevron-left.jsx';\nimport { IconChevronRight } from 'Assets/Common/icon-chevron-right.jsx';\nimport { TradeCategories }  from 'Assets/Trading/Categories/trade-categories.jsx';\nimport Button               from 'App/Components/Form/button.jsx';\nimport { localize }         from '_common/localize';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_mobile,\n    item,\n    navigationList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <IconBack />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__gif'>\n            gif explanation\n        </div>\n        <div className='trade-type-info-dialog__content'>\n            <Scrollbars\n                autoHide\n                style={{ height: '100%' }}\n            >\n                <TradeCategories category={item.value} />\n            </Scrollbars>\n        </div>\n        <div>\n            <Button className='trade-type-info-dialog__choose-button' text={localize('Choose')} onClick={() => onSubmitButtonClick(item)} />\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(navigationList)} >\n                <IconChevronLeft />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                {\n                    navigationList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className={classNames('trade-type-info-navigation__circle-button', {\n                                    'trade-type-info-navigation__circle-button--active': contract.value === item.value,\n                                })}\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(navigationList)} >\n                <IconChevronRight />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    navigationList       : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n\nconst TradeCategories = ({ category }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>\n                            { localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }\n                        </p>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to the barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.') }</p>\n                        <p>{ localize('If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to either the Low barrier or the High barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period') }</p>\n                        <p>{ localize('If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.') }</p>\n                        <p>{ localize('If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).') }</p>\n                        <p>{ localize('If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.') }</p>\n                        <p>{ localize('If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Touches\", you win the payout if the market touches the barrier at any time during the contract period.') }</p>\n                        <p>{ localize('If you select \"Does Not Touch\", you win the payout if the market never touches the barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('Asian options settle by comparing the last tick with the average spot over the period.') }</p>\n                        <p>{ localize('If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.') }</p>\n                        <p>{ localize('If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.') }</p>\n                        <p>{ localize('If the last tick is equal to the average of the ticks, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <p>\n                        not found\n                    </p>\n                );\n                break;\n        }\n    }\n    return (\n        <div>\n            {TradeTypeTemplate}\n        </div>\n    );\n};\n\nTradeCategories.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { TradeCategories };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm-element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm-element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    })\n                ))}\n                {popconfirm_element}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    proposal_info,\n}) => (\n    <React.Fragment>\n        {(proposal_info.has_error || !proposal_info.id) ?\n            <div\n                className={classNames({\n                    'trade-container__error': proposal_info.has_error,\n                })}\n            >\n                {proposal_info.message && <span className='trade-container__error-info'>{proposal_info.message}</span>}\n            </div>\n            :\n            <div className='trade-container__price'>\n                <div className='trade-container__price-info'>\n                    <div className='trade-container__price-info-basis'>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                    <div><Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} /></div>\n                    <div className='trade-container__price-info-movement'>\n                        {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                    </div>\n                </div>\n                <span>\n                    <Tooltip alignment='left' className='trade-container__price-tooltip' classNameIcon='trade-container__price-tooltip-i' icon='info' message={proposal_info.message} />\n                </span>\n            </div>\n        }\n    </React.Fragment>\n);\n\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","export default from './message-box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon-close.jsx';\nimport PurchaseResult       from './purchase-result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-container__error'>\n            <div className='purchase-container__error-close-btn' onClick={onClick}>\n                <IconClose className='purchase-container__error-close-btn-ic' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-container__error-result'>\n        <div>\n            <strong className='purchase-container__error-result-header'>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Buy Price')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Payout')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error-balance.jsx';\nexport * from './error-general.jsx';\nexport * from './error-login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='purchase-container__error-login-btn btn--secondary btn--secondary--orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-container__error-result'>\n        <span className='purchase-container__error-info'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='purchase-container__error-login-btn btn--secondary btn--secondary--orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p className='purchase-container__error-login-prompt'>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a className='purchase-container__error-login-link' href='javascript:;'><span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase-lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon-lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-container__lock'>\n        <div>\n            <IconLock className='purchase-container__lock-icon' />\n        </div>\n        <h4 className='purchase-container__lock-header'>{localize('Purchase Locked')}</h4>\n        <Button\n            className='purchase-container__lock-button btn--flat btn--secondary btn--secondary--orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='purchase-container__lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect className='color1-stroke' width='9' height='7' x='.5' y='6.5' stroke='none' rx='1' />\n            <circle className='color1-fill' cx='5' cy='10' r='1' fill='none' />\n            <path className='color1-stroke' stroke='none' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\n// import StartDate from 'Modules/Trading/Components/Form/TradeParams/start-date.jsx';\n\nexport const form_components = [\n    // { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input-field.jsx';\nimport AllowEquals               from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_allow_equal,\n    is_equal_checked,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames({ 'three-columns': !is_single_currency });\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <div className={amount_container_class}>\n                <Dropdown\n                    is_alignment_left\n                    is_nativepicker={is_nativepicker}\n                    list={basis_list}\n                    name='basis'\n                    value={basis}\n                    onChange={onChange}\n                    className='dropdown--no-margin'\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        is_alignment_left\n                        is_nativepicker={is_nativepicker}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                }\n                <InputField\n                    classNameInput='trade-container__input'\n                    classNamePrefix='trade-container__currency'\n                    error_messages={validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_autocomplete_disabled\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n            <AllowEquals is_allow_equal={is_allow_equal} onChange={onChange} checked={is_equal_checked} />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_allow_equal    : PropTypes.bool,\n    is_equal_checked  : PropTypes.number,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', {\n                        'dropdown__display--clicked': this.state.is_list_visible,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                {\n                    !is_single_option && <IconArrow className={classNames('dropdown__select-arrow', {\n                        'dropdown__select-arrow--left': this.props.is_alignment_left,\n                    })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={classNames('list__item', {\n                    'list__item--selected'   : value === item.value,\n                    'list__item--highlighted': highlightedIdx === idx,\n                })}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span className='list__item-text'>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nItems.propTypes = {\n    handleSelect  : PropTypes.func,\n    highlightedIdx: PropTypes.number,\n    name          : PropTypes.string,\n    value         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from '_common/localize';\nimport Tooltip        from 'App/Components/Elements/tooltip.jsx';\nimport InputField     from 'App/Components/Form/input-field.jsx';\n\nconst AllowEquals = ({\n    is_allow_equal,\n    checked,\n    onChange,\n}) => (\n    !!is_allow_equal &&\n        <div className='allow-equals'>\n            <InputField\n                className='allow-equals__input-field'\n                classNameInput='allow-equals__input trade-container__input'\n                id='allow_equals'\n                name='contract_type'\n                onChange={onChange}\n                value='is_equal'\n                type='checkbox'\n                checked={checked}\n            />\n            <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n            <Tooltip\n                alignment='left'\n                className='allow-equals__tooltip'\n                classNameIcon='allow-equals__tooltip-info'\n                icon='info'\n                message={localize('Win payout if exit spot is also equal to entry spot.')}\n            />\n        </div>\n);\n\nAllowEquals.propTypes = {\n    checked       : PropTypes.number,\n    is_allow_equal: PropTypes.bool,\n    onChange      : PropTypes.func,\n};\n\nexport default AllowEquals;\n","import classNames     from 'classnames';\nimport { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    IconBarrierUp,\n    IconBarrierDown } from 'Assets/Trading/Barriers';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport InputField     from 'App/Components/Form/input-field.jsx';\nimport { localize }   from '_common/localize';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n    \n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <IconBarrierUp className='trade-container__barriers--up' />\n                        <IconBarrierDown className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","export * from './icon-barrier-up.jsx';\nexport * from './icon-barrier-down.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierUp = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M8.5 4.207V12.5a.5.5 0 1 1-1 0V4.207L4.854 6.854a.5.5 0 1 1-.708-.708l3.5-3.5a.5.5 0 0 1 .708 0l3.5 3.5a.5.5 0 1 1-.708.708L8.5 4.207z'\n        />\n    </svg>\n);\n\nIconBarrierUp.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierUp };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierDown = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M7.5 11.793V3.5a.5.5 0 0 1 1 0v8.293l2.646-2.647a.5.5 0 1 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 11.793z'\n        />\n    </svg>\n);\n\nIconBarrierDown.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierDown };\n","export default from './duration-wrapper.jsx';\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport Duration                 from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : new_duration_value,\n        });\n    }\n\n    componentDidMount() {\n        const current_unit = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration = this.props.getDurationFromUnit(this.props.duration_unit);\n\n        if (this.props.duration_unit !== current_unit) {\n            this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: this.props.duration_unit });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${current_unit}`, value: this.props.duration });\n        }\n    }\n\n    componentWillReact() {\n        const simple_is_missing_duration_unit = !this.props.is_advanced_duration && this.props.simple_duration_unit === 'd' && this.props.duration_units_list.length === 4;\n        const current_duration_unit           = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration                = this.props.getDurationFromUnit(this.props.duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_not_type_duration     = !this.props.is_advanced_duration && this.props.expiry_type !== 'duration';\n        const advanced_has_wrong_expiry       = this.props.is_advanced_duration\n            && this.props.expiry_type !== this.props.advanced_expiry_type && this.props.duration_units_list.length > 1;\n\n        // intercept changes to current contracts duration_units_list - if they are missing change duration_unit and value in trade_store and ui_store\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n            return;\n        }\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (advanced_has_wrong_expiry) {\n            this.props.onChange({ target: { name: 'expiry_type', value: this.props.advanced_expiry_type } });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${this.props.duration_unit}`, value: this.props.duration });\n        }\n    }\n\n    render() {\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_d: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_h: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_m: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_s      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_close_times  : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(DurationWrapper);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from '_common/localize';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    validation_errors,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        onChangeUiStore({ name: duration_name, value });\n        onChange({ target: { name, value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    let max_value, min_value;\n    if (duration_min_max[contract_expiry_type]) {\n        max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n    }\n\n    const props = {\n        shared_input: {\n            max_value,\n            min_value,\n            onChange: changeDurationValue,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n            error_messages  : validation_errors.duration || [],\n        },\n    };\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    ticks={10}\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_t      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick-steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    return (\n        <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n            <label className='range-slider__label' htmlFor='range'>\n                <input\n                    id='range'\n                    className='input trade-container__input range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='range-slider__ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '1.6rem' : '1rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span className='range-slider__caption--first'>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span className='range-slider__caption--last'>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active': (idx + 1) === parseInt(value),\n                        'range-slider__ticks-step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { IconArrow }       from 'Assets/Common';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <IconArrow className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/input-field.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n}) => {\n    const moment_expiry      = toMoment(expiry_date || server_time);\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || moment_expiry.isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                            // validation_errors={validation_errors.expiry_date} TODO: add validation_errors for expiry date\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    is_nativepicker    : PropTypes.bool,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default AdvancedDuration;\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\n\nconst TradingDatePicker = ({\n    duration_min_max,\n    duration_units_list,\n    validation_errors,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const moment_contract_start_date_time =\n        setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm')));\n\n    const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n\n    }\n    if (expiry_type === 'duration') {\n        min_date_expiry.add(1, 'day');\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={validation_errors.duration || []}\n            has_today_btn={has_today_btn}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={expiry_date}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n    })\n)(TradingDatePicker);\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }             from 'Assets/Common';\nimport InputField           from 'App/Components/Form/input-field.jsx';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from '_common/localize';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        this.setState({\n            holidays,\n            weekends,\n        });\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <IconClear\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, footer, has_today_btn, start_date, holidays, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    weekends={weekends}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    has_today_btn={has_today_btn}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    holidays     : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","export * from './calendar-days.jsx';\nexport * from './calendar-months.jsx';\nexport * from './calendar-years.jsx';\nexport * from './calendar-decades.jsx';\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { padLeft }      from '_common/string_util';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr } from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    subDays,\n    subMonths,\n    toMoment }          from 'Utils/Date';\nimport CommonPropTypes  from './types';\nimport Tooltip          from '../../tooltip.jsx';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    holidays,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date = toMoment(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events      = !!events.length;\n        const is_closes_early = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message         = events.map(event => event.descrip)[0] || '';\n\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date)\n            || moment_date.isAfter(addDays(moment_start_date, 1)))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'  : is_active && !is_disabled,\n                    'calendar__cell--today'   : is_today,\n                    'calendar__cell--disabled': is_disabled,\n                    'calendar__cell--other'   : is_other_month,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day') }\n                data-date={date}\n            >\n                { ((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Tooltip\n                        alignment='top'\n                        className='calendar__cell-tooltip'\n                        classNameIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format: PropTypes.string,\n    holidays   : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport CommonPropTypes   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport { month_headers }    from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date         : PropTypes.string,\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","export default from './trading-time-picker.jsx';\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    isTimeValid,\n    minDate,\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    onChange,\n    server_time,\n    start_date,\n    start_time,\n}) => {\n    const moment_expiry                   = toMoment(expiry_date || server_time);\n    const moment_contract_start_date_time =\n        setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm')));\n    const expiry_date_time                = setTime(moment_expiry.clone(), moment_contract_start_date_time.clone().add(5, 'minute').format('HH:mm'));\n    const expiry_date_market_close        = setTime(expiry_date_time.clone(), market_close_times.slice(-1)[0]);\n    const is_expired_next_day             = expiry_date_time.diff(moment_contract_start_date_time, 'day') === 1;\n    const min_date_expiry                 = moment_contract_start_date_time.clone().startOf('day');\n    const expiry_time_sessions            = [{\n        open : is_expired_next_day ? expiry_date_time.clone().startOf('day') : expiry_date_time.clone(),\n        close: is_expired_next_day ? minDate(expiry_date_time.clone().subtract(10, 'minute'), expiry_date_market_close) : expiry_date_market_close.clone(),\n    }];\n\n    return (\n        <TimePicker\n            end_time={expiry_time_sessions[0].close}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={expiry_time_sessions[0].open}\n            value={expiry_time || min_date_expiry.format('HH:mm')}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n    start_date        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_time        : modules.trade.expiry_time,\n        market_close_times : modules.trade.market_close_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n    })\n)(TradingTimePicker);\n","export default from './time-picker.jsx';\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../input-field.jsx';\nimport { IconClock } from '../../../../Assets/Common/icon-clock.jsx';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            value,\n            name,\n            is_nativepicker,\n            placeholder,\n            start_time,\n            end_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <IconClock className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        start_time={start_time}\n                                        end_time={end_time}\n                                        value={value}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    value: PropTypes.string,\n};\n\nexport default observer(TimePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    value,\n    start_time,\n    end_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time ? toMoment(start_time) : toMoment();\n    const end_time_moment       = end_time ? toMoment(end_time) : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = value.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h).minute(minute);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment);\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, value, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, value, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange  : PropTypes.func,\n    preClass  : PropTypes.string,\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/input-field.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit: PropTypes.func,\n    duration_t        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n};\n\nexport default SimpleDuration;\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile-widget.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-container'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full-screen-dialog.jsx';\nimport TradeParams      from '../../Containers/trade-params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details-group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport IconTick     from 'Assets/Contract/icon-tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconError } from 'Assets/Common/icon-error.jsx';\nimport { localize }  from '_common/localize';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info-box-digit.jsx';\nexport InfoBoxExpired from './info-box-expired.jsx';\nexport InfoBoxGeneral from './info-box-general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit-display.jsx';\nimport InfoBoxExpired from './info-box-expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining-time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract-sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell-button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='btn--secondary btn--secondary--green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport classNames       from 'classnames';\nimport { IconError }    from 'Assets/Common/icon-error.jsx';\nimport { IconInfoBlue } from 'Assets/Common/icon-info-blue.jsx';\nimport { IconWarning }  from 'Assets/Common/icon-warning.jsx';\nimport { IconSuccess }  from 'Assets/Common/icon-success.jsx';\nimport CloseButton      from './close-button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }             from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                { data.type === 'ERROR'   && <IconError className='toast__icon-type' /> }\n                { data.type === 'INFO'    && <IconInfoBlue className='toast__icon-type' /> }\n                { data.type === 'SUCCESS' && <IconSuccess className='toast__icon-type' /> }\n                { data.type === 'WARNING' && <IconWarning className='toast__icon-type' /> }\n            </div>\n            <div className='toast__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({\n    children, is_contract_mode,\n    is_positions_drawer_on,\n}) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-positions-drawer': is_positions_drawer_on,\n            'app-contents--contract-mode'        : is_contract_mode,\n        })}\n    >\n        {/* Calculate height of user screen and offset height of header and footer */}\n        <Scrollbars\n            autoHide\n            style={{ height: 'calc(100vh - 83px)' }}\n        >\n            {children}\n        </Scrollbars>\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_positions_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ modules, ui }) => ({\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_language_dialog_visible,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_settings_dialog_on,\n    network_status,\n    togglePositionsDrawer,\n    toggleSettingsDialog,\n}) => (\n    <React.Fragment>\n        <div className='footer-links footer-links-left'>\n            {\n                is_logged_in &&\n                <TogglePositions\n                    is_positions_drawer_on={is_positions_drawer_on}\n                    togglePositionsDrawer={togglePositionsDrawer}\n                />\n            }\n        </div>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_language_visible={is_language_dialog_visible}\n                is_settings_visible={is_settings_dialog_on}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePositionsDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        network_status            : common.network_status,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network-status.jsx';\nexport * from './toggle-fullscreen.jsx';\nexport * from './toggle-positions.jsx';\nexport * from './toggle-settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport classNames        from 'classnames';\n\nconst IconPositions = ({ className }) => {\n    const IconType = (\n        <g fill='none' fillRule='evenodd'>\n            <path className='color1-fill color3-fill' fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2zM1 8.128V12.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V8.128l-2.804 1.557a2.5 2.5 0 0 1-1.214.315H5.018a2.5 2.5 0 0 1-1.214-.315L1 8.128zm0-1.144L4.29 8.81A1.5 1.5 0 0 0 5.018 9h5.964a1.5 1.5 0 0 0 .728-.189L15 6.984V3.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v3.484zM6.5 8a.5.5 0 0 1 0-1h3a.5.5 0 0 1 0 1h-3z' />\n        </g>\n    );\n\n    return (\n        <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n            {IconType}\n        </svg>\n    );\n};\n\nIconPositions.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPositions };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPositions } from 'Assets/Footer';\n\nconst TogglePositions = ({\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames('ic-positions', {\n        'active': is_positions_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n        >\n            <IconPositions />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings-dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames={{\n                    enter    : 'settings-dialog--enter',\n                    enterDone: 'settings-dialog--enter-done',\n                    exit     : 'settings-dialog--exit',\n                }}\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'settings-dialog__container--show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog__container', {\n            'settings-dialog__container--hide': this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-dialog__header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' classNameHeader='settings-dialog__tab-header' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs-item.jsx';\nexport * from './tabs-wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs-wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', `tab-container--${this.props.alignment}`);\n        const tab_header_class = (icon_name) => classNames(\n            this.props.classNameHeader,\n            'tab__header',\n            { 'tab__icon': icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment      : PropTypes.string,\n    classNameHeader: PropTypes.string,\n    list           : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings-chart.jsx';\nexport GeneralSettings  from './settings-general.jsx';\nexport LanguageSettings from './settings-language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings-control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='settings-dialog__tab-content'>\n        <div className='settings-dialog__chart-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconCountryFlag } from 'Assets/Common';\nimport { connect }         from 'Stores/connect';\nimport SettingsControl     from '../../Components/Elements/SettingsDialog/settings-control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='settings-dialog__tab-content'>\n        <div className='settings-dialog__general-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <IconCountryFlag\n                    className={'settings-dialog__language-flag'}\n                    type={(curr_language || 'EN').toLowerCase()}\n                />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language-dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport {\n    IconBack,\n    IconCountryFlag }  from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('settings-dialog__language-dialog-container', {\n        'settings-dialog__language-dialog-container--show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='settings-dialog__language-header' onClick={hide}>\n                <IconBack className='settings-dialog__arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='settings-dialog__language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='settings-dialog__language-row'>\n                            <a className='settings-dialog__language-link' href={getURL(key)} >\n                                <IconCountryFlag\n                                    className={'settings-dialog__language-row-flag settings-dialog__language-flag'}\n                                    type={key.replace(/(\\s|_)/, '-').toLowerCase()}\n                                />\n                                <span className='settings-dialog__language-name'>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { withRouter }  from 'react-router';\nimport { formatMoney } from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    DepositButton,\n    InstallPWAButton,\n    LoginButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    UpgradeButton }    from 'App/Components/Layout/Header';\nimport header_links    from 'App/Constants/header-links';\nimport { connect }     from 'Stores/connect';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    is_virtual,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-info__container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                className='acc-info__button'\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    is_virtual={is_virtual}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                                { !!(can_upgrade_to && is_virtual) &&\n                                <UpgradeButton className='acc-info__button' />\n                                }\n                                { !(is_virtual) &&\n                                <DepositButton className='acc-info__button' />\n                                }\n                            </React.Fragment>\n                            :\n                            <LoginButton className='acc-info__button' />\n                        }\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    can_upgrade_to           : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool,\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    is_virtual               : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func,\n    pwa_prompt_event         : PropTypes.object, // TODO: add click handler\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        can_upgrade_to           : client.can_upgrade_to,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        is_virtual               : client.is_virtual,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account-info.jsx';\nexport * from './deposit-button.jsx';\nexport * from './install-pwa-button.jsx';\nexport * from './login-button.jsx';\nexport * from './upgrade-button.jsx';\nexport * from './menu-links.jsx';\nexport * from './toggle-menu-drawer.jsx';\nexport * from './toggle-notifications-drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    is_virtual,\n    onClickUpgrade,\n    toggleDialog,\n}) => (\n    <div className='acc-info__wrapper'>\n        <div\n            className={classNames('acc-info', {\n                'acc-info--show'      : is_dialog_on,\n                'acc-info--is-virtual': is_virtual,\n            })}\n            onClick={toggleDialog}\n        >\n            <p\n                className='acc-info__id'\n                title={loginid}\n            >\n                {loginid}\n            </p>\n            {\n                typeof balance !== 'undefined' &&\n                <p className='acc-info__balance'>\n                    <span\n                        className={classNames('symbols', (currency || '').toLowerCase())}\n                    />\n                    {balance}\n                </p>\n            }\n            <IconArrow className='acc-info__select-arrow' />\n        </div>\n        <CSSTransition\n            in={is_dialog_on}\n            timeout={200}\n            classNames={{\n                enter    : 'acc-switcher__wrapper--enter',\n                enterDone: 'acc-switcher__wrapper--enter-done',\n                exit     : 'acc-switcher__wrapper--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='acc-switcher__wrapper'>\n                <AccountSwitcher\n                    is_visible={is_dialog_on}\n                    toggle={toggleDialog}\n                    is_upgrade_enabled={is_upgrade_enabled}\n                    onClickUpgrade={onClickUpgrade}\n                />\n            </div>\n        </CSSTransition>\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_virtual        : PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account-switcher.jsx';\n","import classNames               from 'classnames';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport { IconAccountsCurrency } from 'Assets/Header/AccountsCurrency';\nimport { IconLogout }           from 'Assets/Header/Drawer';\nimport { requestLogout }        from 'Services/index';\nimport { connect }              from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggle();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        requestLogout();\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n        // TODO: Once we allow other real accounts (apart from CR), assign correct title and group accounts into list with correct account title/types\n        // e.g - Real, Financial, Gaming, Investment\n\n        const main_account_title = localize('Real account');\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef}>\n                {\n                    // Make sure this block is not rendered if there are no real accounts\n                    !!(this.props.account_list.length > 0 && !(this.props.account_list[0].is_virtual)) &&\n                    <div className='acc-switcher__list-group'>\n                        <span className='acc-switcher__list-title'>\n                            {main_account_title}\n                        </span>\n                        {\n                            this.props.account_list.filter((accounts) => !accounts.is_virtual).map((account) => (\n                                <React.Fragment key={account.loginid}>\n                                    <div\n                                        className={classNames('acc-switcher__account', {\n                                            'acc-switcher__account--selected': (account.loginid === this.props.account_loginid),\n                                        })}\n                                        onClick={this.doSwitch.bind(this, account.loginid)}\n                                    >\n                                        <span className={'acc-switcher__id'}>\n                                            <IconAccountsCurrency\n                                                className={`acc-switcher__id-icon acc-switcher__id-icon--${account.icon}`}\n                                                type={account.icon}\n                                            />\n                                            {account.loginid}\n                                        </span>\n                                        <span className='acc-switcher__radio' />\n                                    </div>\n                                </React.Fragment>\n                            ))}\n\n                        {   // TODO: Add link to account opening page for upgrade or multi account page for new account.\n                            // Update text below for handling types of account to create :- e.g - Investment\n                            !!(this.props.is_upgrade_enabled && this.props.upgrade_info.can_open_multi) &&\n                            <div className='acc-switcher__new-account'>\n                                <span className='acc-switcher__new-account-title'>{localize('Add new account')}</span>\n                            </div>\n                        }\n                    </div>\n                }\n                <div className='acc-switcher__list--virtual'>\n                    <span className='acc-switcher__list-title'>\n                        {localize('Virtual account')}\n                    </span>\n                    <div\n                        className={classNames('acc-switcher__account', {\n                            'acc-switcher__account--selected': (this.props.virtual_loginid === this.props.account_loginid),\n                        })}\n                        onClick={this.doSwitch.bind(this, this.props.virtual_loginid)}\n                    >\n                        <span className={classNames('acc-switcher__id', 'acc-switcher__id--virtual')}>\n                            {this.props.virtual_loginid}\n                        </span>\n                        <span className='acc-switcher__radio' />\n                    </div>\n                </div>\n                { !!(this.props.is_upgrade_enabled && this.props.is_virtual) &&\n                <div className='acc-switcher__new-account'>\n                    <span className='acc-switcher__new-account-title'>{localize('Upgrade to Real Account')}</span>\n                </div>\n                }\n                <div className='acc-switcher__logout' onClick={this.handleLogout}>\n                    <span className='acc-switcher__logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='acc-switcher__logout-icon drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list          : PropTypes.array,\n    account_loginid       : PropTypes.string,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_upgrade_enabled    : PropTypes.bool,\n    is_virtual            : PropTypes.bool,\n    is_visible            : PropTypes.bool,\n    onClickUpgrade        : PropTypes.func,\n    toggle                : PropTypes.func,\n    togglePositionsDrawer : PropTypes.func,\n    upgrade_info          : PropTypes.object,\n    virtual_loginid       : PropTypes.string,\n};\n\nconst account_switcher = connect(\n    ({ client, ui }) => ({\n        account_list          : client.account_list,\n        account_loginid       : client.loginid,\n        is_logged_in          : client.is_logged_in,\n        is_virtual            : client.is_virtual,\n        switchAccount         : client.switchAccount,\n        upgrade_info          : client.upgrade_info,\n        virtual_loginid       : client.virtual_account_loginid,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","export * from './icon_accounts_currency.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconAccountsCurrency = ({ type, className }) => {\n    let IconCurrency;\n    if (type) {\n        switch (type) {\n            case 'aud':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#FFF'>\n                            <path d='M6.853 15.319l.674-.84-1.04.188-.362-1.008-.393 1.008-1.062-.188.675.821-.701.821 1.069-.168.36.988.393-.987 1.09.194zM14.819 16.06l.382-.475-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.606-.095.204.56.222-.56.618.111zM14.819 5.542l.382-.477-.59.107-.205-.57-.222.57-.603-.107.383.466-.397.465.606-.095.204.56.222-.56.618.11zM17.291 8.263l.382-.476-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11zM12.68 9.473l.382-.476-.59.107-.204-.572-.223.572-.602-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11z' />\n                        </g>\n                        <g fill='#283991'>\n                            <path d='M2.099 3.87c-.157.202-.307.41-.448.623h1.07L2.1 3.87zM7.26 9.993h.962l-.963-.962zM4.068 1.947c-.23.169-.45.348-.664.536l.664.663v-1.2zM3.105 9.993h.963V9.03zM9.993 0c-.948 0-1.864.135-2.734.382v2.764L9.993.412V0zM9.993 9.072V7.684H8.606zM.412 9.993l2.31-2.309H.272A10.004 10.004 0 0 0 0 9.994h.412zM8.605 4.493h1.388V3.105z' />\n                        </g>\n                        <g fill='#FFF'>\n                            <path d='M9.993 9.363v-.291L8.606 7.684h1.387v-.496H7.818zM2.722 4.493H1.65c-.107.162-.209.328-.307.497H3.45l-1.25-1.25a9.019 9.019 0 0 0-.1.13l.623.623zM4.068 9.03v.963h.497v-1.69l-1.69 1.69h.23zM7.26.382c-.168.047-.334.099-.497.155v3.336l3.23-3.23v-.23L7.26 3.146V.382zM4.05 7.684l.018-.017.48-.48H.401c-.048.165-.091.33-.13.497h2.45l-2.31 2.31h1.33l2.309-2.31z' />\n                            <path d='M.412 9.993l2.31-2.309-2.31 2.31zM9.993 4.99v-.497H8.605l1.388-1.388v-1.33L6.78 4.99z' />\n                            <path d='M9.993 3.105L8.605 4.493l1.388-1.388zM4.068 3.146l-.664-.663c-.235.207-.461.425-.676.653l1.34 1.34.014.015.483.482V1.605c-.169.11-.335.222-.497.342v1.2zM7.26 9.03l.962.963H9.49L6.763 7.266v2.727h.496z' />\n                        </g>\n                        <path d='M4.068 4.476l.034.034-.034-.034z' fill='#D32030' />\n                        <path d='M8.314 7.684l-.496-.496h2.175V4.99H6.78l-.016.017V4.99h.016l3.214-3.214V.643l-3.23 3.23V.537a9.957 9.957 0 0 0-2.198 1.068v3.368l.017.017h-.017v-.017l-.483-.482.003.002h-.017v-.017l-1.34-1.34c-.184.195-.36.396-.528.605L3.449 4.99H1.344a9.918 9.918 0 0 0-.942 2.198h4.145l.018-.018v.018h-.018l-.479.48v.017h-.017L1.74 9.993h1.134l1.69-1.69v1.69h2.198V7.266L9.49 9.993h.375c.043-.044.087-.089.129-.135v-.495l-1.68-1.679z' fill='#F44336' />\n                        <path fill='#D32030' d='M6.763 3.873l3.23-3.23zM4.092 7.709v-.042l-.041.042zM4.589 7.17l-.042.042h.042zM6.763 5.03l.04-.04h-.04zM4.068 4.517h.04l-.006-.007-.034-.034zM4.606 5.013l-.041-.04v.04z' />\n                    </g>\n                );\n                break;\n            case 'bch':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#8DC351' cx='10' cy='10' r='10' />\n                        <path d='M13.254 6.584c-.485-1.233-1.7-1.344-3.117-1.069l-.505-1.758-1.07.307.492 1.712c-.281.08-.568.169-.852.256L7.708 4.31l-1.07.306.504 1.758c-.23.071-.456.141-.678.205l-.002-.006-1.476.423.328 1.144s.786-.243.777-.224c.433-.124.646.087.75.292l.575 2.003a.951.951 0 0 1 .115-.025l-.113.032.804 2.807c.02.142.002.382-.3.47.017.008-.779.222-.779.222l.155 1.34 1.392-.4c.26-.074.516-.142.766-.213l.51 1.778 1.07-.306-.505-1.76c.287-.075.573-.155.858-.237l.501 1.752 1.07-.307-.508-1.775c1.77-.62 2.899-1.434 2.57-3.169-.263-1.396-1.077-1.82-2.169-1.772.53-.494.758-1.161.401-2.063zm-.406 4.231c.381 1.33-1.937 1.83-2.662 2.04l-.676-2.357c.725-.208 2.94-1.069 3.338.318v-.001zm-1.451-3.181c.346 1.21-1.592 1.612-2.196 1.785l-.613-2.137c.604-.173 2.447-.909 2.809.352z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'btc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#F7931A' cx='10' cy='10' r='10' />\n                        <path d='M14.493 8.762c.196-1.31-.802-2.014-2.165-2.484l.442-1.775-1.08-.269-.431 1.729c-.284-.072-.575-.138-.866-.204l.434-1.74-1.08-.269-.442 1.774c-.235-.053-.466-.106-.69-.162l.001-.006-1.49-.372-.287 1.154s.802.184.785.195c.437.11.516.399.503.629l-.504 2.022a.96.96 0 0 1 .113.035l-.115-.028-.706 2.833c-.054.132-.19.332-.496.256.012.016-.785-.196-.785-.196l-.536 1.237 1.406.35c.262.066.518.135.77.199l-.447 1.795 1.08.269.442-1.775c.295.08.581.153.861.223l-.441 1.767 1.08.27.447-1.792c1.842.349 3.227.208 3.81-1.458.47-1.341-.023-2.116-.992-2.62.706-.163 1.237-.627 1.38-1.587zm-2.469 3.462c-.333 1.342-2.592.616-3.325.434l.594-2.378c.733.183 3.08.545 2.731 1.944zm.335-3.48c-.305 1.22-2.185.6-2.794.447l.537-2.156c.61.152 2.574.435 2.257 1.708z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'dai':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle stroke='#F7B14A' strokeWidth='.625' cx='10' cy='10' r='9.688' />\n                        <path fill='#FFCC80' d='M3.75 10H10v6.25z' />\n                        <path fill='#FFB74D' d='M10 3.75v8.125L3.75 10z' />\n                        <path fill='#FFF' d='M5.625 10L10 5.625v2.5L8.125 10z' />\n                        <path fill='#F7C57B' d='M16.25 10H10v6.25z' />\n                        <path fill='#F7B14A' d='M10 3.75v8.125L16.25 10z' />\n                        <path fill='#FFF' d='M14.375 10L10 5.625v2.5L11.875 10z' />\n                    </g>\n                );\n                break;\n            case 'eth' :\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#EBF0F1' cx='10' cy='10' r='10' />\n                        <g fill='#12100B'>\n                            <path fillOpacity='.8' d='M10.311 2.5v10.353l4.686-2.715z' />\n                            <path fillOpacity='.45' d='M10.311 2.5l-4.686 7.638 4.686 2.718z' />\n                            <path fillOpacity='.8' d='M10.311 13.73v3.767L15 11.01z' />\n                            <path fillOpacity='.45' d='M10.311 17.497v-3.768L5.625 11.01z' />\n                            <path fillOpacity='.6' d='M10.311 12.858l4.686-2.72-4.686-2.093zM5.625 10.137l4.686 2.721V8.045z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'eur':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#F8D12E'>\n                            <path d='M9.976 1.733l.244.75h.789l-.639.464.244.75-.638-.464-.638.464.244-.75-.639-.464h.79zM9.976 15.894l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM13.862 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM16.514 5.604l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM16.577 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.639-.464h.79zM3.534 5.604l.244.75h.788l-.638.464.244.75-.638-.463-.638.463.243-.75-.638-.464h.79zM17.129 8.757l.243.75h.79l-.639.463.244.75-.638-.463-.639.464.244-.75-.638-.464h.789zM2.931 8.757l.244.75h.789l-.639.463.244.75-.638-.463-.638.464.244-.75-.638-.464h.788zM3.448 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.638-.464h.789zM13.977 14.942l.243.75h.79l-.639.464.244.75-.638-.464-.639.464.244-.75-.638-.464h.79zM6.215 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM5.928 14.894l.243.75h.79l-.639.464.244.75-.638-.464-.638.464.243-.75-.638-.464h.789z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'gbp':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <g fill='#283991'>\n                            <path d='M2.067 3.912a9.964 9.964 0 0 0-1.723 3.48h5.203l-3.48-3.48zM19.656 7.391a9.964 9.964 0 0 0-1.723-3.48l-3.48 3.48h5.203zM.344 12.609a9.965 9.965 0 0 0 1.723 3.48l3.48-3.48H.344zM16.088 2.067a9.964 9.964 0 0 0-3.48-1.723v5.203l3.48-3.48zM3.912 17.933a9.964 9.964 0 0 0 3.48 1.723v-5.203l-3.48 3.48zM7.391.344a9.965 9.965 0 0 0-3.48 1.723l3.48 3.48V.344zM12.609 19.656a9.965 9.965 0 0 0 3.48-1.723l-3.48-3.48v5.203zM14.453 12.609l3.48 3.48a9.964 9.964 0 0 0 1.723-3.48h-5.203z' />\n                        </g>\n                        <g fill='#F44336'>\n                            <path d='M19.915 8.696h-8.61V.085a10.1 10.1 0 0 0-2.61 0v8.61H.086a10.1 10.1 0 0 0 0 2.61h8.61v8.61a10.099 10.099 0 0 0 2.61 0v-8.61h8.61a10.099 10.099 0 0 0 0-2.61z' />\n                            <path d='M12.609 12.609l4.462 4.462c.205-.205.401-.42.588-.642l-3.82-3.82h-1.23zM7.391 12.609L2.93 17.07c.205.205.42.401.642.588l3.82-3.82v-1.23zM7.394 7.391L2.932 2.93c-.206.205-.401.42-.588.642l3.82 3.82h1.23zM12.609 7.391L17.07 2.93c-.205-.205-.42-.401-.642-.588l-3.82 3.82v1.23z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'ltc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#BFBBBB' cx='10' cy='10' r='10' />\n                        <path fill='#FFF' d='M6.517 12.009l-.892.346.43-1.724.902-.363L8.258 5h3.206l-.95 3.873.882-.357-.425 1.718-.892.357-.53 2.177h4.826L13.829 15H5.783z' />\n                    </g>\n                );\n                break;\n            case 'usd':\n                IconCurrency = (\n                    <g fill='none' fillRule='evenodd'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <path d='M12.18 1.833h3.583A9.951 9.951 0 0 0 10.578.018h-.308c.906.114 1.323.783 1.91 1.815zm.926 3.628h5.799a9.976 9.976 0 0 0-1.186-1.814h-5.066c.179.564.33 1.173.453 1.814zm6.839 3.629a9.913 9.913 0 0 0-.331-1.814h-6.19c.062.594.103 1.202.123 1.814h6.398zm-.345 3.629a9.885 9.885 0 0 0 .341-1.814h-6.24c-.022.612-.064 1.22-.127 1.814h6.025zm-6.789 3.629h4.865a9.985 9.985 0 0 0 1.203-1.815h-5.61a15.76 15.76 0 0 1-.458 1.815zm-2.818 3.627a9.845 9.845 0 0 0 5.698-1.812h-3.616c-.642 1.122-1.066 1.812-2.082 1.812z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M4.223 1.833h8.288C11.924.8 11.176.132 10.27.018h-.861a9.95 9.95 0 0 0-5.186 1.815zM2.268 3.647A9.983 9.983 0 0 0 1.082 5.46H13.73a15.962 15.962 0 0 0-.453-1.814H2.267zM.041 9.09h14.077c-.02-.612-.062-1.22-.124-1.814H.373A9.9 9.9 0 0 0 .04 9.09zm.346 3.629H13.99a25.53 25.53 0 0 0 .127-1.814H.046a9.87 9.87 0 0 0 .341 1.814zm.721 1.814a9.97 9.97 0 0 0 1.202 1.815h10.952c.18-.564.334-1.173.458-1.815H1.108zm8.462 5.433l.061.002c.12.004.24.007.362.007 1.016 0 1.845-.69 2.487-1.813H4.295a9.843 9.843 0 0 0 5.275 1.804z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M9.787.005A9.99 9.99 0 0 0 .043 9.093h9.744V.005z' fill='#283991' fillRule='nonzero' />\n                        <path fill='#EFEFEF' fillRule='nonzero' d='M2 5.65l.152.468h.493l-.399.289.152.468L2 6.585l-.4.29.153-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.399.289.152.468L2 8.238l-.4.29.153-.468-.399-.29h.493zM3.656 3.17l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.468-.399-.29h.494zm0 1.653l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.469-.399-.289h.494zm0 1.653l.152.468h.493l-.399.29.153.467-.399-.289-.399.29.152-.469-.399-.289h.494zM.742 7.701L.59 7.233l.398-.289H.496L.484 6.91a9.53 9.53 0 0 0-.148.507l.007-.005.399.29zM1.6 5.222l.4-.29.398.29-.152-.468.399-.29h-.493l-.153-.467-.152.468h-.182a9.409 9.409 0 0 0-.099.154l.187.135-.152.468zm2.056-2.769l.399.29-.153-.468.4-.29h-.286a9.92 9.92 0 0 0-.7.573l-.06.185.4-.29zm1.258-.537l.398-.29.4.29-.153-.468.399-.289h-.493l-.021-.063a9.895 9.895 0 0 0-.494.268l.116.084-.152.468zm.398.428l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm1.657-5.786l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.469-.399-.289h.493zm0 1.653l.152.468h.493l-.398.29.152.467-.4-.289-.398.29.152-.469-.399-.289h.493zM8.625.691l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.289h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494z' />\n                    </g>\n                );\n                break;\n            case 'ust':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M10 0c5.523 0 10 4.477 10 10s-4.478 10-10 10S0 15.524 0 10 4.477 0 10 0' fill='#53AE94' />\n                        <path d='M11.234 8.668V7.18h3.402V4.913H5.373V7.18h3.402v1.486c-2.765.127-4.844.675-4.844 1.331 0 .656 2.08 1.204 4.844 1.331v4.765h2.46v-4.765c2.76-.127 4.835-.675 4.835-1.33s-2.075-1.203-4.835-1.33m0 2.256c-.07.004-.426.025-1.22.025-.635 0-1.081-.018-1.239-.026v.002c-2.443-.108-4.266-.534-4.266-1.043 0-.509 1.824-.934 4.266-1.042v1.661c.16.011.618.038 1.25.038.758 0 1.14-.032 1.21-.038V8.84c2.437.109 4.257.534 4.257 1.042 0 .507-1.82.933-4.258 1.041' fill='#FFF' />\n                    </g>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'>\n            {IconCurrency}\n        </svg>\n\n    );\n};\n\nIconAccountsCurrency.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconAccountsCurrency };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst DepositButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Deposit')}\n        // TODO: Redirect to Deposit page in Cashier\n        // onClick={redirectToCashierDeposit}\n    />\n);\n\nDepositButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { DepositButton };\n","import classNames   from 'classnames';\nimport React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    className,\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className={classNames(className, 'btn--primary btn--primary--orange')}\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    className   : PropTypes.string,\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <div className='menu-links'>\n            {\n                items.map((item, idx) => (\n                    <BinaryLink key={idx} to={item.link_to}>\n                        <span title={item.text}>{item.icon}{item.text}</span>\n                    </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport UILoader           from 'App/Components/Elements/ui-loader.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='login-prompt__icon-svg disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu-drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer-item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <SwitchButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_positions_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePositionsDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_positions_drawer_on) {\n                        togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePositionsDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { EmptyNotification } from './empty-notification.jsx';\nimport { DrawerItem }        from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <EmptyNotification />\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    list: PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport { IconBell } from 'Assets/Header/NavBar';\n\nconst EmptyNotification = () => (\n    <div className='no-notifications-container'>\n        <div className='notification-message'>\n            <div className='bell-icon'>\n                <IconBell />\n            </div>\n            <div>\n                <h4>{localize('No Notifications')}</h4>\n                <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n            </div>\n        </div>\n    </div>\n);\n\nexport { EmptyNotification };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        // TODO: Combine portfolio and statement into reports page\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Reports'),\n        link_to: routes.statement,\n    },\n];\n\nexport default header_links;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial-of-service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='full-page-modal__dialog'>\n                    <h1 className='full-page-modal__header'>{title}</h1>\n                    <p className='full-page-modal__content'>{children}</p>\n                    <div className='full-page-modal__footer'>\n                        <div\n                            className='full-page-modal__button btn btn--flat effect btn--primary'\n                            onClick={onCancel}\n                        >\n                            <span className='full-page-modal__button-text'>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='full-page-modal__button btn btn--flat effect btn--primary'\n                            onClick={onConfirm}\n                        >\n                            <span className='full-page-modal__button-text'>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register-service-worker';\nexport { unregister } from './register-service-worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}