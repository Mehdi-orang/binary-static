{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/App/Middlewares/is_client_allowed_to_visit.js","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/Services/Helpers/switch_account.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/subscription_manager.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker_input.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_panel.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_logout","forEach","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_close","_icon_exclamation","_mobx","_utility","BaseStore","options","_initDefineProp","_descriptor","_descriptor2","root_store","local_storage_properties","session_storage_properties","validation_rules","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","freeze","observable","action","Button","_ref$className","className","has_effect","id","is_disabled","onClick","text","wrapperClassName","classes","button","_react2","default","disabled","wrapper","string","bool","func","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","_date_time","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","isProduction","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","_time$split","split","_time$split2","_slicedToArray","moment","utc","isNaN","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","symbol","contractsFor","then","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getExpiryDate","expiry_date","moment_start","moment_expiry","isBefore","isAfter","clone","add","getExpiryTime","start_time","expiry_time","_moment2","end_moment","end_time","isSameOrBefore","is_end_of_day","is_end_of_session","getSessions","option","getStartTime","getContractCategories","contract_types_list","Fieldset","header","icon","onMouseEnter","onMouseLeave","tooltip","field_left_class","_classnames2","_tooltip2","alignment","message","array","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","loading_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","Tooltip","icon_name","icon_class","data-tooltip","data-tooltip-pos","node","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","duration","unit","max","duration_maps","u","sort","b","from_unit","to_unit","duration_string","match","getExpiryType","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","floor","day","CalendarPanelTypes","calendar_date","calendar_view","date_format","isPeriodDisabled","max_date","min_date","selected_date","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","some","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","payout","theme","is_dark_mode_on","portfolio_drawer","is_portfolio_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","ASIANU","ASIAND","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","_icon_trade_types","InputField","error_messages","fractional_digits","helper","is_float","_ref$is_signed","is_signed","label","max_length","onChange","placeholder","prefix","required","has_error","has_valid_length","input","data-for","data-tip","maxLength","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","htmlFor","MobxPropTypes","arrayOrObservableArray","_fill_template","Localize","str","replacers","localized","fillTemplate","_icon_maximize","_icon_quick_portfolio","_icon_settings","_ui","_connect","_Date","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_ref2","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","parseInt","current_session","open","close","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","non_proposal_query_string_variable","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","isClientAllowedToVisit","isLoggedIn","IconClose","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","_PopConfirm","_is_client_allowed_to_visit","Purchase","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","_button2","stake","is_purchase_error","echo_req","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","contract_title","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","renderCards","_ref3","CalendarButton","is_hidden","TimePickerDropdown","selectOption","_this$props$value$spl","_this$props$value$spl2","prev_hour","prev_minute","is_type_selected","setState","last_updated_type","stopPropagation","resetValues","state","is_hour_selected","is_minute_selected","prevProps","prevState","_state","toggle","_props","preClass","start_moment_clone","_value$split","_value$split2","is_clearable","saveHourRef","is_enabled","saveMinuteRef","mm","TimePicker","toggleDropDown","is_open","handleChange","arg","saveRef","nodeName","wrapper_ref","target_element","handleClickOutside","contains","_props2","is_align_right","padding","prefix_class","readOnly","value_split","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_money2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","_toggle_button2","toggled","ToggleButton","toggle_style","_icon_logout","switchAccount","setLoginFlag","InkBar","inkbar_style","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","nextProps","is_main_drawer_on","is_notifications_drawer_on","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","footer","icon_link","drawer_component","_Types","ContractTypeCell","IconTradeType","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","subscriptions","forget_requested","subscription_id","dispatch","sub_id","stream_id","sub_info","subscribers","fnc","forgetStream","fncCallback","forgets_list","hasCallbackFunction","hasValues","request_obj","values_obj","every","isDeepEqual","callback","msg_types","types_to_forget","sub_ids","forget_all","client_store","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","isValidLoginid","ResponseHandlers","websiteStatus","ServerTime","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setBalance","setResidence","country","sendBuffered","country_code","email","flow","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","wait","stop","setError","is_available","site_status","availability","setCurrencies","showError","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","getBasicUpgradeInfo","upgrade_info","can_upgrade","can_open_multi","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","_Language","bound","is_socket_opened","currentLanguage","getAllowedLanguages","exclude_languages","getAll","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","computed","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","toMoment","epoch","convertToUnix","moment_obj","setTime","formatDate","daysFromTodayTo","diff","asDays","seconds","formatted_str","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","underlying","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","wsSubscribe","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","subtract","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","time_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor33","processNewValuesAsync","changeDurationValidationRules","query_string_values","updateQueryString","addToastMessage","setQueryParam","pickDefaultSymbol","_asyncToGenerator","_e$target","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","isCryptocurrency","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","values","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","getProposalInfo","setChartBarrier","query_params","param","duration_options","prepareTradeStore","runInAction","_callee5","_context5","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","set_query_string","getQueryParams","abrupt","_x","_x2","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","_proposal_response$ec","Currency","Duration","StartDate","currencies_list","t0","extendOrReplace","t1","getCurrenciesAsync","t2","sent","getMethodsList","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","source","new_values","_currency","default_currency","buildCurrenciesList","getDefaultCurrency","fiat","crypto","supported_currencies","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_date","obj_expiry_time","obj_duration_min_max","ask_price","returns","toFixed","display_value","new_req","createProposalRequestForContract","current_req","type_of_contract","obj_expiry","isSame","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_theme_wrapper2","_header2","_error_boundary2","_app_contents2","_routes2","_PortfolioDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","PortfolioDrawer","toggleDrawer","body_content","_empty_portfolio_message2","_portfolio_drawer_card2","portfolio-drawer--open","_simplebarReact2","togglePortfolioDrawer","IconArrow","IconBack","transform","IconBell","stroke","IconCashier","rx","IconHamburger","strokeLinecap","IconTrade","PortfolioDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","SmartChart","form_wrapper_class","Suspense","fallback","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","setWrapperRef","is_dialog_open","getDisplayText","_this$props","findInArray","getStyles","container_classes","tabIndex","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","ContractTypeItem","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","ContractInfo","icon_type","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","has_currency","amount_container_class","three-columns","_DropDown2","_input_field2","Dropdown","onKeyPressed","getItemFromValue","getValueFromIndex","curr_index","is_list_visible","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","onKeyDown","isArrayLike","Items","highlightedIdx","items","expiry_list","now_date","min_date_duration","max_date_duration","min_date_expiry","min_day","max_day","start_date_time","moment_now","new_min_day","new_max_day","moment_today","startOf","is_same_day","date_time","_start_time$split","_start_time$split2","moment_start_date_time","duration_unit_text","datepicker_footer","has_end_time","expiry","pop","endtime_container_class","has-time","_DatePicker2","is_read_only","has_today_btn","_time_picker2","DatePicker","is_datepicker_visible","is_close_btn_visible","onClickOutside","mainNode","updateDatePickerValue","onSelectCalendar","isValid","onChangeInput","clearDatePickerInput","calendar","resetCalendar","new_date","current_date","_this$props2","nativeEvent","defaultValue","_date_picker_input2","class_name","_Calendar2","onSelect","defaultProps","Calendar","DatePickerInput","_initialiseProps","_calendar_header2","navigators","calendarViews","_calendar_panel2","panelSelectors","_calendar_footer2","setToday","nextMonth","navigateTo","previousMonth","nextYear","previousYear","nextDecade","previousDecade","nextCentury","previousCentury","updateSelectedDate","month","updateSelected","year","decade","is_add","_props3","moment_date","dataset","is_before","is_after","formatted_date","_props4","default_date","_props5","now","_props6","start_of_period","endOf","CalendarFooter","_calendar_button2","role","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","CalendarPanel","_panels","calendar_panel","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","week_headers","days","dates","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","first_day","last_day","moment_min_date","moment_max_date","moment_selected","padLeft","moment_start_date","is_active","is_today","today","data-date","getDays","selected_month","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","data-month","selected_year","current_year","years","data-year","decades","min_year","max_year","range","_range$split","_range$split2","start_year","end_year","data-decade","last_digit_numbers","current_date_config","getOwnPropertyNames","acc","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","_icon_error2","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","last","SellInfo","_localize3","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","_close_button2","shape","CloseButton","ToastMessage","toast","_ToastMessage2","arrayOf","AppContents","app-contents--show-portfolio-drawer","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","NetworkStatus","_server_time2","TogglePortfolio","ToggleFullScreen","ToggleSettings","is_settings_visible","is_language_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_portfolio","_toggle_settings","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconQuickPortfolio","IconSettings","toggle_portfolio_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","LoginButton","ToggleNotificationsDrawer","_account_info","_install_pwa_button","_login_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","is_demo","account_title","getAccountTitle","account_type","AccountSwitcher","_account_switcher","_Drawer","_switch_account","_upgrade_button","makeAccountsList","getAllLoginids","is_virtual","getAccountInfo","account","accounts_toggle_btn","accounts_list","doSwitch","UpgradeButton","IconLogout","prompt","userChoice","choice_result","outcome","_InkBar2","_inkbar","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","offsetWidth","active_el","other_props","Switch","_route_with_sub_routes2","LoginPrompt","onSignup","_localize2","1_2","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","Notifications","_notifications","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","_Routes2","_client_base","getAccountOfType","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"7d6ce1dc0b6389303a7c\",\"account_password\":\"a6c66481410bef32f33a\",\"api_toke\":\"783f9678cb802f1785cc\",\"authorized_application\":\"b28df518facfc3e83023\",\"cashier_password\":\"b1abd4ceab63a78741eb\",\"contract\":\"c7468058147ce0d95439\",\"financial_assessment\":\"0b52323d5f49f9611598\",\"limits\":\"4694d62c62dac8238928\",\"login_history\":\"8e46f95b61ac74796ce8\",\"personal_details\":\"dc99844c02f9f655068e\",\"portfolio\":\"b8e74f996aa2704ba1ee\",\"self_exclusion\":\"73278245d9cc48bdfef6\",\"settings\":\"0de92fba198d3b85fd82\",\"statement\":\"e0515700f1a8077f0421\",\"vendors~smart_chart\":\"7442ab5abba60ac5ef83\",\"smart_chart\":\"6f07746afcce75e3e184\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([281,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {}\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties));\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}){\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules){\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n}\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","export * from './date_time';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import moment                    from 'moment';\nimport { localize }              from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }           from '_common/utility';\nimport { WS }                    from 'Services';\nimport { buildBarriersConfig }   from './barrier';\nimport { buildDurationConfig }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }         from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }          from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = time.split(':');\n        return moment.utc(isNaN(date) ? date : +date * 1000).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: getValidTime(sessions, buildMoment(start_date, start_time)),\n    });\n\n    const getExpiryDate = (expiry_date, start_date) => {\n        const moment_start  = moment.utc(start_date ? start_date * 1000 : undefined);\n        const moment_expiry = moment.utc(expiry_date || undefined);\n        // forward starting contracts should only show today and tomorrow as expiry date\n        const is_invalid = moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n        return {\n            expiry_date: (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD'),\n        };\n    };\n\n    // has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is after start time\n    const getExpiryTime = (sessions, start_date, start_time, expiry_date, expiry_time) => {\n        const start_moment = start_date ? buildMoment(start_date, start_time) : moment().utc();\n        const end_moment   = buildMoment(expiry_date, expiry_time);\n\n        let end_time = expiry_time;\n        if (sessions && !isSessionAvailable(sessions, end_moment)) {\n            end_time = getValidTime(sessions, end_moment, start_moment);\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n            const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n            end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n        }\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getExpiryDate,\n        getExpiryTime,\n        getSessions,\n        getStartTime,\n        getStartType,\n\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const field_left_class = classNames('field-info left', { icon }, icon);\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className='fieldset-header'>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && moment.utc(expiry_date).isAfter(moment(server_time).utc(), 'day');\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n","export default from './dropdown.jsx';\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport { isEmptyObject }   from '_common/utility';\nimport SubscriptionManager from './subscription_manager';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","export * from './icon_trade_types.jsx';\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    className,\n    error_messages,\n    fractional_digits,\n    helper,\n    is_disabled,\n    is_float,\n    is_signed = false,\n    label,\n    max_length,\n    name,\n    onChange,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const input =\n        <input\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-tip\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onChange={changeValue}\n            placeholder={placeholder || undefined}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value}\n        />;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                { input }\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.bool,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import moment from 'moment';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: moment.unix(option.open).utc(), close: moment.unix(option.close).utc() };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : moment.unix(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = moment.utc(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = moment.utc(),\n    start_moment           = moment.utc(),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, undefined, should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(should_only_check_hour ? session.open.clone().minute(0) : session.open, session.close, null, '[]')))\n);\n","// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'last_digit',\n    'start_date',\n    'symbol',\n];\n\nexport const non_proposal_query_string_variable = [\n    'contract_start_type',\n    'expiry_type',\n];\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import Client from '_common/base/client_base';\n\nexport const isClientAllowedToVisit = () => !Client.isLoggedIn() || Client.get('is_virtual') ||\n    Client.get('landing_company_shortcode') === 'costarica';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from '_common/localize';\nimport { isEmptyObject }          from '_common/utility';\nimport { PopConfirm }             from 'App/Components/Elements/PopConfirm';\nimport UILoader                   from 'App/Components/Elements/ui_loader.jsx';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Fieldset                   from 'App/Components/Form/fieldset.jsx';\nimport { connect }                from 'Stores/connect';\nimport { isClientAllowedToVisit } from 'App/Middlewares/is_client_allowed_to_visit';\nimport ContractInfo               from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox                 from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock               from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    barrier_count,\n    currency,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !isClientAllowedToVisit();\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green'\n                has_effect\n                text={localize('Purchase')}\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            />\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            barrier_count={barrier_count}\n                            contract_title={trade_types[type]}\n                            contract_type={type}\n                            currency={currency}\n                            proposal_info={info}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    barrier_count         : PropTypes.number,\n    currency              : PropTypes.string,\n    is_purchase_confirm_on: PropTypes.bool,\n    is_purchase_enabled   : PropTypes.bool,\n    is_purchase_locked    : PropTypes.bool,\n    is_trade_enabled      : PropTypes.bool,\n    onClickPurchase       : PropTypes.func,\n    onHoverPurchase       : PropTypes.func,\n    proposal_info         : PropTypes.object,\n    purchase_info         : PropTypes.object,\n    resetPurchase         : PropTypes.func,\n    togglePurchaseLock    : PropTypes.func,\n    trade_types           : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        barrier_count         : modules.trade.barrier_count,\n        currency              : modules.trade.currency,\n        is_purchase_enabled   : modules.trade.is_purchase_enabled,\n        is_trade_enabled      : modules.trade.is_trade_enabled,\n        onClickPurchase       : modules.trade.onPurchase,\n        onHoverPurchase       : modules.trade.onHoverPurchase,\n        resetPurchase         : modules.trade.requestProposal,\n        proposal_info         : modules.trade.proposal_info,\n        purchase_info         : modules.trade.purchase_info,\n        trade_types           : modules.trade.trade_types,\n        is_purchase_confirm_on: ui.is_purchase_confirm_on,\n        is_purchase_locked    : ui.is_purchase_lock_on,\n        togglePurchaseLock    : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ common, modules }) => ({\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nexport default function CalendarButton({ children, className, is_hidden, label, onClick }) {\n    return (\n        <React.Fragment>\n            { !is_hidden &&\n                <span\n                    type='button'\n                    className={className}\n                    onClick={onClick}\n                >\n                    {label}\n                    {children}\n                </span>\n            }\n        </React.Fragment>\n    );\n}\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n","import {\n    observer,\n    PropTypes as MobxPropTypes }      from 'mobx-react';\nimport moment                         from 'moment';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { localize }                   from '_common/localize';\nimport { isSessionAvailable }         from 'Stores/Modules/Trading/Helpers/start_date';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = moment(start_date * 1000 || undefined).utc();\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <input\n                                    ref={this.saveRef}\n                                    type='text'\n                                    readOnly\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.number,\n    value          : PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.number,\n    toggle      : PropTypes.func,\n    value       : PropTypes.string,\n    value_split : PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","export * from './icon_logout.jsx';\n","import GTM              from '_common/base/gtm';\nimport * as SocketCache from '_common/base/socket_cache';\nimport Client           from '_common/base/client_base';\n\n/**\n * Switch to the given loginid account.\n *\n * @param loginid\n */\nexport const switchAccount = (loginid) => {\n    if (!loginid || !Client.get('token', loginid)) {\n        return;\n    }\n    sessionStorage.setItem('active_tab', '1');\n    // set local storage\n    GTM.setLoginFlag('account_switch');\n    Client.set('cashier_confirmed', 0);\n    Client.set('accepted_bch', 0);\n    Client.set('loginid', loginid);\n    SocketCache.clear();\n    window.location.reload();\n};\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport Client              from '_common/base/client_base';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !Client.isLoggedIn()) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.alignment === 'left') {\n            this.setState({ is_this_drawer_on: nextProps.is_main_drawer_on });\n        } else if (this.props.alignment === 'right'){\n            this.setState({ is_this_drawer_on: nextProps.is_notifications_drawer_on });\n        }\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <IconPortfolio className='portfolio-empty__icon' />\n        <span className='portfolio-empty__text'>{localize('No open positions.')}</span>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n\n// TODO Remove the below comments\n/**\n * The below lines are not necessary anymore since we are using `defer` in script tags.\n * It tells the browser to download the scripts without blocking the HTML parsing and\n * execute them after parsing is completely finished in the order they appear in the HTML.\n * Please let me know if you think we need to listen to this two events; otherwise, I will remove them totally in the next PR.\n */\n\n// document.addEventListener('DOMContentLoaded', initApp);\n// window.addEventListener('pageshow', (e) => { // Safari doesn't fire load event when using back button\n//     if (e.persisted) {\n//         initApp();\n//     }\n// });\n","var map = {\n\t\"./ja\": 218,\n\t\"./ja.js\": 218\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 489;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import BinarySocket   from '_common/base/socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '_common/utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        // find corresponding id(s)\n        const sub_ids = Object.keys(subscriptions).filter(id => (\n            subscriptions[id].msg_type === msg_type &&\n            hasCallbackFunction(id, fncCallback)\n        ));\n\n        const forgets_list = [];\n        sub_ids.forEach((id) => {\n            if (match_values && !hasValues(subscriptions[id].request, match_values)) {\n                return;\n            }\n            const stream_id = subscriptions[id].stream_id;\n            if (stream_id && subscriptions[id].subscribers.length === 1) {\n                delete subscriptions[id];\n                forgets_list.push(forgetStream(stream_id));\n            } else {\n                // there are other subscribers, or for some reason there is no stream_id:\n                // (i.e. returned an error, or forget() being called before the first response)\n                subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        subscribe,\n        forget,\n        forgetAll,\n    };\n})();\n\nexport default SubscriptionManager;\n","import { action, flow }     from 'mobx';\nimport Client               from '_common/base/client_base';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!Client.isValidLoginid()) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== Client.get('loginid')) {\n                        requestLogout();\n                    } else {\n                        Client.responseAuthorize(response);\n                        setBalance(response.authorize.balance);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(response.authorize.country || Client.get('residence'));\n                        if (!Client.get('is_virtual')) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !Client.get('accepted_bch')) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    Client.set('email', response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            Client.set('residence', residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        Client.set('balance', balance);\n        client_store.balance = balance;\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action }   from 'mobx';\nimport { localize } from '_common/localize';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError(localize('Your web browser is out of date and may affect your trading experience. Proceed at your own risk.'));\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore();\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import { observable } from 'mobx';\nimport Client         from '_common/base/client_base';\nimport BaseStore      from './base_store';\n\nexport default class ClientStore extends BaseStore {\n    @observable balance;\n    @observable is_logged_in = !!Client.isLoggedIn();\n    @observable loginid      = Client.get('loginid');\n    @observable currency     = Client.get('currency') || '';\n    @observable upgrade_info = Client.getBasicUpgradeInfo();\n    @observable can_upgrade  = this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import {\n    action,\n    observable,\n}                          from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore();\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable,\n}                             from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport { WS }                 from 'Services';\nimport { localize }           from '_common/localize';\nimport { createChartBarrier } from './Helpers/chart_barriers';\nimport { createChartMarkers } from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo,\n}                             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract,\n}                             from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell,\n}                             from './Helpers/logic';\nimport BaseStore              from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const toMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nconst setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time.split(':');\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => moment(date || undefined, date_format).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = moment(date).utc().diff(moment().utc(), 'days');\n    return (!date || diff < 0) ? '' : diff + 1;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    onMount() {\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                      from 'mobx';\nimport moment                         from 'moment';\nimport Client                         from '_common/base/client_base';\nimport { WS }                         from 'Services';\nimport { formatStatementTransaction } from './Helpers/format_response';\nimport BaseStore                      from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @action.bound\n    clearTable() {\n        this.data            = [];\n        this.has_loaded_all  = false;\n        this.is_loading      = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to   && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            }\n        ).then(this.statementHandler);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const currency = Client.get('currency');\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction, currency));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    onMount() {\n        this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.clearTable();\n        this.clearDateFilter();\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject }                      from '_common/utility';\nimport Client                            from '_common/base/client_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    non_proposal_query_string_variable } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n    @observable currencies_list = {};\n    @observable currency        = Client.get('currency');\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '09:40';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = '12:30';\n    @observable sessions         = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n\n        if (Client.isLoggedIn) {\n            this.processNewValuesAsync({ currency: Client.get('currency') });\n        }\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user && /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...non_proposal_query_string_variable,\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type = response.echo_req.contract_type;\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n    }\n\n    @action.bound\n    onUnmount() {\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        param_object.sort();\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${param_object.toString()}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, query_string);\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall  : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low   : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch      : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end        : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay       : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian      : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd   : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call    : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put     : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low: { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize } from '_common/localize';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom', { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend             from 'extend';\nimport Client             from '_common/base/client_base';\nimport { isEmptyObject }  from '_common/utility';\nimport ContractTypeHelper from './contract_type';\n\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Currency      from '../Actions/currency';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n\n    if (!Client.get('currency') && isEmptyObject(store.currencies_list)) {\n        extendOrReplace(snapshot, await Currency.getCurrenciesAsync(store.currency));\n    }\n\n    getMethodsList(store, new_state).forEach((fnc) => {\n        extendOrReplace(snapshot, fnc(snapshot));\n    });\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    Duration.onChangeExpiry,\n    StartDate.onChangeStartDate,\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import { WS }            from 'Services';\nimport {\n    buildCurrenciesList,\n    getDefaultCurrency } from '../Helpers/currency';\n\nexport const getCurrenciesAsync = async(currency) => {\n    const response = await WS.payoutCurrencies();\n\n    const currencies_list  = buildCurrenciesList(response.payout_currencies);\n    const default_currency = getDefaultCurrency(currencies_list, currency);\n\n    return {\n        currencies_list,\n        ...(default_currency),\n    };\n};\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = (store) => {\n    const { contract_type, start_date, duration_unit, expiry_time } = store;\n    let { start_time, expiry_date } = store;\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_date = ContractType.getExpiryDate(expiry_date, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    const obj_expiry_time = ContractType.getExpiryTime(sessions, start_date, start_time, expiry_date, expiry_time);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n    };\n};\n","import moment                              from 'moment';\nimport { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport { convertToUnix }                   from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response) => {\n    const proposal = response.proposal || {};\n    const profit   = (proposal.payout - proposal.ask_price) || 0;\n    const returns  = profit * 100 / (proposal.ask_price || 1);\n\n    return {\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake    : proposal.display_value,\n        payout   : proposal.payout,\n        id       : proposal.id || '',\n        message  : proposal.longcode || response.error.message,\n        has_error: !!response.error,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = moment.utc(store.expiry_date);\n        const start_date  = moment.unix(store.start_date || (store.root_store.common.server_time / 1000)).utc();\n        const is_same_day = expiry_date.isSame(start_date, 'day');\n        const expiry_time = is_same_day ? store.expiry_time : '23:59:59';\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { isClientAllowedToVisit }  from 'App/Middlewares/is_client_allowed_to_visit';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Components/Elements/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal is_visible={!isClientAllowedToVisit()} />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport SimpleBar                      from 'simplebar-react';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                <div className='portfolio-drawer__header'>\n                    <span className='portfolio-drawer__icon-main ic-portfolio' />\n                    <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                    <div\n                        className='portfolio-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconClose />\n                    </div>\n                </div>\n                <div className='portfolio-drawer__body'>\n                    <SimpleBar style={{ height: '100%' }}>\n                        {body_content}\n                    </SimpleBar>\n                </div>\n            </div>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='8' width='10' height='1' rx='.5' />\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82l-2.137-1.71z' fillRule='nonzero' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' fillRule='nonzero' />\n                    </g>\n\n                );\n                break;\n            case 'call':\n                IconType = (\n                    <g fill='#2A3052'>\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82 3.812 8.11z' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' />\n                    </g>\n\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 6.75h-4v-1.5h4L4.5 4H6l1.5 2L6 8H4.5l1-1.25zM10.5 11.75h4v-1.5h-4l1-1.25H10l-1.5 2 1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M2.698 9.5H.218v-.537L1.36 7.762c.281-.32.422-.576.422-.764 0-.153-.033-.27-.1-.35-.067-.08-.163-.12-.29-.12a.362.362 0 0 0-.306.16.657.657 0 0 0-.117.4H.144A1.167 1.167 0 0 1 .762 6.05c.193-.104.41-.156.65-.156.383 0 .68.089.887.266.207.178.31.432.31.764 0 .14-.025.277-.077.41a1.793 1.793 0 0 1-.243.417 6.12 6.12 0 0 1-.531.584l-.46.53h1.4V9.5zM9.107 8.194h.47v.825h-.47V10h-1.07v-.98H6.252l-.064-.655 1.85-2.977v-.01h1.07v2.816zm-1.9 0h.83V6.772l-.066.108-.765 1.314zM15.205 5.894v.647h-.037c-.308 0-.56.074-.758.221a.933.933 0 0 0-.365.614.962.962 0 0 1 .703-.273c.308 0 .553.112.735.336.182.225.273.52.273.884 0 .226-.053.434-.16.623a1.141 1.141 0 0 1-.446.443c-.192.107-.404.16-.636.16-.253 0-.478-.058-.677-.172a1.183 1.183 0 0 1-.463-.492 1.62 1.62 0 0 1-.171-.738v-.33c0-.365.078-.695.235-.987.157-.292.381-.52.673-.687.291-.166.614-.249.97-.249h.124zm-.743 1.838a.47.47 0 0 0-.437.262v.246c0 .45.156.674.467.674.125 0 .23-.056.313-.168a.687.687 0 0 0 .126-.423.674.674 0 0 0-.128-.426.41.41 0 0 0-.34-.165z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 8.75H2v-1.5h3.5L4.5 6H6l1.5 2L6 10H4.5l1-1.25zM10.5 8.75H14v-1.5h-3.5l1-1.25H10L8.5 8l1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M2.041 9.5h-.825V6.873l-.81.237v-.625l1.56-.54h.075zM7.26 7.242h.505c.4 0 .6-.196.6-.587a.508.508 0 0 0-.143-.373c-.096-.096-.23-.145-.403-.145a.58.58 0 0 0-.37.124.378.378 0 0 0-.157.308h-1.07c0-.243.068-.46.203-.65.136-.191.323-.34.564-.446.24-.107.504-.16.792-.16.514 0 .918.117 1.212.352.294.234.441.557.441.968 0 .198-.06.386-.182.563a1.3 1.3 0 0 1-.532.43c.245.089.438.224.578.405.14.18.21.404.21.67 0 .414-.16.744-.477.991-.317.248-.734.371-1.25.371a2.05 2.05 0 0 1-.843-.172 1.32 1.32 0 0 1-.589-.48 1.246 1.246 0 0 1-.2-.696h1.076c0 .141.057.264.171.368a.605.605 0 0 0 .423.155.634.634 0 0 0 .45-.157.525.525 0 0 0 .168-.401c0-.233-.058-.398-.174-.495-.116-.098-.277-.146-.482-.146H7.26v-.797zM13.266 7.762l.217-1.817h2.078v.64h-1.409l-.08.706a.973.973 0 0 1 .23-.09c.096-.027.189-.04.28-.04.353 0 .625.105.814.314.19.209.285.502.285.88 0 .228-.051.434-.153.619a1.049 1.049 0 0 1-.428.426c-.184.1-.402.149-.652.149-.223 0-.432-.046-.628-.138a1.126 1.126 0 0 1-.459-.379.92.92 0 0 1-.163-.543h.825c.008.13.05.234.124.31a.395.395 0 0 0 .296.115c.277 0 .415-.205.415-.615 0-.38-.17-.569-.508-.569-.192 0-.335.062-.43.186l-.654-.154z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g transform='matrix(1 0 0 -1 0 16)' fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='#2A3052' fillRule='nonzero'>\n                        <path d='M9.839 9.87a.5.5 0 0 0 .707 0l2.019-2.019a.5.5 0 1 0-.707-.707l-1.666 1.665-3.794-3.793a.5.5 0 0 0-.707 0l-.454.454-.823-.824a.5.5 0 1 0-.707.708L4.884 6.53a.5.5 0 0 0 .707 0l.454-.454L9.839 9.87z' />\n                        <path d='M12.428 8.79a.5.5 0 1 0 1 0V6.667a.5.5 0 0 0-.5-.5h-2.12a.5.5 0 1 0 0 1h1.62v1.621zM3 11.7h10.5a.5.5 0 1 0 0-1H3a.5.5 0 1 0 0 1z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='stroke-white' d='M3 4h10.5' stroke='#2A3052' strokeLinecap='round' />\n                        <path d='M11.074 5.454a.5.5 0 0 0-.707-.708L5.924 9.191a.5.5 0 0 0 .041.744l.953.762-1.272 1.272a.5.5 0 0 0 .707.707l1.666-1.667a.5.5 0 0 0-.04-.744l-.953-.762 4.048-4.05z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M11.263 4.556l.034 3.944H10.282V6.26l-.676-.76H7.34v-.944z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='6.5' width='10' height='1' rx='.5' />\n                        <path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' fillRule='nonzero' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'put':\n                IconType = (\n                    <g fill='#2A3052'><path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconArrow }         from 'Assets/Common';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <IconArrow className='select-arrow' />\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst ContractInfo = ({\n    barrier_count,\n    contract_title,\n    contract_type,\n    currency,\n    proposal_info,\n}) => {\n    const icon_type = `${contract_type}${/^(call|put)$/i.test(contract_type) && barrier_count > 0 ? '_barrier' : ''}`.toLowerCase();\n\n    return (\n        <div className='box'>\n            <div className='left-column'>\n                <div className='type-wrapper'>\n                    <IconTradeType type={icon_type} className='type' />\n                </div>\n                <h4 className='trade-type'>{contract_title}</h4>\n            </div>\n            {(proposal_info.has_error || !proposal_info.id) ?\n                <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                    <span>{proposal_info.message}</span>\n                </div>\n                :\n                <div className='purchase-info-wrapper'>\n                    <span className='purchase-tooltip'>\n                        <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                    </span>\n                    <div className='info-wrapper'>\n                        <div>{localize('Stake')}:</div>\n                        <div><Money amount={proposal_info.stake} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Payout')}:</div>\n                        <div><Money amount={proposal_info.payout} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Net Profit')}:</div>\n                        <div><Money amount={proposal_info.profit} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Return')}:</div>\n                        <div>{proposal_info.returns}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    barrier_count : PropTypes.number,\n    contract_title: PropTypes.string,\n    contract_type : PropTypes.string,\n    currency      : PropTypes.string,\n    proposal_info : PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport Client                   from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }          from '_common/base/currency_base';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const has_currency = Client.get('currency');\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !has_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!has_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages = {validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={has_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis            : PropTypes.string,\n    basis_list       : MobxPropTypes.arrayOrObservableArray,\n    currencies_list  : PropTypes.object,\n    currency         : PropTypes.string,\n    is_minimized     : PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport SimpleBar         from 'simplebar-react';\nimport { IconArrow }     from 'Assets/Common';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex,\n}  from './helpers';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n            curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    onKeyPressed = (event) => {\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    tabIndex='0'\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            <SimpleBar style={{ 'height': '100%' }}>\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list-label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </SimpleBar>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''} ${highlightedIdx === idx ? 'highlighted' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport moment                   from 'moment';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Datepicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport { convertDurationUnit }  from 'Stores/Modules/Trading/Helpers/duration';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst expiry_list = [\n    { text: localize('Duration'), value: 'duration' },\n];\n\nlet now_date,\n    min_date_duration,\n    max_date_duration,\n    min_date_expiry,\n    min_day,\n    max_day,\n    start_date_time;\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n}) => {\n    if (duration_min_max[contract_expiry_type]) {\n        const moment_now  = moment(server_time);\n        const new_min_day = convertDurationUnit(duration_min_max[contract_expiry_type].min, 's', 'd');\n        const new_max_day = convertDurationUnit(duration_min_max[contract_expiry_type].max, 's', 'd');\n        if (!now_date || moment_now.date() !== now_date.date() || (duration_unit === 'd' && (min_day !== new_min_day || max_day !== new_max_day))) {\n            if (duration_unit === 'd') {\n                min_day = new_min_day;\n                max_day = new_max_day;\n            }\n\n            const moment_today = moment_now.clone().startOf('day');\n\n            now_date          = moment_now.clone();\n            min_date_duration = moment_today.clone().add(min_day || 1, 'd');\n            max_date_duration = moment_today.clone().add(max_day || 365, 'd');\n            min_date_expiry   = moment_today.clone();\n        }\n    }\n\n    const moment_expiry = moment.utc(expiry_date);\n    const is_same_day   = moment_expiry.isSame(moment(start_date * 1000 || undefined).utc(), 'day');\n    if (is_same_day) {\n        const date_time = moment.utc(start_date * 1000 || undefined);\n        if (start_date) {\n            const [ hour, minute ] = start_time.split(':');\n            date_time.hour(hour).minute(minute).second(0).add(5, 'minutes');\n        }\n        // only update start time every five minutes, since time picker shows five minute durations\n        const moment_start_date_time = moment.unix(start_date_time);\n        if (!start_date_time || moment_start_date_time.isAfter(date_time) || moment_start_date_time.clone().add(5, 'minutes').isBefore(date_time) ||\n            (moment_start_date_time.minutes() !== date_time.minutes() && date_time.minutes() % 5 === 0)) {\n            start_date_time = date_time.unix();\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n    const datepicker_footer = min_day > 1 ?\n        localize('The minimum duration is [_1] days', [min_day]) :\n        localize('The minimum duration is [_1] day',  [min_day]);\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_same_day,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        {duration_unit === 'd' && !is_nativepicker ?\n                            <Datepicker\n                                name='duration'\n                                min_date={min_date_duration}\n                                max_date={max_date_duration}\n                                mode='duration'\n                                onChange={onChange}\n                                value={duration || min_day}\n                                is_read_only\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                footer={datepicker_footer}\n                            /> :\n                            <InputField\n                                type='number'\n                                name='duration'\n                                value={duration}\n                                onChange={onChange}\n                                is_nativepicker={is_nativepicker}\n                                error_messages = {validation_errors.duration || []}\n                            />\n                        }\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <Datepicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable={false}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {is_same_day &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                value={expiry_time}\n                                placeholder='12:00'\n                                start_date={start_date_time}\n                                sessions={sessions}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time    : PropTypes.string,\n    expiry_type    : PropTypes.string,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    server_time    : PropTypes.object,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import classNames      from 'classnames';\nimport moment          from 'moment';\nimport React           from 'react';\nimport { IconArrow }   from 'Assets/Common';\nimport {\n    formatDate,\n    daysFromTodayTo }  from 'Utils/Date';\nimport DatePickerInput from './date_picker_input.jsx';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.PureComponent {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_close_btn_visible : false,\n    };\n\n    componentWillReceiveProps({ value, mode }) {\n        if (value === this.state.value) return;\n        this.updateDatePickerValue(value, mode);\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_close_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_close_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!moment.utc(value).isValid) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value), 'duration');\n        } else {\n            this.updateDatePickerValue(value);\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value, this.props.mode);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: '' }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value, mode) => {\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const { date_format, start_date } = this.props;\n        const new_date = (mode === 'duration') ? moment.utc().add(value, 'days').format(date_format) : value;\n        if (this.calendar && (moment.utc(new_date, date_format).isValid() || !new_date)) {\n            if (!new_date) {\n                const current_date = moment.utc(start_date).format(date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker-display'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker-native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker-native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                <div\n                    className='datepicker-display-wrapper'\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                >\n                    <DatePickerInput\n                        class_name='datepicker-display'\n                        mode={this.props.mode}\n                        name={this.props.name}\n                        placeholder={this.props.placeholder}\n                        onClick={this.handleVisibility}\n                        is_read_only={true}\n                        value={this.state.value}\n                    />\n                    <span\n                        className={classNames('picker-calendar-icon', {\n                            show: !this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.handleVisibility}\n                    />\n                    <span\n                        className={classNames('close-circle-icon', {\n                            show: this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.clearDatePickerInput}\n                    />\n                </div>\n                <div\n                    className={classNames('datepicker-calendar', {\n                        show: this.state.is_datepicker_visible,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    >\n                        <DatePickerInput\n                            class_name='calendar-input'\n                            mode={this.props.mode}\n                            name={this.props.name}\n                            onChange={this.onChangeInput}\n                            placeholder={this.props.placeholder}\n                            is_read_only={'is_read_only' in this.props ? this.props.is_read_only : false}\n                            value={this.state.value}\n                        />\n                    </Calendar>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...DatePickerInput.propTypes,\n    ...Calendar.propTypes,\n};\n\nexport default DatePicker;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nexport default function DatePickerInput(props) {\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            className={props.class_name}\n            readOnly={props.is_read_only}\n            placeholder={props.placeholder\n                || (props.mode === 'duration' ? localize('Select a duration') : localize('Select date'))}\n            onChange={props.onChange}\n            onClick={props.onClick}\n            value={props.value}\n        />\n    );\n}\n\nDatePickerInput.propTypes = {\n    class_name  : PropTypes.string,\n    id          : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    is_read_only: PropTypes.bool,\n    mode        : PropTypes.string,\n    name        : PropTypes.string,\n    onChange    : PropTypes.func,\n    onClick     : PropTypes.func,\n    placeholder : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number, // duration\n        PropTypes.string, // date\n    ]),\n};\n","export default from './calendar.jsx';\n","import moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\nimport CalendarPanel  from './calendar_panel.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = moment.utc(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    // navigates to next or previous's month/year/decade/century\n    navigators = {\n        nextMonth      : () => { this.navigateTo(1,   'months', true); },\n        previousMonth  : () => { this.navigateTo(1,   'months', false); },\n        nextYear       : () => { this.navigateTo(1,   'years',  true); },\n        previousYear   : () => { this.navigateTo(1,   'years',  false); },\n        nextDecade     : () => { this.navigateTo(10,  'years',  true); },\n        previousDecade : () => { this.navigateTo(10,  'years',  false); },\n        nextCentury    : () => { this.navigateTo(100, 'years',  true); },\n        previousCentury: () => { this.navigateTo(100, 'years',  false); },\n    };\n\n    // selects a day, a month, a year, or a decade\n    panelSelectors = {\n        date  : (e, is_disabled) => { this.updateSelectedDate(e, is_disabled); },\n        month : (e) => { this.updateSelected(e, 'month'); },\n        year  : (e) => { this.updateSelected(e, 'year'); },\n        decade: (e) => { this.updateSelected(e, 'decade'); },\n    };\n\n    // sets Calendar active view\n    calendarViews = {\n        date  : () => { this.setState({ calendar_view: 'date'   }); },\n        month : () => { this.setState({ calendar_view: 'month'  }); },\n        year  : () => { this.setState({ calendar_view: 'year'   }); },\n        decade: () => { this.setState({ calendar_view: 'decade' }); },\n    };\n\n    navigateTo = (value, unit, is_add) => {\n        const { date_format, max_date, min_date } = this.props;\n\n        let new_date = moment.utc(this.state.calendar_date, date_format)[is_add ? 'add' : 'subtract'](value, unit).format(date_format);\n\n        if (unit === 'months' && this.isPeriodDisabled(new_date, 'month')) return;\n\n        if (unit === 'years'  && this.isPeriodDisabled(new_date, 'years')) {\n            new_date = is_add ? max_date : min_date;\n        }\n\n        this.setState({ calendar_date: moment.utc(new_date, date_format).format(date_format) }); // formatted date\n    };\n\n    updateSelectedDate = (e, is_disabled) => {\n        if (is_disabled) {\n            return;\n        }\n\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = moment.utc(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(moment.utc(min_date));\n        const is_after    = moment_date.isAfter(moment.utc(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = moment.utc(this.state.calendar_date, this.props.date_format)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = moment.utc(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = moment().utc().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = moment.utc(date).startOf(unit);\n        const end_of_period   = moment.utc(date).endOf(unit);\n        return end_of_period.isBefore(moment.utc(min_date))\n            || start_of_period.isAfter(moment.utc(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, max_date, min_date, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    onClick={this.navigators}\n                    onSelect={this.calendarViews}\n                    calendar_view={calendar_view}\n                />\n                <CalendarPanel\n                    calendar_date={calendar_date}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    max_date={max_date}\n                    min_date={min_date}\n                    start_date={start_date}\n                    onClick={this.panelSelectors}\n                    selected_date={selected_date}\n                    calendar_view={calendar_view}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    onClick={this.setToday}\n                    has_today_btn={has_today_btn}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : moment(0).utc().format('YYYY-MM-DD'),              // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : moment().utc().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarFooter({ footer, has_today_btn, onClick }) {\n    return (\n        <div className='calendar-footer'>\n            { footer && <span className='calendar-footer-extra'>{footer}</span> }\n            { has_today_btn &&\n                <CalendarButton className='calendar-footer-btn'>\n                    <a role='button' onClick={onClick}>{localize('Today')}</a>\n                </CalendarButton>\n            }\n        </div>\n    );\n}\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n","import classNames     from 'classnames';\nimport moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarHeader({ calendar_date, isPeriodDisabled, onClick, onSelect, calendar_view }) {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = moment.utc(calendar_date);\n\n    return (\n        <div className='calendar-header'>\n            <CalendarButton\n                className={classNames('calendar-prev-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    (is_date_view || is_month_view) && onClick.previousYear())\n                    || (is_year_view   && onClick.previousDecade())\n                    || (is_decade_view && onClick.previousCentury()\n                    )\n                }\n            />\n            <CalendarButton\n                className={classNames('calendar-prev-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.previousMonth}\n            />\n\n            <div className='calendar-select'>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar-select-month-btn'\n                        is_hidden={!is_date_view}\n                        label={moment_date.format('MMM')}\n                        onClick={onSelect.month}\n                    />\n                }\n                <CalendarButton\n                    className='calendar-select-year-btn'\n                    onClick={() => ((is_date_view || is_month_view) ? onSelect.year() : onSelect.decade())}\n                >\n                    { (is_date_view || is_month_view) && moment_date.year() }\n                    { is_year_view   && `${moment_date.clone().subtract(1, 'years').year()}-${moment_date.clone().add(10, 'years').year()}`  }\n                    { is_decade_view && `${moment_date.clone().subtract(10, 'years').year()}-${moment_date.clone().add(109, 'years').year()}` }\n                </CalendarButton>\n            </div>\n\n            <CalendarButton\n                className={classNames('calendar-next-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.nextMonth}\n            />\n            <CalendarButton\n                className={classNames('calendar-next-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    ((is_date_view || is_month_view) && onClick.nextYear())\n                    || (is_year_view   && onClick.nextDecade())\n                    || (is_decade_view && onClick.nextCentury())\n                )}\n            />\n        </div>\n    );\n}\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    onClick         : PropTypes.object,\n    onSelect        : PropTypes.object,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nexport default function CalendarPanel(props) {\n    const calendar_panel = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <div className='calendar-panel'>\n            { calendar_panel[props.calendar_view] }\n        </div>\n    );\n}\n\nCalendarPanel.propTypes = {\n    calendar_view: PropTypes.string,\n};\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { padLeft }        from '_common/string_util';\nimport CalendarPanelTypes from './types';\n\nconst getDays = ({ calendar_date, date_format, max_date, min_date, start_date, onClick, selected_date }) => {\n    const dates = [];\n    const days  = [];\n    const moment_today       = moment().utc().startOf('day');\n    const moment_cur_date    = moment.utc(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const first_day          = moment_month_start.day();\n    const last_day           = moment_month_end.day();\n    const moment_min_date    = moment.utc(min_date);\n    const moment_max_date    = moment.utc(max_date);\n    const moment_selected    = moment.utc(selected_date);\n\n    for (let i = first_day; i > 0; i--) {\n        dates.push(moment_month_start.clone().subtract(i, 'day').format(date_format));\n    }\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    for (let i = 1; i <= 6 - last_day; i++) {\n        dates.push(moment_month_end.clone().add(i, 'day').format(date_format));\n    }\n\n    const moment_start_date = moment.unix(start_date).utc().startOf('day');\n    dates.map((date) => {\n        const moment_date = moment.utc(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = moment_date.isBefore(moment_min_date) || moment_date.isAfter(moment_max_date) ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) || moment_date.isAfter(moment_start_date.clone().add(1, 'day'))));\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar-date', {\n                    active  : is_active && !is_disabled,\n                    today   : is_today,\n                    disabled: is_disabled,\n                })}\n                onClick={(e) => { onClick.date(e, is_disabled); }}\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst week_headers = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar-date-panel'>\n            {week_headers.map((item, idx) => (<span key={idx} className='calendar-date-header'>{item}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { localize }       from '_common/localize';\nimport CalendarPanelTypes from './types';\n\nconst getMonthHeaders = () => ({\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n});\n\nexport const CalendarMonths = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const moment_date    = moment.utc(calendar_date);\n    const selected_month = moment.utc(selected_date).month();\n    const month_headers  = getMonthHeaders();\n\n    return (\n        <div className='calendar-month-panel'>\n            {Object.keys(month_headers).map((month, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-month', {\n                        active  : idx === selected_month,\n                        disabled: isPeriodDisabled(moment_date.month(month), 'month'),\n                    })}\n                    onClick={onClick.month}\n                    data-month={idx}\n                >\n                    {month_headers[month]}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarYears = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n    const current_year  = moment_date.year();\n    const years         = [];\n    for (let year = current_year - 1; year < current_year + 11; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar-year-panel'>\n            {years.map((year, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-year', {\n                        disabled: isPeriodDisabled(moment_date.year(year), 'year'),\n                        active  : year === selected_year,\n                    })}\n                    onClick={onClick.year}\n                    data-year={year}\n                >\n                    {year}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarDecades = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n\n    const decades = [];\n    let min_year  = moment_date.year() - 10;\n    for (let i = 0; i < 12; i++) {\n        const max_year = min_year + 9;\n        const range    = `${min_year}-${max_year}`;\n        decades.push(range);\n        min_year = max_year + 1;\n    }\n\n    return (\n        <div className='calendar-decade-panel'>\n            {decades.map((range, idx) => {\n                const [start_year, end_year] = range.split('-');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar-decade', {\n                            disabled: isPeriodDisabled(moment_date.year(start_year), 'year') && isPeriodDisabled(moment_date.year(end_year), 'year'),\n                            active  : start_year === selected_year,\n                        })}\n                        onClick={onClick.decade}\n                        data-decade={range}\n                    >\n                        {range}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Dropdown     from 'App/Components/Form/DropDown';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\n\nconst last_digit_numbers = [...Array(10).keys()].map(number => ({\n    text : number,\n    value: number,\n}));\n\nconst LastDigit = ({\n    is_minimized,\n    is_nativepicker,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            icon='digits'\n        >\n            <Dropdown\n                list={last_digit_numbers}\n                value={+last_digit}\n                name='last_digit'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    last_digit     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {!is_today &&\n                <React.Fragment>\n                    <TimePicker\n                        onChange={onChange}\n                        is_align_right\n                        name='start_time'\n                        value={start_time}\n                        placeholder='12:00'\n                        start_date={start_date}\n                        sessions={sessions}\n                        is_clearable={false}\n                        is_nativepicker={is_nativepicker}\n                    />\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized    : PropTypes.bool,\n    is_nativepicker : PropTypes.bool,\n    onChange        : PropTypes.func,\n    sessions        : MobxPropTypes.arrayOrObservableArray,\n    start_date      : PropTypes.number,\n    start_dates_list: MobxPropTypes.arrayOrObservableArray,\n    start_time      : PropTypes.string,\n};\n\nexport default observer(StartDate);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\n\nconst ErrorComponent = ({ type, message }) => (\n    <div className='error-container'>\n        <IconError type={type} />\n        <p>{message || localize('Sorry, an error occured while processing your request.')}</p>\n    </div>\n);\n\nErrorComponent.propTypes = {\n    message: PropTypes.string,\n    type   : PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import React from 'react';\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const wrapper   = replacers[pair_code];\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentWillMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport { connect }              from 'Stores/connect';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from '../../Components/Layout/Header';\nimport header_links             from '../../Constants/header_links';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ ui, client }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { IconArrow }       from 'Assets/Common';\nimport Client              from '_common/base/client_base';\nimport { localize }        from '_common/localize';\nimport { AccountSwitcher } from '../../Elements/AccountSwitcher';\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n}) => {\n    const is_demo       = (Client.get('is_virtual', loginid));\n    const account_title = Client.getAccountTitle(loginid);\n    const account_type  = !(is_demo) && currency ? account_title : localize('Demo');\n\n    return (\n        <div className='acc-balance'>\n            <div className='acc-switcher-container'>\n                <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                    <p className='acc-balance-type'>{localize('[_1] Account', [(account_type || '')])}</p>\n                    <p className='acc-balance-id'>{loginid}</p>\n                    <IconArrow className='select-arrow' />\n                </div>\n                <CSSTransition\n                    in={is_dialog_on}\n                    timeout={400}\n                    classNames='acc-switcher-wrapper'\n                    unmountOnExit\n                >\n                    <div className='acc-switcher-wrapper'>\n                        <AccountSwitcher\n                            is_visible={is_dialog_on}\n                            toggle={toggleDialog}\n                            is_upgrade_enabled={is_upgrade_enabled}\n                            onClickUpgrade={onClickUpgrade}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n            { typeof balance !== 'undefined' &&\n                <p className='acc-balance-amount'>\n                    <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                    {balance}\n                </p>\n            }\n        </div>\n    );\n};\n\nAccountInfo.propTypes = {\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Client            from '_common/base/client_base';\nimport { localize }      from '_common/localize';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services';\nimport { switchAccount } from 'Services/Helpers/switch_account';\nimport { UpgradeButton } from './upgrade_button.jsx';\n\nconst getAccountInfo = (loginid) => {\n    const currency     = Client.get('currency', loginid);\n    const is_virtual   = Client.get('is_virtual', loginid);\n    const account_type = !is_virtual && currency ? currency : Client.getAccountTitle(loginid);\n\n    return {\n        loginid,\n        is_virtual,\n        icon : account_type.toLowerCase(), // TODO: display the icon\n        title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n    };\n};\n\nconst makeAccountsList = () => Client.getAllLoginids().map(loginid => (\n    loginid !== Client.get('loginid') &&\n    !Client.get('is_disabled', loginid) &&\n    Client.get('token', loginid) ?\n        getAccountInfo(loginid) :\n        undefined\n)).filter(account => account);\n\nclass AccountSwitcher extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            accounts_list: makeAccountsList(),\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    doSwitch(loginid) {\n        this.props.toggle();\n        switchAccount(loginid);\n    }\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    render() {\n        if (!Client.isLoggedIn()) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.state.accounts_list.length > 0) &&\n                this.state.accounts_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={() => this.doSwitch(account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nexport { AccountSwitcher };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\nimport getRoutesConfig    from '../../Constants/routes_config';\n\nconst BinaryRoutes = () => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Client            from '_common/base/client_base';\nimport { localize }      from '_common/localize';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\nimport {\n    DrawerItem,\n    DrawerToggle }       from '../../Components/Elements/Drawer';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            { is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        { !!(Client.isLoggedIn() && is_mobile) &&\n            <div className='drawer-footer'>\n                <DrawerItem\n                    icon={<IconLogout className='drawer-icon' />}\n                    text={localize('Logout')}\n                    custom_action={() => {\n                        if (is_portfolio_drawer_on) {\n                            togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                        }\n                        requestLogout();\n                    }}\n                />\n            </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport { connect }                    from 'Stores/connect';\nimport ErrorComponent                 from '../../Components/Elements/Errors';\nimport BinaryRoutes                   from '../../Components/Routes';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes />;\n};\n\nRoutes.propTypes = {\n    error    : MobxPropTypes.objectOrObservableObject,\n    has_error: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ common }) => ({\n        error    : common.error,\n        has_error: common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React                from 'react';\nimport PropTypes            from 'prop-types';\nimport { getAccountOfType } from '_common/base/client_base';\nimport { localize }         from '_common/localize';\nimport URL                  from '_common/url';\nimport FullPageModal        from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize             from 'App/Components/Elements/localize.jsx';\nimport { switchAccount }    from 'Services/Helpers/switch_account';\n\nconst onConfirm = () => {\n    switchAccount(getAccountOfType('virtual').loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    is_visible: PropTypes.bool,\n};\nexport default DenialOfServiceModal;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    body               : PropTypes.string,\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}