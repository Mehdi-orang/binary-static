{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Stores/base-store.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui-loader.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/Services/ws-methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Assets/Common/icon-clock.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-error.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-blue.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Form/button-toggle-menu.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/Constants/date-time.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Containers/remaining-time.jsx","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-marker-helpers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query-string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon-back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-outline.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-question.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-red-dot.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-success.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-warning.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs-wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/switch-button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Constants/routes-config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract-type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm-element.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-price-move.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade-params.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route-with-sub-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty-portfolio-message.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/digits.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info-box.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon-flag.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network-monitor.js","webpack:///./src/javascript/app_2/Services/socket-general.js","webpack:///./src/javascript/app_2/Services/outdated-browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client-store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative-validation-rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common-store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-spot-label.jsx","webpack:///./src/javascript/app_2/Utils/Date/date-time.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-tick-markers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade-store.js","webpack:///./src/javascript/app_2/Utils/URL/url-helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract-type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui-store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base-name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar-today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-country-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minimize.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-plus.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-link.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/contract-type-cell.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon-trade-types.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-details.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-details-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./src/images/app_2/portfolio/ic-check.svg","webpack:///./src/images/app_2/portfolio/ic-cross.svg","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/helpers/duration-percentage.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close-button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast-message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app-contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server-time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network-status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-positions.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language-dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account-info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/index.js","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/icon_accounts_currency.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon-logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/deposit-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install-pwa-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/upgrade-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu-links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Routes/binary-link.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form-layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon-trade-categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/trade-categories.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message-box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase-lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/items.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/native-select.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/App/Components/Form/InputField/input-field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/increment-buttons.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/input.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-up.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-down.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/helpers.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/dialog.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/end-time.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number-selector.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile-widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-prediction.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit-display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit-spot.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-particles.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-pointer.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract-error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-expired.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-info.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill-template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-button.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-longcode.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/chart-close-btn.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon-contract-close.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button-link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login-prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app-config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle-drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-notifications-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/empty-notification.jsx","webpack:///./src/javascript/app_2/App/Constants/header-links.js","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-component.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial-of-service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register-service-worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_dateTime","forEach","_iconArrow","_iconBack","_iconCalendarToday","_iconCalendar","_iconChevronDoubleLeft","_iconChevronDoubleRight","_iconChevronLeft","_iconChevronRight","_iconCountryFlag","_iconClear","_iconClock","_iconClose","_iconError","_iconExclamation","_iconInfoBlue","_iconInfoOutline","_iconFlag","_iconMinimize","_iconMinus","_iconPlus","_iconQuestion","_iconRedDot","_iconSuccess","_iconWarning","Button","_ref$className","className","classNameSpan","has_effect","id","is_disabled","onClick","tabIndex","text","wrapperClassName","classes","_classnames2","default","effect","button","_react2","disabled","wrapper","node","string","bool","func","_logout","BinarySocketGeneral","WS","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_iconBell","_iconCashier","_iconHamburger","_iconPortfolio","_iconStatement","_iconTrade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_Date","_barrier","_duration","_startDate","_contract","ContractType","available_contract_types","available_categories","contract_types","trading_times","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","isTimeValid","split","_ref2","_slicedToArray","toMoment","ServerTime","getTradingTimes","_ref3","trading_times_response","submarkets","symbols","symbol","underlying","abrupt","sent","markets","echo_req","open","times","close","_x2","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","clone","add","isSameOrBefore","getExpiryTime","expiry_time","market_close_times","start_time","end_time","market_close_time","end_moment","expiry_sessions","minDate","diff","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getContractCategories","contract_types_list","Tooltip","state","show_tooltip_balloon_icon","onMouseEnter","setState","onMouseLeave","_props","alignment","classNameIcon","icon","message","icon_class","data-tooltip","data-tooltip-pos","IconInfoOutline","IconInfoBlue","tooltip__balloon-icon--show","IconQuestion","IconRedDot","getChartConfig","contract_info","start","date_start","end","date_expiry","granularity","calculateGranularity","chart_type","end_epoch","start_epoch","hour_to_granularity_map","duration","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","exit_tick","getEndSpotTime","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","Fieldset","header","is_center","fieldset_header_class","fieldset_info_class","array","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","unit","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","some","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","classNameBlock","loading_class","block_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","payout","theme","is_dark_mode_on","positions_drawer","is_positions_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","pushDataLayer","CommonPropTypes","calendar_date","isPeriodDisabled","selected_date","updateSelected","_fillTemplate","Localize","str","replacers","localized","fillTemplate","_drawerHeader","_drawerItem","_drawerItems","_drawer","_drawerToggle","_toggleDrawer","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","getContractTypeDisplay","ASIANU","ASIAND","CALL","CALLE","PUT","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYMISS","EXPIRYRANGE","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","_iconTradeTypes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","contract_id","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","is_forced","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","exit","spot","digit","IconClock","_ref$height","height","_ref$width","width","xmlns","fillRule","stroke","strokeLinecap","strokeLinejoin","IconError","transform","x","y","rx","_iconMaximize","_iconPositions","_iconSettings","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","IconClose","any","ButtonToggleMenu","buttons_arr","onChange","menu","val","idx","button-menu__button--active","_button2","selected_value","changeValue","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","week_headers_abbr","getDaysOfTheWeek","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","getDecade","moment_date","year","getCentury","_reactRouter","normalizePath","path","findRouteByPath","routes_config","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","_connect","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_ui","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","_digits","_logic","_markers","createMarkerConfig","marker_type","content_config","_extend2","MARKER_TYPES_CONFIG","marker_config","getSpotCount","spot_count","createMarkerExpiry","end_spot_time","LINE_END","createMarkerPurchaseTime","purchase_time","LINE_PURCHASE","createMarkerStartTime","LINE_START","createMarkerSpotEntry","SPOT_ENTRY","component_props","SPOT_MIDDLE","spot_value","spot_epoch","createMarkerSpotExit","align_label","SPOT_EXIT","createMarkerSpotMiddle","tick","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpotLabel","MarkerSpot","line_style","label","spot_className","chart-spot__spot--won","chart-spot__spot--lost","oneOf","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconBack","IconChevronLeft","classNamePath","IconChevronRight","IconSuccess","IconWarning","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabsItem","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","toggle","_switchButton2","toggled","SwitchButton","toggle_style","_iconLogout","_react","_reactRouterDom","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","routesConfig","route_default","component","Redirect","to","icon_component","IconPortfolio","exact","IconStatement","Trade","Contract","is_mobile","_contractTypeWidget2","_iconTradeCategories","_PopConfirm","_Types","Purchase","is_contract_mode","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","resetPurchase","togglePurchaseLock","purchase_info","proposal_info","info","is_purchase_error","purchase_button","stake","IconTradeType","returns","_money2","_fieldset2","_MessageBox2","_PurchaseLock2","_uiLoader2","_contractInfo2","has_increased","is_visible","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","_classNames","onConfirm","wrapperRef","popconfirm_class","IconExclamation","IconPriceMove","IconType","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","ui_store","renderCards","MobxPropTypes","arrayOrObservableArray","_login","_appConfig","Route","render","_loginPrompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","handleClickOutside","contains","is_open","drawer_bg_class","drawer--show","drawer_class","CSSTransition","in","classNames","enter","enterDone","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","_LastDigitPrediction","Digits","display_status","is_trade_page","is_ended","LastDigitPrediction","_InfoBox","InfoBox","onClickNewTrade","removeError","sell_info","box_class","ended","Contents","InfoBoxLongcode","_contractError2","error_message","onClickClose","_chartCloseBtn2","removeSellError","onCloseContract","IconFlag","color","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","upgrade_info","getBasicUpgradeInfo","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarativeValidationRules","input","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCrypto","isCryptocurrency","has_tooltip","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","has_error","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chartBarriers","_chartMarkers","_chartTickMarkers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","createChartBarrier","createChartMarkers","handleDigits","forgetProposalOpenContract","is_sell_requested","destroyChartTickMarkers","removeBarriers","removeMarkers","tick_count","createChartTickMarkers","extendObservable","handleSell","proposal_response","sold_for","transaction_id","getDetailsExpiry","getDetailsInfo","createBarriers","not_draggable","updateBarrierShade","_chartMarkerHelpers","marker_creators","markers","createMarker","_marker_creators","handleHoverToggle","show_label","has_hover_toggle","marker_spot","_markerSpot2","defaultProps","epochToMoment","epoch","isValid","isUTC","is_number","formatted_date","Date","setTime","moment_obj","convertToUnix","toGMTFormat","formatDate","date_format","daysFromTodayTo","startOf","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","addDays","num_of_days","addMonths","num_of_months","addYears","num_of_years","subDays","subMonths","subYears","date_1","date_2","getStartOfMonth","tick_marker_handler","tickMarker","getInstance","addSpotsFromHistory","addLines","destroyInstance","makeTickArr","price_arr","times_arr","arr","arrs","curr","zip","instance","tickMarkerHandler","_objectWithoutProperties","ticks_history_req","ticks_history","ticks_added_to_chart","addMarkerFromContract","markerConfigFn","labelTopOrBottom","prev_tick","isContractTick","addTickToChart","is_entry","isEntryTick","is_exit","isExitTick","is_middle","isMiddleTick","addMarkerFromTick","onTicksHistory","_data$history","prices","_ref4","_toArray","addTicks","fn","fnForEach","getContractId","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","is_sold_before_start","txt_start_time","txt_entry_spot","end_spot","indicative_price","is_user_sold","_formatResponse","positions","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","populateResultDetails","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","profit_loss","underlying_code","underlying_name","display_name","getPositionIndexById","contract_response","id_sell","transaction_ids","getDurationTime","getDurationUnitText","getDurationPeriod","unshift","clearTable","initializePortfolio","findIndex","purchase","portfolio_pos","active_positions","portfolioHandler","transactionHandler","parseFloat","details","longcode","getDurationUnitValue","obj_duration","duration_ms","asMilliseconds","unit_map","_chartBarrierStore","_chartMarkerStore","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_queryString","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validationRules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor36","changeDurationValidationRules","changeAllowEquals","delay","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","checked","is_equal_checked","is_over","processPurchase","onMount","openPositionsDrawer","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","obj_old_values","prev_currency","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","getProposalInfo","setChartBarrier","query_params","duration_options","hasCallPutEqual","contract_type_list","check_callput_equal_duration","contract_duration_list","rise_fall_equal","hasDurationForCallPutEqual","is_allow_equal","_ref6","_callee4","_context4","refresh","prepareTradeStore","_x4","runInAction","_callee6","_context6","_this9","query_string","URL","search","query_encoded","encodeURIComponent","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","start_moment_clone","_value$split","_value$split2","_proposal_response$ec","Duration","StartDate","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeStartDate","onChangeExpiry","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","market_open_times","createProposalRequestForContract","ask_price","display_value","contract_basis","obj_contract_basis","toFixed","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","getDurationFromUnit","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_baseName2","_header2","_errorBoundary2","_appContents2","_routes2","_PositionsDrawer2","_toastMessage2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","_ttReactCustomScrollbars","PositionsDrawer","onUnmount","active_contract_id","is_empty","onClickSell","onClickRemove","openContract","toggleDrawer","body_content","_emptyPortfolioMessage2","_positionsDrawerCard2","active_position","positions-drawer--open","positions-drawer--contract-mode","IconMinimize","Scrollbars","autoHide","removePositionById","onLoadContract","togglePositionsDrawer","IconArrow","_ref$is_bold","is_bold","fillOpacity","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconCountryFlag","IconCountry","xlinkHref","mask","strokeOpacity","IconClear","IconMinus","IconPlus","IconBell","IconCashier","IconHamburger","IconTrade","PositionsDrawerCard","percentage","getTimePercentage","positions-drawer-card__wrapper--active","_resultOverlay2","_contractLink2","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--red","_contractTypeCell2","_ProgressSlider2","ticks_count","has_result","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","btn--loading","_resultDetails2","contract_end_time","contract_start_time","ContractLink","ContractTypeCell","ProgressSlider","current_tick","_positionsProgressTicks2","_remainingTime2","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","ProgressTicks","arr_ticks","ticks__step--active","ticks__step--marked","ResultDetails","toggleDetails","result-details__wrapper--is-open","_resultDetailsItem2","result-details__toggle--is-open","ResultDetailsItem","ResultOverlay","positions-drawer-card__result--won","positions-drawer-card__result--lost","result__caption--won","result__caption--lost","_icCheck2","_icCross2","styles","_durationPercentage","duration_from_purchase","round","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","_closeButton2","shape","CloseButton","ToastMessage","toast","_ToastMessage2","arrayOf","AppContents","app-contents--show-positions-drawer","app-contents--contract-mode","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","TogglePositions","NetworkStatus","_serverTime2","ToggleFullScreen","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","gmt_time","_networkStatus","_toggleFullscreen","_togglePositions","_toggleSettings","_tooltip2","tooltip","network-status__circle--offline","class","network-status__circle--online","network-status__circle--blinker","onFullScreen","is_full_screen","fullscreen_map","element","toggleFullScreen","stopPropagation","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","IconMaximize","IconPositions","IconSettings","toggle_positions_class","ic-positions--active","toggle_settings_class","ic-settings--active","_settingsDialog2","_Tabs","_SettingsDialog","SettingsDialog","setWrapperRef","wrapper_ref","footer_settings_btn","settings_dialog_class","settings-dialog__container--show","settings_dialog_container_class","settings-dialog__container--hide","Tabs","classNameHeader","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabsWrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","icon_name","tab__icon","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settingsControl2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_languageDialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","settings-dialog__language-dialog-container--show","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","items","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","UpgradeButton","DepositButton","LoginButton","_accountInfo","_depositButton","_installPwaButton","_loginButton","_upgradeButton","_menuLinks","_toggleMenuDrawer","_toggleNotificationsDrawer","_AccountSwitcher","acc-info--show","acc-info--is-virtual","AccountSwitcher","_accountSwitcher","_AccountsCurrency","_Drawer","accounts_toggle_btn","handleLogout","account_loginid","real_accounts","vrt_account","main_account_title","acc-switcher__account--selected","doSwitch","IconAccountsCurrency","virtual_loginid","IconLogout","account_switcher","virtual_account_loginid","_icon_accounts_currency","IconCurrency","prompt","userChoice","choice_result","outcome","login_only","active_class","_routesConfig2","NavLink","activeClassName","SmartChart","form_wrapper_class","should_show_last_digit_stats","Suspense","fallback","_digits2","_infoBox2","onSymbolChange","updateChartType","updateGranularity","_test2","_formLayout2","is_contract_visible","Test","setVisibility","stateVisibility","container","fontSize","lineHeight","zIndex","background","padding","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","entries","v","FormLayout","_screenSmall2","_screenLarge2","ScreenLarge","sidebar__items--blur","_contractType2","_tradeParams2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","onSubmitButtonClick","handleInfoVisibility","handleInfoClick","handleNavigationClick","handleNextClick","navigationList","navigationLength","nextIndex","list_item","handlePrevClick","prevIndex","is_dialog_open","is_info_dialog_open","onWidgetClick","onBackButtonClick","getDisplayText","_this$props","findInArray","getNavigationList","contract-type-widget__display--clicked","IconTradeCategory","category","_contractTypeDialog2","_contractTypeList2","_tradeTypeInfoDialog2","_tradeTypeInfoItem2","IconCategory","ContractTypeDialog","_fullScreenDialog2","ContractTypeList","_contractTypeItem2","objectOrObservableObject","ContractTypeItem","TradeTypeInfoDialog","_tradeCategories","TradeTypeInfoItem","TradeCategories","trade-type-info-navigation__circle-button--active","TradeTypeTemplate","_popconfirm","_popconfirmElement","handleClose","handleOpen","popconfirm_element","cloneElement","_iconPriceMove","ContractInfo","trade-container__error","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_errorBalance","_errorGeneral","_errorLogin","_iconLock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_buttonToggleMenu2","_DropDown2","trade-container__currency-options","classNameDisplay","has_symbol","is_alignment_left","_InputField2","trade-container__amount--has-currency-options","classNameInlinePrefix","classNameInput","error_messages","fractional_digits","inline_prefix","is_autocomplete_disabled","is_float","is_incrementable","is_negative_disabled","max_length","_allowEquals2","observableObject","Dropdown","list_ref","createRef","curr_index","getItemFromValue","is_list_visible","onKeyPressed","is_single_option","getValueFromIndex","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","_nativeSelect2","left_alignment_style","list_width","isArrayLike","dropdown--left","dropdown--show","dropdown--disabled","dropdown__display--clicked","dropdown__display--has-symbol","onKeyDown","dropdown__select-arrow--left","onEntered","offsetWidth","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","renderThumbHorizontal","_items2","Items","list__item--selected","getCurrencyName","NativeSelect","isArray","InputField","classNamePrefix","data_tip","data_value","helper","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","_ref$is_unit_at_right","is_unit_at_right","max_value","min_value","placeholder","prefix","required","has_valid_length","max_is_disabled","min_is_disabled","getDecimals","array_value","incrementValue","increment_value","decimal_places","new_value","pow","calculateDecrementedValue","decrement_value","decrementValue","is_increment_input","_input2","signed_regex","is_not_completed_number","has_zero_at_end","is_scientific_notation","input--error","increment_buttons","_incrementButtons2","input_tooltip","with-label","htmlFor","IncrementButtons","Input","autoComplete","data-for","data-tip","data-value","maxLength","readOnly","AllowEquals","_Barriers","barrier_title","input_class","IconBarrierUp","IconBarrierDown","_iconBarrierUp","_iconBarrierDown","DurationWrapper","hasDurationUnit","duration_list","is_advanced_duration","du","new_duration_unit","new_duration_value","onChangeUiStore","onChangeMultiple","current_unit","advanced_duration_unit","simple_duration_unit","current_duration","simple_is_missing_duration_unit","current_duration_unit","has_missing_duration_unit","simple_is_not_type_duration","advanced_has_wrong_expiry","advanced_expiry_type","setDurationUnit","_duration2","duration_d","duration_h","duration_m","duration_s","duration_t","expiry_list","has_end_time","expiry","pop","duration_unit_text","changeDurationUnit","duration_value","shared_input","duration_name","number_input","has_toggle","_RangeSlider2","_advancedDuration2","number_input_props","shared_input_props","_simpleDuration2","_durationToggle2","new_trade_store_values","RangeSlider","first_tick","range-slider__error","steps","_tickSteps2","TickSteps","range-slider__ticks-step--active","range-slider__ticks-step--marked","DurationToggle","icon_className","advanced-simple-toggle__icon--active","AdvancedDuration","is_24_hours_contract","has_intraday_duration_unit","isSame","endtime_container_class","has-time","_DatePicker2","_TimePicker2","TradingDatePicker","max_date_duration","min_date_expiry","has_today_btn","moment_contract_start_date_time","max_daily_duration","daily","disable_year_selector","disable_trading_events","has_range_selection","min_date","max_date","DatePicker","date_value","holidays","is_datepicker_visible","is_clear_btn_visible","weekends","onClickOutside","mainNode","updateDatePickerValue","is_clearable","onSelectCalendar","onChangeInput","formatted_value","clearDatePickerInput","calendar","resetCalendar","new_date_value","new_date","current_date","_this$props2","renderInputField","_this$props3","initial_value","onChangeCalendarMonth","getTradingEvents","trading_events","events","dates","descrip","nativeEvent","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","_Calendar2","onSelect","duration_date","Calendar","_initialiseProps","calendar_view","hovered_date","_state","default_message","is_minimum","_calendarHeader2","navigateTo","switchView","_calendarBody2","onMouseOver","_calendarFooter2","setToday","view","start_of_month","getAttribute","updateSelectedDate","_props2","dataset","is_before","is_after","month","decade","_props3","default_date","_props4","now","_props5","start_of_period","endOf","_panels","CalendarBody","calendar_body","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendarDays","_calendarMonths","_calendarYears","_calendarDecades","days","moment_today","moment_cur_date","daysInMonth","moment_month_start","moment_month_end","moment_selected","padLeft","start_of_next_month","moment_start_date","moment_hovered","is_active","is_today","has_events","is_closes_early","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","getDays","moment_selected_date","data-month","_helper","_getDecade$split","_getDecade$split2","start_of_decade","end_of_decade","years","is_other_decade","data-year","decades","min_year","_decade$split","_decade$split2","is_other_century","data-decade","CalendarFooter","CalendarHeader","disable_month_selector","is_date_view","is_month_view","is_year_view","is_decade_view","century","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","_calendarButton2","calendar__nav--disabled","is_hidden","calendar__btn--disabled","CalendarButton","_endTime","TradingTimePicker","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","getBoundaries","selected_time","getSelectedTime","TimePicker","toggleDropDown","handleChange","arg","saveRef","nodeName","target_element","prefix_class","_dialog2","preClass","Dialog","start_time_moment","end_time_moment","milliseconds","to_compare_moment","_selected_time$split","_selected_time$split2","selectOption","current_value","prev_value","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","start_time_reset_minute","is_hour_enabled","is_minute_enabled","is_enabled","mm","getClosestTime","interval","market_open_time","SimpleDuration","has_label","filtered_arr","filterMinutesAndTicks","arr_five","_numberSelector2","arr_arr_numbers","selected_number","NumberSelector","arr_numbers","number-selector__selection--selected","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobileWidget2","MobileWidget","handleDialogClose","handleWidgetClick","display_array","from","getBarrier","num","querySelectorAll","offsetLeft","latest_digit","is_won","is_lost","_digitDisplay2","_lastDigitPointer2","_lastDigitParticles2","DigitDisplay","is_latest","is_selected","digits__digit--win","digits__digit--loss","_digitSpot2","_digit2","Digit","digits__digit-value--latest","digits__digit-value--selected","digits__digit-value--blink","digits__digit-value--win","digits__digit-value--loss","DigitSpot","digits__digit-spot-last--win","digits__digit-spot-last--loss","LastDigitParticles","digits__particles--explode","marginLeft","LastDigitPointer","digits__icon--win","digits__icon--loss","ContractError","_ref$message","InfoBoxExpired","InfoBoxGeneral","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","profit_percentage","percentage_text","_sellInfo2","_iconFlag2","SellInfo","_localize3","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","last","is_started","_contractSell2","ContractSell","_sellButton2","SellButton","sell_message","validation_error","ChartCloseBtn","_iconContractClose2","IconContractClose","Link","Switch","_routeWithSubRoutes2","LoginPrompt","onSignup","_localize2","3_2","website_name","ToggleDrawer","_menuDrawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer__parent-item--show","drawer_items_class","drawer__items--show","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","ToggleNotificationsDrawer","Notifications","_notifications","_emptyNotification","EmptyNotification","Routes","_Errors2","_Routes2","msg","onCancel","DenialOfServiceModal","_fullPageModal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,aAAA,GAGAZ,KAQA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAA,SAAAhC,GACA,IAAAiC,KAKAC,EAAA3B,EAAAP,GACA,OAAAkC,EAGA,GAAAA,EACAD,EAAAzB,KAAA0B,EAAA,QACK,CAEL,IAAAC,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACAJ,EAAA3B,EAAAP,IAAAqC,EAAAC,KAEAL,EAAAzB,KAAA0B,EAAA,GAAAC,GAGA,IAEAI,EAFAC,EAAAC,SAAAC,qBAAA,WACAC,EAAAF,SAAAG,cAAA,UAGAD,EAAAE,QAAA,QACAF,EAAAG,QAAA,IACArB,EAAAsB,IACAJ,EAAAK,aAAA,QAAAvB,EAAAsB,IAEAJ,EAAAM,IA3DA,SAAAjD,GACA,OAAAyB,EAAAyB,EAAA,KAAyCC,IAAA,MAAAC,iBAAA,mBAAAC,SAAA,WAAAC,uBAAA,yBAAAC,iBAAA,mBAAAC,SAAA,WAAAC,qBAAA,uBAAAC,OAAA,SAAAC,cAAA,gBAAAC,iBAAA,mBAAAC,UAAA,YAAAC,eAAA,iBAAAC,SAAA,WAAAC,UAAA,YAAAC,sBAAA,sBAAAC,YAAA,eAA4elE,OAAA,KAA6BmD,IAAA,uBAAAC,iBAAA,uBAAAC,SAAA,uBAAAC,uBAAA,uBAAAC,iBAAA,uBAAAC,SAAA,uBAAAC,qBAAA,uBAAAC,OAAA,uBAAAC,cAAA,uBAAAC,iBAAA,uBAAAC,UAAA,uBAAAC,eAAA,uBAAAC,SAAA,uBAAAC,UAAA,uBAAAC,sBAAA,uBAAAC,YAAA,wBAAsmBlE,GAAA,MA0DxpCmE,CAAAnE,GAEAuC,EAAA,SAAA6B,GAEAzB,EAAA0B,QAAA1B,EAAA2B,OAAA,KACAC,aAAAzB,GACA,IAAA0B,EAAAjE,EAAAP,GACA,OAAAwE,EAAA,CACA,GAAAA,EAAA,CACA,IAAAC,EAAAL,IAAA,SAAAA,EAAAM,KAAA,UAAAN,EAAAM,MACAC,EAAAP,KAAAQ,QAAAR,EAAAQ,OAAA3B,IACA4B,EAAA,IAAAC,MAAA,iBAAA9E,EAAA,cAAAyE,EAAA,KAAAE,EAAA,KACAE,EAAAH,KAAAD,EACAI,EAAAE,QAAAJ,EACAH,EAAA,GAAAK,GAEAtE,EAAAP,QAAAgF,IAGA,IAAAlC,EAAAmC,WAAA,WACA1C,GAAwBmC,KAAA,UAAAE,OAAAjC,KAClB,MACNA,EAAA0B,QAAA1B,EAAA2B,OAAA/B,EACAC,EAAA0C,YAAAvC,GAGA,OAAAP,QAAA+C,IAAAlD,IAIAR,EAAA2D,EAAAvE,EAGAY,EAAA4D,EAAA1D,EAGAF,EAAA6D,EAAA,SAAAzD,EAAA0D,EAAAC,GACA/D,EAAAgE,EAAA5D,EAAA0D,IACA9E,OAAAiF,eAAA7D,EAAA0D,GAA0CI,YAAA,EAAAC,IAAAJ,KAK1C/D,EAAAoE,EAAA,SAAAhE,GACA,oBAAAiE,eAAAC,aACAtF,OAAAiF,eAAA7D,EAAAiE,OAAAC,aAAwDC,MAAA,WAExDvF,OAAAiF,eAAA7D,EAAA,cAAiDmE,OAAA,KAQjDvE,EAAAwE,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAvE,EAAAuE,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAA3F,OAAA4F,OAAA,MAGA,GAFA5E,EAAAoE,EAAAO,GACA3F,OAAAiF,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAvE,EAAA6D,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIA3E,EAAA+E,EAAA,SAAA1E,GACA,IAAA0D,EAAA1D,KAAAqE,WACA,WAA2B,OAAArE,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAA6D,EAAAE,EAAA,IAAAA,GACAA,GAIA/D,EAAAgE,EAAA,SAAAgB,EAAAC,GAAsD,OAAAjG,OAAAC,UAAAC,eAAAC,KAAA6F,EAAAC,IAGtDjF,EAAAyB,EAAA,WAGAzB,EAAAkF,GAAA,SAAAC,GAA8D,MAApBC,QAAAhC,MAAA+B,GAAoBA,GAE9D,IAAAE,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAtG,KAAA+F,KAAAO,GACAA,EAAAtG,KAAAX,EACAiH,IAAAG,QACA,QAAA7G,EAAA,EAAgBA,EAAA0G,EAAAxG,OAAuBF,IAAAP,EAAAiH,EAAA1G,IACvC,IAAAU,EAAAkG,EAIAhG,EAAAR,MAAA,4CAEAU,iiBCzNAgG,EAAAzF,EAAA,QAIAA,EAAA,QACAA,EAAA,mnBAEA,IAAM0F,GAAuBC,UAAU,EAAMd,KAAK,EAAMe,KAAK,KAEhDC,6IAAqBC,yDAE1B,IAAMC,KAGAC,EAAaC,KAAKC,QAAQC,WAChC,GAAIH,EACA,IAAK,IAAMnB,KAAOmB,EACdD,EAAOlB,GAAOmB,EAAWnB,GAKjC,IAAK,IAAMA,KAAOoB,KAAKG,MAAMC,MACpBX,EAAmBb,KACpBkB,EAAOlB,GAAOoB,KAAKG,MAAMC,MAAMxB,IAIvC,OAAAyB,GACIH,WAAYJ,GACTA,cAIJQ,mBACHJ,WAAYK,UAAUxB,OACtByB,OAAYD,UAAUxB,OACtB0B,OAAYF,UAAUxB,OACtB5F,QAAYoH,UAAUxB,OACtB2B,GAAYH,UAAUxB,WAMjB4B,UAAU,SAACC,EAAYC,GAAb,OAAwB,SAAAC,GAC3C,IAAKD,EACD,OAJqB,SAACA,GAAD,OAAY,SAAAC,GAAA,OAAa,EAAAtB,EAAAuB,QAAOF,EAAP,EAAe,EAAArB,EAAAwB,UAASF,KAI/DG,CAAqBL,EAArBK,CAAiCH,GAG5C,IAAMI,GAAW,EAAA1B,EAAAwB,UAASF,GAEpBK,EAPkD,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,EAAAC,EAAAxB,KAAAmB,GAAA,QAAAM,EAAAC,UAAA9I,OAAA+I,EAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAP,EAAAC,EAAAO,EAAA9B,MAAAqB,EAAAF,EAAAY,WAAAhJ,OAAAiJ,eAAAb,IAAAjI,KAAAK,MAAA8H,GAAArB,MAAAiC,OAAAN,KAAAJ,EAQpDnB,MAAQ,IAAIQ,EARwCW,EAqBpDW,WACIxC,SAAUa,UAAUxB,QAtB4B+C,EAAAP,EAAAD,GAAA,OAAAa,EAAAhB,EAO1BL,GAP0BsB,EAAAjB,IAAAvC,IAAA,SAAAN,MAAA,WAWhD,OAAO+D,UAAMnH,cACTgG,EADGb,KAGIL,KAAKG,OACRC,MAAOJ,KAAKI,QAEhBJ,KAAKG,MAAMT,cAjBiCyB,EAAA,GA0BlDmB,EAAqBxB,EAAUyB,aAC9BzB,EAAUjD,MACTiD,EAAU0B,aAAe1B,EAAU0B,YAAY3E,MAChD,UAGP,OAFAsD,EAAgBoB,YAAhB,SAAuCD,GAEhC,EAAA9C,EAAAuB,QAAOF,EAAP,CAAeM,kGC7E1BpI,OAAA0J,KAAAC,GAAAC,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwE,EAAA9D,0GCAA7F,OAAA0J,KAAAG,GAAAD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0E,EAAAhE,qBACA7F,OAAA0J,KAAAI,GAAAF,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2E,EAAAjE,qBACA7F,OAAA0J,KAAAK,GAAAH,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4E,EAAAlE,qBACA7F,OAAA0J,KAAAM,GAAAJ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6E,EAAAnE,qBACA7F,OAAA0J,KAAAO,GAAAL,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA8E,EAAApE,qBACA7F,OAAA0J,KAAAQ,GAAAN,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+E,EAAArE,qBACA7F,OAAA0J,KAAAS,GAAAP,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAgF,EAAAtE,qBACA7F,OAAA0J,KAAAU,GAAAR,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAiF,EAAAvE,qBACA7F,OAAA0J,KAAAW,GAAAT,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAkF,EAAAxE,qBACA7F,OAAA0J,KAAAY,GAAAV,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAmF,EAAAzE,qBACA7F,OAAA0J,KAAAa,GAAAX,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAoF,EAAA1E,qBACA7F,OAAA0J,KAAAc,GAAAZ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAqF,EAAA3E,qBACA7F,OAAA0J,KAAAe,GAAAb,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAsF,EAAA5E,qBACA7F,OAAA0J,KAAAgB,GAAAd,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAuF,EAAA7E,qBACA7F,OAAA0J,KAAAiB,GAAAf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwF,EAAA9E,qBACA7F,OAAA0J,KAAAkB,GAAAhB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAyF,EAAA/E,qBACA7F,OAAA0J,KAAAmB,GAAAjB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0F,EAAAhF,qBACA7F,OAAA0J,KAAAoB,GAAAlB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2F,EAAAjF,qBACA7F,OAAA0J,KAAAqB,GAAAnB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4F,EAAAlF,qBACA7F,OAAA0J,KAAAsB,GAAApB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6F,EAAAnF,qBACA7F,OAAA0J,KAAAuB,GAAArB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA8F,EAAApF,qBACA7F,OAAA0J,KAAAwB,GAAAtB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+F,EAAArF,qBACA7F,OAAA0J,KAAAyB,GAAAvB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAgG,EAAAtF,qBACA7F,OAAA0J,KAAA0B,GAAAxB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAiG,EAAAvF,0FCvBA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMqK,EAAS,SAAA/C,GAWT,IAVF3B,EAUE2B,EAVF3B,SAUE2E,EAAAhD,EATFiD,iBASEhH,IAAA+G,EATU,GASVA,EARFE,EAQElD,EARFkD,cACAC,EAOEnD,EAPFmD,WACAC,EAMEpD,EANFoD,GACAC,EAKErD,EALFqD,YACAC,EAIEtD,EAJFsD,QACAC,EAGEvD,EAHFuD,SACAC,EAEExD,EAFFwD,KACAC,EACEzD,EADFyD,iBAEMC,GAAU,EAAAC,EAAAC,SAAW,OAASC,OAAQV,GAAcF,GACpDa,EACFC,EAAAH,QAAA/J,cAAA,UACIuJ,GAAIA,EACJH,UAAWS,EACXJ,QAASA,QAAWrH,EACpB+H,SAAUX,EACVE,SAAUA,GAAY,KAEtBQ,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAW,YAAaV,IAAiBM,GACzDnF,GAGH4F,EAAWF,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWQ,GAAmBK,GAEpD,OAAOL,EAAmBQ,EAAUH,GAGxCf,EAAOlC,WACHxC,SAAkBa,UAAUgF,KAC5BjB,UAAkB/D,UAAUiF,OAC5BhB,WAAkBjE,UAAUkF,KAC5BhB,GAAkBlE,UAAUiF,OAC5Bd,YAAkBnE,UAAUkF,KAC5Bd,QAAkBpE,UAAUmF,KAC5Bb,KAAkBtE,UAAUiF,OAC5BV,iBAAkBvE,UAAUiF,kBAGjBpB,oIC7CfrL,OAAA0J,KAAAkD,GAAAhD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAyH,EAAA/G,yFACOgH,gCACAC,kjBCFPC,EAAA/L,EAAA,GAOAgM,EAAAhM,EAAA,uDACAA,EAAA,MACAiM,EAAAjM,EAAA,mtBAOqBkM,KAuPhBC,SAAOC,QA2BPD,SAAOC,QAQPD,SAAOC,qBA7PR,SAAAF,IAA0B,IAAdG,EAAc1E,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,mGAAAF,CAAAxB,KAAAiG,GAAAI,EAAArG,KAAA,oBAAAsG,EAAAtG,MAAAqG,EAAArG,KAAA,mBAAAuG,EAAAvG,WAb1BwG,sBAAwB,KAaExG,KAZ1ByG,wBAA0B,KAYA,IAElBC,EAKAN,EALAM,WACAC,EAIAP,EAJAO,yBACAC,EAGAR,EAHAQ,2BACAC,EAEAT,EAFAS,iBACAC,EACAV,EADAU,WAmBJ,GAhBA/N,OAAOiF,eAAegC,KAAM,cACxB/B,YAAY,EACZ8I,UAAY,IAEhBhO,OAAOiF,eAAegC,KAAM,4BACxB/B,YAAY,EACZ8I,UAAY,IAEhBhO,OAAOiF,eAAegC,KAAM,8BACxB/B,YAAY,EACZ8I,UAAY,IAGqBJ,GAA4BA,EAAyB/N,QACnFgO,GAA8BA,EAA2BhO,OAE9B,CAC9B,IAAKkO,EACD,MAAM,IAAI1J,MAAM,oDAGpBrE,OAAOiF,eAAegC,KAAM,cACxB1B,MAAYwI,EACZ7I,YAAY,EACZ8I,UAAY,IAIpB/G,KAAK0G,WAA6BA,EAClC1G,KAAK2G,yBAA6BA,MAClC3G,KAAK4G,2BAA6BA,MAClC5G,KAAKgH,mBAAmBH,GAExB7G,KAAKiH,+BACLjH,KAAKkH,iCACLlH,KAAKmH,oEAUGC,GACR,IAAIC,GAAW,EAAAvB,EAAAwB,MAAKtH,MAapB,OAXK,EAAA+F,EAAAwB,eAAcvH,KAAK0G,cACpBW,EAASX,WAAa1G,KAAK0G,YAG3BU,GAAcA,EAAWxO,SACzByO,EAAWD,EAAWI,OAClB,SAAC/N,EAAQ+B,GAAT,OAAezC,OAAO0O,OAAOhO,EAAdiO,KAAyBlM,EAAI6L,EAAS7L,WAKtD6L,yDAQoB,IAAAM,EAAA3H,KACvBA,KAAK2G,yBAAyB/N,SAC9B,EAAAkN,EAAA8B,UACI,kBAAMD,EAAKhB,yBAAyBkB,IAAI,SAAAnP,GAAA,OAAKiP,EAAKjP,MAClD,kBAAMiP,EAAKG,cAAcH,EAAKhB,yBAA0BV,EAAU8B,SAASC,0EAUtD,IAAAzG,EAAAvB,KACzBA,KAAK4G,2BAA2BhO,SAChC,EAAAkN,EAAA8B,UACI,kBAAMrG,EAAKqF,2BAA2BiB,IAAI,SAAAnP,GAAA,OAAK6I,EAAK7I,MACpD,kBAAM6I,EAAKuG,cAAcvG,EAAKqF,2BAA4BX,EAAU8B,SAASE,yDAY3Eb,EAAYc,GACtB,IAAMb,EAAWc,KAAKC,UAAUpI,KAAKqI,YAAYjB,GAAa,SAACxI,EAAKN,GAChE,GAAc,OAAVA,EAAgB,OAAOA,IAI3B4J,IAAYjC,EAAU8B,SAASC,cAC/BM,aAAaC,QAAQvI,KAAK8G,WAAYO,GAC/Ba,IAAYjC,EAAU8B,SAASE,iBACtCO,eAAeD,QAAQvI,KAAK8G,WAAYO,iDAS1B,IAAAoB,EAAAzI,KACZ0I,EAA2BP,KAAKQ,MAAML,aAAaM,QAAQ5I,KAAK8G,gBAChE+B,EAA2BV,KAAKQ,MAAMH,eAAeI,QAAQ5I,KAAK8G,gBAElEO,OAAgBqB,EAA2BG,GAEjD9P,OAAO0J,KAAK4E,GAAU1E,QAAQ,SAACmG,GAAD,OAAOL,EAAKK,GAAKzB,EAASyB,wDAWjCC,EAAcC,GACrChJ,KAAKiJ,kBAAkBF,GAAgBC,+CAUZ,IAAAE,EAAAlJ,KAAZmJ,EAAYzH,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MAC3B3I,OAAO0J,KAAK0G,GAAOxG,QAAQ,SAAA/D,GACvBsK,EAAKE,QAAQxK,EAAKuK,EAAMvK,sCAYxBI,EAAUmK,GAAO,IAAAE,EAAArJ,KACrBA,KAAK6G,iBAAiB7H,GAAYmK,GAElC,EAAArD,EAAAwD,WAAUtJ,KAAMhB,EAAU,SAAAuK,GAEtB,OADAF,EAAKG,iBAAiBxK,EAAUuK,EAAOE,UAChCF,6CAYEvK,EAAUV,GAAO,IAAAoL,EAAA1J,KACxB2J,EAAmB3J,KAAK6G,iBAAiB7H,GAAU2K,QACnDC,OAAsB5K,OAAqB1B,IAAVgB,EAAsBA,EAAQ0B,KAAKhB,IACpE6H,OAAsB7H,EAAYgB,KAAK6G,iBAAiB7H,GAAUmK,WAElEQ,GAAW5Q,OAAOE,eAAeC,KAAK8G,KAAM2J,KAC9CC,EAAOD,GAAqB3J,KAAK2J,GACjC9C,EAAiB8C,GAAW3J,KAAK6G,iBAAiB8C,GAASR,WAG/D,IAAMU,EAAY,IAAIC,UAClBF,EACA/C,EACA7G,MAGJ6J,EAAUE,WAEVhR,OAAO0J,KAAKmH,GAAQjH,QAAQ,SAAA/D,GACxB8K,EAAKM,2BAA2BpL,EAAKiL,EAAUI,OAAO/L,IAAIU,sDAS1C,IAAAsL,EAAAlK,KACpBA,KAAKiJ,qBACLlQ,OAAO0J,KAAKzC,KAAK6G,kBAAkBlE,QAAQ,SAAAnH,GACvC0O,EAAKV,iBAAiBhO,EAAG0O,EAAK1O,8CAKtB2O,GAAU,IAAAC,EAAApK,KACtBA,KAAKwG,uBAAwB,EAAAV,EAAAuE,MACzB,kBAAMD,EAAK1D,WAAWlG,OAAO8J,2SADJC,CAAAC,mBAAAC,KAEzB,SAAAC,IAAA,IAAAjR,EAAA,OAAA+Q,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,IAEcpR,EAAS2Q,EAAK3D,6BACNhN,EAAOsR,MAA+B,mBAAhBtR,EAAOsR,KAHnD,CAAAH,EAAAE,KAAA,QAIYrR,EAAOsR,KAAK,WACRX,EAAK1D,WAAWlG,OAAOwK,kBACvBZ,EAAKa,gBAAgBb,EAAK3D,2BAN1CmE,EAAAE,KAAA,qBASkB,IAAI1N,MAAM,iEAT5B,OAAAwN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,UAca,EAAA5E,EAAAmF,iBACDhM,QAAQhC,MAARyN,EAAAM,IAfZ,yBAAAN,EAAAQ,SAAAV,EAAAN,IAAA,WAoBJpK,KAAKyG,wBAA0B0D,iDAKW,mBAA/BnK,KAAKwG,uBACZxG,KAAKwG,wBAETxG,KAAKyG,wBAA0B,yCAK/BzG,KAAKqL,kCAvRFtD,SAAWhP,OAAOuS,QACrBtD,cAAiB5J,OAAO,iBACxB6J,gBAAiB7J,OAAO,8DAG3BmN,oGAGAA,qGA2IArF,sIAiBAA,qIAWAA,kHAcAA,gHAiBAA,8HA4BAA,ubA/OgBD,oFChBrB,QAAAlM,EAAA,QACAA,EAAA,QACAA,EAAA,IACAyR,EAAAzR,EAAA,uDAEA,IAAM0R,EAAQ,SAAApK,GAMR,IALFqK,EAKErK,EALFqK,OACApH,EAIEjD,EAJFiD,UAIEqH,EAAAtK,EAHFuK,gBAGEtO,IAAAqO,EAHS,MAGTA,EAFFE,EAEExK,EAFFwK,SAEEC,EAAAzK,EADF0K,oBACEzO,IAAAwO,KACEE,EAAO,IACNN,IAAWA,EAAS,GAAKG,KAC1BG,EAAON,EAAS,EAAI,IAAM,KAG9B,IAAMO,EAAYC,KAAKC,IAAIT,GACrBU,EAAeL,GAAe,EAAAP,EAAAa,aAAYT,EAAUK,GAAW,GAAQA,EAE7E,OACI7G,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACKN,EACD5G,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAWX,EAAW,UAAtB,YAA6CsH,EAASW,iBACtEH,IAKbX,EAAMvJ,WACFwJ,OAAQnL,UAAUiM,WACdjM,UAAUkM,OACVlM,UAAUiF,SAEdlB,UAAc/D,UAAUiF,OACxBoG,SAAcrL,UAAUiF,OACxBqG,SAActL,UAAUkF,KACxBsG,aAAcxL,UAAUkF,gBAGbgG,8FCxCf1S,OAAA0J,KAAAiK,GAAA/J,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwO,EAAA9N,qBACA7F,OAAA0J,KAAAkK,GAAAhK,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAyO,EAAA/N,qBACA7F,OAAA0J,KAAAmK,GAAAjK,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0O,EAAAhO,qBACA7F,OAAA0J,KAAAoK,GAAAlK,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2O,EAAAjO,qBACA7F,OAAA0J,KAAAqK,GAAAnK,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4O,EAAAlO,qBACA7F,OAAA0J,KAAAsK,GAAApK,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6O,EAAAnO,gDCKA,IAAMoO,GACFC,aAAc,EACdC,YAAc,OAGZC,EAAyB,kBAC3BpU,OAAO0J,KAAKuK,GAAgBI,KAAK,SAAAC,GAAA,OAAU,IAAIC,OAAJ,IAAeD,EAAf,IAA0B,KAAKE,KAAKlO,OAAOmO,SAASC,aAE7FtC,EAAe,WACjB,IAAMuC,EAAc3U,OAAO0J,KAAKuK,GAAgBnF,IAAI,SAAAwF,GAAA,eAAmBA,EAAOM,QAAQ,IAAK,SAC3F,OAAO,IAAIL,OAAJ,KAAgBI,EAAYE,KAAK,KAAjC,KAA2C,KAAKL,KAAKlO,OAAOmO,SAASC,WAK1EI,EAAW,WACb,IAAIC,EAAS,KAEPC,EAAgB1O,OAAOiJ,aAAaM,QAAQ,iBAC5CoF,EAAgB,UAAUT,KAAKlO,OAAOmO,SAASS,UAsBrD,OArBIF,EACAD,EAASC,EACF,eAAeR,KAAKlO,OAAOmO,SAASU,OAAS7O,OAAOiJ,aAAaM,QAAQ,0BAChFvJ,OAAOiJ,aAAa6F,WAAW,yBAC/B9O,OAAOiJ,aAAaC,QAAQ,wBAAyB,GACrDuF,EAZsB,OAaf,wBAAwBP,KAAKlO,OAAOmO,SAASC,WACpDpO,OAAOiJ,aAAa6F,WAAW,yBAC/BL,EAAS,MAXS,GAYClV,QACnByG,OAAOiJ,aAAaC,QAAQ,wBAbV,IAclBuF,EAdkB,IAeX,aAAaP,KAAKlO,OAAOmO,SAASC,UACzCK,EAAS,KACFE,GACP3O,OAAOiJ,aAAa6F,WAAW,yBAC/BL,EAAS,QAETzO,OAAOiJ,aAAa6F,WAAW,yBAC/BL,EAASd,EAAeG,MAA6B,GAElDW,GA+CX1T,EAAOD,SACHgT,yBACAhC,eACA0C,WACAO,YAhDgB,kBA/BU,QA+BHP,KAiDvBQ,aA/CiB,WACjB,IAAIC,EAAajP,OAAOiJ,aAAaM,QAAQ,qBAC7C,IAAK0F,EAAY,CA+Bb,IAAMC,EAAgBlP,OAAOiJ,aAAaM,QAAQ,kBAC5C4F,EAAgBD,IAAY,OAAOhB,KAAKgB,GAG9CD,GAFsBnD,KAAkBqD,EAAU,QAAU,QAE5D,gBAEJ,eAAgBF,EAAhB,86BC/FJvU,EAAA,KACA0U,EAAA1U,EAAA,GACAgM,EAAAhM,EAAA,GAGA2U,EAAA3U,EAAA,IACA4U,EAAA5U,EAAA,IAIA6U,EAAA7U,EAAA,KACA8U,EAAA9U,EAAA,IAGA+U,EAAA/U,EAAA,KAGAgV,EAAAhV,EAAA,6HAKA,IAAMiV,EAAgB,WAClB,IAAIC,KACAC,KACAC,SACEC,KAiGAC,EAAwB,SAACvT,GAA+B,IAArBwT,EAAqB5N,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MAE1D,OADA4N,EAAYxT,EAASyT,eAAiBzT,EAAS0T,iBACxCF,GAGLG,EAAuB,SAACC,EAAgBpR,GAAjB,OACU,IAAnCoR,EAAeC,QAAQrR,GAAgBA,EAAQoR,EAAe,IAqC5DE,EAAgB,SAACC,GAAD,OAAeC,iBAAkB,WAAY,UAA9B7N,OAAA8N,EAA2CZ,EAAeU,GAAQG,eAEjGC,EAAuB,SAACV,EAAeW,GAAhB,OACzBC,qBAAqB,EAAApK,EAAAqK,kBAAiBnB,GAA2BM,EAAe,SAAU,YAAa,gBAAiBW,UAGtHG,EAAkB,SAACC,EAAef,EAAeW,GACnD,IACMK,KAKN,QANuB,EAAAxK,EAAAqK,kBAAiBnB,GAA2BM,EAAe,SAAU,YAAa,gBAAiBW,SAE3GvN,QAAQ,SAAA6N,GACnBD,EAAUzX,KAAK0X,EAAIlS,UAInBgS,cAAeb,EAAqBc,EAAWD,KAIjDG,EAAoB,SAAClB,EAAeW,EAAqBQ,GAC3D,IAAIC,GAAmB,EAAA5K,EAAAqK,kBAAiBnB,GAA2BM,EAAe,SAAU,YAAa,UAAWW,QAMpH,OAJIQ,IACAC,EAAmBA,EAAiBD,SAG/BC,qBAKPC,EAAe,SAACC,GAAD,OAEjBX,oBAAqBW,IAAeC,OAAO,GAAK,OAAS,YAGvDC,EAAgB,SAACxB,EAAeyB,GAClC,IAAMC,GAAmB,EAAAlL,EAAAqK,kBAAiBnB,GAA2BM,EAAe,WAC9E2B,KAaN,OAXID,EAAOE,UAEPD,EAAiBpY,MAAO+L,MAAM,EAAA4J,EAAA2C,UAAS,OAAQ9S,MAAOwS,OAAO,KAE7DG,EAAOI,wBACPH,EAAiBpY,KAAjBS,MAAA2X,EAAAnB,EAAyBkB,EAAOI,0BAM3BR,WAHUK,EAAiB9D,KAAK,SAAAkE,GAAA,OAAQA,EAAKhT,QAAU0S,IAC5DA,EAAqBE,EAAiB,GAAG5S,MAExB4S,qBAUnBK,KAAUtP,OAAA8N,EAAInO,MAAM,IAAIa,SAAQoF,IAAI,SAAC2J,GAAD,OAAK,IAAIA,GAAIjS,OAAO,KACxDkS,KAAUxP,OAAA8N,EAAInO,MAAM,IAAIa,SAAQoF,IAAI,SAAC2J,GAAD,OAAK,IAAQ,EAAJA,GAAQjS,OAAO,KAE5DmS,EAAe,SAACC,EAAUC,EAAgBC,GAW5C,OAVIF,KAAa,EAAA7C,EAAAgD,oBAAmBH,EAAUC,KAE1CA,EAAeG,OAAON,EAAQrE,KAAK,SAAA1P,GAAA,OAAK,EAAAoR,EAAAgD,oBAAmBH,EAAUC,EAAeG,OAAOrU,OAAQkU,EAAeI,OAAO,QAEpH,EAAAlD,EAAAgD,oBAAmBH,EAAUC,KAC9BA,EAAeG,OAAO,GACtBH,EAAeK,KAAKV,EAAMnE,KAAK,SAAA8E,GAAA,OAAK,EAAApD,EAAAgD,oBAAmBH,EAAUC,EAAeK,KAAKC,GAAIL,GAAc,MAAUD,EAAeI,OAAO,OACvIJ,EAAeG,OAAON,EAAQrE,KAAK,SAAA1P,GAAA,OAAK,EAAAoR,EAAAgD,oBAAmBH,EAAUC,EAAeG,OAAOrU,OAAQkU,EAAeI,OAAO,SAG1HJ,EAAeI,OAAO,UAG3BG,EAAc,SAACC,EAAMC,GAAS,IAAAhR,GACP,EAAAsN,EAAA2D,aAAYD,GAAQA,EAAKE,MAAM,MAAQ,EAAG,GADnCC,EAAAC,EAAApR,EAAA,GACxB4Q,EADwBO,EAAA,GAClBT,EADkBS,EAAA,GAEhC,OAAO,EAAA7D,EAAA+D,UAASN,GAAQO,UAAWzU,OAAO+T,KAAKA,GAAMF,OAAOA,IAO1Da,aAAA,IAAAC,2RAAAtI,CAAAC,mBAAAC,KAAkB,SAAAC,EAAO0H,GAAP,IAAAU,EAAApa,EAAAqa,EAAAnZ,EAAAoZ,EAAAlK,EAAAmK,EAAaC,EAAbxR,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAA0B,KAA1B,OAAA8I,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACfsH,EADe,CAAAxH,EAAAE,KAAA,eAAAF,EAAAuI,OAAA,uBAKdf,KAAQhD,EALM,CAAAxE,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAMqBjF,KAAG+M,gBAAgBR,GANxC,OAQhB,GAFMU,EANUlI,EAAAwI,MAQZ,EAAArN,EAAAqK,kBAAiB0C,GAAyB,gBAAiB,YAC3D,IAASpa,EAAI,EAAGA,EAAIoa,EAAuB1D,cAAciE,QAAQza,OAAQF,IAErE,GADMqa,EAAaD,EAAuB1D,cAAciE,QAAQ3a,GAAGqa,WAE/D,IAASnZ,EAAI,EAAGA,EAAImZ,EAAWna,OAAQgB,IAEnC,GADMoZ,EAAUD,EAAWnZ,GAAGoZ,QAE1B,IAASlK,EAAI,EAAGA,EAAIkK,EAAQpa,OAAQkQ,IAC1BmK,EAASD,EAAQlK,GAClBsG,EAAc0D,EAAuBQ,SAASlE,iBAC/CA,EAAc0D,EAAuBQ,SAASlE,mBAElDA,EAAc0D,EAAuBQ,SAASlE,eAAe6D,EAAOA,SAChEM,KAASN,EAAOO,MAAMD,KACtBE,MAASR,EAAOO,MAAMC,OAtBlC,cAAA7I,EAAAuI,OAAA,SAgCbD,EAAa9D,EAAcgD,GAAMc,GAAc9D,EAAcgD,IAhChD,wBAAAxH,EAAAQ,SAAAV,OAAApN,MAAlB,gBAAAoW,GAAA,OAAAb,EAAAtZ,MAAAyG,KAAA0B,YAAAkR,GAwHAe,EAAgB,SAACpE,GAAD,OAClBD,aAAa,EAAAvJ,EAAAqK,kBAAiBnB,GAA2BM,EAAe,SAAU,kBAGhFqE,EAAc,SAACrE,EAAesE,GAChC,IAAMC,GAAiB,EAAA/N,EAAAqK,kBAAiBnB,GAA2BM,EAAe,SAAU,iBACtFwE,EAAiBD,EAASD,OAC1BG,EAAiBD,EAAeE,SAAWF,EAAeG,cAAgB,GAC1EC,EAAiBJ,EAAeK,aAAe,GACrD,OACIC,cAAeP,EAASQ,OAAS,EACjCN,UAAeA,EAAUO,WACzBJ,UAAeA,EAAUI,aAI3BC,EAAW,SAACjF,EAAekF,GAC7B,IAAMC,GAAa,EAAA3O,EAAAqK,kBAAiBnB,GAA2BM,EAAe,cACxEoF,GAAkB,EAAA5F,EAAA6F,qBAKxB,OACIC,WALeH,EAAUlN,OAAO,SAACsN,EAAKC,GAAN,SAAA9S,OAAA8N,EAC5B+E,KAAOjQ,KAAM8P,EAAgBI,GAAMzW,MAAOyW,UAK9CN,MAAOhF,EAAqBiF,EAAWD,KAI/C,OACIO,yBAtX6B,SAAC/B,GAAD,OAAYpN,KAAGoP,aAAahC,GAAQlI,KAAK,SAAA5M,GACtE,IAAM+W,GAAsB,EAAAnG,EAAAoG,+BAC5BhG,GAAiB,EAAAJ,EAAAqG,0BAEjBnG,KACAC,GAAuB,EAAAnJ,EAAAsP,aAAYH,GAEnC/W,EAAEmX,cAAcC,UAAU5S,QAAQ,SAAC7G,GAC/B,IAAMkB,EAAOjE,OAAO0J,KAAK0M,GAAgB/B,KAAK,SAAAxO,GAAA,OAC2B,IAArEuQ,EAAevQ,GAAK0Q,YAAYK,QAAQ7T,EAASyT,sBACH,IAAtCJ,EAAevQ,GAAKyV,gBAAkClF,EAAevQ,GAAKyV,gBAAkBvY,EAASgY,YAGjH,GAAK9W,EAAL,CAiDA,IAAKiS,EAAyBjS,GAAO,CAEjC,IAAMwY,EAAWtG,EAAqBnW,OAAO0J,KAAKyM,GAC7C9B,KAAK,SAAAxO,GAAA,OAAoD,IAA7CsQ,EAAqBtQ,GAAK+Q,QAAQ3S,MAEnD,IAAKwY,EAAU,OAEfA,EAASA,EAAS7F,QAAQ3S,KAAWsB,MAAOtB,EAAM6H,KAAMsK,EAAenS,GAAMyY,OAG7ExG,EAAyBjS,IAAQ,EAAA+I,EAAAsP,aAAYlG,EAAenS,IAEhE,IAAMiU,EAAShC,EAAyBjS,GAAMiU,WAG9CA,EAAOE,SAAyBF,EAAOE,UAAoC,SAAxBrV,EAAS4Z,WAC5DzE,EAAO0E,WAAyB,EAAA9G,EAAA+G,qBAAoB9Z,EAAUmV,EAAO0E,WACrE1E,EAAO3B,YAAyBD,EAAsBvT,EAAUmV,EAAO3B,aACvE2B,EAAO6C,UAAyB,EAAAlF,EAAAiH,qBAAoB/Z,EAAUmV,EAAO6C,UACrE7C,EAAOI,wBAAyB,EAAAvC,EAAAgH,4BAA2Bha,EAAUmV,EAAOI,wBAE5EpC,EAAyBjS,GAAMiU,OAASA,KAI5ClY,OAAO0J,KAAKyM,GAAsBvM,QAAQ,SAAC/D,GACvCsQ,EAAqBtQ,GAAOsQ,EAAqBtQ,GAAKmX,OAAO,SAAAzE,GAAA,MAAwB,iBAAhB,IAAOA,EAAP,YAAA0E,EAAO1E,MACnC,IAArCpC,EAAqBtQ,GAAKhG,eACnBsW,EAAqBtQ,QA6RpCgV,cACAqC,gBAtPoB,SAACC,EAAM3G,GAC3B,IAAM4G,EAAWpd,OAAO0J,KAAKyT,OACxB1O,OAAO,SAACsB,EAAGzO,GAAJ,SAAA4H,OAAA8N,EAAejH,GAAfiH,EAAqBmG,EAAK7b,GAAGwN,IAAI,SAAAuO,GAAA,OAAMA,EAAG9X,eACtD,OACIiR,cAAeE,EAAqB0G,EAAU5G,KAmPlD8G,kBAjRsB,SAACjW,GAAU,IACzBsQ,EAA0EtQ,EAA1EsQ,qBAAsBnB,EAAoDnP,EAApDmP,cAAekF,EAAqCrU,EAArCqU,MAAOnE,EAA8BlQ,EAA9BkQ,cAAeO,EAAezQ,EAAfyQ,WAC7Df,EAAoBF,EAAcL,GAClC+G,EAAoB9B,EAASjF,EAAekF,GAC5C8B,EAAoB5C,EAAcpE,GAClCiH,EAAoBzF,EAAcxB,EAAesB,GACjD4F,EAAoB7F,EAAa4F,EAAgB3F,YACjD6F,EAAoB9C,EAAYrE,EAAemB,GAC/CiG,EAAoBtG,EAAgBC,EAAef,EAAekH,EAAevG,qBAEjF0G,EAA6B3G,EAAqBV,EAAekH,EAAevG,qBAChF2G,EAA6BpG,EAAkBlB,EAAekH,EAAevG,qBAEnF,OAAA7P,KACOyP,EACAwG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IA4PPpG,oBACAJ,kBACAJ,uBACA6G,qBAvNyB,kBAAM7H,GAwN/B8H,cAnHkB,SAAC5G,EAAqB6G,EAAanD,EAAahD,GAClE,IAAIoG,EAAqB,KAEzB,GAAoB,YAAhBpD,EAA2B,CAC3B,IAAMqD,GAAgB,EAAAvI,EAAA+D,UAAS7B,GACzBsG,GAAgB,EAAAxI,EAAA+D,UAASsE,GAS3BC,GAPC,EAAApI,EAAAuI,yBAAwBjH,IAMrBgH,EAAcE,SAASH,EAAc,QAAWrG,GAAcsG,EAAcG,QAAQJ,EAAaK,QAAQC,IAAI,EAAG,QACjFN,EAAeC,GAAenF,OAAO,eANrDmF,EAAcM,eAAeP,EAAc,OAC3BA,EAAaK,QAAQC,IAAI,EAAG,OAASL,GAAenF,OAAO,cAStG,OAASgF,YAAaC,IAkGtBS,cA5FkB,SAClBV,EACAW,EACA9D,EACA+D,EACAjG,EACAd,EACAgH,GAEA,IAAIC,EAAW,KAEf,GAAoB,YAAhBjE,EAA2B,CAC3B,IAAIkE,EAAoB,WAQxB,GANIH,GAAsBA,EAAmBhf,QAAoC,OAA1Bgf,EAAmB,KAEtEG,EAAoBH,EAAmBrY,OAAO,GAAG,KAIhDsR,GAAc8B,UAAWzU,MAAMmZ,SAASlF,EAAY6E,GAAc,OACnEc,EAAWC,MACR,CACH,IAAMlG,EAAehB,EAAasB,EAAYtB,EAAYgH,GAAclF,UAAWzU,MAC7E8Z,EAAe7F,EAAY6E,EAAaW,GAE9CG,EAAWE,EAAWhG,OAAO,SAG7B,IAAMiG,IACF1E,KAAO1B,EAAa0F,QAAQC,IAAI,EAAG,UACnC/D,OAAO,EAAA9E,EAAAuJ,SAAQrG,EAAa0F,QAAQC,IAAI,GAAI,QAASrF,EAAY6E,EAAae,MAMlF,IAHK,EAAAjJ,EAAAgD,oBAAmBmG,EAAiBD,KACrCF,EAAWpG,EAAauG,EAAiBD,EAAWT,QAAS1F,EAAa0F,UAE1ES,EAAWP,eAAe5F,IAAiBmG,EAAWG,KAAKtG,EAAc,UAAY,EAAG,CACxF,IAAMuG,EAAkD,KAA9BvG,EAAa3T,IAAI,UAAmB2T,EAAa3T,IAAI,WAAa,GACtFma,EAAoB1G,KAAa,EAAA7C,EAAAgD,oBAAmBH,EAAUE,EAAa0F,QAAQC,IAAI,EAAG,YAChGM,EAAWjG,EAAa0F,QAAQC,IAAKY,GAAiBC,EAAqB,EAAI,EAAG,WAAWrG,OAAO,SAIvF,UAAb8F,GAAwBjG,EAAawF,SAASW,EAAY,SAC1DF,EAAWjG,EAAa0F,QAAQe,SAAS,EAAG,UAAUtG,OAAO,WAKzE,OAAS2F,YAAaG,IA2CtBS,cA7HkB,SAACpI,EAAqB0D,GACxC,OAAI1D,GAAsD,IAA/BA,EAAoBvX,QAAiD,MAAjCuX,EAAoB,GAAG7R,OACzEuV,YAAa,aAGjBA,gBAyHT2E,YAlMgB,SAACjJ,EAAesB,GAIhC,OAASc,aAHQ,EAAA5L,EAAAqK,kBAAiBnB,GAA2BM,EAAe,gBAEzD8B,4BAA8BjE,KAAK,SAAAqL,GAAA,OAAUA,EAAOna,QAAUuS,SAAmBc,WAgMpG+G,aAtKiB,SAAC/G,EAAUd,EAAYgH,GAAvB,OACjBA,WAAYhH,EAAaa,EAAaC,EAAUQ,EAAYtB,EAAYgH,IAAe,OAsKvFjH,eACAgC,kBACA+F,sBAAuB,kBAASC,oBAAqB1J,KA3YvC,aA+YPF,8UCrafjV,EAAA,QACAA,EAAA,QACAA,EAAA,IACA2J,EAAA3J,EAAA,KACA4J,EAAA5J,EAAA,KACAiK,EAAAjK,EAAA,KACAkK,EAAAlK,EAAA,+NAEM8e,6SACFC,OACIC,2BAA2B,KAG/BC,aAAe,WACXrR,EAAKsR,UAAWF,2BAA2B,OAG/CG,aAAe,WACXvR,EAAKsR,UAAWF,2BAA2B,+UAV7B1W,UAAMvB,+CAaf,IAAAqY,EAQDnZ,KAAKG,MANLiZ,EAFCD,EAEDC,UACA1Z,EAHCyZ,EAGDzZ,SACA4E,EAJC6U,EAID7U,UACA+U,EALCF,EAKDE,cACAC,EANCH,EAMDG,KACAC,EAPCJ,EAODI,QAGEC,GAAa,EAAAxU,EAAAC,SAAWoU,EAAeC,GAC7C,OACIlU,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAWX,EAAW,WACjCmV,eAAcF,EACdG,mBAAkBN,GAER,SAATE,GACGlU,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACyI,EAAAgW,iBACGrV,UAAWkV,EACXR,aAAchZ,KAAKgZ,aACnBE,aAAclZ,KAAKkZ,eAEvB9T,EAAAH,QAAA/J,cAACwI,EAAAkW,cACGtV,WAAW,EAAAU,EAAAC,SAAcoU,EAAd,gBAA4C,yBACnDQ,8BAA+B7Z,KAAK8Y,MAAMC,+BAKhD,aAATO,GAAuBlU,EAAAH,QAAA/J,cAAC8I,EAAA8V,cAAaxV,UAAWkV,IACvC,QAATF,GAAuBlU,EAAAH,QAAA/J,cAAC+I,EAAA8V,YAAWzV,UAAWkV,IAC9C9Z,YAMjBmZ,EAAQ3W,WACJkX,UAAe7Y,UAAUiF,OACzB9F,SAAea,UAAUgF,KACzBjB,UAAe/D,UAAUiF,OACzB6T,cAAe9Y,UAAUiF,OACzB8T,KAAe/Y,UAAUiF,OACzB+T,QAAehZ,UAAUiF,kBAGdqT,oKCrER5T,sGCAM+U,iBAAiB,SAACC,GAC3B,IAAMC,EAAQD,EAAcE,WACtBC,EAAQH,EAAcI,YACtBC,EAAcC,EAAqBH,EAAMF,GAE/C,OACII,cACAE,WAAaF,EAAc,SAAW,WACtCG,UAAaL,GAASE,GAAe,GACrCI,YAAaR,GAASI,GAAe,KATtC,IAaDK,IACD,EAAS,IACT,EAAS,MACT,EAAS,MACT,GAAS,MACT,IAAS,OACT,IAAS,QAERJ,EAAuB,SAACK,GAAD,OACxBD,EAAwBvN,KAAK,SAAA1P,GAAA,OAAKkd,GAAmB,KAAPld,EAAE,OAAe,KAAM,QAAQ,IAoBrEmd,GAlBAC,mBAAmB,SAACb,GAC7B,IAAIc,EAAS,YAIb,OAHIC,EAAQf,KACRc,EAASd,EAAcgB,QAAU,EAAI,MAAQ,QAE1CF,GAKEG,aAAa,SAACjB,GAAD,OACtBA,EAAckB,WAGLC,iBAAiB,SAACnB,GAAD,OAC1BA,EAAcoB,gBAGLR,gBAAgB,SAACZ,GAAD,QACvBA,EAAcqB,YAAcrB,EAAcsB,aASnCP,GANAQ,qBAAqB,SAACvB,GAAD,OAC9BY,EAAcZ,IAAkBe,EAAQf,GACpCY,EAAcZ,IACZA,EAAcsB,WAAa,MAGxBP,UAAU,SAACf,GAAD,SAClBA,EAAcc,QAAmC,SAAzBd,EAAcc,QACvCd,EAAcwB,YACdxB,EAAcyB,iBAWLC,GARAC,oBAAoB,SAAC3B,GAAD,OAC7BA,EAAc4B,YAAc5B,EAAc4B,WAAa5B,EAAcE,YAG5D2B,YAAY,SAAC7B,GAAD,OACpBA,EAAc8B,qBAAuB9B,EAAc+B,kBAAoB/B,EAAcE,YAG7EwB,aAAa,SAAC1B,GAAD,MACG,SAAzBA,EAAcc,SAGLkB,gBAAgB,SAAChC,GAAD,OACxBe,EAAQf,KAAmB0B,EAAW1B,IAAsD,IAAnCA,EAAciC,iGCvE5E,QAAAniB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMoiB,EAAW,SAAA9a,GAOX,IANF3B,EAME2B,EANF3B,SACA4E,EAKEjD,EALFiD,UACA8X,EAIE/a,EAJF+a,OACAC,EAGEhb,EAHFgb,UACArD,EAEE3X,EAFF2X,aACAE,EACE7X,EADF6X,aAEMoD,GAAwB,EAAAtX,EAAAC,SAAW,mCAAoCoX,EAAY,cAAgB,IACnGE,GAAwB,EAAAvX,EAAAC,SAAW,kCAAmCoX,GAAa,wCAEzF,OACIjX,EAAAH,QAAA/J,cAAA,YAAUoJ,UAAWA,EAAW0U,aAAcA,EAAcE,aAAcA,KACnEkD,GACChX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWgY,GACZlX,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWiY,GAAsBH,IAG9C1c,IASbyc,EAASja,WACLxC,SAAUa,UAAUiM,WAChBjM,UAAUic,MACVjc,UAAUxB,SAEduF,UAAc/D,UAAUiF,OACxB4W,OAAc7b,UAAUiF,OACxBwT,aAAczY,UAAUmF,KACxBwT,aAAc3Y,UAAUmF,gBAGbyW,4MC1Cf,IAAA1N,EAAA1U,EAAA,GACA4U,EAAA5U,EAAA,IAEA,IAAM0iB,EAAkB,kBACpBle,GAAKme,SAAS,EAAAjO,EAAA2C,UAAS,SAAYuL,MAAO,GAC1C3iB,GAAK0iB,SAAS,EAAAjO,EAAA2C,UAAS,WAAYuL,MAAO,EAAGC,UAAW,GACxDlf,GAAKgf,SAAS,EAAAjO,EAAA2C,UAAS,WAAYuL,MAAO,EAAGC,UAAW,IACxD1K,GAAKwK,SAAS,EAAAjO,EAAA2C,UAAS,SAAYuL,MAAO,EAAGC,UAAW,MACxDhf,GAAK8e,SAAS,EAAAjO,EAAA2C,UAAS,QAAYuL,MAAO,EAAGC,UAAW,SA+C/CC,GA5CAjH,sBAAsB,SAAC9Z,GAA6D,IAAnD6Z,EAAmDjU,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAArCob,WAAaC,kBACrEpH,EAAUmH,QAAQhhB,EAAS4Z,YAAoBC,EAAUmH,QAAQhhB,EAAS4Z,gBAC1EC,EAAUoH,cAAcjhB,EAAS4Z,YAAcC,EAAUoH,cAAcjhB,EAAS4Z,gBAEhF,IAAMsH,EAAUC,EAAsBnhB,EAASohB,uBACzCC,EAAUF,EAAsBnhB,EAASshB,uBAE/CzH,EAAUmH,QAAQhhB,EAAS4Z,YAAY5Z,EAAS+X,cAC5CwJ,IAAKR,EAAoBG,EAAQpC,SAAUoC,EAAQM,KAAM,KACzDC,IAAKV,EAAoBM,EAAQvC,SAAUuC,EAAQG,KAAM,MAG7D,IAAM/M,KACNoF,EAAUoH,cAAcjhB,EAAS4Z,YAAY/S,QAAQ,SAAA6N,GACjDD,EAAUzX,KAAK0X,EAAIlS,SAGvB,IAAMkf,EAAgBf,IAwBtB,MAtBI,eAAelP,KAAKzR,EAAS+X,cACY,IAArCtD,EAAUZ,QAAQqN,EAAQM,OAC1B/M,EAAUzX,KAAKkkB,EAAQM,MAG3BvkB,OAAO0J,KAAK+a,GAAe7a,QAAQ,SAAA8a,GAErB,MAANA,IAC0B,IAA1BlN,EAAUZ,QAAQ8N,IAClBD,EAAcC,GAAGd,OAASa,EAAcR,EAAQM,MAAMX,OACtDa,EAAcC,GAAGd,OAASa,EAAcL,EAAQG,MAAMX,OACtDpM,EAAUzX,KAAK2kB,KAK3B9H,EAAUoH,cAAcjhB,EAAS4Z,YAAcnF,EAC1CmN,KAAK,SAAClM,EAAGmM,GAAJ,OAAWH,EAAchM,GAAGmL,MAAQa,EAAcG,GAAGhB,MAAQ,GAAK,IACvEnV,OAAO,SAACzJ,EAAGJ,GAAJ,SAAAsE,6HAAA8N,CACAhS,KAAK8G,KAAM2Y,EAAc7f,GAAG+e,QAASpe,MAAOX,UAGjDgY,GAGEkH,sBAAsB,SAACve,EAAOsf,EAAWC,GAClD,IAAKvf,IAAUsf,IAAcC,GAAWC,MAAMC,SAASzf,IACnD,OAAO,KAGX,IAAMkf,EAAgBf,IAEtB,OAAImB,IAAcC,GAAa,cAAeL,EAAcI,GAIpDtf,EAAQkf,EAAcI,GAAWhB,UAAaY,EAAcK,GAASjB,UAHlEte,IAMT2e,EAAwB,SAACe,GAC3B,IAAMpD,EAAWoD,EAAgBzJ,WAAW0J,MAAM,qBAClD,OACIrD,SAAUA,EAAS,GACnB0C,KAAU1C,EAAS,KAuCdxD,GAnCAmB,gBAAgB,SAACnY,GAAU,IAC5BkQ,EAAiElQ,EAAjEkQ,cAAe0G,EAAkD5W,EAAlD4W,YAAanD,EAAqCzT,EAArCyT,YAAa1D,EAAwB/P,EAAxB+P,oBAC3C+N,EAAc9d,EAAMsG,WAAWjG,OAAOyd,YAEtCC,EAAwC,aAAhBtK,GAAgD,MAAlBvD,EACtD8N,EAAwC,YAAhBvK,KAA8B,EAAAlF,EAAA+D,UAASsE,GAAaM,SAAQ,EAAA3I,EAAA+D,UAASwL,GAAc,SAC5G9G,EAAwBjH,IAEzBO,EAAuB,QAK3B,OAJKyN,GAAoBC,IACrB1N,EAAyC,MAAlBJ,EAAwB,OAAS,YAGrDI,GAGE2N,uBAAuB,SAAC/f,EAAOgf,GACxC,KAAMhf,GAAS,GAAOgf,GAASxM,OAAOwN,UAAUhgB,IAC5C,OAAO,KAGX,GAAa,MAATgf,EAAc,CACd,IAAMvL,EAASzT,EAAQ,GACvB,OAAOyT,GAAU,EAAI7F,KAAKqS,MAAMxM,GAAU,EACvC,GAAa,MAATuL,EAAc,CACrB,IAAMrL,EAAO3T,OACb,OAAO2T,GAAQ,EAAI/F,KAAKqS,MAAMtM,GAAQ,EACnC,GAAa,MAATqL,EAAc,CACrB,IAAMkB,EAAMlgB,QACZ,OAAOkgB,GAAO,EAAItS,KAAKqS,MAAMC,GAAO,EAGxC,OAAOlgB,GAGE8Y,0BAA0B,SAACjH,GAAD,OACnCA,EAAoBsO,KAAK,SAAAnB,GAAA,OAA4C,KAAnC,IAAK,KAAK3N,QAAQ2N,EAAKhf,wGChHzDogB,SAAkB,OAClBhjB,iBAAkB,6BAClBijB,KAAkB,iBAClB9iB,iBAAkB,6BAClBC,SAAkB,yBAClB8iB,UAAkB,sBAClBC,UAAkB,sBAClBC,QAAkB,oBAClBC,MAAkB,SAClB/iB,OAAkB,mBAClBgjB,SAAkB,qBAClB7iB,UAAkB,aAClB8iB,KAAkB,IAClB5iB,SAAkB,YAClBC,UAAkB,aAClB4iB,MAAkB,kBAClBC,MAAkB,yFCjBtB,QAAAplB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMqlB,EAAW,SAAA/d,GAAmC,IAAhCiD,EAAgCjD,EAAhCiD,UAAW+a,EAAqBhe,EAArBge,eACrBC,GAAgB,EAAAta,EAAAC,SAAW,oBAAqBX,GAChDib,GAAgB,EAAAva,EAAAC,SAAWoa,EAAgB,YACjD,OACIja,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWib,GACZna,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWgb,GACZla,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qCAAqCkb,QAAQ,eACxDpa,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,iCAAiCmb,GAAG,KAAKC,GAAG,KAAKvhB,EAAE,KAAKwhB,KAAK,OAAOC,YAAY,IAAIC,iBAAiB,YAQ/IT,EAASld,WACLoC,UAAgB/D,UAAUiF,OAC1B6Z,eAAgB9e,UAAUiF,kBAGf4Z,8TCzBfrlB,EAAA,MAEA,IAAM+lB,EAmCFzf,KACO0f,WACHC,iBApCqB,SAACC,EAAevZ,GACrC,IAAMtO,GACFsE,MAAU,eACVwjB,OAAU,MACVpkB,UACI4P,OAAeuU,EAAcvU,OAC7ByU,SAAeF,EAAchM,QAC7BmM,SAAeH,EAAcG,SAC7B3L,MAAewL,EAAcxL,MAC7B4L,UAAeJ,EAAcI,UAC7B9Q,cAAe0Q,EAAc1Q,cAC7B3D,SAAeqU,EAAcrU,SAC7ByO,YAAe4F,EAAc5F,YAC7BF,WAAe8F,EAAc9F,WAC7BS,SAAeqF,EAAcrF,SAC7BtK,cAAe2P,EAAc3P,cAC7BgQ,OAAeL,EAAcK,OAC7BrN,OAAegN,EAAchN,QAEjC5W,UACIkkB,MAAkB7Z,EAAWhG,GAAG8f,gBAAkB,OAAS,QAC3DC,iBAAkB/Z,EAAWhG,GAAGggB,uBAAyB,OAAS,SAClEC,iBAAkBja,EAAWhG,GAAGkgB,uBAAyB,UAAY,WACrEC,OACIC,iBAAkBpa,EAAWhG,GAAGqgB,wBAA0B,SAAW,OACrEC,iBAAkBta,EAAWhG,GAAGugB,4BAA8B,UAAY,SAC1EzG,WAAkB9T,EAAWvN,QAAQqD,YAAYge,WACjDF,YAAkB5T,EAAWvN,QAAQqD,YAAY8d,eAI7DyF,UAAQmB,cAAc9oB,gBASf0nB,2GC3Cf,wDAAA/lB,EAAA,IAEaonB,mBACTC,cAAkB7gB,UAAUiF,OAC5B6b,iBAAkB9gB,UAAUmF,KAC5B4b,cAAkB/gB,UAAUiF,OAC5B+b,eAAkBhhB,UAAUmF,qFCNhC,QAAA3L,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAynB,EAAAznB,EAAA,wDAEA,IAAM0nB,EAAW,SAAApgB,GAAwB,IAArBqgB,EAAqBrgB,EAArBqgB,IAAKC,EAAgBtgB,EAAhBsgB,UACfC,GAAY,EAAAnT,EAAA2C,UAASsQ,GAE3B,MAAK,WAAWnU,KAAKqU,GAKjBxc,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACK,EAAAkV,EAAAK,cAAaD,EAAWD,IALtBvc,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KAAiBsV,IAUhCH,EAASvf,WACLyf,UAAWphB,UAAUxB,OACrB2iB,IAAWnhB,UAAUiF,kBAGVic,8FCxBf1oB,OAAA0J,KAAAqf,GAAAnf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4jB,EAAAljB,qBACA7F,OAAA0J,KAAAsf,GAAApf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6jB,EAAAnjB,qBACA7F,OAAA0J,KAAAuf,GAAArf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA8jB,EAAApjB,qBACA7F,OAAA0J,KAAAwf,GAAAtf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+jB,EAAArjB,qBACA7F,OAAA0J,KAAAyf,GAAAvf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAgkB,EAAAtjB,qBACA7F,OAAA0J,KAAA0f,GAAAxf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAikB,EAAAvjB,2KCFA7F,OAAA0J,KAAA2f,GAAAzf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAkkB,EAAAxjB,iHAHOyjB,uBACAC,uBACArd,oBAEAsd,6ICJP,IAAA9T,EAAA1U,EAAA,GAEayoB,yBAAyB,kBAClCC,QAAc,EAAAhU,EAAA2C,UAAS,YACvBsR,QAAc,EAAAjU,EAAA2C,UAAS,cACvBuR,MAAc,EAAAlU,EAAA2C,UAAS,UACvBwR,OAAc,EAAAnU,EAAA2C,UAAS,mBACvByR,KAAc,EAAApU,EAAA2C,UAAS,SACvB0R,MAAc,EAAArU,EAAA2C,UAAS,kBACvB2R,YAAc,EAAAtU,EAAA2C,UAAS,iBACvB4R,WAAc,EAAAvU,EAAA2C,UAAS,iBACvB6R,UAAc,EAAAxU,EAAA2C,UAAS,aACvB8R,WAAc,EAAAzU,EAAA2C,UAAS,cACvB+R,WAAc,EAAA1U,EAAA2C,UAAS,cACvBgS,YAAc,EAAA3U,EAAA2C,UAAS,eACvBiS,YAAc,EAAA5U,EAAA2C,UAAS,gBACvBkS,aAAc,EAAA7U,EAAA2C,UAAS,gBACvBmS,cAAc,EAAA9U,EAAA2C,UAAS,gBACvBoS,aAAc,EAAA/U,EAAA2C,UAAS,aACvBqS,YAAc,EAAAhV,EAAA2C,UAAS,cACvBsS,WAAc,EAAAjV,EAAA2C,UAAS,YACvBuS,OAAc,EAAAlV,EAAA2C,UAAS,iBACvBwS,UAAc,EAAAnV,EAAA2C,UAAS,gBACvByS,UAAc,EAAApV,EAAA2C,UAAS,WACvB0S,SAAc,EAAArV,EAAA2C,UAAS,gHCxB3BrY,OAAA0J,KAAAshB,GAAAphB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6lB,EAAAnlB,+RCAA7E,EAAA,SACAA,EAAA,MACAgM,EAAAhM,EAAA,sDAEA,IAAM8L,GAoFEme,cAnFkB,kBAClBC,UAAaC,MAAOC,eAAgB,WAmFpCC,IAjFQ,SAACC,EAAaC,GAAd,OACRL,UAAaC,MAAOE,IAAKC,EAAaC,WAiFtCrP,aA/EiB,SAAChC,GAAD,OACjBgR,UAAaC,MAAO5O,cAAerC,KA+EnCsR,iBA7EqB,kBACrBN,UAAaC,MAAOM,mBAAoB,KA6ExCC,iBA3EqB,kBACrBR,UAAaC,MAAOQ,mBAAoB,KA2ExCC,YAzEgB,kBAChBV,UAAaC,MAAOU,aAAc,KAyElChS,gBAvEoB,SAACR,GAAD,OACpB6R,UAAaC,MAAO9U,cAAegD,KAuEnCyS,eArEmB,SAACC,GAAD,OACnBb,UAAaC,MAAOa,gBAAiBD,KAqErCE,OAnEW,kBACXf,UAAaC,MAAOc,OAAQ,KAmE5BC,aAjEiB,kBACjBhB,UAAaC,MAAOgB,eAAgB,KAiEpCC,UA/Dc,kBACdlB,UAAaC,MAAOkB,WAAY,KA+DhCjpB,UA1Dc,kBACd8nB,UAAaC,MAAO/nB,UAAW,KA0D/BkpB,iBA9DqB,kBACrBpB,UAAaC,MAAOoB,kBAAmB,KA8DvCC,qBAzDyB,SAACC,GAAD,OACzBvB,UAAaC,MAAOuB,uBAAwB,EAAGD,iBAyD/CE,KAvDS,SAACF,EAAalB,GAAd,OACTL,UAAaC,MAAOwB,KAAMF,EAAalB,WAuDvCqB,YArDgB,kBAChB1B,UAAaC,MAAO0B,aAAc,KAqDlCC,YAnDgB,SAACC,GAAD,OAChBprB,QAAQC,SAAS,EAAAoL,EAAAwB,eAAcue,MAAkB7B,UAAaC,KAAK4B,KAmDnExpB,UAjDc,SAACypB,EAAOC,EAAQC,GAAhB,OACdhC,UAAaC,KAAb7jB,GAAoB/D,UAAW,EAAG4pB,YAAa,EAAGH,QAAOC,UAAWC,KAmDpEE,OAhDW,SAACC,EAAUC,EAAIC,GAAf,OACXC,UAAoBJ,OAAOC,EAAUC,EAAIC,IAgDzCE,UA9Cc,kBACdD,UAAoBC,UAApBjtB,MAAAktB,EAAAxhB,QAAAvD,YA8CAglB,iBA5CqB,SAACL,EAAIM,GAAL,OACrBJ,UAAoBK,UAAU,WAAaC,QAAS,EAAGD,UAAW,GAAKP,EAAIM,IA4C3EG,kBA1CsB,SAACC,EAAKV,EAAIW,GAAV,OACtBT,UAAoBK,UAAU,WAAYG,EAAKV,EAAIW,IA0CnDC,8BAxCkC,eAACzB,EAAD9jB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAe,KAAM2kB,EAArB3kB,UAAA,GAAyBslB,EAAzBtlB,UAAA,UAClC6kB,UAAoBK,UAAU,yBAA9BvmB,GAA0DolB,uBAAwB,EAAGmB,UAAW,GAAOpB,IAAiBA,gBAAkBa,EAAIW,IAwC9IE,eAtCmB,SAACjU,EAAQoT,EAAIW,GAAb,OACnBT,UAAoBK,UAAU,SAAWO,MAAOlU,EAAQ2T,UAAW,GAAKP,EAAIW,IAsC5EI,sBApC0B,SAACtB,EAAgBO,EAAIW,GAArB,OAC1BT,UAAoBK,UAAU,gBAAiBd,EAAgBO,EAAIW,IAoCnEK,qBAlCyB,SAAChB,EAAIW,GAAL,OACzBT,UAAoBK,UAAU,eAAiBU,YAAa,EAAGV,UAAW,GAAKP,EAAIW,IAkCnFO,uBAhC2B,SAAClB,GAAD,OAC3BE,UAAoBK,UAAU,kBAAoBY,eAAgB,EAAGZ,UAAW,GAAKP,eAmC9ExgB,kFCxHF4hB,mBACT9E,KAAa,QACbE,IAAa,QACbS,YAAa,UACbD,WAAa,UACbM,MAAa,UACbC,SAAa,UACbC,SAAa,cACbC,QAAa,cACbrB,OAAa,QACbC,OAAa,SAIJgF,kBACTC,EAAG,cACHC,EAAG,eAGMC,kBACTC,MAAO,QACPC,IAAO,OAGEC,uBACTC,OAAQ,SACRC,OAAQ,SACRC,MAAQ,gQC3BCC,kBAAkB,SAAC7Y,GAAD,MAAmB,SAAShC,KAAKgC,IAEnD8Y,eAAe,SAACC,EAAarO,GACtC,IAAMpC,GAAcoC,EAAcsO,gBAClC,IAAK1Q,EAAY,SAEjB,IAAM2Q,EAAQ3Q,KAAcyQ,KACxBG,EAAgBxO,EAAcyO,WAAY7Q,GAExC8Q,GAAmB1O,EAAc+B,kBACjC4M,GAAmB3O,EAAcoB,eAGjCwN,EAAWF,KAAaL,GAFNM,GAAaD,EAAYC,KAG7CH,EAAgBxO,EAAc6O,aAAcH,GAE1ClN,EAAaxB,EAAcwB,WAC3BsN,EAAQH,KAAaN,IAAiB7M,KACxCgN,EAAgBxO,EAAckB,UAAWyN,GAE7C,OAAAvoB,KACOmoB,EACAK,EACAE,IAvBJ,IA2BDN,EAAkB,SAACO,EAAML,GAG3B,6HAAAjhB,KACMihB,GACEM,QAJO,GAAGD,GAAOzpB,OAAO,GAKxBypB,4GCjCZ,QAAAjvB,EAAA,QACAA,EAAA,uDAEA,IAAMmvB,EAAY,SAAA7nB,GAAA,IACdiD,EADcjD,EACdiD,UACAK,EAFctD,EAEdsD,QAFcwkB,EAAA9nB,EAGd+nB,cAHc9rB,IAAA6rB,EAGL,KAHKA,EAAAE,EAAAhoB,EAIdioB,aAJchsB,IAAA+rB,EAIN,KAJMA,EAAA,OAMdjkB,EAAAH,QAAA/J,cAAA,OACIquB,MAAM,6BACN/J,QAAQ,YACR8J,MAAOA,EACPF,OAAQA,EACR9kB,UAAWA,EACXK,QAASA,GAETS,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,UAAUC,OAAO,WACrCrkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,IAAIC,GAAG,IAAIvhB,EAAE,QACxBiH,EAAAH,QAAA/J,cAAA,QAAMwuB,cAAc,QAAQC,eAAe,QAAQ/rB,EAAE,oBAKjEsrB,EAAUhnB,WACNoC,UAAW/D,UAAUiF,OACrB4jB,OAAW7oB,UAAUiF,OACrBb,QAAWpE,UAAUmF,KACrB4jB,MAAW/oB,UAAUiF,UAGhB0jB,+GC/BT,wDAAAnvB,EAAA,MAcS6vB,UAZS,kBACdxkB,EAAAH,QAAA/J,cAAA,OAAKquB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACnEpa,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,KAAKC,GAAG,KAAKvhB,EAAE,KAAKwhB,KAAK,YACpCva,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAOkK,UAAU,0BACrBzkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,IAAIC,GAAG,IAAIvhB,EAAE,MACxBiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oKCRxB,QAAA7D,EAAA,QACAA,EAAA,uDAEA,IAAM6f,EAAe,SAAAvY,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACjBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACzFpa,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,IAAIC,GAAG,IAAIvhB,EAAE,IAAIwhB,KAAK,YACjCva,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAOkK,UAAU,oBACrBzkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,MAAMC,GAAG,IAAIvhB,EAAE,MAC1BiH,EAAAH,QAAA/J,cAAA,QAAMouB,MAAM,IAAIF,OAAO,IAAIU,EAAE,KAAKC,EAAE,IAAIC,GAAG,UAM3DpQ,EAAa1X,WACToC,UAAW/D,UAAUiF,UAGhBoU,2GCnBT7gB,OAAA0J,KAAAwnB,GAAAtnB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+rB,EAAArrB,qBACA7F,OAAA0J,KAAAynB,GAAAvnB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAgsB,EAAAtrB,qBACA7F,OAAA0J,KAAA0nB,GAAAxnB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAisB,EAAAvrB,uFCFA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqwB,EAAArwB,EAAA,uDAEA,IAAMswB,EAAmB,SAAClqB,GAAU,IACxBsV,EAA+CtV,EAA/CsV,MAAO6U,EAAwCnqB,EAAxCmqB,QAAS5qB,EAA+BS,EAA/BT,SAAUoF,EAAqB3E,EAArB2E,iBAoClC,OAjCQ3E,EAAMmqB,SACNvvB,SAASwvB,KAAKC,UAAUhT,IAAI,aAC5Bzc,SAAS0vB,eAAe,cAAcD,UAAUhT,IAAI,eAEpDzc,SAASwvB,KAAKC,UAAUE,OAAO,aAC/B3vB,SAAS0vB,eAAe,cAAcD,UAAUE,OAAO,cA6B3DtlB,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,qBAClB0lB,0BAA2BL,IAE/B3lB,QAnBY,SAACrK,GACjB,GAAyB,UAArBA,EAAE4C,OAAO0tB,SAAyC,WAAlBtwB,EAAE4C,OAAOF,KAAmB,CAC5D,IAAM6tB,EAZU,SAACC,EAAQC,GAC7B,IAAMC,EAAkBD,EAAGE,wBAE3B,GADeD,EAAgBE,IAAMH,EAAGI,aAAe,GAAK9rB,OAAO+rB,YACvD,CACR,IAAMC,GAAchsB,OAAO+rB,YAAcL,EAAGI,cAAgB,EAC5DL,EAAOQ,WAAaN,EAAgBE,IAAMG,GAOnBE,CAAgBjxB,EAAEkxB,cAAelxB,EAAE4C,QAC1DmC,OAAOosB,iBAAiB,SAAUZ,GAAgB,GAGlDxrB,OAAO9B,WAAW,WACd8B,OAAOqsB,oBAAoB,SAAUb,GAAgB,IACtD,QAaHzlB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BACXc,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,4BACTmR,GAELrQ,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,+CACVK,QAASxE,EAAMwrB,SAEfvmB,EAAAH,QAAA/J,cAACkvB,EAAAwB,WAAUtnB,UAAU,wCAG7Bc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,2CACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qCACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAA,uBAAiCQ,GAAoB,yBACrDpF,MAOrB2qB,EAAiBnoB,WACbxC,SAAkBa,UAAUsrB,IAC5BF,QAAkBprB,UAAUmF,KAC5B+P,MAAkBlV,UAAUiF,OAC5B8kB,QAAkB/pB,UAAUkF,KAC5BX,iBAAkBvE,UAAUiF,kBAGjB6kB,iFC/Ef,QAAAtwB,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,wDAEA,IAAM+xB,EAAmB,SAAAzqB,GAKnB,IAJF0qB,EAIE1qB,EAJF0qB,YACAluB,EAGEwD,EAHFxD,KACAmuB,EAEE3qB,EAFF2qB,SACA1tB,EACE+C,EADF/C,MAMM2tB,EAAOF,EAAYlkB,IAAI,SAACqkB,EAAKC,GAC/B,IAAM7nB,GAAY,EAAAU,EAAAC,SAAW,uBACzBmnB,8BAA+BF,EAAI5tB,QAAUA,IAEjD,OACI8G,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGrG,IAAKutB,EACLtnB,KAAMqnB,EAAIrnB,KACVF,QAAS,kBAZD,SAAC2nB,GACbhuB,IAAUguB,GACdN,GAAW9uB,QAAUoB,MAAOguB,EAAgBzuB,UAUrB0uB,CAAYL,EAAI5tB,QAC/BgG,UAAWA,MAIvB,OAAOc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eAAe2nB,IAGzCH,EAAiB5pB,WACb6pB,YAAaxrB,UAAUic,MACvB3e,KAAa0C,UAAUiF,OACvBwmB,SAAazrB,UAAUmF,KACvBpH,MAAaiC,UAAUiM,WACnBjM,UAAUkM,OACVlM,UAAUiF,oBAIHsmB,oKCzCR7mB,8KCAP,IAAAwJ,EAAA1U,EAAA,GAEayyB,iBACTC,KAAK,EAAAhe,EAAA2C,UAAS,OACdsb,KAAK,EAAAje,EAAA2C,UAAS,OACdub,KAAK,EAAAle,EAAA2C,UAAS,OACdwb,KAAK,EAAAne,EAAA2C,UAAS,OACdyb,KAAK,EAAApe,EAAA2C,UAAS,OACd0b,KAAK,EAAAre,EAAA2C,UAAS,OACd2b,KAAK,EAAAte,EAAA2C,UAAS,OACd4b,KAAK,EAAAve,EAAA2C,UAAS,OACd6b,KAAK,EAAAxe,EAAA2C,UAAS,OACd8b,KAAK,EAAAze,EAAA2C,UAAS,OACd+b,KAAK,EAAA1e,EAAA2C,UAAS,OACdgc,KAAK,EAAA3e,EAAA2C,UAAS,QAGLic,gBACTC,QAAW,EAAA7e,EAAA2C,UAAS,UACpBmc,SAAW,EAAA9e,EAAA2C,UAAS,WACpBoc,WAAW,EAAA/e,EAAA2C,UAAS,aACpBqc,UAAW,EAAAhf,EAAA2C,UAAS,YACpBsc,QAAW,EAAAjf,EAAA2C,UAAS,UACpBuc,UAAW,EAAAlf,EAAA2C,UAAS,YACpBwc,QAAW,EAAAnf,EAAA2C,UAAS,WAGXyc,qBACTP,QAAW,EAAA7e,EAAA2C,UAAS,KACpBmc,SAAW,EAAA9e,EAAA2C,UAAS,KACpBoc,WAAW,EAAA/e,EAAA2C,UAAS,KACpBqc,UAAW,EAAAhf,EAAA2C,UAAS,KACpBsc,QAAW,EAAAjf,EAAA2C,UAAS,KACpBuc,UAAW,EAAAlf,EAAA2C,UAAS,KACpBwc,QAAW,EAAAnf,EAAA2C,UAAS,MAGX0c,mBAAmB,SAACtP,GAW7B,OATIuP,QAAc,EACdC,SAAc,EACdC,WAAc,EACdC,UAAc,EACdC,QAAc,EACdC,UAAc,EACdC,QAAc,GAGM7P,mHChD5B,IAAA7P,EAAA5U,EAAA,IAEau0B,YAAY,SAACC,GAAD,OAAoB,EAAA5f,EAAA+D,UAAS6b,GAAaC,OAA1C,KAAoD,EAAA7f,EAAA+D,UAAS6b,GAAa/W,IAAI,EAAG,SAASgX,QAEtGC,aAAa,SAACF,GAAD,OAAoB,EAAA5f,EAAA+D,UAAS6b,GAAaC,OAA1C,KAAoD,EAAA7f,EAAA+D,UAAS6b,GAAa/W,IAAI,GAAI,SAASgX,+KCJrH,IAAAE,EAAA30B,EAAA,yDACAA,EAAA,KAEa40B,gBAAgB,SAACC,GAAD,MAAU,MAAMrhB,KAAKqhB,GAAQA,EAAnB,KAA8BA,GAAQ,KAEhEC,kBAAkB,SAAlBA,EAAmBD,EAAME,GAClC,IAAIr1B,SAaJ,OAXAq1B,EAAcrQ,KAAK,SAACsQ,GAChB,OAAI,EAAAL,EAAAM,WAAUJ,EAAMG,IAChBt1B,EAASs1B,GACF,KACAA,EAAWE,SAClBx1B,EAASo1B,EAAgBD,EAAMG,EAAWE,WAM3Cx1B,GAGEy1B,iBAAiB,SAACC,EAAOC,GAAR,QACxBD,GAASA,EAAME,mBAAqBD,IApBnC,IAsBME,YAAU,SAACC,GAAD,IAAaC,EAAb9tB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,aACnB3I,OAAO0J,KAAK+sB,GAAQhoB,OAChB,SAAChM,EAAGqC,GAAJ,OAAarC,EAAEmS,QAAF,IAAc9P,EAAQ2xB,EAAO3xB,KAC1C0xB,IAIKE,kBAAkB,SAACjK,GAAD,OAAiB8J,EAAQL,UAAOnzB,UAAY0pB,gGChC3E,QAAAzrB,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,IACA4U,EAAA5U,EAAA,uDAIA,IAAM41B,EAAgB,SAAAtuB,GAGhB,IAAAuuB,EAAAvuB,EAFFyW,gBAEExa,IAAAsyB,EAFS,KAETA,EADF/X,EACExW,EADFwW,WAEA,KAAMC,GAAYD,EAAWgY,QAAU/X,EACnC,MAAO,GAGX,IAAMgY,GAAiB,EAAAnhB,EAAAohB,iBAAe,EAAAphB,EAAAqhB,iBAAgBnY,EAAWgY,OAAQ/X,IAEzE,OACI1S,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,kBAAkBwrB,IAIzCH,EAAcztB,WACV4V,SAAUvX,UAAUiM,WAChBjM,UAAUkM,OACVlM,UAAUiF,SACXyqB,WACHpY,WAAYtX,UAAUxB,mBAGX,EAAA2wB,EAAA/uB,SACX,SAAA6R,GAAA,OACIqF,WADJrF,EAAG/R,OACoByd,cAFZ,CAIbyR,+GClCF52B,OAAA0J,KAAAsM,GAAApM,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6Q,EAAAnQ,qBAEA7F,OAAA0J,KAAAytB,GAAAvtB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAgyB,EAAAtxB,yEADOqwB,2JCDP,QAAAl1B,EAAA,SACAA,EAAA,MACAo2B,EAAAp2B,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEaq2B,gBAAgB,WACzBvqB,UAAGmf,SAASja,KAAKslB,IADd,IAIDA,EAAW,SAACC,GACU,IAApBA,EAAStL,SACblF,UAAIoB,eAAgBxkB,MAAO,aAC3B,EAAAyzB,EAAAI,eAAc,kBAAmB,sBACjCC,UAAOC,mBACPD,UAAOE,IAAI,UAAW,IACtBC,UAAYC,QACZvxB,OAAOmO,SAASqjB,wGCjBpB93B,OAAA0J,KAAAquB,GAAAnuB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4yB,EAAAlyB,8OCAA,wDAAA7E,EAAA,MACAg3B,EAAAh3B,EAAA,KACAi3B,EAAAj3B,EAAA,IAGAk3B,EAAAl3B,EAAA,KAEA,IAAMm3B,EAAqB,SAACC,EAAarH,EAAGC,EAAGqH,GAApB,OACvB,EAAAC,EAAApsB,UAAO,KAAUqsB,sBAAoBH,IACjCI,eACIzH,GAAIA,EACJC,KAEJqH,oBAIFI,EAAe,SAACvX,EAAewX,GAAhB,OACjB,EAAAV,EAAA3I,iBAAgBnO,EAAc1K,eAAiBkiB,EAAa,EAAIA,GAGvDC,qBAAqB,SAACzX,GAC/B,IAAM0X,GAAgB,EAAAX,EAAA5V,gBAAenB,GAErC,QAA6B,SAAzBA,EAAcc,SAAsB4W,IAEjCT,EACHI,sBAAoBM,SAAS50B,KAC7B20B,IAIKE,2BAA2B,SAAC5X,GACrC,SAAKA,EAAc6X,gBAAkB7X,EAAcE,aAC9CF,EAAc6X,gBAAmB7X,EAAcE,aAE7C+W,EACHI,sBAAoBS,cAAc/0B,KAClCid,EAAc6X,gBAITE,wBAAwB,SAAC/X,GAClC,QAAKA,EAAcE,YAEZ+W,EACHI,sBAAoBW,WAAWj1B,KAC/Bid,EAAcE,aAKT+X,wBAAwB,SAACjY,GAClC,IAAKA,EAAcsO,gBAAiB,OAAO,EAE3C,IAAI4I,EAAmBG,sBAAoBa,WAAWn1B,KAClDo1B,KAGJ,IAFuB,EAAArB,EAAA3I,iBAAgBnO,EAAc1K,eAEjC,CAChB4hB,EAAcG,sBAAoBe,YAAYr1B,KAG9Co1B,GACIE,WAAYrY,EAAcyO,WAC1B6J,WAAYtY,EAAcsO,gBAC1BkJ,WALe,GASvB,OAAOP,EACHC,EACAlX,EAAcsO,gBACdtO,EAAcyO,WACd0J,IAIKI,uBAAuB,SAACvY,EAAekS,EAAKsG,GACrD,IAAKxY,EAAcoB,iBAAkB,EAAA2V,EAAArV,YAAW1B,GAAgB,OAAO,EACvE,IAAMwX,EAAaD,EAAavX,EAAekS,GAE/C,OAAO+E,EACHI,sBAAoBoB,UAAU11B,KAC9Bid,EAAcoB,eACdpB,EAAckB,WAEVmX,cAAerY,EAAckB,UAC7BoX,cAAetY,EAAcoB,eAC7BN,OAAed,EAAcgB,OAAS,EAAI,MAAQ,OAClDwW,aACAgB,iBAKCE,yBAAyB,SAAC1Y,EAAe2Y,EAAMzG,EAAKsG,GAC7D,IAAMhB,EAAaD,EAAavX,EAAekS,GAEzCoF,EAAgBL,EAClBI,sBAAoBe,YAAYr1B,KAChC41B,EAAKvgB,KACLugB,EAAKtO,OAEDgO,cAAeM,EAAKtO,MACpBiO,cAAeK,EAAKvgB,KACpBof,aACAgB,gBAKR,OAFAlB,EAAcv0B,KAAUu0B,EAAcv0B,KAAtC,IAA8CmvB,EAEvCoF,+GChHX,IAAA9iB,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAM84B,EACK,QAILC,EACK,QADLA,EAEK,OAGLC,GACFC,MACIC,iBAAkBC,UAClBC,YAAkBN,EAClBO,YAAkBN,EAClBxuB,UAAkB,qBAEtB+uB,MACIJ,iBAAkBK,UAClBH,YAAkBN,EAClBO,YAAkBN,GAEtBX,YACIc,iBAAkBM,UAClBJ,YAAkBN,EAClBO,YAAkBN,IAIbxB,uBACTM,UACI50B,KAAgB,WAChBu0B,cAAgBwB,EAAqBC,KACrC5B,gBAAkBoC,WAAY,OAASC,OAAO,EAAAhlB,EAAA2C,UAAS,cAE3D2gB,eACI/0B,KAAgB,gBAChBu0B,cAAgBwB,EAAqBC,KACrC5B,gBAAkBoC,WAAY,QAASC,OAAO,EAAAhlB,EAAA2C,UAAS,mBAE3D6gB,YACIj1B,KAAgB,aAChBu0B,cAAgBwB,EAAqBC,KACrC5B,gBAAkBoC,WAAY,QAASC,OAAO,EAAAhlB,EAAA2C,UAAS,gBAE3D+gB,YACIn1B,KAAgB,aAChBu0B,cAAgBwB,EAAqBZ,WACrCf,gBAAkB9sB,UAAW,sBAEjCouB,WACI11B,KAAgB,YAChBu0B,cAAgBwB,EAAqBM,KACrCjC,gBAAkBsC,eAAgB,qBAEtCrB,aACIr1B,KAAgB,cAChBu0B,cAAgBwB,EAAqBM,KACrCjC,gBAAkBsC,eAAgB,qGC/D1C,QAAA35B,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMw5B,EAAa,SAAAlyB,GAAA,IACfiD,EADejD,EACfiD,UACAmtB,EAFepwB,EAEfowB,WACA1W,EAHe1Z,EAGf0Z,OAHe,OAKf3V,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,aAAcX,GAChCqvB,wBAAqC,QAAX5Y,EAC1B6Y,yBAAqC,SAAX7Y,KAEhC0W,IAIN8B,EAAWrxB,WACPoC,UAAY/D,UAAUiF,OACtBisB,WAAYlxB,UAAUiM,WAAYjM,UAAUkM,OAAQlM,UAAUiF,SAC9DuV,OAAYxa,UAAUszB,OAAO,MAAO,qBAGzB,EAAAr0B,EAAAwB,UAASuyB,yJCzBxB,IAAAztB,EAAA/L,EAAA,GACAgM,EAAAhM,EAAA,GACA+5B,EAAA/5B,EAAA,KAEag6B,qBAAqB,SAACxkB,GAAD,OAAmBA,KAAiBkY,mBAEzDuM,mBAAmB,SAACC,GAAD,QAAAxyB,EAAAC,UAAA9I,OAAiBs7B,EAAjBtyB,MAAAH,EAAA,EAAAA,EAAA,KAAA0yB,EAAA,EAAAA,EAAA1yB,EAAA0yB,IAAiBD,EAAjBC,EAAA,GAAAzyB,UAAAyyB,GAAA,OAAmCD,EAC9Dne,OAAO,SAAA9B,GAAA,YAAuB3W,IAAZ2W,GAAqC,OAAZA,IAC3CpM,IAAI,SAAAoM,GAAA,OAAcggB,IAAgB,QAAQ1mB,KAAK0G,GAAW,IAAM,IAAKA,KAE7DmgB,wBAAwB,SAACtgB,GAAD,OACjC/a,OAAO0J,KAAKqR,OACPjM,IAAI,SAAAjJ,GAAA,OAAO,EAAAkH,EAAAwB,MAAKwM,EAASlV,MACzBmX,OAAO,SAAAzE,GAAA,QAAS,EAAAvL,EAAAwB,eAAc+J,8ICbvC,wDAAAvX,EAAA,KACA4U,EAAA5U,EAAA,IAEa+b,6BAA6B,SAACha,EAAUuV,GACjD,IAAMgjB,KAkBN,OAhBKv4B,EAASw4B,8BAAgC17B,QAC1CkD,EAASw4B,yBAAyB3xB,QAAQ,SAAA8V,GACtC,IAAM8b,EAAoBF,EAAwBjnB,KAAK,SAAAonB,GAAA,OAAOA,EAAIl2B,QAAUyf,SAAStF,EAAOrG,QACtFqiB,GAAsBlhB,MAAM,EAAA5E,EAAA+D,UAAS+F,EAAOlF,MAAOE,OAAO,EAAA9E,EAAA+D,UAAS+F,EAAOhF,QAC5E8gB,EACAA,EAAkB5iB,SAAS7Y,KAAK27B,GAEhCJ,EAAwBv7B,MACpB+L,MAAU,EAAA8J,EAAA+D,UAAS+F,EAAOrG,MAAMJ,OAAO,sBACvC1T,MAAUyf,SAAStF,EAAOrG,MAC1BT,UAAW8iB,OAMpBJ,EAAwBz7B,OAASy7B,EAA0BhjB,GAnB/D,IAuBDqjB,EAAe,SAAC9iB,EAAgBC,EAAc8iB,GAChD,IAAMC,GAAa,EAAAjmB,EAAA+D,UAASb,GAI5B,OAHI8iB,GACAC,EAAW7iB,OAAO,GAAG8iB,OAAO,GAEzBjjB,EAAeyF,SAASud,IAAeA,EAAW/E,SAAWje,EAAeie,QAG1E/d,qBAAqB,eAC9BH,EAD8BjQ,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MAE9BkQ,EAF8BlQ,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAEL,EAAAiN,EAAA+D,UAASC,UAAWzU,OAC7C2T,EAH8BnQ,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAGL,EAAAiN,EAAA+D,UAASC,UAAWzU,OAC7Cy2B,EAJ8BjzB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,IAAAA,UAAA,WAM7BgzB,EAAa9iB,EAAgBe,UAAWzU,MAAOy2B,IAC/CD,EAAa9iB,EAAgBC,EAAc8iB,IACtChjB,EAAS/Y,SACL+Y,EAASvE,KAAK,SAAA0nB,GAAA,OACZljB,EAAemjB,UAAUD,EAAQvhB,KAAMuhB,EAAQrhB,MAAOkhB,EAAyB,OAAS,KAAM,8OC5C9G,wDAAA56B,EAAA,6HAGai7B,kCACT,SACA,YACA,YACA,QACA,sBACA,gBACA,WACA,gBACA,cACA,cACA,mBACA,aACA,aACA,aACA,UAGSC,qCAAqC,SAAC70B,GAC/C,IAAM80B,GACF,sBACA,eAGJ,IAAK90B,EAAO,OAAO80B,EANsC,IAQjDhlB,EAAwBlB,UAAa4B,aAAaxQ,EAAMyQ,YAAxDX,oBACA2D,EAAgBzT,EAAhByT,YACR,SAAA5R,OACOizB,EADPnlB,EAEgC,YAAxBG,GAAqC,kBAF7CH,EAGgC,YAAxB8D,GAAqC,qBAIpCshB,yCACTlhB,QAAa,SAAAmhB,GAAA,OAAYA,EAAW,aAAe,aACnDhV,SAAa,YACb/F,YAAa,cACbF,WAAa,cAGJkb,iCACT,WACA,cACA,WACA,SACA,4FClDSC,mBAAmB,IACnBC,mBAAmB,4GCDhC,QAAAx7B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMy7B,EAAW,SAAAn0B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACbc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACpHpa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,qBAAqB6J,SAAS,UAAU5rB,EAAE,wIAIrF43B,EAAStzB,WACLoC,UAAW/D,UAAUiF,UAGhBgwB,mHCdT,QAAAz7B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM07B,EAAkB,SAAAp0B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWoxB,EAAdr0B,EAAcq0B,cAAd,OACpBtwB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACjFpa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWoxB,GAAiB,cAAe/V,KAAK,qBAAqB6J,SAAS,UAAU5rB,EAAE,2GAIxG63B,EAAgBvzB,WACZoC,UAAe/D,UAAUiF,OACzBkwB,cAAen1B,UAAUiF,UAGpBiwB,2HCfT,QAAA17B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM47B,EAAmB,SAAAt0B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWoxB,EAAdr0B,EAAcq0B,cAAd,OACrBtwB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACjFpa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWoxB,GAAiB,cAAe/V,KAAK,qBAAqB6J,SAAS,UAAU5rB,EAAE,6GAIxG+3B,EAAiBzzB,WACboC,UAAe/D,UAAUiF,OACzBkwB,cAAen1B,UAAUiF,UAGpBmwB,qHCfT,QAAA57B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM6xB,EAAY,SAAAvqB,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACdc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACpHpa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAU6J,SAAS,UAAU5rB,EAAE,mLAI1EguB,EAAU1pB,WACNoC,UAAW/D,UAAUiF,UAGhBomB,oHCdT,QAAA7xB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM4f,EAAkB,SAAAtY,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAW0U,EAAd3X,EAAc2X,aAAcE,EAA5B7X,EAA4B6X,aAA5B,OACpB9T,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GACrC8kB,OAAO,KACPpQ,aAAcA,EACdE,aAAcA,EACdsG,QAAQ,YACR8J,MAAM,KACNC,MAAM,8BAENnkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,sBAAsB6J,SAAS,UAAU5rB,EAAE,6KAItF+b,EAAgBzX,WACZoC,UAAW/D,UAAUiF,UAGhBmU,uHCtBT,QAAA5f,EAAA,QACAA,EAAA,uDAEA,IAAM+f,EAAe,SAAAzY,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACjBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACzFpa,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wEAAwE4rB,SAAS,YACzFpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,qlBAKpBkc,EAAa5X,WACToC,UAAW/D,UAAUiF,UAGhBsU,kHChBT,QAAA/f,EAAA,QACAA,EAAA,uDAEA,IAAMggB,EAAa,SAAA1Y,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWglB,MAAM,IAAIF,OAAO,IAAIG,MAAM,8BAClDnkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,OAAOC,GAAG,MAAMvhB,EAAE,IAAI0rB,UAAU,wBAAwBlK,KAAK,UAAU6J,SAAS,cAInGzP,EAAW7X,WACPoC,UAAW/D,UAAUiF,UAGhBuU,iHCbT,QAAAhgB,EAAA,QACAA,EAAA,uDAEA,IAAM67B,EAAc,SAAAv0B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAChBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,MAC5EhkB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,IAAIC,GAAG,IAAIvhB,EAAE,IAAIwhB,KAAK,YACjCva,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO6J,SAAS,UAAU5rB,EAAE,gHAKnDg4B,EAAY1zB,WACRoC,UAAW/D,UAAUiF,UAGhBowB,kHChBT,QAAA77B,EAAA,QACAA,EAAA,uDAEA,IAAM87B,EAAc,SAAAx0B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAChBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,MAC5EhkB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,IAAIC,GAAG,IAAIvhB,EAAE,IAAIwhB,KAAK,YACjCva,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAOkK,UAAU,2BACrBzkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,MAAMC,GAAG,IAAIvhB,EAAE,MAC1BiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8DAMxBi4B,EAAY3zB,WACRoC,UAAW/D,UAAUiF,UAGhBqwB,2HClBT98B,OAAA0J,KAAAqzB,GAAAnzB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA43B,EAAAl3B,0EADOqG,iGCAM8wB,gBAAgB,IAEhBC,aACTC,SAAe,kBACfC,UAAe,mBACfC,WAAe,oBACfC,YAAe,qBACfC,aAAe,sBACfC,cAAe,wBAGNC,SACTC,MAAS,qBACTC,KAAS,oBACTC,QAAS,uBACTC,QAAS,yXCfb58B,EAAA,QACAA,EAAA,IACA68B,EAAA78B,EAAA,4DAEM88B,cACF,SAAAA,EAAY12B,gGAAOqB,CAAAxB,KAAA62B,GAAA,IAAAlvB,mKAAA7F,CAAA9B,MAAA62B,EAAA90B,WAAAhJ,OAAAiJ,eAAA60B,IAAA39B,KAAA8G,KACTG,IADS,OAAAwH,EAiBnBmvB,SAAW,WACP,IAAMC,EAAapvB,EAAKsX,KAAKgM,wBACvB+L,KACNj+B,OAAO0J,KAAKkF,EAAKsvB,KAAKt0B,QAAQ,SAAC/D,GAC3B,IACMs4B,EADKvvB,EAAKsvB,IAAIr4B,GACFqsB,wBAEZkM,EAAOD,EAAOC,KAAOJ,EAAWI,KAChCC,EAAQL,EAAWK,MAAQF,EAAOE,MAExCJ,EAAMp4B,IAASu4B,OAAMC,WAEzBzvB,EAAKsR,UAAW+d,WA7BDrvB,EAgCnB0vB,kBAAoB,WAChB,GAAyB,MAArB1vB,EAAKxH,MAAMm3B,QAA2D,IAAzCv+B,OAAO0J,KAAKkF,EAAKmR,MAAMke,OAAOp+B,OAC3D,OAASu+B,KAAM,IAAKC,MAAO,QAE/B,IAAMG,EAAO5vB,EAAKmR,MAAMke,MAAMrvB,EAAKxH,MAAMm3B,QACzC,OACIH,KAAeI,EAAKJ,KAApB,KACAC,MAAeG,EAAKH,MAApB,KACAI,WAAY,2BAtChB7vB,EAAKmR,OACDke,UAEJrvB,EAAKsvB,OALUtvB,qUADGtF,UAAMo1B,8DAUxBz3B,KAAK82B,WACLz3B,OAAOosB,iBAAiB,SAAUzrB,KAAK82B,yDAIvCz3B,OAAOqsB,oBAAoB,SAAU1rB,KAAK82B,2CA8BrC,IAAAv1B,EAAAvB,KACL,OACIoF,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,cACV3E,IAAK,SAAAorB,GAAA,OAAMxpB,EAAK0d,KAAO8L,IAEvB3lB,EAAAH,QAAA/J,cAAC07B,EAAAc,UACGJ,OAAQt3B,KAAKG,MAAMm3B,OACnBtL,SAAUhsB,KAAKG,MAAM6rB,SACrB2L,SAAU33B,KAAKi3B,KAEdj3B,KAAKG,MAAMT,UAEhB0F,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,gBACVszB,MAAO53B,KAAKq3B,gCAOhCR,EAAY30B,WACRo1B,OAAc/2B,UAAUiF,OACxB9F,SAAca,UAAUgF,KACxBymB,SAAczrB,UAAUmF,KACxBmyB,aAAct3B,UAAUmF,QAGnBmxB,+GC9ET,QAAA98B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM29B,EAAW,SAAAr2B,GAAA,IACbi2B,EADaj2B,EACbi2B,OACA53B,EAFa2B,EAEb3B,SACAi4B,EAHat2B,EAGbs2B,SACA3L,EAJa3qB,EAIb2qB,SAJa,OAMb3pB,UAAMy1B,SAASjwB,IAAInI,EAAU,SAACq4B,GAC1B,IAAMC,GAAY,EAAAhzB,EAAAC,SACd,OACEgzB,cAAeF,EAAMn5B,MAAQ04B,IAEnC,OACIlyB,EAAAH,QAAA/J,cAAA,OACIoJ,UAAW0zB,EACXr4B,IAAK,SAAAorB,GAAA,OAAM4M,EAASI,EAAMn5B,KAAOmsB,GACjCpmB,QAAS,WACLqnB,EAAS+L,EAAMn5B,OAGlBm5B,MAMjBL,EAASx1B,WACLo1B,OAAU/2B,UAAUiF,OACpB9F,SAAUa,UAAUgF,KACpBoyB,SAAUp3B,UAAUxB,OACpBitB,SAAUzrB,UAAUmF,QAGfgyB,0FCpCT,QAAA39B,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAMm+B,EAAkB,SAAA72B,GAAA,IACpB3B,EADoB2B,EACpB3B,SACA7B,EAFoBwD,EAEpBxD,KACA8G,EAHoBtD,EAGpBsD,QACAizB,EAJoBv2B,EAIpBu2B,MACAO,EALoB92B,EAKpB82B,UACAC,EANoB/2B,EAMpB+2B,OANoB,OAQpBhzB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBAAuBK,QAASyzB,GAAUzzB,GACrDS,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,6BAA6BzG,GAC5Cu6B,EACGhzB,EAAAH,QAAA/J,cAACm9B,EAAApzB,SACGqzB,QAASH,EACTP,MAAOA,IAGXl4B,IAKZw4B,EAAgBh2B,WACZxC,SAAWa,UAAUgF,KACrB1H,KAAW0C,UAAUiF,OACrBb,QAAWpE,UAAUmF,KACrBkyB,MAAWr3B,UAAUiF,OACrB2yB,UAAW53B,UAAUkF,KACrB2yB,OAAW73B,UAAUmF,gBAGVwyB,iFClCf,QAAAn+B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMw+B,EAAe,SAAAl3B,GAAwB,IAArBu2B,EAAqBv2B,EAArBu2B,MAAOU,EAAcj3B,EAAdi3B,QACrBE,EAAeZ,GAAS,gBACxBpe,GAAa,EAAAxU,EAAAC,SAAWuzB,wHAAX9wB,IACX8wB,EADW,YACeF,IAGlC,OACIlzB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWkV,KAIxB+e,EAAar2B,WACT01B,MAASr3B,UAAUiF,OACnB8yB,QAAS/3B,UAAUkF,gBAGR8yB,8FCpBfx/B,OAAA0J,KAAAg2B,GAAA91B,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAu6B,EAAA75B,uFCAA,IAAA85B,EAAA3+B,EAAA,GACA4+B,EAAA5+B,EAAA,IACA0U,EAAA1U,EAAA,GACA6+B,EAAA7+B,EAAA,KAEA8+B,EAAA9+B,EAAA,wDAIAA,EAAA,MAEA,IAAM++B,GAAkB,EAAAJ,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,YAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAC7Bm6B,GAAkB,EAAAN,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,aAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAC7Bo6B,GAAkB,EAAAP,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,YAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAC7Bq6B,GAAkB,EAAAR,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,aAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAG7Bs6B,GAAyB,EAAAT,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,oBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpCu6B,GAAyB,EAAAV,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,YAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpCw6B,GAAyB,EAAAX,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,0BAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpCy6B,GAAyB,EAAAZ,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,oBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpC06B,GAAyB,EAAAb,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,wBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpC26B,GAAyB,EAAAd,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,UAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpC46B,GAAyB,EAAAf,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,iBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpC66B,GAAyB,EAAAhB,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,oBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpC86B,GAAyB,EAAAjB,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,kBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAGpC+6B,GAAU,EAAAlB,EAAAK,MAAK,kBAAMh/B,EAAAO,EAAA,OAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eA4BvBg7B,SAGEC,GAAmBC,UAAWH,EAASnkB,OAAO,EAAAhH,EAAA2C,UAAS,wBAErC,WAKpB,OAJKyoB,IACDA,IAhCFjL,KAAMK,SAAOnzB,SAAWi+B,UAAWjB,EAAiBrjB,OAAO,EAAAhH,EAAA2C,UAAS,oBAAsBie,kBAAkB,IAC5GT,KAAMK,SAAOlQ,MAAWgb,UAAWC,WAAiBvkB,MAAO,GAA+BwkB,GAAI,WAC9FrL,KAAMK,SAAO9yB,UAAW49B,UAAWf,EAAiBvjB,OAAO,EAAAhH,EAAA2C,UAAS,aAAsBie,kBAAkB,EAAM6K,eAAgBC,kBAClIvL,KAAMK,SAAOhQ,KAAW8a,UAAWC,WAAiBvkB,MAAO,GAA+B2kB,OAAO,EAAMH,GAAI,WAC3GrL,KAAMK,SAAO3yB,UAAWy9B,UAAWb,EAAiBzjB,OAAO,EAAAhH,EAAA2C,UAAS,aAAsBie,kBAAkB,EAAM6K,eAAgBG,kBAClIzL,KAAMK,SAAO9P,MAAW4a,UAAWO,UAAiB7kB,OAAO,EAAAhH,EAAA2C,UAAS,SAAsBgpB,OAAO,IAE/FxL,KAAkBK,SAAO5yB,SACzB09B,UAAkBd,EAClB5J,kBAAkB,EAClBJ,SACML,KAAMK,SAAOjQ,SAAkB+a,UAAWL,EAAwBjkB,OAAO,EAAAhH,EAAA2C,UAAS,sBAClFwd,KAAMK,SAAOpQ,UAAkBkb,UAAWR,EAAwB9jB,OAAO,EAAAhH,EAAA2C,UAAS,0BAClFwd,KAAMK,SAAOvzB,iBAAkBq+B,UAAWZ,EAAwB1jB,OAAO,EAAAhH,EAAA2C,UAAS,sBAClFwd,KAAMK,SAAOpzB,iBAAkBk+B,UAAWT,EAAwB7jB,OAAO,EAAAhH,EAAA2C,UAAS,sBAClFwd,KAAMK,SAAOrQ,UAAkBmb,UAAWJ,EAAwBlkB,OAAO,EAAAhH,EAAA2C,UAAS,oBAClFwd,KAAMK,SAAOjzB,OAAkB+9B,UAAWP,EAAwB/jB,OAAO,EAAAhH,EAAA2C,UAAS,oBAClFwd,KAAMK,SAAOnQ,QAAkBib,UAAWN,EAAwBhkB,OAAO,EAAAhH,EAAA2C,UAAS,mBAClFwd,KAAMK,SAAO/P,MAAkB6a,UAAWX,EAAwB3jB,OAAO,EAAAhH,EAAA2C,UAAS,eAClFwd,KAAMK,SAAOtQ,KAAkBob,UAAWV,EAAwB5jB,OAAO,EAAAhH,EAAA2C,UAAS,+BAG1Fwd,KAAMK,SAAOvQ,SAAUqb,UAAWH,EAASnkB,OAAO,EAAAhH,EAAA2C,UAAS,gBAY7DyoB,EAAa/gC,KAAKghC,GACXD,kFClEX,QAAA9/B,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,QACAA,EAAA,yDAEA,IAAMwgC,EAAW,SAAAl5B,GAAA,IACbkO,EADalO,EACbkO,cACAqJ,EAFavX,EAEbuX,oBACAoT,EAHa3qB,EAGb2qB,SACAwO,EAJan5B,EAIbm5B,UAJa,OAMbp1B,EAAAH,QAAA/J,cAACu/B,EAAAx1B,SACGpH,KAAK,gBACLqY,KAAM0C,EACNta,MAAOiR,EACPyc,SAAUA,EACVwO,UAAWA,KAInBD,EAASr4B,WACLqN,cAAqBhP,UAAUiF,OAC/BoT,oBAAqBrY,UAAUxB,OAC/By7B,UAAqBj6B,UAAUkF,KAC/BumB,SAAqBzrB,UAAUmF,iBAGpB,EAAAgqB,EAAA/uB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAASuH,EAAZ8R,EAAY9R,GAAZ,OACI6O,cAAqBpW,EAAQgmB,MAAM5P,cACnCqJ,oBAAqBzf,EAAQgmB,MAAMvG,oBACnCoT,SAAqB7yB,EAAQgmB,MAAM6M,SACnCwO,UAAqB95B,EAAG85B,YALjB,CAObD,+FClCFxhC,OAAA0J,KAAAi4B,GAAA/3B,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAw8B,EAAA97B,uFCAA,QAAA7E,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAgM,EAAAhM,EAAA,OACAA,EAAA,KACA4gC,EAAA5gC,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KACA6gC,EAAA7gC,EAAA,KACA21B,EAAA31B,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAM8gC,EAAW,SAAAx5B,GAAA,IACbuK,EADavK,EACbuK,SACAkvB,EAFaz5B,EAEby5B,iBACAC,EAHa15B,EAGb05B,2BACAna,EAJavf,EAIbuf,uBACAoa,EALa35B,EAKb25B,oBACAC,EANa55B,EAMb45B,mBACAC,EAPa75B,EAOb65B,iBACAC,EARa95B,EAQb85B,gBACAC,EATa/5B,EASb+5B,gBACAC,EAVah6B,EAUbg6B,cACAC,EAXaj6B,EAWbi6B,mBACAC,EAZal6B,EAYbk6B,cACAC,EAban6B,EAabm6B,cACAlsB,EAdajO,EAcbiO,YAda,OAgBbvW,OAAO0J,KAAK6M,GAAazH,IAAI,SAAC7K,EAAMmvB,GAChC,IAAMsP,EAAcD,EAAcx+B,OAC5B0H,IAAes2B,GAAwBE,GAAqBO,EAAKh3B,IAAOs2B,GACxEW,IAAsB,EAAA31B,EAAAwB,eAAcg0B,IAAkBA,EAAcjoB,SAAS8Q,MAAQqX,EAAKh3B,GAE1Fk3B,EACFv2B,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGP,YAAao2B,GAAoBp2B,EACjCD,GAAA,YAAgBzH,EAChBsH,UAAU,4BACVE,YAAA,EACAG,QAAS,WACLw2B,EAAgBM,EAAKh3B,GAAIg3B,EAAKG,MAAO5+B,KAGzCoI,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gCACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eAAc7+B,KAAMA,EAAKuP,cAAejI,UAAU,kCACnDc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,kCAAiC,EAAAmK,EAAA2C,UAAS,OAAQ9B,EAAYtS,OAGtFoI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBAAwBI,EAAc,QAAU+2B,EAAKK,SACpE12B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACVI,EAAc,QAAUU,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQ+vB,EAAKxgB,OAAQrP,SAAUA,EAAUtH,UAAU,+BAOvG,OACIc,EAAAH,QAAA/J,cAAC8gC,EAAA/2B,SACGX,UAAU,uDACV1F,IAAKutB,EACLnT,aAAc,WAAQoiB,GAAgB,EAAMp+B,IAC5Ckc,aAAc,WAAQkiB,GAAgB,KAErCM,GACDt2B,EAAAH,QAAA/J,cAAC+gC,EAAAh3B,SACGs2B,cAAeA,EACf52B,QAAS02B,EACTzvB,SAAUA,IAGZqvB,GAA8B,IAAR9O,GACxB/mB,EAAAH,QAAA/J,cAACghC,EAAAj3B,SAAaN,QAAS22B,IAEvBl2B,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACO0uB,GAA+B,IAAR7O,GAC1B/mB,EAAAH,QAAA/J,cAACihC,EAAAl3B,SAASoa,eAAe,gCAEzBja,EAAAH,QAAA/J,cAACkhC,EAAAn3B,SACG2G,SAAUA,EACV4vB,cAAeC,EACfY,cAAeZ,EAAKY,cACpBC,YAAaxB,IAEjB11B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gCAEPsc,EACIxb,EAAAH,QAAA/J,cAACy/B,EAAA4B,YACGnjB,UAAU,OACVojB,aAAa,EAAA/tB,EAAA2C,UAAS,UACtBqrB,cAAc,EAAAhuB,EAAA2C,UAAS,YACvBmI,SAAS,EAAA9K,EAAA2C,UAAS,qDAEjBuqB,GAGLA,QAShCd,EAAS34B,WACL0J,SAA4BrL,UAAUiF,OACtCu1B,2BAA4Bx6B,UAAUkF,KACtCq1B,iBAA4Bv6B,UAAUkF,KACtCmb,uBAA4BrgB,UAAUkF,KACtCu1B,oBAA4Bz6B,UAAUkF,KACtCw1B,mBAA4B16B,UAAUkF,KACtCy1B,iBAA4B36B,UAAUkF,KACtC01B,gBAA4B56B,UAAUmF,KACtC01B,gBAA4B76B,UAAUmF,KACtC81B,cAA4Bj7B,UAAUxB,OACtCw8B,cAA4Bh7B,UAAUxB,OACtCs8B,cAA4B96B,UAAUmF,KACtC41B,mBAA4B/6B,UAAUmF,KACtC4J,YAA4B/O,UAAUxB,mBAG3B,EAAA2wB,EAAA/uB,SACX,SAAA6R,GAAA,IAAGhS,EAAHgS,EAAGhS,OAAQrH,EAAXqZ,EAAWrZ,QAASuH,EAApB8R,EAAoB9R,GAApB,OACIkL,SAA4BpL,EAAOoL,SACnCmvB,2BAA4Bv6B,EAAOu6B,2BACnCD,iBAA4B3hC,EAAQqD,YAAYs+B,iBAChDE,oBAA4B7hC,EAAQgmB,MAAM6b,oBAC1CE,iBAA4B/hC,EAAQgmB,MAAM+b,iBAC1CC,gBAA4BhiC,EAAQgmB,MAAMud,WAC1CtB,gBAA4BjiC,EAAQgmB,MAAMic,gBAC1CC,cAA4BliC,EAAQgmB,MAAMwd,gBAC1CnB,cAA4BriC,EAAQgmB,MAAMqc,cAC1CD,cAA4BpiC,EAAQgmB,MAAMoc,cAC1CjsB,YAA4BnW,EAAQgmB,MAAM7P,YAC1CsR,uBAA4BlgB,EAAGkgB,uBAC/Bqa,mBAA4Bv6B,EAAGk8B,oBAC/BtB,mBAA4B56B,EAAG46B,qBAfxB,CAiBbT,6GCnJF,QAAA9gC,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqwB,EAAArwB,EAAA,+KAEA,IAAM8iC,EAAoB,SAAAx7B,GASpB,IAAAy7B,EARF1jB,EAQE/X,EARF+X,UACAojB,EAOEn7B,EAPFm7B,YACAC,EAMEp7B,EANFo7B,aACAH,EAKEj7B,EALFi7B,WACA/iB,EAIElY,EAJFkY,QACAoS,EAGEtqB,EAHFsqB,QACAoR,EAEE17B,EAFF07B,UACAC,EACE37B,EADF27B,WAEMC,GAAmB,EAAAj4B,EAAAC,SAAW,aAAX,eAAwCmU,GAAxC1R,EAAAo1B,KAAA,eACL1jB,EADK,SACekjB,GADf50B,EAAAo1B,EAErB,mBAAoCR,GAFfQ,IAIzB,OACI13B,EAAAH,QAAA/J,cAAA,OAAKyE,IAAKq9B,EAAY14B,UAAW24B,GAC7B73B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACXc,EAAAH,QAAA/J,cAACkvB,EAAA8S,iBAAgB54B,UAAU,iCAC3Bc,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,sBAAsBiV,IAExCnU,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACXc,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,0CACVK,QAASgnB,GAETvmB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,2BAA2Bk4B,IAE/Cp3B,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,0CACVK,QAASo4B,GAET33B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,2BAA2Bm4B,OAO/DI,EAAkB36B,WACdkX,UAAc7Y,UAAUiF,OACxBg3B,YAAcj8B,UAAUiF,OACxBi3B,aAAcl8B,UAAUiF,OACxB82B,WAAc/7B,UAAUkF,KACxB8T,QAAchZ,UAAUiF,OACxBmmB,QAAcprB,UAAUmF,KACxBq3B,UAAcx8B,UAAUmF,KACxBs3B,WAAcz8B,UAAUmF,QAGnBm3B,0HCtDT,QAAA9iC,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMojC,EAAgB,SAAA97B,GAAwC,IAArCrE,EAAqCqE,EAArCrE,KAAMsH,EAA+BjD,EAA/BiD,UAAWoxB,EAAoBr0B,EAApBq0B,cAClC0H,SACJ,GAAIpgC,EACA,OAAQA,GACJ,IAAK,SACDogC,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWoxB,QAAiBp4B,EAAWqiB,KAAK,UAAU6J,SAAS,UAAU5rB,EAAE,iBAGzF,MACJ,IAAK,OACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWoxB,QAAiBp4B,EAAWqiB,KAAK,UAAU6J,SAAS,UAAU5rB,EAAE,kBAGzF,MACJ,QACIw/B,EACIh4B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWoxB,QAAiBp4B,EAAWqiB,KAAK,UAAU6J,SAAS,UAAU5rB,EAAE,gVAKjG,OACIwH,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,YAAY+J,MAAM,8BAClG6T,IAMbD,EAAcj7B,WACVoC,UAAW/D,UAAUiF,OACrBxI,KAAWuD,UAAUiF,UAGhB23B,4fC1CT39B,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,IACAm2B,EAAAn2B,EAAA,KACAsjC,EAAAtjC,EAAA,4DAEMujC,grBAAoBj7B,UAAMvB,gDAClBy8B,GACN,OAAOv9B,KAAKG,MAAM2P,gBAAgB0tB,SAASD,yCAGjC,IAAAh8B,EAAAvB,KACV,OAAO8P,kBACFiG,OAAO,SAAA1U,GAAA,IAAGxD,EAAHwD,EAAGxD,KAAH,OAAc0D,EAAKk8B,UAAU5/B,KACpCgK,IAAI,SAAA2K,GAAA,IAAG3U,EAAH2U,EAAG3U,KAAMiD,EAAT0R,EAAS1R,UAAT,OACDsE,EAAAH,QAAA/J,cAAC4F,EAADT,GACIzB,IAAKf,EACL6/B,aAAcn8B,EAAKpB,MAAMu9B,aACzBC,gBAAiBp8B,EAAKpB,MAAMw9B,kBACxB,EAAAN,EAAAO,wBACA98B,EACAS,EAAKpB,MAAM09B,aAEP3f,YAAa3c,EAAKpB,MAAM+d,aAE5B3c,EAAKpB,MAAM29B,aACXv8B,EAAKpB,MAAM49B,+CAO3B,OAAO/9B,KAAKg+B,uBAIpBV,EAAYp7B,WACR47B,aAAiBv9B,UAAUxB,OAC3B+Q,gBAAiBmuB,YAAcC,uBAC/BR,aAAiBn9B,UAAUkF,KAC3Bk4B,gBAAiBp9B,UAAUkF,KAC3ByY,YAAiB3d,UAAUxB,OAC3B8+B,YAAiBt9B,UAAUxB,mBAGhB,EAAA2wB,EAAA/uB,SACX,SAAAkS,GAAA,IAAGrS,EAAHqS,EAAGrS,OAAQC,EAAXoS,EAAWpS,OAAQtH,EAAnB0Z,EAAmB1Z,QAASuH,EAA5BmS,EAA4BnS,GAA5B,OACIo9B,aAAiBt9B,EACjB0d,YAAiBzd,EAAOyd,YACxBpO,gBAAiB3W,EAAQgmB,MAAMrP,gBAC/B+tB,YAAiB1kC,EAAQgmB,MACzB4e,SAAiBr9B,IANV,CAQb48B,qKCvDKr4B,oLCAAA,6QCAPlL,EAAA,IACA4+B,EAAA5+B,EAAA,IAGAokC,EAAApkC,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,MACAqkC,EAAArkC,EAAA,kEAE2B,SAAAo1B,GA2BvB,OAAO/pB,EAAAH,QAAA/J,cAACy9B,EAAA0F,OACJjE,MAAOjL,EAAMiL,MACbxL,KAAMO,EAAMP,KACZ0P,OA7BkB,SAAAn+B,GAClB,IAAI1G,EAAS,KACb,GAAI01B,EAAM4K,YAAcC,WAAU,CAC9B,IAAIC,EAAK9K,EAAM8K,GAGX9K,EAAMP,OAASK,UAAOlQ,QAEtBkb,EADqB95B,EAAbqN,SACMS,SAAS1B,cAAcoB,QAAQwhB,EAAMP,KAAM,KAE7Dn1B,EAAS2L,EAAAH,QAAA/J,cAACy9B,EAAAqB,UAASC,GAAIA,SAEvBxgC,EACK01B,EAAME,mBAAqBF,EAAMC,aAC9BhqB,EAAAH,QAAA/J,cAACqjC,EAAAt5B,SAAYu5B,cAAerP,EAAM+K,eAAgBuE,QAASC,oBAE3Dt5B,EAAAH,QAAA/J,cAACi0B,EAAM4K,UAAP15B,KAAqBF,GAAO8uB,OAAQE,EAAMF,UAItD,IAAMxZ,EAAQ0Z,EAAM1Z,MAAW0Z,EAAM1Z,MAAvB,MAAoC,GAGlD,OAFA1a,SAAS0a,MAAT,GAAqBA,EAAUkpB,gBAC/B7e,UAAIoB,eAAgBxkB,MAAO,cACpBjD,2GClCf,QAAAM,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAqwB,EAAArwB,EAAA,wDAEa6kC,eAAe,SAAAv9B,GAGtB,IAFF+X,EAEE/X,EAFF+X,UACAylB,EACEx9B,EADFw9B,SAEMC,GAAsB,EAAA95B,EAAAC,SAAW,iBAAkBmU,GACzD,OACIhU,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACK8M,GAA2B,UAAdA,EACVhU,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWw6B,GACZ15B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wCAAwCK,QAASk6B,GAC5Dz5B,EAAAH,QAAA/J,cAACkvB,EAAAwB,WAAUtnB,UAAU,8BAEzBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,iCAAgC,EAAAmK,EAAA2C,UAAS,wBAI/DhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWw6B,GACZ15B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wCAAwCK,QAASk6B,GAC5Dz5B,EAAAH,QAAA/J,cAACkvB,EAAAwB,WAAUtnB,UAAU,8BAEzBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oCACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBAQ1BpC,WACTkX,UAAW7Y,UAAUiF,OACrBq5B,SAAWt+B,UAAUmF,sWCtCzB3L,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,IACAglC,EAAAhlC,EAAA,+NAEMilC,6SACFC,kBAAoB,WAChBt3B,EAAKxH,MAAM++B,cACPv3B,EAAKxH,MAAMg/B,eACXx3B,EAAKxH,MAAMg/B,2VAJE98B,UAAMvB,+CAQlB,IAAAqY,EAC0CnZ,KAAKG,MAA5Ci/B,EADHjmB,EACGimB,QAASv6B,EADZsU,EACYtU,KAAMyU,EADlBH,EACkBG,KAAM+lB,EADxBlmB,EACwBkmB,cAE7B,OACIj6B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eAAeK,QAAS3E,KAAKi/B,mBACvCI,EACGj6B,EAAAH,QAAA/J,cAAA,KAAGgT,KAAK,eAAe5J,UAAU,oBAAoBK,QAAS06B,GAC1Dj6B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAA0BgV,EAAMzU,IAGpDO,EAAAH,QAAA/J,cAAC6jC,EAAA1c,YAAW/d,UAAU,oBAAoB21B,GAAImF,GAC1Ch6B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAA0BgV,EAAMzU,cAQxEm6B,EAAW98B,WACPi9B,cAAe5+B,UAAUmF,KACzB25B,cAAe9+B,UAAUmF,KACzBw5B,YAAe3+B,UAAUmF,KACzBwI,KAAe3N,UAAUiF,OACzB8T,KAAe/Y,UAAUgF,KACzB65B,QAAe7+B,UAAUiF,OACzBX,KAAetE,UAAUiF,QAG7B,IAAM85B,GAAwB,EAAA5P,EAAA/uB,SAAQ,SAAA6R,GAAA,OAClC0sB,YADkC1sB,EAAG9R,GACrBw+B,cADU,CAE1BF,KAE8BA,WAAzBM,8VC9CTvlC,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,IACA21B,EAAA31B,EAAA,IACA+nB,EAAA/nB,EAAA,+NAEMylC,6SACF1mB,OACI2mB,mBAAmB,KAGvBC,OAAS,SAACn6B,GACNoC,EAAKhI,IAAM4F,KAkBfo6B,KAAO,WACHh4B,EAAKi4B,cAAa,GAClBj4B,EAAKxH,MAAM++B,iBAGfW,mBAAqB,SAACnjC,GACdiL,EAAKmR,MAAM2mB,mBACP93B,EAAKhI,MAAQgI,EAAKhI,IAAImgC,SAASpjC,EAAMQ,SACrCyK,EAAKg4B,kVAhCAt9B,UAAMvB,mDASVgY,GACT9Y,KAAK+/B,QAAUjnB,EACf/d,SAASwvB,KAAKC,UAAU4N,OAAO,YAAap4B,KAAK+/B,0CA0B5C,IACGN,EAAsBz/B,KAAK8Y,MAA3B2mB,kBADHtmB,EAEqCnZ,KAAKG,MAAvCiZ,EAFHD,EAEGC,UAAWylB,EAFd1lB,EAEc0lB,SAAUn/B,EAFxByZ,EAEwBzZ,SAEvBsgC,GAAkB,EAAAh7B,EAAAC,SAAW,cAC/Bg7B,eAAgBR,IAEdS,GAAe,EAAAl7B,EAAAC,SAAW,+HAAXyC,IAAA,WAAmC0R,EAAcA,IAEtE,OACIhU,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGC,GAAIX,EACJrkC,QAAS,IACTilC,YACIC,MAAW,2BACXC,UAAW,gCACXxX,KAAW,2BAEfyX,eAAA,GAEAp7B,EAAAH,QAAA/J,cAAA,SAAOoJ,UAAU,oBACbc,EAAAH,QAAA/J,cAAA,OACIoJ,UAAW07B,EACXr7B,QAAS3E,KAAK6/B,oBAEdz6B,EAAAH,QAAA/J,cAAA,OACIyE,IAAKK,KAAK0/B,OACVp7B,UAAW47B,GAEX96B,EAAAH,QAAA/J,cAAC4mB,EAAA8c,cACGxlB,UAAWA,EACXylB,SAAUA,IAEbn/B,yDAxDOS,EAAO2Y,GAOnC,MANwB,SAApB3Y,EAAMiZ,UACNN,EAAM2mB,kBAAoBt/B,EAAMsgC,kBACL,UAApBtgC,EAAMiZ,YACbN,EAAM2mB,kBAAoBt/B,EAAMugC,4BAG7B5nB,WA0Df0mB,EAAOt9B,WACHkX,UAAW7Y,UAAUiF,OACrB9F,SAAWa,UAAUiM,WACjBjM,UAAUic,MACVjc,UAAUxB,SAEd8/B,SAA4Bt+B,UAAUmF,KACtCi7B,OAA4BpgC,UAAUmF,KACtCw5B,YAA4B3+B,UAAUmF,KACtC8T,WAA4BjZ,UAAUiF,OACtCo7B,UAA4BrgC,UAAUiF,OACtCi7B,kBAA4BlgC,UAAUkF,KACtCi7B,2BAA4BngC,UAAUkF,MAG1C,IAAMo7B,GAAmB,EAAAnR,EAAA/uB,SACrB,SAAA6R,GAAA,IAAG9R,EAAH8R,EAAG9R,GAAH,OACI+/B,kBAA4B//B,EAAG+/B,kBAC/BC,2BAA4BhgC,EAAGggC,2BAC/BxB,YAA4Bx+B,EAAGw+B,cAJd,CAMvBM,KAE2BA,OAApBqB,uKC7GF57B,iGCAP,wDAAAlL,EAAA,IACA0U,EAAA1U,EAAA,GACA8+B,EAAA9+B,EAAA,cAE8B,kBAE1BqL,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAC29B,EAAAsB,eAAc71B,UAAU,0BACzBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAAyB,EAAAmK,EAAA2C,UAAS,6LCTvDnM,iGCAP,QAAAlL,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,IACAg3B,EAAAh3B,EAAA,KACAi3B,EAAAj3B,EAAA,IACA+mC,EAAA/mC,EAAA,wDAEA,IAAMgnC,EAAS,SAAA1/B,GAKT,IAJF4Y,EAIE5Y,EAJF4Y,cACAqO,EAGEjnB,EAHFinB,YACA0Y,EAEE3/B,EAFF2/B,eACAC,EACE5/B,EADF4/B,cAEQhtB,EAA2BgG,EAA3BhG,QAAS1E,EAAkB0K,EAAlB1K,cACX6lB,GAAW,EAAArE,EAAA3I,iBAAgB7Y,GAC3B2xB,GAAW,EAAAlQ,EAAAhW,SAAQf,GAEzB,OACI7U,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACMiD,GAAiB6lB,GACfhwB,EAAAH,QAAA/J,cAAC4lC,EAAAK,qBACGltB,SAAUA,EACV1E,cAAeA,EACf+Y,YAAaA,EACb4Y,SAAUA,EACVD,cAAeA,EACflmB,OAAQimB,MAO5BD,EAAO7+B,WACH+X,cAAgB1Z,UAAUxB,OAC1BupB,YAAgB/nB,UAAUxB,OAC1BiiC,eAAgBzgC,UAAUiF,mBAGf,EAAAkqB,EAAA/uB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAAH,OACI8gB,cAAgB9gB,EAAQ2C,SAASme,cACjCqO,YAAgBnvB,EAAQ2C,SAASwsB,YACjC0Y,eAAgB7nC,EAAQ2C,SAASklC,iBAJ1B,CAMbD,kFC7CF,QAAAhnC,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,IACA21B,EAAA31B,EAAA,IACAi3B,EAAAj3B,EAAA,QACAA,EAAA,MACAqnC,EAAArnC,EAAA,SACAA,EAAA,yDAEA,IAAMsnC,EAAU,SAAAhgC,GAOV,IANFy5B,EAMEz5B,EANFy5B,iBACA7gB,EAKE5Y,EALF4Y,cACAqnB,EAIEjgC,EAJFigC,gBACA3V,EAGEtqB,EAHFsqB,QACA4V,EAEElgC,EAFFkgC,YACAC,EACEngC,EADFmgC,UAEMN,GAAW,EAAAlQ,EAAAhW,SAAQf,GACnBwnB,GAAY,EAAAz8B,EAAAC,SAAW,YACzBy8B,MAASR,IAGPS,EAAWC,kBACjB,OAEIx8B,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGC,GAAItF,EACJ1/B,QAAS,IACTilC,YACIC,MAAW,4BACXC,UAAW,iCACXxX,KAAW,6BAEfyX,eAAA,GAEAp7B,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACT2V,EAAc1K,eACZnK,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWm9B,GACZr8B,EAAAH,QAAA/J,cAACymC,GACG1nB,cAAeA,EACfinB,SAAUA,EACVM,UAAWA,KAIvBp8B,EAAAH,QAAA/J,cAAC2mC,EAAA58B,SACGsU,QAASioB,EAAUM,cACnBC,aAAcR,IAElBn8B,EAAAH,QAAA/J,cAAC8mC,EAAA/8B,SACG61B,iBAAkBA,EAClBnP,QAAS,SAACrxB,GACNqxB,IACA2V,EAAgBhnC,UAS5C+mC,EAAQn/B,WACJ+X,cAAkB1Z,UAAUxB,OAC5B+7B,iBAAkBv6B,UAAUkF,KAC5Bw7B,cAAkB1gC,UAAUkF,KAC5B67B,gBAAkB/gC,UAAUmF,KAC5BimB,QAAkBprB,UAAUmF,KAC5B67B,YAAkBhhC,UAAUmF,KAC5B87B,UAAkBjhC,UAAUxB,mBAGjB,EAAA2wB,EAAA/uB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAAH,OACI8gB,cAAkB9gB,EAAQ2C,SAASme,cACnCsnB,YAAkBpoC,EAAQ2C,SAASmmC,gBACnCT,UAAkBroC,EAAQ2C,SAAS0lC,UACnCF,gBAAkBnoC,EAAQgmB,MAAMmiB,gBAChC3V,QAAkBxyB,EAAQ2C,SAASomC,gBACnCpH,iBAAkB3hC,EAAQqD,YAAYs+B,mBAP/B,CASbuG,kFCnFF,IAAA7hC,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMooC,EAAW,kBACb/8B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mBAAmBilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aAChGpa,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,kBACRwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,OAAO6J,SAAS,UAAU5rB,EAAE,2WAK3EukC,EAASjgC,WACLkgC,MAAO7hC,UAAUiF,mBAGN,EAAAhG,EAAAwB,UAASmhC,iCCjBxBpoC,EAAA,KACAA,EAAA,KAEA,IAAAsoC,EAAAtoC,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEAsF,OAAOijC,kBAAoBC,mBAE3B,EAAAC,EAAAv9B,YACA,EAAAw9B,EAAAx9B,2OCVA,IAAA4C,GACA66B,OAAA,IACAC,UAAA,KAIA,SAAAC,EAAA7b,GACA,IAAAtiB,EAAAo+B,EAAA9b,GACA,OAAAhtB,EAAA0K,GAEA,SAAAo+B,EAAA9b,GACA,IAAAtiB,EAAAoD,EAAAkf,GACA,KAAAtiB,EAAA,IACA,IAAAnK,EAAA,IAAA8C,MAAA,uBAAA2pB,EAAA,KAEA,MADAzsB,EAAAwoC,KAAA,mBACAxoC,EAEA,OAAAmK,EAEAm+B,EAAAngC,KAAA,WACA,OAAA1J,OAAA0J,KAAAoF,IAEA+6B,EAAAjoC,QAAAkoC,EACAzoC,EAAAD,QAAAyoC,EACAA,EAAAn+B,GAAA,qFCxBA,IAAAqB,EAAA/L,EAAA,OACAA,EAAA,IACAgpC,EAAAhpC,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,MACAo2B,EAAAp2B,EAAA,SACAA,EAAA,0DAEA,EAAA+L,EAAAk9B,YAAYC,gBAAgB,cAEZ,WACZzS,UAAO0S,QAEP,EAAA/S,EAAAgT,oBAEA,IAAMz8B,EAAa,IAAI08B,UAEvBC,UAAeH,KAAKx8B,GACpB48B,UAAgBJ,KAAKx8B,GACrBA,EAAWlG,OAAO0iC,OAClBx8B,EAAWvN,QAAQgmB,MAAM+jB,OAEzB,IAAMK,EAAMxoC,SAAS0vB,eAAe,cAEhC8Y,IACA,EAAAR,EAAAzE,QAAOl5B,EAAAH,QAAA/J,cAACunC,EAAAx9B,SAAIyB,WAAYA,IAAgB68B,uFC3BhD,IAAAz9B,EAAA/L,EAAA,uDACAA,EAAA,MACAypC,EAAAzpC,EAAA,IAEA,IAAI0pC,SAEEJ,EAAkB,WACpB,IAKMK,GAAc,EAAA59B,EAAAI,QAAO,SAAC6U,EAAQ4oB,GAC5BF,IACAA,EAAaG,eAAoB7oB,EACjC0oB,EAAaI,kBAAoBF,KAIzC,OACIT,KAbS,SAAC9iC,GACV0jC,UAAmBZ,KAAKt9B,sBAAoBs9B,KAAK9iC,GAAQsjC,GACzDD,EAAerjC,EAAMK,SAHL,aAkBT4iC,oFCxBf,IAAAv9B,EAAA/L,EAAA,GACAyR,EAAAzR,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KACAo2B,EAAAp2B,EAAA,IACAgM,EAAAhM,EAAA,GACA4L,EAAA5L,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEA,IAAI+jC,SACA2F,SAGE79B,EAAuB,WACzB,IAAMm+B,EAAe,WACjBN,EAAaO,mBAAkB,IAG7BC,EAAS,SAACC,GAEZ,GAAIA,EAAU,CACV,IAAKC,UAAMC,eAAgB,CACvB,IAAKtG,EAAauG,eAEd,YADA,EAAA1+B,EAAAyqB,iBAGJvqB,UAAG0hB,uBAAuB+c,EAAiBC,eAE/C5xB,UAAWuwB,MAAK,EAAAp9B,EAAAI,QAAO,UAAW,WAAQu9B,EAAavlB,YAAcvL,UAAWzU,SAChFulC,EAAaO,mBAAkB,KAIjCQ,EAAY,SAAClU,GAGf,OAFAmU,EAAYnU,GAEJA,EAASlK,UACb,IAAK,YACD,GAAIkK,EAASnzB,MAAO,CAChB,IAAMunC,EAAyD,MAAzCl8B,eAAeI,QAAQ,cACS,mBAAlD,EAAA7C,EAAAqK,kBAAiBkgB,GAAW,QAAS,UAAgCoU,GACrEl8B,eAAe2F,WAAW,eAG9B,EAAAxI,EAAAyqB,sBACQ+T,UAAMC,gBAAmB,YAAY72B,KAAKo3B,QAAMzmC,IAAI,oBACxDoyB,EAASsU,UAAUr2B,UAAYuvB,EAAavvB,SAC5C,EAAA5I,EAAAyqB,kBAEA0N,EAAa+G,kBAAkBvU,GAC/BzqB,UAAG6gB,iBAAiB4d,EAAiBzd,SAAS,GAC9ChhB,UAAG8e,cACH9e,UAAG0e,mBACH1e,UAAGwf,mBACHxf,UAAGof,eACH6f,EACIxU,EAASsU,UAAUG,SACnBjH,EAAakH,SAASlH,EAAavvB,SAASuW,WAE3CgZ,EAAamH,YACdp/B,UAAG4e,mBAEPR,UAAaihB,eACT,OAAO33B,KAAK+iB,EAASsU,UAAUh5B,WAAckyB,EAAakH,SAASlH,EAAavvB,SAAS42B,eAYrG,MACJ,IAAK,kBAGL,IAAK,qBAED,MACJ,IAAK,eACG7U,EAAS1L,eACTkgB,EAAaxU,EAAS1L,aAAawgB,cACnCtH,EAAauH,SAAS/U,EAAS1L,aAAa0gB,QAMhD,MACJ,IAAK,oBACDxH,EAAayH,yBAAyBjV,EAAShL,mBAC/C,MACJ,IAAK,cACDxF,UAAI0lB,oBAAoBlV,GAAYpQ,OAAQ,UAMlD4kB,EAAe,SAAChgB,GACdA,IACAgZ,EAAagH,aAAahgB,GAC1Bjf,UAAGgf,eAAeC,KASpB2f,EAAc,SAACnU,GACjB,IAAMlK,EAAakK,EAASlK,SAE5B,QADmB,EAAArgB,EAAAqK,kBAAiBkgB,GAAW,QAAS,UAEpD,IAAK,gBACL,IAAK,sBACL,IAAK,yBACgB,mBAAblK,GACAqd,EAAagC,UAAS,GAAQlsB,QAAS+W,EAASnzB,MAAMoc,UAE1D,MAEJ,IAAK,YACgB,qBAAb6M,GACAqd,EAAagC,UAAS,GAAQlsB,QAAS,8EAE3C,MACJ,IAAK,eAGL,IAAK,iBACDkqB,EAAagC,UAAS,GAAQlsB,QAAS+W,EAASnzB,MAAMoc,YAiBlE,OACI2pB,KAZS,SAAC9iC,GAIV,OAHA09B,EAAe19B,EAAMI,OACrBijC,EAAerjC,EAAMK,QAGjBsjC,eACAE,SACAO,cAMJkB,YA7Ce,EAAA5/B,EAAA6/B,MAAAn7B,mBAAAC,KAAK,SAAAC,EAAWmc,GAAX,OAAArc,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACdmZ,UAAa2hB,KAAK,kBADJ,OAEpB9H,EAAa4H,WAAW7e,GAFJ,wBAAAjc,EAAAQ,SAAAV,EAAA1K,UAhGC,aAiJd4F,EAEf,IAAM0+B,EAAoB,WACtB,IAAIuB,GAAe,EAwBnB,OACItB,cAxBkB,SAACjU,GACnB,GAAIA,EAAS9I,eAAgB,CAEzB,IADAqe,EAAe,QAAQt4B,KAAK+iB,EAAS9I,eAAese,gBAC/B7hB,UAAa8hB,eAE9B,YADA1mC,OAAOmO,SAASqjB,SAGhBP,EAAS9I,eAAejO,QAK5B0K,UAAa8hB,aAAaF,IAC1B,EAAAr6B,EAAAw6B,eAAc1V,EAAS9I,kBAY3BX,QARY,SAACyJ,GACRA,EAASnzB,OACVyI,EAAoB8/B,WAAWpV,EAASzJ,QAAQA,WArBlC,kFClK1B,IAAA/gB,EAAA/L,EAAA,GAEI0pC,SAEEH,EAAmB,WACrB,IAsBMI,GAAc,EAAA59B,EAAAI,QAAO,YAAa,WAChCu9B,GACAA,EAAawC,WACTvkB,IAAW,8GACXC,WACIukB,OACItb,QAAS,IACT1c,KAAS,6BACTi4B,IAAS,sBACTjpC,OAAS,eAO7B,OACIgmC,KAvCS,SAAC9iC,GACVqjC,EAAerjC,EAAMK,OAErB,IAAMlF,EAAM,qCACZ,IAAIR,SAASqrC,cAAT,gBAAuC7qC,EAAvC,QACJ8D,OAAOgnC,QACHC,IAAa5tC,EAAG,GAAI6tC,GAAI,EAAGxoC,GAAI,EAAG/D,EAAG,EAAG2D,GAAI,GAC5C6oC,IAAW,EACXC,IAAW,2BACXC,SAAW,EACXC,SAAW,EACXC,OAAWlD,EACXmD,WAAW,EACXC,UAAW,GAEX/rC,SAASwvB,MAAM,CACf,IAAMtvB,EAASF,SAASG,cAAc,UACtCD,EAAOK,aAAa,MAAOC,GAC3BR,SAASwvB,KAAK/sB,YAAYvC,MAnBb,aA4CVqoC,kGChDf,QAAAvpC,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,mEAGI,SAAAqpC,iGAAc5hC,CAAAxB,KAAAojC,GACVpjC,KAAKQ,OAAU,IAAIumC,UAAY/mC,MAC/BA,KAAKS,OAAU,IAAIumC,UACnBhnC,KAAK7G,QAAU,IAAI8tC,UAAajnC,MAChCA,KAAKU,GAAU,IAAIwmC,kZCV3BphC,EAAA/L,EAAA,OAKAA,EAAA,KACA2U,EAAA3U,EAAA,IAGAotC,EAAAptC,EAAA,QACAA,EAAA,UACAA,EAAA,KACY42B,0JAAZ52B,EAAA,MACA0U,EAAA1U,EAAA,GACAo2B,EAAAp2B,EAAA,QAGAA,EAAA,KACAqtC,EAAArtC,EAAA,s6BAEA,IACqBgtC,KAiIhB7gC,SAAOC,QASPD,SAAOC,QA2BPD,SAAOC,QAOPD,SAAOC,QAWPD,SAAOC,QAmBPD,SAAOC,QAKPD,SAAOC,QASPD,SAAOC,QA+DPD,SAAOC,QAKPD,SAAOC,QAmCPD,SAAOC,QASPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,oBA9UR,SAAA4gC,EAAYrgC,gGAAYlF,CAAAxB,KAAA+mC,GAAA,IAAAp/B,mKAAA7F,CAAA9B,MAAA+mC,EAAAhlC,WAAAhJ,OAAAiJ,eAAA+kC,IAAA7tC,KAAA8G,MACZ0G,gBADY,OAAAL,EAAAsB,EAAA,UAAArB,EAAAqB,GAAAtB,EAAAsB,EAAA,eAAApB,EAAAoB,GAAAtB,EAAAsB,EAAA,WAAA0/B,EAAA1/B,GAAAtB,EAAAsB,EAAA,WAAA2/B,EAAA3/B,GAAAtB,EAAAsB,EAAA,mBAAA4/B,EAAA5/B,GAAAtB,EAAAsB,EAAA,kBAAA6/B,EAAA7/B,GAAAtB,EAAAsB,EAAA,oBAAA8/B,EAAA9/B,wUATa1B,8DAkIbsI,GACpBvO,KAAKglC,SAASz2B,GAASm5B,kBAAoB,EAC3C1nC,KAAKglC,SAASz2B,GAAS42B,aAAoB,EAC3CwC,aAAWC,UAtIC,kBAsIsB5nC,KAAKglC,UACvC2C,aAAWjX,IAAI,iBAAkBniB,GACjCvO,KAAKuO,QAAUA,gDAIG,IAAAhN,EAAAvB,KACZ6nC,EAAgClD,QAAMmD,YAAY,2CACpDC,GAAkC,EAClC/qC,SACAgrC,SACJ,IAAKH,OAAqCjvC,OAAQ,CAC9CmvC,GACgE,IAD7CF,EAA8Bl4B,QAC7C3P,KAAKglC,SAAShlC,KAAKuO,SAAS05B,4BAKhCD,EAJmB,mBAAAvmC,EAAAC,UAAA9I,OAAIsvC,EAAJtmC,MAAAH,GAAA0yB,EAAA,EAAAA,EAAA1yB,EAAA0yB,IAAI+T,EAAJ/T,GAAAzyB,UAAAyyB,GAAA,OAA0B+T,EAAkB96B,KAAK,SAAA2X,GAAA,OAChEA,IAAoBxjB,EAAKyjC,SAASzjC,EAAKgN,SAAS05B,4BACY,IAA5DJ,EAA8Bl4B,QAAQoV,KAEvBojB,CAAW,YAAa,MAAO,QAAS,kBAEvDnrC,EAA0B,gBAAnBgrC,EAAmC,YAAc,QAIhE,OACIhrC,OACAorC,cAAeJ,EACfA,iBACAD,mEAKiBzX,GACrB,IAAMpa,EAAOoa,EAAShL,mBAAqBgL,EAC3CtwB,KAAKqoC,iBAAkB,EAAAjB,EAAAkB,qBAAoBpyB,GAC3ClW,KAAKuoC,eAAe,8CAINjY,GACdtwB,KAAKglC,SAAShlC,KAAKuO,SAAS+2B,MAA4BhV,EAASsU,UAAUU,MAC3EtlC,KAAKglC,SAAShlC,KAAKuO,SAAS3C,SAA4B0kB,EAASsU,UAAUh5B,SAC3E5L,KAAKglC,SAAShlC,KAAKuO,SAAS02B,YAA6B3U,EAASsU,UAAUK,WAC5EjlC,KAAKglC,SAAShlC,KAAKuO,SAASi6B,cAA4BzqB,UAAS,EAAA0qB,EAAAxjC,WAASyjC,UAAY,KACtF1oC,KAAKglC,SAAShlC,KAAKuO,SAAS05B,0BAA4B3X,EAASsU,UAAU+D,qBAC3E3oC,KAAK4oC,kBAAkBtY,EAASsU,UAAUiE,cAC1C7oC,KAAK8oC,aAAe9oC,KAAK+oC,gEAIXF,GAAc,IAAApgC,EAAAzI,KAC5B6oC,EAAalmC,QAAQ,SAACqmC,GAClBvgC,EAAKu8B,SAASgE,EAAQz6B,SAAS06B,eAAiBD,EAAQC,gBAAkB,GAC1ElwC,OAAO0J,KAAKumC,GAASrmC,QAAQ,SAACumC,GAC1B,IAAMC,EAAyB,YAAVD,EAAsB,YAAcA,EACnDE,OAAyC,IAAnBJ,EAAQE,GAAyB,GAAKF,EAAQE,GACrD,YAAjBC,IACA1gC,EAAKu8B,SAASgE,EAAQz6B,SAAS46B,GAAgBC,6CAYjD76B,GACVvO,KAAKqpC,SAAW96B,4CAKhBvO,KAAKsK,kBAAmB,oKASxBtK,KAAKuO,QAAWo5B,aAAWzpC,IAAI,kBAC/B8B,KAAKglC,SAAW2C,aAAW2B,UA5Nf,mBA6NZtpC,KAAKqpC,SAAW,GAEhBrpC,KAAKuoC,eAAe,SAEpBvoC,cAAoC6F,KAAGwf,2CAAlCkgB,yCAELvlC,KAAKupC,4JAS0B,IAAxBh7B,EAAwB7M,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuO,QACtB,OAAOvO,KAAKwpC,WAAWj7B,GAAS7J,+CASH,IAAxB6J,EAAwB7M,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuO,QACpB,OAAOvO,KAAKwpC,WAAWj7B,GAAS2Q,2CASD,IAAxB3Q,EAAwB7M,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuO,QACtB,OAAOvO,KAAKglC,SAASz2B,4CASc,IAAxBA,EAAwB7M,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuO,QACpBy6B,EAAehpC,KAAKwpC,WAAWj7B,GAC/B3C,EAAeo9B,EAAQp9B,SACvBq5B,EAAe+D,EAAQ/D,WACvBwE,GAAgBxE,GAAcr5B,EAAWA,GAAW,EAAAu7B,EAAAuC,iBAAgBn7B,GAE1E,OACIA,UACA02B,aACA3rB,KAAOmwB,EAAal9B,cACpBkJ,MAAsC,YAA/Bg0B,EAAal9B,eAA8B,EAAAkC,EAAA2C,UAAS,QAAUq4B,oDAMzEzpC,KAAKsK,kBAAmB,2LAKnBtK,KAAKqpC,UAAarpC,KAAKqpC,SAASzwC,QAAWoH,KAAKwpC,WAAWxpC,KAAKqpC,UAAUnqB,0BAEtElf,KAAK2pC,aAAalrB,KAAK,SAAAha,GAAA,OAAMA,IAAOyE,EAAKmgC,YAAarpC,KAAKqpC,WAAarpC,KAAKuO,+BAC9EvO,KAAK0G,WAAWhG,GAAGkpC,iBACfrwB,SAAS,EAAA9K,EAAA2C,UAAS,wCAClBpU,KAAS,WAGb,EAAA0R,EAAA0hB,kDAKJpwB,KAAK0G,WAAWhG,GAAGkpC,iBACfrwB,SAAS,EAAA9K,EAAA2C,UAAS,iCAClBpU,KAAS,SAIbgD,KAAK6pC,cAAc7pC,KAAK2pC,aAAa,aAC/B3pC,KAAK8pC,uEAGfthC,eAAeD,QAAQ,aAAc,KAErCuX,UAAIiqB,eACJ/pC,KAAKgqC,wBAAwBhqC,KAAKqpC,UAClC1Y,EAAYC,kBACN3M,UAAaC,MAAO0gB,UAAa5kC,KAAKiqC,aAAgBC,QAAQ,6BAC9DlqC,KAAKkjC,eACXljC,KAAKmqC,wKAIW,IAAA9gC,EAAArJ,MAEhB,EAAA8F,EAAAuE,MACI,kBAAMhB,EAAKggC,UACXrpC,KAAK8pC,yDAKFjjB,GACP7mB,KAAKglC,SAAShlC,KAAKuO,SAASsY,QAAUA,yCAI3BvoB,GACX0B,KAAKoqC,kBAAoB9rC,uCAIhBwmB,GACT9kB,KAAKglC,SAAShlC,KAAKuO,SAASuW,UAAYA,mCAInCwgB,GACLtlC,KAAKglC,SAAShlC,KAAKuO,SAAS+2B,MAAQA,kCA1UpC,OAAKtlC,KAAKglC,UACFhlC,KAAKglC,SAAShlC,KAAKuO,UAAYvO,KAAKglC,SAAShlC,KAAKuO,SAASsY,QAC/D7mB,KAAKglC,SAAShlC,KAAKuO,SAASsY,QAAQtS,WAFb,sDAa3B,QACKvU,KAAKovB,eAAgBpvB,KAAKilC,YAC+B,cAA1DjlC,KAAKglC,SAAShlC,KAAKuO,SAAS05B,gEAKjB,IAAAv+B,EAAA1J,KACf,OAAOA,KAAK2pC,aAAa9hC,IAAI,SAAApD,GAAA,OACxBiF,EAAK2gC,WAAW5lC,IACjBiF,EAAKugC,SAASxlC,GACViF,EAAK4gC,eAAe7lC,QACpBnH,IACLyY,OAAO,SAAAizB,GAAA,OAAWA,4CAKrB,OAAOhpC,KAAKglC,oBAAoBjsC,OAC1BA,OAAOwxC,OAAOvqC,KAAKglC,UAAUjvB,OAAO,SAAAizB,GAAA,OAAYA,EAAQtkC,sDAM9D,OAAO1E,KAAKglC,oBAAoBjsC,OAASA,OAAO0J,KAAKzC,KAAKglC,mDAK1D,OAAO,EAAAmC,EAAAuC,iBAAgB1pC,KAAKuO,0CAK5B,OAAIvO,KAAKoqC,kBAAkBxxC,OAChBoH,KAAKoqC,kBACLpqC,KAAKovB,aACLpvB,KAAKglC,SAAShlC,KAAKuO,SAAS3C,SAEhC5L,KAAKwqC,0DAMZ,GAAIzxC,OAAO0J,KAAKzC,KAAKqoC,iBAAiBzvC,OAAS,EAAG,CAC9C,IAAM6J,EAAO1J,OAAO0J,KAAKzC,KAAKqoC,iBAC9B,OAAOtvC,OAAOwxC,OAAOvqC,KAAKqoC,gBAAL,GAAwB5lC,EAAK,KAAO,GAAGoC,KAC9D,MAAO,6CAKT,IAAK7E,KAAKovB,aAAc,OAAO,EAC/B,IAAMqb,EAAwB,IAAIn9B,OAAO,kCAAmC,KAC5E,OAAOtN,KAAK2pC,aAAae,MAAM,SAAAjmC,GAAA,OAAMgmC,EAAsBl9B,KAAK9I,0CAKhE,SACIzE,KAAKglC,oBAAoBjsC,QACzBA,OAAO0J,KAAKzC,KAAKglC,UAAUpsC,OAAS,GACpCoH,KAAKuO,SACLvO,KAAKglC,SAAShlC,KAAKuO,SAAS2Q,0CAMhC,OAAOlf,KAAKglC,SAAShlC,KAAKuO,YAAcvO,KAAKglC,SAAShlC,KAAKuO,SAAS02B,+CAKpE,OAAOjlC,KAAK8oC,eAAiB9oC,KAAK8oC,aAAaV,aAAepoC,KAAK8oC,aAAaf,uDAKhF,OAAO/nC,KAAK8oC,cAAiB9oC,KAAK8oC,aAAad,+DAIrB,IAAA99B,EAAAlK,KAC1B,OAAOA,KAAK2pC,aACPv8B,KAAK,SAAAmB,GAAA,QAAarE,EAAK86B,SAASz2B,GAAS02B,wDAIzB,IAAA76B,EAAApK,KACrB,OAC4C,IADrCjH,OAAO0J,KAAKzC,KAAKqoC,iBAAiBxgC,IAAI,SAAA7K,GAAA,OAAQjE,OAAOwxC,OAAOngC,EAAKi+B,gBAAgBrrC,IAAOpE,SAC1F4O,OAAO,SAACmjC,EAAK71B,GAAN,OAAc61B,EAAM71B,GAAK,uCAxHxCvJ,gFACAA,4EACAA,4EACAA,0DAA8B,0CAC9BA,2DAA8B,wCAC9BA,qGACAA,0DAA+B,+BAM/Bq/B,4HAaAA,iIAQAA,sHAUAA,sHAOAA,oHAKAA,gHAKAA,mHAWAA,yHAQAA,qHAOAA,iHAUAA,gHAKAA,oHAKAA,gIAKAA,oIAMAA,4wDAtHgB7D,oKCrBd9hC,0VCAPc,EAAAhM,EAAA,GACA8wC,EAAA9wC,EAAA,yDACAA,EAAA,UAEM+P,aACF,SAAAA,EAAYghC,EAAO3hC,GAAqB,IAAd/I,EAAcsB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAN,kGAAMF,CAAAxB,KAAA8J,GACpC9J,KAAK8qC,MAASA,EACd9qC,KAAKmJ,MAASA,EACdnJ,KAAKI,MAASA,EACdJ,KAAKiK,OAAS,IAAI7M,UAElB4C,KAAK+qC,YAAc,+CASZC,EAAWC,GAClB,IAAI1xB,EAAU0xB,EAAK7kC,QAAQmT,UAAW,EAAAsxB,EAAAK,mBAAkBD,EAAKptC,MAAM0b,QACjD,WAAd0xB,EAAKptC,KACL0b,GAAU,EAAAxT,EAAAolC,UAAS5xB,GAAU0xB,EAAK7kC,QAAQiX,MAAQ4tB,EAAK7kC,QAAQmX,IAAM0tB,EAAK7kC,QAAQiX,IAAS4tB,EAAK7kC,QAAQiX,IAA3E,IAAkF4tB,EAAK7kC,QAAQmX,MACvG,QAAd0tB,EAAKptC,KACZ0b,GAAU,EAAAxT,EAAAolC,UAAS5xB,GAAU0xB,EAAK7kC,QAAQiX,MACrB,cAAd4tB,EAAKptC,OACZ0b,GAAU,EAAAxT,EAAAolC,UAAS5xB,GAAU0xB,EAAK7kC,QAAQglC,MAAOH,EAAK7kC,QAAQilC,SAElErrC,KAAKiK,OAAOuN,IAAIwzB,EAAWzxB,GAC3BvZ,KAAK+qC,8CAQD,IAAApjC,EAAA3H,KAiCJ,OAhCAjH,OAAO0J,KAAKzC,KAAK8qC,OAAOnoC,QAAQ,SAAAqoC,GACvBjyC,OAAOC,UAAUC,eAAeC,KAAKyO,EAAKwB,MAAO6hC,IAItDrjC,EAAKwB,MAAM6hC,GAAWroC,QAAQ,SAAAsoC,GAC1B,IAAMK,EAAaxhC,EAAUyhC,cAAcN,IAEtCK,EAAWzhC,WAA6C,mBAAzByhC,EAAWzhC,aAI3CyhC,EAAWllC,QAAQolC,YAAcF,EAAWllC,QAAQolC,UAAU7jC,EAAKvH,QAIzC,KAA1BuH,EAAKmjC,MAAME,IAAyC,QAApBM,EAAWztC,MAI9BytC,EAAWzhC,UACxBlC,EAAKmjC,MAAME,GACXM,EAAWllC,QACXuB,EAAKvH,MACLuH,EAAKmjC,QAILnjC,EAAK8jC,WAAWT,EAAWM,SAI/BtrC,KAAK+qC,+CASb,OAAO/qC,KAAK0rC,gDASKT,GACjB,IAAMU,EAAiC,iBAATV,EACxBW,GACF/tC,KAAS8tC,EAAiBV,EAAOA,EAAK,GACtC7kC,QAASulC,KAAsBV,EAAK,QAKxC,OAFAW,EAAY/hC,UAAiC,WAArB+hC,EAAY/tC,KAAoBotC,EAAK,GAAGvlC,MAAO,EAAAmlC,EAAAK,mBAAkBU,EAAY/tC,MAAM6H,KAEpGkmC,qBAIA9hC,oICtGf,QAAA/P,EAAA,KACAyR,EAAAzR,EAAA,QAGAA,EAAA,MACA0U,EAAA1U,EAAA,GACA8xC,EAAA9xC,EAAA,KACAgM,EAAAhM,EAAA,sDAKA,IAAM+xC,EAAoB,SAACxtC,GACvB,YAAchB,IAAVgB,GAAiC,OAAVA,GAIfytC,OAAOztC,GAAOqP,QAAQ,MAAO,IAC9B/U,OAAS,GAElBozC,EAAoB,SAAA1tC,GAAA,MAAS,oDAAoDiP,KAAKjP,IACtF2tC,EAAoB,SAAC3tC,EAAO8H,EAAS8lC,GACvC,QAAI,4CAA4C3+B,KAAKjP,KACjD6tC,UAASC,cAAcF,EAAMG,WACtB,IAKTC,EAAoB,SAAAhuC,GAAA,OAAU,uCAAuCiP,KAAKjP,IAC1EiuC,EAAoB,SAAAjuC,GAAA,OAAU,oCAAoCiP,KAAKjP,IACvEkuC,EAAoB,SAAAluC,GAAA,OAAU,6BAA6BiP,KAAKjP,IAChEmuC,EAAoB,SAAAnuC,GAAA,MAAS,mBAAmBiP,KAAKjP,IACrDouC,EAAoB,SAAApuC,GAAA,MAAS,gBAAgBiP,KAAKjP,IAClDquC,EAAoB,SAACruC,EAAO8H,GAAR,OAAoBA,EAAQwmC,MAAMr/B,KAAKjP,IAC3DuuC,EAAoB,SAAAvuC,GAAA,OAAiC,IAAxBA,EAAMwuC,OAAOl0C,QAC1Cm0C,EAAoB,SAAAzuC,GAAA,MAAS,uBAAuBiP,KAAKjP,IACzD0uC,EAAoB,SAAA1uC,GAAA,MAAS,mBAAmBiP,KAAKjP,IAErD2uC,EAAgB,SAAC3uC,EAAO8H,GAAR,OAAoB9H,IAAU4uC,EAAE9mC,EAAQ6zB,IAAI/N,OAC5DihB,EAAgB,SAAC7uC,EAAO8H,GAAR,OAAoB9H,IAAU4uC,EAAE9mC,EAAQ6zB,IAAI/N,OAC5DkhB,EAAgB,SAAC9uC,EAAO8H,GAAR,OAAqBA,EAAQiX,KAAM/e,EAAM1F,QAAUwN,EAAQiX,KAC3EgwB,EAAgB,SAAC/uC,EAAO8H,GAAR,QACjBA,EAAQiX,KAAM/e,EAAM1F,QAAUwN,EAAQiX,QACtCjX,EAAQmX,KAAMjf,EAAM1F,QAAUwN,EAAQmX,MAGrC+vB,EAAc,SAAChvC,EAAOivC,GACxB,IAAMnnC,GAAU,EAAAL,EAAAsP,aAAYk4B,GACxBh0B,EAAU,KACd,GAAInT,EAAQonC,aAAgC,IAAjBlvC,EAAM1F,OAC7B,OAAO,EAGX,IAAI60C,GAAQ,EA8BZ,MA7BI,QAASrnC,GAAkC,mBAAhBA,EAAQiX,MACnCjX,EAAQiX,IAAMjX,EAAQiX,OAEtB,QAASjX,GAAkC,mBAAhBA,EAAQmX,MACnCnX,EAAQmX,IAAMnX,EAAQmX,SAGH,UAAjBnX,EAAQpJ,KAAmB,gBAAkB,SAASuQ,KAAKjP,IAAUwf,MAAMxf,IAC7EmvC,GAAU,EACVl0B,GAAU,EAAA9K,EAAA2C,UAAS,8BACK,UAAjBhL,EAAQpJ,MAAoBoJ,EAAQsnC,WACzC,IAAIpgC,OAAJ,kBAA6BlH,EAAQsnC,SAArC,QAAqDngC,KAAKjP,IAC5DmvC,GAAU,EACVl0B,GAAU,EAAA9K,EAAA2C,UAAS,0CAA2ChL,EAAQsnC,YAC/D,QAAStnC,GAAW,QAASA,IAAYA,EAAQiX,MAASjX,EAAQmX,MAAQjf,IAAW8H,EAAQiX,KACpGowB,GAAU,EACVl0B,GAAU,EAAA9K,EAAA2C,UAAS,mBAAmB,EAAA5F,EAAAmiC,UAASvnC,EAAQiX,IAAKjX,EAAQwnC,cAAe,EAAApiC,EAAAqiC,kBAAiBrd,UAAOtyB,IAAI,kBAAeZ,MACvH,QAAS8I,GAAW,QAASA,KAAa9H,GAAS8H,EAAQiX,KAAOywB,EAAcxvC,EAAO8H,KAC9FqnC,GAAU,EACVl0B,GAAU,EAAA9K,EAAA2C,UAAS,oCAAoC,EAAA5F,EAAAmiC,UAASvnC,EAAQiX,IAAKjX,EAAQwnC,cAAe,EAAApiC,EAAAqiC,kBAAiBrd,UAAOtyB,IAAI,kBAAeZ,IAAY,EAAAkO,EAAAmiC,UAASvnC,EAAQmX,IAAKnX,EAAQwnC,cAAe,EAAApiC,EAAAqiC,kBAAiBrd,UAAOtyB,IAAI,kBAAeZ,MAC5O,QAAS8I,IAAY9H,GAAS8H,EAAQiX,KAC7CowB,GAAU,EACVl0B,GAAU,EAAA9K,EAAA2C,UAAS,6BAA6B,EAAA5F,EAAAmiC,UAASvnC,EAAQiX,IAAKjX,EAAQwnC,cAAe,EAAApiC,EAAAqiC,kBAAiBrd,UAAOtyB,IAAI,kBAAeZ,MACjI,QAAS8I,GAAW0nC,EAAcxvC,EAAO8H,KAChDqnC,GAAU,EACVl0B,GAAU,EAAA9K,EAAA2C,UAAS,6BAA6B,EAAA5F,EAAAmiC,UAASvnC,EAAQmX,IAAKnX,EAAQwnC,cAAe,EAAApiC,EAAAqiC,kBAAiBrd,UAAOtyB,IAAI,kBAAeZ,MAG5I4tC,IAAkBz+B,OAAO8M,QAAUA,EAC5Bk0B,GAGLK,EAAgB,SAACxvC,EAAO8H,GAAR,MACA,UAAjBA,EAAQpJ,MAAoBsB,GAAS8H,EAAQmX,IAAoD,KAA9C,EAAAsuB,EAAAkC,uBAAsBzvC,EAAO8H,EAAQmX,MAsBzFywB,SACS9C,oBAAkB,WAI3B,OAHK8C,IACDA,GAtBJC,SAAiBvoC,KAAM8mC,EAAmBjzB,SAAS,EAAA9K,EAAA2C,UAAS,gFAAiF,2BAC7I6C,SAAiBvO,KAAMsnC,EAAmBzzB,SAAS,EAAA9K,EAAA2C,UAAS,+DAAgE,WAC5H88B,SAAiBxoC,KAAMunC,EAAmB1zB,SAAS,EAAA9K,EAAA2C,UAAS,qDAC5Dk0B,OAAiB5/B,KAAMsmC,EAAmBzyB,SAAS,EAAA9K,EAAA2C,UAAS,2BAC5D+8B,SAAiBzoC,KAAM6mC,EAAmBhzB,SAAS,EAAA9K,EAAA2C,UAAS,8EAC5DxY,QAAiB8M,KAAM2nC,EAAmB9zB,SAAS,EAAA9K,EAAA2C,UAAS,qCAAsC,UAClGg9B,eAAiB1oC,KAAM4mC,EAAmB/yB,SAAS,EAAA9K,EAAA2C,UAAS,qEAC5DiM,KAAiB3X,KAAM0nC,EAAmB7zB,SAAS,EAAA9K,EAAA2C,UAAS,wCAAyC,UACrGi9B,WAAiB3oC,KAAMynC,EAAmB5zB,SAAS,EAAA9K,EAAA2C,UAAS,qCAAsC,OAAQ,UAC1G3E,QAAiB/G,KAAM4nC,EAAmB/zB,QAAS,IACnD+0B,UAAiB5oC,KAAMumC,EAAmB1yB,SAAS,EAAA9K,EAAA2C,UAAS,mEAC5Dm9B,OAAiB7oC,KAAMgnC,EAAmBnzB,SAAS,EAAA9K,EAAA2C,UAAS,yCAC5Do9B,UAAiB9oC,KAAM+mC,EAAmBlzB,SAAS,EAAA9K,EAAA2C,UAAS,0DAC5Dq9B,SAAiB/oC,KAAMinC,EAAmBpzB,QAAS,IACnDwN,KAAiBrhB,KAAMomC,EAAmBvyB,QAAS,IACnDm1B,cAAiBhpC,KAAMmnC,EAAmBtzB,SAAS,EAAA9K,EAAA2C,UAAS,qCAC5Du9B,QAAiBjpC,KAAMqnC,EAAmBxzB,SAAS,EAAA9K,EAAA2C,UAAS,iFAQrD48B,GAGEY,0BAA0B,SAAA5xC,GAAA,OAAWqgB,IAAM,OAAO9P,KAAKvQ,GAAQ,EAAI,EAAIugB,IAAK,oVCtHnFsxB,aACF,SAAAA,iGAAcrtC,CAAAxB,KAAA6uC,GACV7uC,KAAKiK,gDAGL+gC,EAAWzxB,GACNvZ,KAAK8uC,IAAI9D,KACVhrC,KAAKiK,OAAO+gC,QAGiC,IAA7ChrC,KAAKiK,OAAO+gC,GAAWr7B,QAAQ4J,IAC/BvZ,KAAKiK,OAAO+gC,GAAWlyC,KAAKygB,iCAKhC,OAAOvZ,KAAKiK,qCAGV+gC,GACF,OAAIhrC,KAAK8uC,IAAI9D,GACFhrC,KAAKiK,OAAO+gC,GAAW,GAE3B,iCAGPA,GACA,OAAIhrC,KAAK8uC,IAAI9D,GACFhrC,KAAKiK,OAAO+gC,kCAMvBA,GACA,OAAOjyC,OAAOC,UAAUC,eAAeC,KAAK8G,KAAKiK,OAAQ+gC,sBAIlD6D,mICvCf,IAAArjC,EAAAzR,EAAA,IACA0U,EAAA1U,EAAA,mPAEauuC,sBAAsB,SAAChjB,GAAsB,IAAAjkB,EAChD0tC,KACAC,KAON,OALA1pB,EAAkB3iB,QAAQ,SAACmS,GACvB,IAAMm6B,GAAW,EAAAzjC,EAAA0jC,kBAAiBp6B,IACjCm6B,EAAWD,EAASD,GAAMj2C,MAAO+L,KAAMiQ,EAAKxW,MAAOwW,EAAKq6B,YAAaF,MAG1EvnC,EAAArG,MACK,EAAAoN,EAAA2C,UAAS,QAAY29B,GAD1BrnC,EAAArG,GAEK,EAAAoN,EAAA2C,UAAS,UAAY49B,GAF1B3tC,GAMS+tC,qBAAqB,SAAC/G,GAAmC,IAAlBz8B,EAAkBlK,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAP,GACrD2tC,EAAuBt2C,OAAOwxC,OAAOlC,GAAiB7gC,OAAO,SAACgK,EAAGmM,GAAJ,SAAA1b,OAAA8N,EAAcyB,GAAdzB,EAAoB4N,MAIvF,OACI/R,SAHMyjC,EAAqBjiC,KAAK,SAAAzP,GAAA,OAAKA,EAAEW,QAAUsN,IAAYA,EAAWyjC,EAAqB,GAAG/wC,uXCrBxGwH,EAAA/L,EAAA,OAGAA,EAAA,KACAu1C,EAAAv1C,EAAA,SACAA,EAAA,kzBAEqBitC,KAchB9gC,SAAOC,QAKPD,SAAOC,QASPD,SAAOC,uyBA5B6BF,wDAenBspC,GACdvvC,KAAKuvC,iBAAmBA,mCAInBC,EAAWryC,GAChB6C,KAAKwvC,UAAYA,EACjBxvC,KAAK7C,OACDH,KAASG,EAAQA,EAAMH,KAAO,OAC9Buc,QAASpc,EAAQA,EAAMoc,QAAU,sCAK/BA,GACNvZ,KAAKylC,UAAS,GACVlsB,UACAvc,KAAM,kDA/BbuO,2DAA8BkkC,UAAOC,6CACrCnkC,2DAA8BokC,kDAC9BpkC,2DAA8B,8BAE9BA,2DACGvO,KAAS,OACTuc,QAAS,yCAGZhO,qGACAA,2DAA+B,yCAC/BA,2DAA+B,4UAZfy7B,yICPrB,IAAAlW,EAAA/2B,EAAA,IAEa41C,mBAAkB,EAAA7e,EAAA5yB,OAElB0xC,sBAAsB,WAC/B,IAAMC,GACF,OAGgB92C,OAAO0J,MAAK,EAAAquB,EAAAgf,WAC3B/5B,OAAO,SAAAnX,GAAA,OAASixC,EAAkBrS,SAAS5+B,KAC3C4I,OAAO,SAACgJ,EAAK5R,GAEV,OADA4R,EAAI5R,IAAO,EAAAkyB,EAAAgf,UAASlxC,GACb4R,OAKf,OADkBu/B,GAAI,YAIbC,SAAS,SAAAC,GAAA,OAAQ,EAAAnf,EAAAof,QAAOD,oGCrBrC,QAAAl2C,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,mEAGI,SAAAktC,EAAYvgC,gGAAYlF,CAAAxB,KAAAinC,GACpBjnC,KAAKlE,SAAc,IAAIq0C,WAAgBzpC,eACvC1G,KAAK7D,UAAc,IAAIi0C,WAAiB1pC,eACxC1G,KAAKxD,YAAc,IAAI6zC,WAAkB3pC,eACzC1G,KAAK1D,UAAc,IAAIg0C,WAAiB5pC,eACxC1G,KAAKmf,MAAc,IAAIoxB,WAAa7pC,mZCZ5CZ,EAAA/L,EAAA,GAKAgM,EAAAhM,EAAA,GACA0U,EAAA1U,EAAA,GACA2U,EAAA3U,EAAA,IACAy2C,EAAAz2C,EAAA,KACA02C,EAAA12C,EAAA,KACA22C,EAAA32C,EAAA,KAGA42C,EAAA52C,EAAA,KAGAg3B,EAAAh3B,EAAA,KAGAi3B,EAAAj3B,EAAA,wDAYAA,EAAA,+vBAEqBo2C,KAchBjqC,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAcPD,SAAOC,QAmBPD,SAAOC,QAMPD,SAAOC,QAgBPD,SAAOC,QAOPD,SAAOC,QAmCPD,SAAOC,QAOPD,SAAOC,QAQPD,SAAOC,QAwBPD,SAAOC,0zBAhK+BF,sDAevBuU,GACZxa,KAAK4wC,aAAap2B,WAAaA,4CAIjBF,GACdta,KAAK4wC,aAAat2B,YAAcA,kCAI5BkL,GACJxlB,KAAKiL,gBAAgBjL,KAAK6wC,wBAAwBhyC,KAAK,OACvDmB,KAAKwvC,WAAgB,EACrBxvC,KAAK8hC,cAAgB,GACrB9hC,KAAKwlB,YAAgBA,EACrBxlB,KAAKxD,YAAgBwD,KAAK0G,WAAWvN,QAAQqD,YAC7CwD,KAAKxD,YAAYs0C,iBAAgB,GAE7BtrB,GACA3f,KAAGohB,8BAA8BjnB,KAAKwlB,YAAaxlB,KAAK+wC,gBAAgB,0CAKjE92B,GACPA,IAAkBja,KAAKwlB,aAAgBvL,IAC3Cja,KAAKiL,gBAAgBjL,KAAK6wC,wBAAwBhyC,KAAK,OACvDmB,KAAKxD,YAAgBwD,KAAK0G,WAAWvN,QAAQqD,YAC7CwD,KAAKia,cAAgBA,EACrBja,KAAKwlB,aAAiBvL,EAAcuL,aAChC,EAAAwL,EAAAhW,SAAQhb,KAAKia,eACbja,KAAK4wC,cAAe,EAAA5f,EAAAhX,gBAAeha,KAAKia,uBAEjCja,KAAK4wC,aAAan2B,iBAClBza,KAAK4wC,aAAal2B,aAE7B1a,KAAKxD,YAAYs0C,iBAAgB,IACjC,EAAAN,EAAAQ,oBAAmBhxC,KAAKxD,YAAawD,KAAKia,gBAC1C,EAAAw2B,EAAAQ,oBAAmBjxC,KAAKxD,YAAawD,KAAKia,cAAeja,MACzDA,KAAKkxC,kEAIkB,IAAA3vC,EAAAvB,KAEvB,OADAA,KAAKxD,YAAYs0C,iBAAgB,GAC1B,IAAIp2C,QAAQ,SAACC,GAAD,OAAaA,EAAQ4G,EAAK2gC,+DAK7CliC,KAAKmxC,6BACLnxC,KAAKwlB,YAAoB,KACzBxlB,KAAKia,iBACLja,KAAKsoB,eACLtoB,KAAKwhC,aACLxhC,KAAKoxC,mBAAoB,EACzBpxC,KAAK4wC,iBAEL,EAAAF,EAAAW,2BACArxC,KAAKxD,YAAY80C,iBACjBtxC,KAAKxD,YAAY+0C,gBACjBvxC,KAAKxD,YAAYs0C,iBAAgB,uCAKjC9wC,KAAKqL,uBACLrL,KAAKmxC,6BACLnxC,KAAKkiC,yDAIM5R,GACX,MAAI,UAAWA,GACXtwB,KAAKwvC,WAAgB,EACrBxvC,KAAK8hC,cAAgBxR,EAASnzB,MAAMoc,aACpCvZ,KAAKia,oBAGL,EAAAlU,EAAAwB,eAAc+oB,EAAS7K,yBACvBzlB,KAAKwvC,WAAgB,EACrBxvC,KAAK8hC,eAAgB,EAAArzB,EAAA2C,UAAS,8DAC9BpR,KAAKia,iBACLja,KAAKwlB,YAAgB,UACrBxlB,KAAKxD,YAAYs0C,iBAAgB,KAGrC9wC,KAAKia,cAAgBqW,EAAS7K,wBAC1B,EAAAuL,EAAAhW,SAAQhb,KAAKia,eACbja,KAAK4wC,cAAe,EAAA5f,EAAAhX,gBAAeha,KAAKia,uBAEjCja,KAAK4wC,aAAan2B,iBAClBza,KAAK4wC,aAAal2B,cAG7B,EAAA81B,EAAAQ,oBAAmBhxC,KAAKxD,YAAawD,KAAKia,eAEtCja,KAAKia,cAAcu3B,YAAcxxC,KAAKia,cAAcoB,gBACpD,EAAAq1B,EAAAe,wBAAuBzxC,KAAKxD,YAAawD,KAAKia,gBAE9C,EAAAw2B,EAAAQ,oBAAmBjxC,KAAKxD,YAAawD,KAAKia,oBAG9Cja,KAAKkxC,wDAKD,EAAAngB,EAAA3I,iBAAgBpoB,KAAKia,cAAc1K,iBACnC,EAAAzJ,EAAA4rC,kBAAiB1xC,KAAKsoB,aAAa,EAAAyI,EAAA1I,cAAaroB,KAAKsoB,YAAatoB,KAAKia,sDAMvEja,KAAKwlB,cAAgBxlB,KAAKoxC,oBAAqB,EAAArrC,EAAAwB,eAAcvH,KAAKwhC,aAClExhC,KAAKoxC,mBAAoB,EACzBvrC,KAAG6f,KAAK1lB,KAAKwlB,YAAaxlB,KAAKia,cAAcsB,WAAWxQ,KAAK/K,KAAK2xC,gDAK/DrhB,GAAU,IAAA7nB,EAAAzI,KACbswB,EAASnzB,OACT6C,KAAKwhC,WACDM,cAAexR,EAASnzB,MAAMoc,SAGlCvZ,KAAKoxC,mBAAoB,IAEzBpxC,KAAKmxC,6BACLtrC,KAAG0f,qBAAqBvlB,KAAKwlB,aAAaza,MAAK,EAAAjF,EAAAI,QAAO,SAAC0rC,GACnDnpC,EAAKsoC,eAAea,GACpBnpC,EAAK+4B,WACDlmB,WAAgBgV,EAAS5K,KAAKmsB,SAC9BC,eAAgBxhB,EAAS5K,KAAKosB,yEAO1CjsC,KAAGsgB,OAAO,yBAA0BnmB,KAAK+wC,gBAAkBvrB,YAAaxlB,KAAKwlB,+DAKtExlB,KAAKwhC,UAAUM,qDAUtB,OAAO,EAAA6O,EAAAoB,kBAAiB/xC,2CAKxB,OAAO,EAAA2wC,EAAAqB,gBAAehyC,KAAKia,sDAK3B,OAAO,EAAA+W,EAAAlW,kBAAiB9a,KAAKia,gDAK7B,OAAO,EAAA+W,EAAA9V,YAAWlb,KAAKia,qDAKvB,OAAO,EAAA+W,EAAA5V,gBAAepb,KAAKia,mDAK3B,OAAO,EAAA+W,EAAAnW,eAAc7a,KAAKia,wDAK1B,OAAO,EAAA+W,EAAAxV,oBAAmBxb,KAAKia,gDAK/B,OAAO,EAAA+W,EAAAhW,SAAQhb,KAAKia,4DAKpB,OAAO,EAAA+W,EAAApV,mBAAkB5b,KAAKia,kDAK9B,OAAO,EAAA+W,EAAAlV,WAAU9b,KAAKia,oDAKtB,OAAO,EAAA+W,EAAArV,YAAW3b,KAAKia,wDAKvB,OAAO,EAAA+W,EAAA/U,eAAcjc,KAAKia,uDAlO7B1O,iFACAA,2DAA2BA,aAAWxM,6CACtCwM,2DAA2BA,aAAWxM,2CACtCwM,2DAA2BA,aAAWxM,8CACtCwM,2DAA2BA,aAAWxM,2CAEtCwM,2DAA+B,sCAC/BA,0DAA+B,2CAC/BA,2DAA+B,i0CAiK/Bq/B,qHAKAA,qHAKAA,iHAKAA,gHAKAA,mHAKAA,sHAKAA,mHAKAA,uHAKAA,yHAKAA,iHAKAA,uHAKAA,sGAjOgBuF,6GCjCrB,IAAArc,EAAA/5B,EAAA,KAEai3C,qBAAqB,SAACX,EAAiBp2B,GAGhD,GAFAo2B,EAAgBiB,iBAEZr3B,EAAe,KACP1K,EAAsD0K,EAAtD1K,cAAe0E,EAAuCgG,EAAvChG,QAASC,EAA8B+F,EAA9B/F,aAAcE,EAAgB6F,EAAhB7F,aAE1CH,GAAWC,KACXm8B,EAAgB4B,eACZ1iC,EACA0E,GAAWC,EACXE,EACA,MAEIof,WAAexL,sBAAoBG,MACnC+pB,eAAe,IAIvB7B,EAAgB8B,oBAAmB,EAAM5iC,uHCpBrD,IAAA6iC,EAAAr4C,EAAA,KAMAk3B,EAAAl3B,EAAA,6HAEak3C,qBAAqB,SAACZ,EAAiBp2B,GAC5CA,GACAlhB,OAAO0J,KAAK4vC,GAAiB1vC,QAAQ,SAACwuB,GAClC,KAAIA,KAAekf,EAAgBiC,SAAnC,CAEA,IAAM/gB,EAAgB8gB,EAAgBlhB,GAAalX,GAC/CsX,GACA8e,EAAgBkC,aAAahhB,OAPtC,IAaD8gB,UACD/gB,sBAAoBM,SAAS50B,KAAY00B,sBADxChqB,EAAA8qC,EAEDlhB,sBAAoBS,cAAc/0B,KAAO60B,4BAFxCnqB,EAAA8qC,EAGDlhB,sBAAoBW,WAAWj1B,KAAUg1B,yBAHxCtqB,EAAA8qC,EAIDlhB,sBAAoBa,WAAWn1B,KAAUk1B,yBAJxCxqB,EAAA8qC,EAKDlhB,sBAAoBoB,UAAU11B,KAAWw1B,wBALxCggB,kFCrBN,QAAAz4C,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMm5B,EAAa,SAAA7xB,GAAA,IACfoyB,EADepyB,EACfoyB,MACAD,EAFenyB,EAEfmyB,WAFe,OAIfpuB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,6BAAX,sBAA+DuuB,IAC3EpuB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BAA4BmvB,KAInDP,EAAWhxB,WACPuxB,MAAYlzB,UAAUiF,OACtBguB,WAAYjzB,UAAUiF,mBAEX,EAAAhG,EAAAwB,UAASkyB,+UClBxB1zB,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAyR,EAAAzR,EAAA,IACA4U,EAAA5U,EAAA,IACAuJ,EAAAvJ,EAAA,SACAA,EAAA,6DAEMu5B,cACF,SAAAA,EAAYnzB,gGAAOqB,CAAAxB,KAAAszB,GAAA,IAAA3rB,mKAAA7F,CAAA9B,MAAAszB,EAAAvxB,WAAAhJ,OAAAiJ,eAAAsxB,IAAAp6B,KAAA8G,KACTG,IADS,OAAAwH,EAOnB8qC,kBAAoB,WAChB9qC,EAAKsR,SAAS,SAACH,GAAD,OAAe45B,YAAa55B,EAAM45B,eANhD/qC,EAAKmR,OACD45B,YAAa/qC,EAAKxH,MAAMwyC,kBAHbhrC,qUADOtF,UAAMvB,+CAa5B,IAAI8xC,EACAxtC,EAAAH,QAAA/J,cAAC23C,EAAA5tC,SACGX,UAAWtE,KAAKG,MAAMuzB,eACtBjC,WAAYzxB,KAAKG,MAAMsxB,WACvB1W,OAAQ/a,KAAKG,MAAM4a,SAU3B,OAPI/a,KAAKG,MAAMwyC,mBACXC,EACIxtC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBAAyB0U,aAAchZ,KAAKyyC,kBAAmBv5B,aAAclZ,KAAKyyC,mBAC3FG,IAKVxtC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW,oBACXtE,KAAK8Y,MAAM45B,YACRttC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oCACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAA,kFAA6FtE,KAAKG,MAAMsyB,aACzGrtB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oCACXc,EAAAH,QAAA/J,cAACoI,EAAA4lB,WAAUE,OAAO,KAAKE,MAAM,KAAKhlB,UAAU,gCAC5Cc,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,2BAA0B,EAAAqK,EAAA+D,WAAU1S,KAAKG,MAAMoyB,YAAYvgB,OAAO,cAEnF5M,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qCACXc,EAAAH,QAAA/J,cAAA,UAAI,EAAAsQ,EAAAmiC,UAAS3tC,KAAKG,MAAMmyB,gBAKtCsgB,YAKlBtf,EAAgBwf,cACZrgB,YAAa,OAGjBa,EAAgBpxB,WACZuwB,YAAkBlyB,UAAUszB,OAAO,MAAO,WAC1C8e,iBAAkBpyC,UAAUkF,KAC5BiuB,eAAkBnzB,UAAUiF,OAC5BisB,WAAkBlxB,UAAUiM,WAAYjM,UAAUkM,OAAQlM,UAAUiF,SACpE+sB,WAAkBhyB,UAAUiM,WAAYjM,UAAUkM,OAAQlM,UAAUiF,SACpE8sB,WAAkB/xB,UAAUiM,WAAYjM,UAAUkM,OAAQlM,UAAUiF,SACpEuV,OAAkBxa,UAAUszB,OAAO,MAAO,qBAE/B,EAAAr0B,EAAAwB,UAASsyB,i1BCpExBv5B,EAAA,KACA0U,EAAA1U,EAAA,GAOO,IAAMg5C,kBAAgB,SAAAC,GAAA,OAASvD,UAAO5f,KAAKmjB,GAAOtD,OAQ5Ch9B,aAAW,SAAApU,GACpB,IAAKA,EAAO,OAAO,EAAAmqC,EAAAxjC,WAASyqC,MAC5B,GAAIpxC,aAAiBmxC,WAAUnxC,EAAM20C,WAAa30C,EAAM40C,QAAS,OAAO50C,EACxE,IAAM60C,EAAkC,iBAAV70C,EAGxB80C,GAAiB,EAAA3K,EAAAxjC,SAAO,IAAIouC,KAAK/0C,IAAQ0T,OAAO,cACtD,OAAOmhC,EAAYJ,EAAcz0C,GAASmxC,UAAOC,IAAI0D,IAS5CE,YAAU,SAACC,EAAYlhC,GAAS,IAAAhR,EACVgR,EAAOA,EAAKE,MAAM,MAAQ,EAAG,EAAG,GADtBC,EAAAC,EAAApR,EAAA,GAClC4Q,EADkCO,EAAA,GAC5BT,EAD4BS,EAAA,GACpBqiB,EADoBriB,EAAA,GAGzC,OADA+gC,EAAWthC,KAAKA,GAAMF,OAAOA,GAAU,GAAG8iB,OAAOA,GAAU,GACpD0e,GAuDEjhC,GA9CAkhC,gBAAgB,SAACR,EAAO3gC,GAAR,OAAiBihC,EAAQ5gC,EAASsgC,GAAQ3gC,GAAMwd,QAEhE4jB,cAAc,SAACphC,GAAD,OAAU,EAAAo2B,EAAAxjC,SAAOoN,QAAQ/U,GAAWoyC,MAAM19B,OAAO,8BAE/D0hC,aAAa,SAACthC,GAAD,IAAOuhC,EAAPjyC,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAqB,aAArB,OAAsCgR,EAASN,GAAMJ,OAAO2hC,IAOzEC,kBAAkB,SAACxhC,GAC5B,IAAM+F,EAAOzF,EAASN,GAAMyhC,QAAQ,OAAO17B,KAAKzF,IAAWmhC,QAAQ,OAAQ,QAC3E,OAASzhC,GAAQ+F,EAAO,EAAK,GAAKA,GASzB6X,kBAAkB,SAACnY,EAAYC,GAAb,OAC3B23B,UAAO70B,SAAS60B,UAAO5f,KAAK/X,GAAUK,KAAKs3B,UAAO5f,KAAKhY,MAO9CkY,iBAAiB,SAACnV,GAC3B,IAAMhd,EAAIsO,KAAKqS,MAAM3D,EAASk5B,UACxB5hC,EAAI0I,EAASrJ,QACb7T,EAAIkd,EAASnJ,UACbzX,EAAI4gB,EAASm5B,UACfC,GAAgB,EAAAvL,EAAAxjC,SAAO,GAAGgN,KAAKC,GAAGH,OAAOrU,GAAGq2C,QAAQ/5C,GAAGgY,OAAO,YAIlE,OAHIpU,EAAI,IACJo2C,EAAmBp2C,EAAnB,KAAwBA,EAAI,GAAI,EAAA6Q,EAAA2C,UAAS,SAAU,EAAA3C,EAAA2C,UAAS,QAA5D,IAAsE4iC,GAEnEA,GAOE1hC,cAAc,SAAA2hC,GAAA,MAAY,uEAAuE1mC,KAAK0mC,KAMtGC,cAAc,SAAAD,GAAA,OAAY3hC,EAAY2hC,IAAa,uBAAuB1mC,KAAK0mC,EAAS1hC,MAAM,KAAK,KAMnG4hC,gBAAgB,SAAAF,GAAA,OAAY3hC,EAAY2hC,IAAa,eAAe1mC,KAAK0mC,EAAS1hC,MAAM,KAAK,KAM7F6hC,cAAc,SAAAhiC,GAAA,OAAQ,EAAAq2B,EAAAxjC,SAAOmN,EAAM,eAAe6gC,WAOlDoB,UAAU,SAACjiC,EAAMkiC,GAAP,OAAuB5hC,EAASN,GAAMmF,QAAQC,IAAI88B,EAAa,QAOzEC,YAAY,SAACniC,EAAMoiC,GAAP,OAAyB9hC,EAASN,GAAMmF,QAAQC,IAAIg9B,EAAe,UAO/EC,WAAW,SAACriC,EAAMsiC,GAAP,OAAwBhiC,EAASN,GAAMmF,QAAQC,IAAIk9B,EAAc,SAO5EC,UAAU,SAACviC,EAAMkiC,GAAP,OAAuB5hC,EAASN,GAAMmF,QAAQe,SAASg8B,EAAa,QAO9EM,YAAY,SAACxiC,EAAMoiC,GAAP,OAAyB9hC,EAASN,GAAMmF,QAAQe,SAASk8B,EAAe,UAOpFK,WAAW,SAACziC,EAAMsiC,GAAP,OAAwBhiC,EAASN,GAAMmF,QAAQe,SAASo8B,EAAc,SAOjFx8B,UAAU,SAAC48B,EAAQC,GAAT,OAAoBtF,UAAOpyB,IAAI3K,EAASoiC,GAASpiC,EAASqiC,KAMpEC,kBAAkB,SAAC5iC,GAAD,OAAUM,EAASN,GAAMmF,QAAQs8B,QAAQ,SAAS7hC,OAAO,gUCnKxFtD,EAAA3U,EAAA,IACAq4C,EAAAr4C,EAAA,mLAQa03C,yBAAyB,SAACpB,EAAiBp2B,GACpD,IAAMg7B,EAAsBC,EAAWC,YAAY9E,EAAiBp2B,GAEhEA,EAAcoB,iBACd45B,EAAoBG,sBACpBH,EAAoBI,aAOfhE,0BAA0B,WACnC6D,EAAWI,mBAbR,IAkBDC,EAAc,SAACC,EAAWC,GAAZ,OAFR,SAACC,GAAD,QAAAj0C,EAAAC,UAAA9I,OAAS+8C,EAAT/zC,MAAAH,EAAA,EAAAA,EAAA,KAAA0yB,EAAA,EAAAA,EAAA1yB,EAAA0yB,IAASwhB,EAATxhB,EAAA,GAAAzyB,UAAAyyB,GAAA,OAAkBuhB,EAAI7tC,IAAI,SAACqkB,EAAKC,GAAN,OAAcwpB,EAAKnuC,OAAO,SAACgK,EAAGokC,GAAJ,SAAA3zC,OAAA8N,EAAiByB,IAAGokC,EAAKzpB,OAAQD,MAG7F2pB,CAAIL,EAAWC,GAAWjuC,OAAO,SAACmjC,EAAK/X,GAAN,SAAA3wB,OAAA8N,EAAmB46B,KAAOrmB,MAAOsO,EAAK,GAAIvgB,KAAMugB,EAAK,YAIpFsiB,EAAc,WAChB,IAAIY,SAEEC,EAAoB,SAAC1F,EAADx9B,GAA2C,IAApBoH,yHAAoB+7B,CAAAnjC,MAC3DojC,GACFC,cAAej8B,EAAc/G,WAC7BgH,MAAeD,EAAcsO,gBAC7BnO,IAAeH,EAAcoB,eAC7B/G,MAAgB2F,EAAcu3B,WAAa,GAEzC2E,KAEAC,EAAwB,SAACC,EAAgBzjB,EAAMzG,GACjD,IAAMsG,EAAc6jB,EAAiB1jB,EAAMzG,GACrCoF,EAAgB8kB,EAAep8B,EAAekS,EAAKsG,GAErDlB,GAAe8e,EAAgBkC,aAAahhB,IAG9C+kB,EAAmB,SAAC1jB,EAAMzG,GAC5B,IAAIsG,EAAc,MAClB,GAAIG,GAAQA,EAAKtO,MAAO,CACpB,GAAI6H,EAAM,GAAKgqB,EAAqBv9C,OAAQ,CACxC,IAAM29C,EAAYJ,EAAqBhqB,EAAM,IAExCyG,EAAKtO,OAASiyB,EAAUjyB,QAAOmO,EAAc,WAC7CG,EAAKtO,QAAWiyB,EAAUjyB,QAAOmO,EAAc8jB,EAAU9jB,aAElE0jB,EAAqBr9C,KAArBuH,KAA+BuyB,GAAMH,iBAEzC,OAAOA,GAUL+jB,EAAiB,SAAA5jB,GAAA,OAClBA,EAAKvgB,OAAS4H,EAAcsO,kBAAoBqK,EAAKvgB,OAAS4H,EAAcoB,gBAS3Eo7B,EAAiB,SAAC7jB,EAAMzG,GAC1B,IAAMuqB,EAAoB,IAARvqB,GALF,SAAAyG,GAAA,OAASA,EAAKvgB,OAAU4H,EAAcsO,gBAKvBouB,CAAY/jB,GACrCgkB,EAJS,SAAAhkB,GAAA,OAASA,EAAKvgB,OAAU4H,EAAcoB,eAInCw7B,CAAWjkB,GACvBkkB,EAVW,SAAAlkB,GAAA,OAChBA,EAAKvgB,KAAO4H,EAAcsO,iBAAmBqK,EAAKvgB,KAAO4H,EAAcoB,eAStD07B,CAAankB,GAE3B8jB,GAAUN,EAAsBlkB,wBAAuBU,EAAMzG,GAC7DyqB,GAASR,EAAsB5jB,uBAAsBI,EAAMzG,GAC3D2qB,GAxBkB,SAACT,EAAgBzjB,EAAMzG,GAC7C,IAAMsG,EAAc6jB,EAAiB1jB,EAAMzG,GACrCoF,EAAgB8kB,EAAep8B,EAAe2Y,EAAMzG,EAAKsG,GAE3DlB,GAAe8e,EAAgBkC,aAAahhB,GAoBjCylB,CAAkBrkB,yBAAwBC,EAAMzG,IAW7D8qB,EAAiB,SAAC7+C,GAAS,IAAA8+C,EACH9+C,EAAK0mB,QAAvBq4B,EADqBD,EACrBC,OAAQ3jC,EADa0jC,EACb1jC,OATH,SAAA4jC,GAAsBC,EAAAD,GAAA73C,MAAA,GAE9Bme,KAAK,SAAClM,EAAGmM,GAAJ,OAAWnM,EAAEa,MAAQsL,EAAEtL,OAC5B0D,OAAOygC,GAEG7zC,QAAQ8zC,GAOvBa,CAFc/B,EAAY4B,EAAQ3jC,KAKtC,OACI4hC,oBAAqB,kBACjBvvC,KAAGggB,YAAHxlB,KAAoB41C,IAAqBlrC,KAAKksC,IAClD5B,SAAU,YAhFJ,SAACkC,GAAD,OAAQ,SAAAl2C,GAAA,OAAAg2C,EAAAh2C,GAAA9B,MAAA,GAAoBoD,QAAQ40C,IAiFtCC,CAAUpB,EAAVoB,EAAkC9lB,qBAAoBG,2BAA0BG,2BAEpFylB,cAAe,kBAAMx9B,EAAcuL,eAI3C,OACI2vB,YAAa,SAAC9E,EAAiBp2B,GAI3B,OAHK67B,GAAYA,EAAS2B,kBAAoBx9B,EAAcuL,cACxDswB,EAAWC,EAAkB1F,EAAiBp2B,IAE3C67B,GAEXR,gBAAiB,WAETQ,IAAUA,EAAW,QA9FjB,uTChCpB/7C,EAAA,IACAyR,EAAAzR,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,KACAgV,EAAAhV,EAAA,KACA4U,EAAA5U,EAAA,+KAEA,IAAM29C,EAAgB,WAClB,IAAIC,SAaJ,OACIz5C,IAAK,WAID,OAHKy5C,IACDA,GAbRpoC,eAAgB,EAAAd,EAAA2C,UAAS,iBACzByG,YAAgB,EAAApJ,EAAA2C,UAAS,cACzBwmC,YAAgB,EAAAnpC,EAAA2C,UAAS,cACzBymC,gBAAgB,EAAAppC,EAAA2C,UAAS,kBACzB0G,UAAgB,EAAArJ,EAAA2C,UAAS,YACzB0mC,WAAgB,EAAArpC,EAAA2C,UAAS,aACzB2mC,gBAAgB,EAAAtpC,EAAA2C,UAAS,kBACzBkP,QAAgB,EAAA7R,EAAA2C,UAAS,YAQdumC,IAnBG,GAwBT3F,iBAAiB,SAAC/3B,GAAkB,IAAA5Y,EAEzCgf,EAMApG,EANAoG,UACA9Q,EAKA0K,EALA1K,cACA3D,EAIAqO,EAJArO,SACAuO,EAGAF,EAHAE,WACAy9B,EAEA39B,EAFA29B,WACA/7B,EACA5B,EADA4B,UAGE87B,EAAgBD,EAAax5C,MAK7B85C,EAAuBn8B,IAAcA,GAAa1B,EAClD89B,EAAuB99B,IAAc,EAAAxL,EAAA8kC,aAA0B,KAAbt5B,GAClD+9B,EAAuBN,IAAeI,GAAuB,EAAAxsC,EAAAmiC,UAASiK,GAAc,IAE1F,OAAAlwC,EAAArG,KACKs2C,EAAcpoC,eAAiB,EAAAR,EAAAyT,0BAAyBjT,IAD7D7H,EAAArG,EAEKs2C,EAAc9/B,WAAiBogC,GAFpCvwC,EAAArG,EAGKs2C,EAAcC,WAAiBM,GAHpCxwC,EAAArG,EAIKs2C,EAAcE,eAAiBzyC,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQ2U,EAAWzU,SAAUA,KAJxEvK,GAQSgL,cAAc,SAACT,EAAUF,GAAX,OAAsBtG,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQA,EAAQE,SAAUA,KAErEmmC,mBAAmB,SAAC3xC,GAAU,IAAAyS,EACvC,IAAKzS,EAAM8gC,SAAU,SADkB,IAInCjnB,EAKA7Z,EALA6Z,cACAk+B,EAIA/3C,EAJA+3C,SACAxmB,EAGAvxB,EAHAuxB,cACAymB,EAEAh4C,EAFAg4C,iBACAC,EACAj4C,EADAi4C,aAGEV,EAAgBD,EAAax5C,MAInC,OAAAmC,KACQg4C,OACCV,EAAc7/B,SAAWmC,EAAcI,cAAe,EAAA1L,EAAA8kC,aAAyC,KAA5Bx5B,EAAcI,eADlF3S,EAAAmL,KAGC8kC,EAAcG,UAAiBK,GAAW,EAAA3sC,EAAAmiC,UAASwK,GAAY,KAHhEzwC,EAAAmL,EAIC8kC,EAAcI,eAAiBpmB,GAAgB,EAAAhjB,EAAA8kC,aAA6B,KAAhB9hB,GAAwB,KAJrF9e,GADRnL,KAOKiwC,EAAcr3B,OAASlb,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQ0sC,EAAkBxsC,SAAUqO,EAAcrO,yYClFzF9F,EAAA/L,EAAA,GAIA2U,EAAA3U,EAAA,IACAu+C,EAAAv+C,EAAA,KACA42C,EAAA52C,EAAA,KAIAi3B,EAAAj3B,EAAA,wDAKAA,EAAA,+vBAEqBq2C,KAKhBlqC,SAAOC,QAUPD,SAAOC,QAOPD,SAAOC,QAePD,SAAOC,QA0BPD,SAAOC,QAsCPD,SAAOC,QAUPD,SAAOC,QA4CPD,SAAOC,QAKPD,SAAOC,QAcPD,SAAOC,QASPD,SAAOC,QAQPD,SAAOC,stBA/LgCF,mDAiBpCjG,KAAKu4C,aACLv4C,KAAKw4C,YAAa,EAClBx4C,KAAK7C,MAAa,4CAILmzB,GACbtwB,KAAKw4C,YAAa,EACd,UAAWloB,EACXtwB,KAAK7C,MAAQmzB,EAASnzB,MAAMoc,SAGhCvZ,KAAK7C,MAAQ,GACTmzB,EAASn0B,UAAUs8C,YACnBz4C,KAAKu4C,UAAYjoB,EAASn0B,UAAUs8C,UAC/B5wC,IAAI,SAAA6wC,GAAA,OAAO,EAAAJ,EAAAK,yBAAwBD,KACnCh7B,KAAK,SAACk7B,EAAMC,GAAP,OAAgBA,EAAKC,UAAYF,EAAKE,yDAKrCxoB,GAAU,IAAA/uB,EAAAvB,KAIzB,GAHI,UAAWswB,IACXtwB,KAAK7C,MAAQmzB,EAASnzB,MAAMoc,SAE3B+W,EAAShJ,YAAd,CAJyB,IAAAyxB,EAKYzoB,EAAShJ,YAAtC9B,EALiBuzB,EAKjBvzB,YAAqBwzB,EALJD,EAKJ7yC,OAET,QAAR8yC,GACAnzC,KAAG1J,YAAY4O,KAAK,SAACkuC,GACjB,IAAMC,EAAUD,EAAI98C,UAAUs8C,UAAUrrC,KAAK,SAAAsrC,GAAA,OAAQA,EAAIlzB,cAAiBA,IACrE0zB,GACL33C,EAAK43C,gBAAgBD,KAGzBrzC,KAAGohB,8BAA8BzB,EAAaxlB,KAAKo5C,6BAA6B,IACjE,SAARJ,GAEPnzC,KAAG0f,qBAAqBC,GAAaza,MAAK,EAAAjF,EAAAI,QAAO,SAAC0rC,GAE9C/rC,KAAGsgB,OAAO,yBAA0B5kB,EAAK83C,uBAAyB7zB,YAAa8K,EAAS9K,cACxFjkB,EAAK83C,sBAAsBzH,2DAMXthB,GACxB,KAAI,UAAWA,GAAf,CAEA,IAAMgpB,EAAWhpB,EAAS7K,uBACpB8zB,EAAqBv5C,KAAKu4C,UAAUnrC,KAAK,SAACosC,GAAD,OAAeA,EAAS/0C,KAAQ60C,EAAS9zB,cAExF,GAAK+zB,EAAL,CAEA,IAAME,EAAkBF,EAAmBG,WACrCC,GAAmBL,EAAS/9B,UAC5Bq+B,GAAmBN,EAASr+B,OAElCs+B,EAAmBznB,cAAkD,IAAjCwnB,EAASv9B,oBACzCu9B,EAASn/B,WAETm/B,EAASxnB,cAEbynB,EAAmBh+B,UAAmB+9B,EAAS/9B,UAC/Cg+B,EAAmBG,WAAmBC,EACtCJ,EAAmBM,gBAAmBP,EAASpmC,WAC/CqmC,EAAmBO,gBAAmBR,EAASS,aAC/CR,EAAmBK,YAAmBA,EACtCL,EAAmB/H,WAAmB8H,EAAS9H,WAC/C+H,EAAmBr9B,kBAAmB,EAAA8U,EAAA/U,eAAcq9B,GACpDC,EAAmB3I,aAAmB0I,EAEjCA,EAASp9B,iBAGVq9B,EAAmBx+B,OADZ4+B,EAAiBF,EACI,iBACrBE,EAAiBF,EACI,mBAEA,eAN5BF,EAAmBx+B,OAAS,kDAWxByK,GACR,IAAM9sB,EAAIsH,KAAKg6C,qBAAqBx0B,GAC9BjK,EAAYvb,KAAKu4C,UAAU7/C,GAAG6iB,UACpCvb,KAAKu4C,UAAU7/C,GAAG04C,mBAAoB,EAClC5rB,GAAejK,GACf1V,KAAG6f,KAAKF,EAAajK,GAAWxQ,KAAK/K,KAAK2xC,+CAKvCrhB,GAEP,GAAIA,EAASnzB,MAAO,CAEhB,IAAMzE,EAAIsH,KAAKg6C,qBAAqB1pB,EAAShd,SAASoS,MACtD1lB,KAAKu4C,UAAU7/C,GAAG04C,mBAAoB,EACtCpxC,KAAK0G,WAAWhG,GAAGkpC,iBACfrwB,QAAS+W,EAASnzB,MAAMoc,QACxBvc,KAAS,eAEV,IAAKszB,EAASnzB,OAASmzB,EAAS5K,KAAM,CACzC,IAAMhtB,EAAIsH,KAAKg6C,qBAAqB1pB,EAAS5K,KAAKF,aAClDxlB,KAAKu4C,UAAU7/C,GAAG04C,mBAAoB,EAEtCpxC,KAAK0G,WAAWvN,QAAQ2C,SAAS0lC,WAC7BlmB,WAAgBgV,EAAS5K,KAAKmsB,SAC9BC,eAAgBxhB,EAAS5K,KAAKosB,gBAElC9xC,KAAK0G,WAAWhG,GAAGkpC,iBACfrwB,iCAAkC+W,EAAS5K,KAAKmsB,SAAhD,IACA70C,KAAS,wDAKCszB,GAClB,IAAM2pB,EAAoB3pB,EAAS7K,uBAC7B/sB,EAAIsH,KAAKg6C,qBAAqBC,EAAkBz0B,aAChD3J,GAAY,EAAAmV,EAAArV,YAAWs+B,IACxBA,EAAkB5/B,aAEnB,EAAA2W,EAAA5V,gBAAe6+B,GAEnBj6C,KAAKu4C,UAAU7/C,GAAGwhD,SAAoBD,EAAkBE,gBAAgBz0B,KACxE1lB,KAAKu4C,UAAU7/C,GAAGub,SAAoBgmC,EAAkBhmC,QACxDjU,KAAKu4C,UAAU7/C,GAAGkiB,UAAmB,EAAA+1B,EAAAyJ,iBAAgBH,GACrDj6C,KAAKu4C,UAAU7/C,GAAG4X,eAAmB,EAAAqgC,EAAA0J,sBAAoB,EAAA1J,EAAA2J,mBAAkBL,IAC3Ej6C,KAAKu4C,UAAU7/C,GAAGk/C,YAAoBqC,EAAkBrC,WACxD53C,KAAKu4C,UAAU7/C,GAAGmjB,UAAmBA,EACrC7b,KAAKu4C,UAAU7/C,GAAGe,QAAmB,EAAAu3B,EAAAlW,kBAAiBm/B,GACtDj6C,KAAKu4C,UAAU7/C,GAAGwjB,kBAAmB,EAAA8U,EAAA/U,eAAcg+B,2CAIvCf,GACZl5C,KAAKu4C,UAAUgC,SAAQ,EAAAjC,EAAAK,yBAAwBO,+CAIhC1zB,GACf,IAAMsV,EAAmB96B,KAAK0G,WAAWvN,QAAQqD,YAAYs+B,iBACzDpiC,EAAIsH,KAAKg6C,qBAAqBx0B,GAE9BxlB,KAAKu4C,UAAU3/C,OAAS,IAAGF,GAAK,GACpCsH,KAAKu4C,UAAUz+C,OAAOpB,EAAG,GAErBoiC,IACA96B,KAAK0G,WAAWvN,QAAQ2C,SAASomC,kBACjCliC,KAAK0G,WAAWvN,QAAQgmB,MAAMwd,qEAKX,IAAAl0B,EAAAzI,KACvB,OAAO,IAAItF,QAAQ,SAACC,GAGhB,OAFA8N,EAAK+xC,aACL30C,KAAG2gB,UAAU,yBAA0B,eAChC7rB,EAAQ8N,EAAKgyC,2DAMxBz6C,KAAKiL,gBAAgBjL,KAAK6wC,wBAAwBhyC,KAAK,OACzB,IAA1BmB,KAAKu4C,UAAU3/C,QACfoH,KAAKy6C,0DAMTz6C,KAAKqL,uBAEDrL,KAAK0G,WAAWhG,GAAG85B,YACnBx6B,KAAKw6C,aACL30C,KAAG2gB,UAAU,yBAA0B,6DAI1BhB,GACjB,OAAOxlB,KAAKu4C,UAAUmC,UAAU,SAAAhC,GAAA,OAAQA,EAAIj0C,KAAQ+gB,mCAKpD,IAAIk0B,EAAa,EACbp5B,EAAa,EACbq6B,EAAa,EAOjB,OALA36C,KAAKu4C,UAAU51C,QAAQ,SAACi4C,GACpBlB,IAAgBkB,EAAclB,WAC9Bp5B,IAAgBs6B,EAAct6B,OAC9Bq6B,IAAgBC,EAAcD,YAG9BjB,aACAp5B,SACAq6B,qDAMJ,OAAO36C,KAAKu4C,2CAKZ,OAAQv4C,KAAKw4C,YAA+C,IAAjCx4C,KAAK66C,iBAAiBjiD,6CArOpD2S,8FACAA,2DAAwB,8BACxBA,0DAAwB,wGAGH,WACbrC,EAAKxC,WAAWlG,OAAO4uB,eAC5BlmB,EAAKsvC,YAAa,EAElB3yC,KAAG1J,YAAY4O,KAAK7B,EAAK4xC,kBACzBj1C,KAAGohB,8BAA8B,KAAM/d,EAAKkwC,6BAA6B,GACzEvzC,KAAGwhB,qBAAqBne,EAAK6xC,oBAAoB,8uCAiMpDnQ,iHAkBAA,mHAKAA,8FApOgBwF,iFCjBRuI,0BAA0B,SAACiC,GACpC,IAAMD,EAAWK,WAAWJ,EAAcv6B,WACpCC,EAAW06B,WAAWJ,EAAct6B,QAE1C,OACI26B,QAAiBL,EAAcM,SAASvtC,QAAQ,MAAO,UACvDgK,YAAiBijC,EAAcjjC,YAC/BlT,GAAiBm2C,EAAcp1B,YAC/Bk0B,WAAiB,EACjBp5B,SACAq6B,WACA7B,WAAkB8B,EAAc9I,eAChC90C,KAAiB49C,EAAcrrC,cAC/BsqC,gBAAiBe,EAAc3nC,kLCbvC,IAAAxE,EAAA1U,EAAA,GACA4U,EAAA5U,EAAA,IAIaohD,yBAAuB,SAACC,GACjC,IAAMC,EAAcD,EAAaE,iBAAmB,IAEpD,OAAID,GAAe,MACRnvC,KAAKqS,MAAM88B,SACXA,GAAe,MAAWA,EAAc,MACxCnvC,KAAKqS,MAAM88B,QACXA,GAAe,KAASA,EAAc,KACtCnvC,KAAKqS,MAAM88B,OAEXnvC,KAAKqS,MAAM88B,EAAe,MA2B5Bf,GAtBAD,sBAAsB,SAACe,GAChC,IAAMG,GACFvhD,GAAK6D,MAAM,EAAA4Q,EAAA2C,UAAS,YACpB1T,GAAKG,MAAM,EAAA4Q,EAAA2C,UAAS,YACpBc,GAAKrU,MAAM,EAAA4Q,EAAA2C,UAAS,UACpBxT,GAAKC,MAAM,EAAA4Q,EAAA2C,UAAS,UAElBiqC,EAAcD,EAAaE,iBAAmB,IACpD,GAAID,EAAa,CACb,GAAIA,GAAe,MACf,OAAOE,EAAS39C,EAAEC,KACf,GAAIw9C,GAAe,MAAWA,EAAc,MAC/C,OAAOE,EAASrpC,EAAErU,KACf,GAAIw9C,GAAe,KAASA,EAAc,KAC7C,OAAOE,EAAS79C,EAAEG,KACf,GAAIw9C,GAAe,KAAQA,EAAc,IAC5C,OAAOE,EAASvhD,EAAE6D,KAG1B,OAAO09C,EAASvhD,EAAE6D,MAGTy8C,oBAAoB,SAACrgC,GAAD,OAC7B,EAAAtL,EAAAqhB,kBACI,EAAArhB,EAAAokC,eAAc94B,EAAc6X,eAAiB7X,EAAcE,aAC3D,EAAAxL,EAAAokC,eAAc94B,EAAcI,gBAIvB+/B,kBAAkB,SAACngC,GAAD,OAC3BA,EAAcu3B,WACVv3B,EAAcu3B,WAEd2J,EAAqBb,EAAkBrgC,8iBCrD/ClgB,EAAA,MACA+L,EAAA/L,EAAA,GAIAgM,EAAAhM,EAAA,OACAA,EAAA,KACA2U,EAAA3U,EAAA,IACAyhD,EAAAzhD,EAAA,KACA0hD,EAAA1hD,EAAA,KACA2hD,EAAA3hD,EAAA,KACA+5B,EAAA/5B,EAAA,SAGAA,EAAA,2oBAEA,IAAM+M,EAAa,oBAEEupC,KAgBhBnqC,SAAOC,QAKPD,SAAOC,QAQPD,SAAOC,QAMPD,SAAOC,QAQPD,SAAOC,QAcPD,SAAOC,QAOPD,SAAOC,QAOPD,SAAOC,QAWPD,SAAOC,QAOPD,SAAOC,oBA9ER,SAAAkqC,EAAAhvC,GAA4B,IAAdqF,EAAcrF,EAAdqF,wGAAclF,CAAAxB,KAAAqwC,GACxB,IADwB1oC,mKAAA7F,CAAA9B,MAAAqwC,EAAAtuC,WAAAhJ,OAAAiJ,eAAAquC,IAAAn3C,KAAA8G,MAEhB0G,aAAYC,0BADc,aAAc,eACFG,gBAFtB,OAAAT,EAAAsB,EAAA,SAAArB,EAAAqB,GAAAtB,EAAAsB,EAAA,WAAApB,EAAAoB,GAAAtB,EAAAsB,EAAA,UAAA0/B,EAAA1/B,GAAAtB,EAAAsB,EAAA,mBAAA2/B,EAAA3/B,GAAAtB,EAAAsB,EAAA,mBAAA4/B,EAAA5/B,GAAAtB,EAAAsB,EAAA,aAAA6/B,EAAA7/B,GAAAtB,EAAAsB,EAAA,cAAA8/B,EAAA9/B,GAAAtB,EAAAsB,EAAA,YAAAg0C,EAAAh0C,GAAAtB,EAAAsB,EAAA,iBAAAi0C,EAAAj0C,KAqG5Bk0C,YAAc,SAAC/1B,EAAgBg2B,GACM,IAA7Bh2B,EAAec,WACnB/gB,KAAGuhB,sBAAH/mB,KAA8BylB,GAAkBg2B,IAvGxBn0C,EA0G5Bo0C,SAAW,SAACz1B,EAAcw1B,GAAf,OACPj2C,KAAGsgB,OAAO,gBAAiB21B,EAAUx1B,IA3Gb3e,EA8G5Bq0C,cAAgB,SAACl2B,GACb,OAAIA,EAAezT,KACRM,UAAWspC,YAAYlxC,KAAK,kBAC/Bqb,SAAU,OACV/T,KAAUM,UAAWzU,MAAM2xB,UAG5BhqB,KAAGggB,YAAYC,IArHEne,qUAXa1B,sDAiBzBuU,GACZxa,KAAKwa,WAAaA,4CAIJF,GACdta,KAAKsa,YAAcA,EACC,IAAhBA,GAAsB4hC,mBAAiB1e,SAASx9B,KAAKwa,cACrDxa,KAAKwa,WAAa,oDAKVsgB,GACZ96B,KAAK86B,iBAAmBA,EACxB96B,KAAKm8C,kBAAoBrhB,yCA0Bd9mB,EAAWG,IACjB,EAAApO,EAAAwB,eAAcvH,KAAK8T,SAASsoC,OAC7Bp8C,KAAK8T,SAASsoC,KAAKC,eAAeroC,EAAWG,8CAKlCmoC,EAAgB/sC,IAC1B,EAAAxJ,EAAAwB,eAAcvH,KAAK8T,SAASsoC,OAC7Bp8C,KAAK8T,SAASsoC,KAAKjK,mBAAmBmK,EAAgB/sC,4CAM1DvP,KAAK8T,iDAUI7C,GACTjR,KAAKsyC,SAAU,EAAAiK,EAAAt3C,YAAWjF,KAAKsyC,8HAAhB5qC,IACVuJ,EAAOjU,KAAO,IAAIw/C,mBAAiBvrC,EAAOsgB,cAAetgB,EAAOmgB,0DAMrEpxB,KAAKsyC,kDAbL,OAAO,EAAAxe,EAAAM,uBAAsBp0B,KAAK8T,gDAkBlC,OAAO,EAAAggB,EAAAM,uBAAsBp0B,KAAKsyC,0CAKvB,IAAA/wC,EAAAvB,KACX,OAAQ,eAAAwS,EAAA9Q,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAkBH,EAAKmF,WAApBjG,EAAH+R,EAAG/R,OAAQC,EAAX8R,EAAW9R,GAAX,OACJ+7C,iBAAkB/7C,EAAGugB,4BACrBy7B,UAAkBh8C,EAAGi8C,2BACrB1M,KAAkBxvC,EAAOm8C,iBACzBpD,SAAkB94C,EAAGqgB,wBAA0B,SAAW,OAC1DR,MAAkB7f,EAAG8f,gBAAkB,OAAS,SAL5C,sCArGXjV,4EACAA,2DAAsBA,aAAWxM,yCACjCwM,2DAAsBA,aAAWxM,kDAEjCwM,2DAA8B,yCAC9BA,2DAA8B,mCAE9BA,0DAAwB,6CACxBA,2DAAyB,ibA2Bd,WACR9C,EAAKwK,OAAS,KACdxK,EAAK6oC,iBACL7oC,EAAK8oC,iHAKQ,SAAChiC,EAAe2E,EAAcE,EAAayoC,EAAsB5rC,GAC9E,IAAI,EAAAlL,EAAAwB,eAAc2B,EAAK4K,SAASsoC,MAAO,CACnC,IAAIU,MACA,EAAAhpB,EAAAC,oBAAmBxkB,KACnButC,EAAe,IAAIC,oBAAkB7oC,EAAcE,EAAayoC,EAAsB5rC,IAG1F/H,EAAK4K,UACDsoC,KAAMU,0XAwBjBlS,4UAkBAA,gHAMAA,8FApGgByF,6XClBrBvqC,EAAA/L,EAAA,GAIA+5B,EAAA/5B,EAAA,KAKAijD,EAAAjjD,EAAA,0lBAEagjD,qBAwCR72C,SAAOC,QAOPD,SAAOC,QAKPD,SAAOC,mBAtCR,SAAA42C,EACI7oC,EACAE,GAGF,IAFEyoC,EAEFn7C,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAFyB,KAEzBL,EAAAK,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MADI0gC,EACJ/gC,EADI+gC,MAAO5O,EACXnyB,EADWmyB,WAAY0e,EACvB7wC,EADuB6wC,2GACvB1wC,CAAAxB,KAAA+8C,GAAA12C,EAAArG,KAAA,QAAAsG,EAAAtG,MAAAqG,EAAArG,KAAA,YAAAuG,EAAAvG,MAAAqG,EAAArG,KAAA,QAAAqnC,EAAArnC,MAAAqG,EAAArG,KAAA,OAAAsnC,EAAAtnC,MAAAqG,EAAArG,KAAA,MAAAunC,EAAAvnC,MAAAqG,EAAArG,KAAA,WAAAwnC,EAAAxnC,MAAAqG,EAAArG,KAAA,YAAAynC,EAAAznC,MAAAqG,EAAArG,KAAA,iBAAA27C,EAAA37C,MACEA,KAAKoiC,MAAYA,GAAcva,iBAAeC,MAC9C9nB,KAAKi9C,UAAYzpB,GAAcxL,sBAAoBC,OACnDjoB,KAAKgsB,SAAYhsB,KAAKk9C,gBAGtBl9C,KAAK68C,qBAAuD,mBAAzBA,EAAsCA,EAAqBh+C,KAAKmB,MAAQ,aAE3GA,KAAKm9C,MAAQjpC,GAAgB,EACzBE,IACApU,KAAKo9C,KAAOhpC,GAGhBpU,KAAKq9C,MAAQr9C,KAAKs9C,cAElB,IAAMC,IAAkBrpC,EACxBlU,KAAKw9C,UAAkBD,GAAe,QAAQhwC,KAAK2G,GACnDlU,KAAKy9C,WAAkBvL,GAAiBqL,EACxCv9C,KAAK09C,gBAAkBH,mDAIZJ,EAAMC,GACjBp9C,KAAKw9C,SAAiB,QAAQjwC,KAAK4vC,GACnCn9C,KAAKm9C,MAAQA,QAAQ7/C,EACrB0C,KAAKo9C,KAAQA,QAAQ9/C,6CAINg/C,EAAgB/sC,GAC/BvP,KAAKq9C,MAASf,GAAkB70B,kBAAgBlY,IAAmBvP,KAAKs9C,yDAI7C,IAAbH,EAAa3qC,EAAb2qC,KAAMC,EAAO5qC,EAAP4qC,IACpBp9C,KAAKq8C,eAAec,EAAMC,GAC1Bp9C,KAAK68C,qBAALtjD,MAAAyG,2HAAA+P,EAA6B,EAAAitC,EAAAhpB,kBAAiBh0B,KAAKw9C,SAAUL,EAAMC,2CAKnE,YAA6B,IAAdp9C,KAAKm9C,YAA6C,IAAbn9C,KAAKo9C,2CAKzD,OAAO11B,iBAAe1nB,KAAKqU,iDAhE9B9I,6EACAA,yEACAA,wEAEAA,uEACAA,4EAEAA,6EACAA,kFACAA,maAgDAq/B,qHAKAA,4MC1EL,IAAA9kC,EAAA/L,EAAA,wlBAEayiD,yBAIT,SAAAA,EAAYjrB,EAAeH,gGAAgB5vB,CAAAxB,KAAAw8C,GAAAn2C,EAAArG,KAAA,gBAAAsG,EAAAtG,MAAAqG,EAAArG,KAAA,iBAAAuG,EAAAvG,MACvCA,KAAKuxB,cAAiBA,EACtBvxB,KAAKoxB,eAAiBA,+BALzB7lB,2DAA4BA,aAAWxM,gDACvCwM,2DAA4BA,aAAWxM,gGCJ/Bm9C,oBACT,WACA,OACA,eACA,SACA,yiBCLJp2C,EAAA/L,EAAA,OAIAA,EAAA,KACA2U,EAAA3U,EAAA,IACAu+C,EAAAv+C,EAAA,SACAA,EAAA,isCAEA,IAEqBu2C,KAkBhBpqC,SAAOC,QAOPD,SAAOC,QAMPD,SAAOC,QAiBPD,SAAOC,QAiBPD,SAAOC,QASPD,SAAOC,QAUPD,SAAOC,QASPD,SAAOC,QAMPD,SAAOC,ovBAnGgCF,mDAoBpCjG,KAAK5H,QACL4H,KAAK29C,gBAAiB,EACtB39C,KAAKw4C,YAAiB,4CAKtBx4C,KAAK49C,UAAY,GACjB59C,KAAK69C,QAAY,kLAKb79C,KAAK29C,iBAAkB39C,KAAKw4C,mEAEhCx4C,KAAKw4C,YAAa,WAEK3yC,KAAGvJ,UAvCf,IAyCP0D,KAAK5H,KAAKQ,OAFSyH,KAIZL,KAAK49C,YAAeA,WAAW,EAAAnV,EAAAxjC,SAAOjF,KAAK49C,WAAW/tB,QACtD7vB,KAAK69C,UAAaA,SAAS,EAAApV,EAAAxjC,SAAOjF,KAAK69C,SAASrmC,IAAI,EAAG,KAAKc,SAAS,EAAG,KAAKuX,iBALlFS,SAQNtwB,KAAK89C,iBAAiBxtB,8IAITA,GAAU,IAAA/uB,EAAAvB,KACvB,GAAI,UAAWswB,EACXtwB,KAAK7C,MAAQmzB,EAASnzB,MAAMoc,YADhC,CAKA,IAAMwkC,EAAyBztB,EAASh0B,UAAU0hD,aAC7Cn2C,IAAI,SAAAyf,GAAA,OAAe,EAAAgxB,EAAA2F,4BAA2B32B,EAC3C/lB,EAAKmF,WAAWlG,OAAOoL,YAG/B5L,KAAK5H,QAAL6J,OAAA8N,EAA0B/P,KAAK5H,MAA/B2X,EAAwCguC,IACxC/9C,KAAK29C,eAAiBI,EAAuBnlD,OA/DlC,IAgEXoH,KAAKw4C,YAAiB,4CAITl+C,GACTA,EAAE4C,OAAOoB,QAAU0B,KAAK1F,EAAE4C,OAAOW,QACjCmC,KAAK1F,EAAE4C,OAAOW,MAAQvD,EAAE4C,OAAOoB,MAC/B0B,KAAKw6C,aACLx6C,KAAKk+C,uDAKAxhD,GAAO,IAAAyhD,EACkCzhD,EAAMQ,OAAhDouB,EADQ6yB,EACR7yB,UADQ6yB,EACGC,cAC+C9yB,EAFlD6yB,EACiBhzB,cAGZ,KACjBnrB,KAAKk+C,mEAKa,IAAAz1C,EAAAzI,KACtB,OAAO,IAAItF,QAAQ,SAACC,GAGhB,OAFA8N,EAAK+xC,aACL/xC,EAAK41C,kBACE1jD,EAAQ8N,EAAKy1C,yLAMxBl+C,KAAKiL,gBAAgBjL,KAAK6wC,kCACpB7wC,KAAKk+C,uJAKXl+C,KAAKqL,uBACLrL,KAAKw6C,aACLx6C,KAAKq+C,kBACLx4C,KAAG2gB,UAAU,6CA9Fb,OAAQxmB,KAAKw4C,YAAmC,IAArBx4C,KAAK5H,KAAKQ,iDAKrC,SAAUoH,KAAK49C,YAAa59C,KAAK69C,0CAdpCtyC,8FACAA,2DAA4B,uCAC5BA,2DAA4B,kCAC5BA,0DAA4B,iCAC5BA,0DAA4B,+BAC5BA,0DAA4B,gCAE5Bq/B,oHAKAA,6jCAbgB0F,qHCXrB,IAAA9kC,EAAAzR,EAAA,IACA0U,EAAA1U,EAAA,GACA8xC,EAAA9xC,EAAA,KACA4U,EAAA5U,EAAA,IAEakkD,6BAA6B,SAAC32B,EAAa1b,GACpD,IAAM2nC,GAAa,EAAA5kC,EAAA+D,UAAS4U,EAAYg3B,kBAClCC,EAAahL,EAAWvhC,OAAO,cAC/BiiC,EAAgBV,EAAWvhC,OAAO,YAAlC,OACAsO,EAAa06B,WAAW1zB,EAAYhH,QACpC5U,EAAasvC,WAAW1zB,EAAY5b,QACpCmb,EAAam0B,WAAW1zB,EAAYk3B,eAG1C,OACIt4C,QAAS,EAAAuI,EAAA2C,WAAS,EAAAy6B,EAAA4S,aAAYn3B,EAAYo3B,cAC1CtsC,KAAYmsC,EAAZ,KAAyBtK,EACzB0K,MAASr3B,EAAYwqB,eACrBxxB,OAASxC,MAAMwC,GAAW,KAAM,EAAA9U,EAAAa,aAAYT,EAAU0U,GAN1B,GAO5B5U,OAASoS,MAAMpS,GAAW,KAAM,EAAAF,EAAAa,aAAYT,EAAUF,GAP1B,GAQ5Bmb,QAAS/I,MAAM+I,GAAW,KAAM,EAAArb,EAAAa,aAAYT,EAAUib,GAR1B,GAS5B+3B,KAASt3B,EAAY4zB,SAASvtC,QAAQ,MAAO,UAC7ClJ,GAAS6iB,EAAY9B,YACrB1X,OAASwZ,EAAYxZ,goBCvB7B/T,EAAA,MACA+L,GAAA/L,EAAA,SAKAA,EAAA,KACA0U,GAAA1U,EAAA,GACAgM,GAAAhM,EAAA,GAIAyR,GAAAzR,EAAA,IAGA2U,GAAA3U,EAAA,UACAA,EAAA,YACAA,EAAA,MACA8kD,GAAA9kD,EAAA,KACYqE,2JAAZrE,EAAA,MACA+kD,GAAA/kD,EAAA,WAGAA,EAAA,MACA2hD,GAAA3hD,EAAA,WACAA,EAAA,KACA8U,GAAA9U,EAAA,IACAglD,GAAAhlD,EAAA,KACAilD,GAAAjlD,EAAA,KAIAklD,GAAAllD,EAAA,WACAA,EAAA,4pCAEA,IAAM+M,GAAa,cAEEypC,MAmEhBrqC,UAAOC,QAgDPD,UAAOC,QAMPD,UAAOC,QA0CPD,UAAOC,QAWPD,UAAOC,QA0BPD,UAAOC,QAKPD,UAAOC,QA6BPD,UAAOC,QAWPD,UAAOC,QA8FPD,UAAOC,QA+BPD,UAAOC,QAkBPD,UAAOC,QAKPD,UAAOC,QAgBPD,UAAOC,QAyBPD,UAAOC,QAqCPD,UAAOC,QAaPD,UAAOC,QAWPD,UAAOC,oBAtaR,SAAAoqC,EAAAlvC,GAA4B,IAAdqF,EAAcrF,EAAdqF,wGAAclF,CAAAxB,KAAAuwC,GACxB2O,WAAUC,iBAAiBnqB,mCADH,IAAArtB,mKAAA7F,CAAA9B,MAAAuwC,EAAAxuC,WAAAhJ,OAAAiJ,eAAAuuC,IAAAr3C,KAAA8G,MAIpB0G,aACAI,cACAF,2BAA4BouB,kCAC5BnuB,kBAA4B,EAAAu4C,GAAAn6C,cAPR,OAAAoB,GAAAsB,EAAA,6BAAArB,EAAAqB,GAAAtB,GAAAsB,EAAA,sBAAApB,EAAAoB,GAAAtB,GAAAsB,EAAA,mBAAA0/B,EAAA1/B,GAAAtB,GAAAsB,EAAA,iBAAA2/B,EAAA3/B,GAAAtB,GAAAsB,EAAA,mBAAA4/B,EAAA5/B,GAAAtB,GAAAsB,EAAA,SAAA6/B,EAAA7/B,GAAAtB,GAAAsB,EAAA,uBAAA8/B,EAAA9/B,GAAAtB,GAAAsB,EAAA,sBAAAg0C,EAAAh0C,GAAAtB,GAAAsB,EAAA,gBAAAi0C,EAAAj0C,GAAAtB,GAAAsB,EAAA,sBAAA03C,EAAA13C,GAAAtB,GAAAsB,EAAA,kBAAA23C,EAAA33C,GAAAtB,GAAAsB,EAAA,cAAA43C,EAAA53C,GAAAtB,GAAAsB,EAAA,SAAA63C,EAAA73C,GAAAtB,GAAAsB,EAAA,QAAA83C,EAAA93C,GAAAtB,GAAAsB,EAAA,aAAA+3C,EAAA/3C,GAAAtB,GAAAsB,EAAA,WAAAg4C,EAAAh4C,GAAAtB,GAAAsB,EAAA,WAAAi4C,EAAAj4C,GAAAtB,GAAAsB,EAAA,gBAAAk4C,EAAAl4C,GAAAtB,GAAAsB,EAAA,sBAAAm4C,EAAAn4C,GAAAtB,GAAAsB,EAAA,mBAAAo4C,EAAAp4C,GAAAtB,GAAAsB,EAAA,cAAAq4C,EAAAr4C,GAAAtB,GAAAsB,EAAA,cAAAs4C,EAAAt4C,GAAAtB,GAAAsB,EAAA,cAAAu4C,EAAAv4C,GAAAtB,GAAAsB,EAAA,YAAAw4C,EAAAx4C,GAAAtB,GAAAsB,EAAA,YAAAy4C,EAAAz4C,GAAAtB,GAAAsB,EAAA,gBAAA04C,EAAA14C,GAAAtB,GAAAsB,EAAA,aAAA24C,EAAA34C,GAAAtB,GAAAsB,EAAA,mBAAA44C,EAAA54C,GAAAtB,GAAAsB,EAAA,aAAA64C,EAAA74C,GAAAtB,GAAAsB,EAAA,WAAA84C,EAAA94C,GAAAtB,GAAAsB,EAAA,oBAAA+4C,EAAA/4C,GAAAtB,GAAAsB,EAAA,qBAAAg5C,EAAAh5C,GAAAtB,GAAAsB,EAAA,aAAAi5C,GAAAj5C,GAAAtB,GAAAsB,EAAA,gBAAAk5C,GAAAl5C,GAAAtB,GAAAsB,EAAA,gBAAAm5C,GAAAn5C,KAV5Bo5C,SAAW,EAUiBp5C,EAR5Bq5C,mBAAoB,EAAAC,GAAAh8C,SAAS0C,EAAKg1B,gBAAiB,KAQvBh1B,EAP5Bu5C,qBAO4B76C,GAAAsB,EAAA,OAAAw5C,GAAAx5C,GAUxB5O,OAAOiF,eAAP2J,EAEI,2BAEI1J,YAAY,EACZK,OAAY,EACZyI,UAAY,KAIpB,EAAAjB,GAAA8B,UACI,kBAAOD,EAAK+I,qBAAsB/I,EAAKgJ,iBAAkBhJ,EAAK2I,cAAe3I,EAAKkM,cAClF,WACIlM,EAAKy5C,mCAGb,EAAAt7C,GAAA8B,UACI,kBACID,EAAKsL,OACLtL,EAAK4H,cACL5H,EAAK2I,cACL3I,EAAKkM,YACLlM,EAAKwI,oBACLxI,EAAKiR,sBAET,WACIjR,EAAK05C,sBAEPC,MAAO,MAtCW35C,qUAzEQ1B,kDAqHhCjG,KAAKiT,OAAS,KACdpN,MAAG2gB,UAAU,WAAY,gNAKrB+6B,EAAsBvhD,KAAKwhD,oBAC/BxhD,KAAKxD,YAAqBwD,KAAK0G,WAAWvN,QAAQqD,YAClDwD,KAAK4L,SAAqB5L,KAAK0G,WAAWlG,OAAOoL,kBACjB/F,MAAGme,2BAA7BG,UACcA,gBAA2D,IAAzCA,EAAeA,eAAevrB,QAChEoH,KAAK0G,WAAWjG,OAAOwlC,WAAU,EAAAx3B,GAAA2C,UAAS,2CAIlBmwC,EAAoBtuC,SAC3CkR,EAAeA,eAAe/W,KAAK,SAAApT,GAAA,OAAKA,EAAEiZ,SAAWsuC,EAAoBtuC,WAI1EjT,KAAK0G,WAAWhG,GAAGkpC,iBACfrwB,SAAS,EAAA9K,GAAA2C,UAAS,4EAClBpU,KAAS,SAEbkiD,WAAUuC,eAAgBxuC,QAAU,EAAAgsC,GAAAyC,mBAAkBv9B,EAAeA,kBACrEo9B,EAAsBvhD,KAAKwhD,qBAG1BxhD,KAAKiT,yCACAjT,KAAK2hD,sBAALthD,IACF4S,QAAQ,EAAAgsC,GAAAyC,mBAAkBv9B,EAAeA,iBACtCo9B,YAIPvhD,KAAKiT,QACLjE,WAAagG,yBAAyBusC,EAAoBtuC,QAAUjT,KAAKiT,QAAQlI,MAAK,EAAAjF,GAAAI,QAAAqE,GAAAC,mBAAAC,KAAO,SAAAC,IAAA,OAAAF,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACnFvJ,EAAKogD,sBAALthD,MACC2O,WAAaqH,kBAAb9U,GACAyN,WAAa2J,wBACb4oC,IAJkF,wBAAA32C,EAAAQ,SAAAV,EAAAnJ,oJAWpFgpC,GAAQ,IAAA9hC,EAAAzI,KACrBjH,OAAO0J,KAAK8nC,GAAQ5nC,QAAQ,SAAC9E,GACzB,KAAMA,QACF,MAAM,IAAIT,MAAJ,qBAA+BS,KAI7CmC,KAAK2hD,sBAALthD,MAAgCkqC,IAAU,oCAIrCjwC,GAAG,IAAAsnD,EACkBtnD,EAAE4C,OAApBW,EADA+jD,EACA/jD,KAAMgkD,EADND,EACMC,QACRvjD,EAAUhE,EAAE4C,OAAZoB,MAEN,GAAa,aAATT,EACAmC,KAAK0G,WAAWlG,OAAO+nC,eAAejqC,QACnC,GAAc,aAAVA,EACH,gCAAgCiP,KAAKvN,KAAKuP,iBACtCsyC,GACA7hD,KAAK8hD,iBAAmB,EACxBxjD,EAAQ,oBAER0B,KAAK8hD,iBAAmB,EACxBxjD,EAAQ,mBAGb,GAAc,gBAAVT,EACPmC,KAAK2X,YAAc,UAChB,KAAM9Z,KAAQmC,MACjB,MAAM,IAAI5C,MAAJ,qBAA+BS,GAGzCmC,KAAK2hD,sBAALj6C,MAA8B7J,EAAOS,IAAS,2CAIlCyjD,EAASxyC,GACrBvP,KAAKxD,YAAY21C,mBAAmB4P,EAASxyC,sCAItC8U,EAAaC,EAAOtnB,GAAM,IAAAkM,EAAAlJ,KAC7BqkB,IACArkB,KAAKg7B,qBAAsB,GAC3B,EAAA6jB,GAAAmD,iBAAgB39B,EAAaC,GAAOvZ,MAAK,EAAAjF,GAAAI,QAAO,SAACoqB,GAC7C,GAAIpnB,EAAKsyB,cAAcx+B,GAAMyH,KAAO4f,EAChC,MAAM,IAAIjnB,MAAM,+BAEpB,GAAIkzB,EAASlM,IAAK,CACd,IAAMnE,QACC/W,EAAKg4C,kBAAkBlkD,GACvBkM,EAAKsyB,cAAcx+B,IACtBqjB,UAAWiQ,EAASlM,IAAI/D,YAGtBmF,GAAc,EAAAzf,GAAAqK,kBAAiBkgB,GAAW,MAAO,gBACnD9K,IACAtc,EAAKxC,WAAWvN,QAAQ2C,SAASmmD,QAAQz8B,GACzCtc,EAAKxC,WAAWhG,GAAGwhD,uBAEvBpiC,WAAIE,iBAAiBC,EAAe/W,EAAKxC,YAE7Cb,MAAG2gB,UAAU,YACbtd,EAAKqyB,cAAgBjL,EACrBpnB,EAAK8xB,qBAAsB,8CAMvB1gC,GACZA,EAAE6nD,iBACFt8C,MAAG2gB,UAAU,YAAYzb,KAAK/K,KAAK28B,uDAS3BylB,GAAW,IAAA/4C,EAAArJ,KAiCnB,OAhCAjH,OAAO0J,MAAK,EAAAsD,GAAAsP,aAAY+sC,IAAYz/C,QAAQ,SAAC/D,GAC7B,eAARA,IAAyB,mBAAoB,oBAAqB,WAAY,eAAe+Q,QAAQ/Q,IAAQ,IAC7GuJ,KAAKC,UAAUiB,EAAKzK,MAAUuJ,KAAKC,UAAUg6C,EAAUxjD,WAChDwjD,EAAUxjD,IAEL,WAARA,IACAyK,EAAK2xB,qBAAsB,EAC3B3xB,EAAK6xB,kBAAsB,GAG3BknB,EAAUvxC,YAA8C,iBAAzBuxC,EAAUvxC,aACzCuxC,EAAUvxC,WAAakN,SAASqkC,EAAUvxC,cAKO,IAAjDmkB,kCAA+BrlB,QAAQ/Q,IACvCyK,EAAKg5C,4BAELnD,WAAUuC,cAAV/5C,MAA2B9I,EAAMwjD,EAAUxjD,KAG/CyK,EAAKzK,GAAOwjD,EAAUxjD,GAIV,cAARA,GAAuBwjD,EAAUpuC,YACjC3K,EAAK2K,UAAYouC,EAAUpuC,eAKhCouC,4GAGiBE,4DAAqBC,0DAA4BC,8IAGzE38C,MAAG2gB,UAAU,YACT+7B,GACA,eAAeh1C,KAAKxU,OAAO0J,KAAK6/C,MAE1BG,EAAgBD,KACrB,EAAAz8C,GAAAwB,eAAci7C,IACfA,EAAe52C,SAAW42C,EAAe52C,SAAW5L,KAAK4L,UACrD,EAAAJ,GAAA0jC,kBAAiBoT,EAAe12C,aAAc,EAAAJ,GAAA0jC,kBAAiBuT,KAC/DH,EAAe52C,OAAS62C,GAAsBD,EAAe52C,OACzD42C,EAAe52C,QAAS,EAAAF,GAAAk3C,cAAaJ,EAAe12C,WAE5D5L,KAAK4L,SAAW02C,EAAe12C,UAG7Bw2C,EAAYpiD,KAAK0jC,aAAY,EAAA39B,GAAAsP,aAAYitC,KAE3CC,IAAsB,mCAAmCh1C,KAAKxU,OAAO0J,KAAK2/C,0BACtE,WAAYA,mCACNhkD,GAAOukD,oBAAoBP,EAAUnvC,sBAG/CjT,KAAK0jC,aACD1I,qBAAqB,EACrBQ,mBAGCx7B,KAAKxD,YAAYs+B,mBACS,cAAesnB,GAAa,cAAeA,EAElEpiD,KAAKxD,YAAY6/C,eAAer8C,KAAKgU,UAAWhU,KAAKmU,WAErDnU,KAAKxD,YAAY80C,6BAIS,EAAAyN,GAAA6D,oBAAmB5iD,KAAMoiD,WAArD/6C,SACAk6C,EAAsBvhD,KAAKwhD,oBACjCn6C,EAAS6zB,kBAAmB,EAE5Bl7B,KAAK0jC,YAALrjC,MACOgH,EACCrH,KAAK6iD,2BAA+BtB,IAG5CvhD,KAAK6iD,yBAA0B,EAE3B,oBAAoBt1C,KAAKxU,OAAO0J,KAAK2/C,KACrCpiD,KAAK8iD,wBAGT9iD,KAAKghD,iKAKK,IAAAt3C,EAAA1J,KACR+iD,GAAW,EAAA/D,GAAAgE,wBAAuBhjD,MAExC,GAAIjH,OAAOwxC,OAAOvqC,KAAKiJ,mBAAmBwV,KAAK,SAAAnkB,GAAA,OAAKA,EAAE1B,SAIlD,OAHAoH,KAAKw7B,iBACLx7B,KAAKu7B,sBACL11B,MAAG2gB,UAAU,YAIjB,KAAK,EAAAzgB,GAAAwB,eAAcw7C,GAAW,CAC1B,IAAME,GAA0C,EAAAjE,GAAAkE,2BAA0BH,GAE1E7D,WAAUC,oBAAVl9C,OAAA8N,GAEWkzC,GAFXlzC,IAGW,EAAA+uC,GAAA7pB,oCAAmCj1B,SAI9CA,KAAKkhD,kBAAoB6B,EACzB/iD,KAAKw7B,iBACLx7B,KAAKu7B,iBAELxiC,OAAO0J,KAAKzC,KAAKkhD,mBAAmBv+C,QAAQ,SAAC3F,GACzC6I,MAAGihB,kBAAkBpd,EAAKw3C,kBAAkBlkD,GAAO0M,EAAKy5C,kEAMjD7yB,GACf,IAAM/gB,EAA0B+gB,EAAShd,SAAS/D,cAC5C6zC,GAA0B,EAAAr9C,GAAAqK,kBAAiBpQ,KAAKw7B,cAAejsB,OAC/D8zC,GAA0B,EAAAt9C,GAAAqK,kBAAiBgzC,EAAoB,0BAErEpjD,KAAKw7B,cAALn7B,MACOL,KAAKw7B,cADZ9zB,MAEK6H,GAAgB,EAAAyvC,GAAAsE,iBAAgBtjD,KAAMswB,EAAU+yB,KAGhDrjD,KAAKxD,YAAYs+B,mBAClB,EAAA4gB,GAAA6H,iBAAgBvjD,KAAKxD,YAAa8zB,EAAUtwB,KAAK68C,sBAGrD78C,KAAKg7B,qBAAsB,+CAIVhnB,EAAWG,GAC5BnU,KAAK2hD,uBAAwB3tC,YAAWG,cAAa,+CAOrD,IAAMqvC,EAAetE,WAAUsC,kBAC3BxhD,KACAg1B,kCACAh1B,KAAKqiD,4BAIHpxC,KAEN,SADAhP,OAAA8N,GAAIyzC,IAAc7gD,QAAQ,SAAAumC,GAAA,OAASj4B,EAAOi4B,EAAM,IAAMA,EAAM,KACrDj4B,0DAKP,GAAyB,YAArBjR,KAAK6T,YAAT,CAKA,IAAMkL,EAAS/e,KAAK6G,iBAAiB+T,SAASzR,MAAMuxC,UAAU,SAAAppC,GAAA,MAAoB,WAAZA,EAAK,KACrEtV,EAASgE,KAAK2Q,iBAAiB3Q,KAAK0Q,wBAAyB,EAEnE,GAAI1U,EAAQ,CACR,IAAMynD,GACFpmC,KAAK,EAAAxO,GAAAwP,uBAAsBriB,EAAOqhB,IAAKrd,KAAKsQ,eAC5CiN,KAAK,EAAA1O,GAAAwP,uBAAsBriB,EAAOuhB,IAAKvd,KAAKsQ,gBAG5CyO,GAAS,EACT/e,KAAK6G,iBAAiB+T,SAASzR,MAAM4V,GAAO,GAAK0kC,EAEjDzjD,KAAK6G,iBAAiB+T,SAASzR,MAAMrQ,MAAM,SAAU2qD,IAEzDzjD,KAAKwJ,iBAAiB,WAAYxJ,KAAK4a,gBAlBvC5a,KAAKiJ,kBAAkB2R,wDAwB3B,IAAM8oC,EAAkB,SAACC,GACrB,QAAKA,IAEE,EAAA59C,GAAAqK,kBAAiBuzC,EAAoB,WACvCllC,KAAK,SAAA3iB,GAAA,MAA+B,oBAAnBA,EAASwC,SAgB7BslD,EAd6B,SAACD,EAAoBrzC,EAAeJ,GACnE,IAAKyzC,IAAuBrzC,IAAkBJ,EAAqB,OAAO,EAE1E,IAGM2zC,EAHgB9qD,OAAO0J,KAAKkhD,OAC7Bn8C,OAAO,SAAC5I,EAAKsX,GAAN,SAAAjU,OAAA8N,GAAoBnR,GAApBmR,GAA4B4zC,EAAmBztC,GAAMrO,IAAI,SAAA/L,GAAA,OAAYA,EAASwC,eAGrFuJ,IAAI,SAAAqO,GAAA,OAAAxO,MAAYwO,GAAO,EAAAnQ,GAAAqK,kBAAiBpB,WAAa8H,wBAAyBZ,EAAM,SAAU,YAAa,gBAAiBhG,OAGjI,QAAOwzC,EAAgBC,IAAsBE,EACxC9tC,OAAO,SAAAja,GAAA,OAAYA,EAASgoD,kBAAiB,GAAGA,gBAChDrlC,KAAK,SAAA7D,GAAA,OAAYA,EAAStc,QAAUgS,IAERyzC,CAA2B/jD,KAAK4Y,oBACjE5Y,KAAKsQ,cAAetQ,KAAKkQ,qBAEvB,gCAAgC3C,KAAKvN,KAAKuP,iBAC5CvP,KAAKgkD,gBAAiB,EACtBhkD,KAAK8hD,iBAAmB,GAGxB,gCAAgCv0C,KAAKvN,KAAKuP,iBAAmBq0C,GAAqD,YAArB5jD,KAAK6T,cAA8B6vC,EAAgB1jD,KAAK4Y,qBACrJ5Y,KAAKgkD,gBAAiB,EAEtBhkD,KAAKgkD,gBAAiB,oDAKJ,IAAA95C,EAAAlK,KACtB,OAAO,IAAItF,QAAJ,eAAAupD,EAAA15C,GAAAC,mBAAAC,KAAY,SAAAy5C,EAAOvpD,GAAP,OAAA6P,mBAAAG,KAAA,SAAAw5C,GAAA,cAAAA,EAAAt5C,KAAAs5C,EAAAr5C,MAAA,cAAAq5C,EAAAr5C,KAAA,EACTZ,EAAKy3C,uBACL/1C,SAAU1B,EAAKxD,WAAWlG,OAAOoL,WACjCA,SAAU1B,EAAK0B,WAHN,cAAAu4C,EAAAr5C,KAAA,EAKTZ,EAAKk6C,UALI,cAAAD,EAAAr5C,KAAA,EAMTZ,EAAKm6C,oBANI,cAAAF,EAAAhxC,OAAA,SAORxY,EAAQuP,EAAK82C,sBAPL,wBAAAmD,EAAA/4C,SAAA84C,EAAAh6C,MAAZ,gBAAAo6C,GAAA,OAAAL,EAAA1qD,MAAAyG,KAAA0B,YAAA,8LAaD1B,KAAKqkD,2BACXrkD,KAAKghD,qBACL,EAAAl7C,GAAAy+C,aAAY,WACRn6C,EAAKi4C,4BAA6B,IAEtCriD,KAAKwhD,oBACLxhD,KAAKiL,gBAAgBjL,KAAK6wC,+JAK1B7wC,KAAKqL,uBACLxF,MAAG2gB,UAAU,WAAY,iBACzBxmB,KAAKqiD,4BAA6B,0DAjfrC92C,4DAAwC,6CACxCA,4DAAwC,0CACxCA,4DAAwC,wCACxCA,4DAAwC,0CACxCA,4DAAwC,gCAGxCA,0FAGAA,2DAAkC,8CAClCA,2DAAkC,wCAClCA,2DAAkC,8CAClCA,qGACAA,iGACAA,4FAGAA,4DAAwB,gCACxBA,2DAAwB,qCACxBA,8FACAA,2DAAwB,mCAGxBA,4DAAiC,uCACjCA,2DAAiC,8CACjCA,sGACAA,iGACAA,2DAAiC,sCACjCA,2DAAiC,sCACjCA,2DAAiC,4CAGjCA,2DAA2B,oCAC3BA,2DAA2B,wCAC3BA,4DAA2B,oCAG3BA,4DAA8BuF,OAAO,2CACrCvF,gGACAA,4DAA8B,qCAC9BA,uGAEAA,wGAQAA,iGAGAA,4DAAwB,wCAGxBA,oGACAA,iLAQM,SAAAi5C,IAAA,OAAAh6C,mBAAAG,KAAA,SAAA85C,GAAA,cAAAA,EAAA55C,KAAA45C,EAAA35C,MAAA,cAAA25C,EAAA35C,KAAA,EAEGmZ,WAAa2hB,KAAK,kBAFrB,wBAAA6e,EAAAr5C,SAAAo5C,EAAAE,q5DApEUnU,yiBCrCrBxqC,EAAAhM,EAAA,+HAEqBmlD,sLAQKzY,GAClB,IAAMke,EAAgBle,EAAM,IAAIme,IAAIne,GAAKoe,OAASxlD,OAAOmO,SAASq3C,OAC5DC,EAAgBC,mBAAmBJ,GAGzC,OAFqB,IAAIK,gBAAgBF,yCAaxBt1B,GAAoB,IAAZiX,EAAY/kC,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAN,KACzBujD,EAAaxe,EAAM,IAAIme,IAAIne,GAAOpnC,OAAOmO,SACzC03C,EAAe,IAAIF,gBAAgBC,EAAWJ,OAAOtlD,MAAM,IAqBjE,OApBAxG,OAAO0J,KAAK+sB,GAAQ7sB,QAAQ,SAAC9E,GACzBqnD,EAAaC,OAAOtnD,GAEpB,IAAMS,EAAQkxB,EAAO3xB,GAEjBS,GAA0B,iBAAjB,IAAOA,EAAP,YAAA0X,EAAO1X,KAAgC,KAAVA,GACtC4mD,EAAaE,OAAOvnD,EAAM2xB,EAAO3xB,MAIrCqnD,EAAatsD,QACbssD,EAAaxnC,OAGZ+oB,EAGDwe,EAAWJ,OAASK,EAAa3wC,WAFjClV,OAAOyf,QAAQumC,aAAa,KAAM,KAAlC,IAA4CC,mBAAmBJ,EAAa3wC,aAKzE0wC,4CAWc7kD,EAAO40B,GAA0D,IAA1BuwB,EAA0B7jD,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,IAAAA,UAAA,GAChF8hD,EAAetE,EAAUsG,iBAgB/B,OAdK,EAAAz/C,EAAAwB,eAAcnH,IAGf40B,EACKjf,OAAO,SAAAva,GAAA,OAAMgoD,EAAatlD,IAAI1C,KAAImH,QAAQ,SAAA/D,GACnCwB,EAAMxB,KACF2mD,GACArG,EAAUuC,oIAAV/5C,IAA2B9I,EAAMwB,EAAMxB,KAG3C4kD,EAAa9yB,IAAI9xB,EAAKwB,EAAMxB,OAIrC4kD,6CAQwB,IAAX/gD,EAAWf,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MACzB8hD,EAAetE,EAAUsG,oBAE/BvjD,OAAA8N,EAAIyzC,IAAc7gD,QAAQ,SAAArE,GAAA,OAASmE,EAAKkN,QAAQrR,EAAM,MAAQ,GAAKklD,EAAa2B,OAAO7mD,EAAM,MAE7F,IAAMqmD,KAAe1iD,OAAA8N,EAAIyzC,IAAc5qD,OAAlB,IAA+B4qD,EAAajvC,WAAe,GAEhFlV,OAAOyf,QAAQumC,aAAa,KAAM,KAAMC,mBAAmBX,uBA1F9CzF,0GCFrB,IAAAxwC,EAAA3U,EAAA,IAEaioD,6BAAA,IAAA3gD,2RAAAkJ,CAAAC,mBAAAC,KAAkB,SAAAC,EAAM2Z,EAAaC,GAAnB,OAAA9Z,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAuI,OAAA,SAA6BtN,KAAGue,IAAIC,EAAaC,IAAjD,wBAAA1Z,EAAAQ,SAAAV,OAAApN,MAAlB,gBAAAmoD,EAAA/xC,GAAA,OAAArS,EAAA9H,MAAAyG,KAAA0B,YAAAsgD,+GCFb,wDAAAjoD,EAAA,KAEa4oD,iCAAA,IAAAthD,2RAAAkJ,CAAAC,mBAAAC,KAAsB,SAAAC,EAAMuI,GAAN,OAAAzI,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACzBkE,UAAagG,yBAAyB/B,GADb,wBAAArI,EAAAQ,SAAAV,OAAApN,MAAtB,gBAAAmoD,GAAA,OAAApkD,EAAA9H,MAAAyG,KAAA0B,YAAAihD,kFCFA9sC,sBAAsB,SAAC/Z,GAAsD,IAA5CgY,EAA4CpS,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAA/B4S,MAAOxY,EAASgY,UACvE,GAAKhY,EAASgY,SAAd,CAIA,IAAM4C,KAMN,OAJC,UAAW,cAAe,gBAAgB/T,QAAQ,SAACupC,GAC5CA,KAASpwC,IAAU4a,EAAYw1B,GAASpwC,EAASowC,MAGlDnzC,OAAO0O,OAAOqM,4HAAdpM,IACF5L,EAAS+X,YAAc6C,uKCZhC,IAAAjI,EAAA1U,EAAA,2HAEa6a,oBAAoB,kBAC7B0L,QAAY,EAAA7R,EAAA2C,UAAS,UACrBwqB,OAAY,EAAAntB,EAAA2C,UAAS,SACrBs0C,YAAY,EAAAj3C,EAAA2C,UAAS,gBAOZgE,yBAAyB,kBAE9BuwC,WAAmBlwC,OAAO,EAAAhH,EAAA2C,UAAS,aAA+B9B,aAAc,OAAQ,OAAsBmF,OAAQ,QAAS,UAAWzE,YAAa,cAAeqE,cAAe,GACrLyvC,iBAAmBruC,OAAO,EAAAhH,EAAA2C,UAAS,aAA+B9B,aAAc,QAAS,QAAqBmF,OAAQ,QAAS,UAAWzE,YAAa,cAAeqE,cAAe,GACrLuxC,UAAmBnwC,OAAO,EAAAhH,EAAA2C,UAAS,gBAA+B9B,aAAc,OAAQ,OAAsBmF,OAAQ,QAAS,UAAWzE,YAAa,WAAeqE,cAAe,GACrLwxC,OAAmBpwC,OAAO,EAAAhH,EAAA2C,UAAS,kBAA+B9B,aAAc,WAAY,WAAkBmF,OAAQ,QAAS,UAAWzE,YAAa,YACvJoK,KAAmB3E,OAAO,EAAAhH,EAAA2C,UAAS,6BAA+B9B,aAAc,aAAc,eAAgBmF,OAAQ,QAAS,UAAWzE,YAAa,YACvJ81C,MAAmBrwC,OAAO,EAAAhH,EAAA2C,UAAS,8BAA+B9B,aAAc,QAAS,YAAqBmF,OAAQ,QAAS,UAAWzE,YAAa,YACvJ+1C,OAAmBtwC,OAAO,EAAAhH,EAAA2C,UAAS,UAA+B9B,aAAc,SAAU,UAAoBmF,OAAQ,QAAS,UAAWzE,eAC1Ig2C,YAAmBvwC,OAAO,EAAAhH,EAAA2C,UAAS,mBAA+B9B,aAAc,aAAc,aAAgBmF,OAAQ,QAAS,UAAWzE,YAAa,eACvJi2C,UAAmBxwC,OAAO,EAAAhH,EAAA2C,UAAS,YAA+B9B,aAAc,WAAY,aAAkBmF,OAAQ,QAAS,UAAWzE,eAC1Ik2C,YAAmBzwC,OAAO,EAAAhH,EAAA2C,UAAS,cAA+B9B,aAAc,YAAa,cAAiBmF,OAAQ,QAAS,UAAWzE,YAAa,eACvJm2C,SAAmB1wC,OAAO,EAAAhH,EAAA2C,UAAS,aAA+B9B,aAAc,eAA8BmF,OAAQ,cAAoBzE,eAC1Io2C,QAAmB3wC,OAAO,EAAAhH,EAAA2C,UAAS,cAA+B9B,aAAc,cAA8BmF,OAAQ,cAAoBzE,eAC1Iq2C,aAAmB5wC,OAAO,EAAAhH,EAAA2C,UAAS,YAA+B9B,aAAc,aAA8BmF,OAAQ,cAAoBzE,iBAIrImF,8BAA8B,eAAA9T,EAAA,OAAAqG,EAAArG,MAElC,EAAAoN,EAAA2C,UAAS,YAAqB,YAAa,WAAY,oBAFrB1J,EAAArG,GAGlC,EAAAoN,EAAA2C,UAAS,mBAAqB,UAHI1J,EAAArG,GAIlC,EAAAoN,EAAA2C,UAAS,WAAqB,MAAO,SAJH1J,EAAArG,GAKlC,EAAAoN,EAAA2C,UAAS,WAAqB,UALI1J,EAAArG,GAMlC,EAAAoN,EAAA2C,UAAS,WAAqB,aAAc,WAAY,eANtB/P,yfC9B3CoN,EAAA1U,EAAA,GACA+U,EAAA/U,EAAA,KACA4U,EAAA5U,EAAA,cAM2B,kBACvB2R,QACIvC,QACK,OAAaoQ,SAAS,EAAA9K,EAAA2C,UAAS,kCAC/B,UAAaiM,IAAK,EAAGrgB,KAAM,YAGpCgX,WACI7K,QACK,OAAaqiC,UAAW,SAAAprC,GAAA,OAASA,EAAMiU,eAAiBjU,EAAM0P,gBAAgBH,QAAQ,YAAc,GAAG4J,SAAS,EAAA9K,EAAA2C,UAAS,mCACzH,WAAao6B,UAAW,SAAAprC,GAAA,MAAwC,UAA/BA,EAAMsQ,sBAAoCtQ,EAAMiU,kBACjF,UAAam3B,UAAW,SAAAprC,GAAA,MAAwC,UAA/BA,EAAMsQ,sBAAoCtQ,EAAMiU,eAAerX,KAAM,WACtG,UAAa0I,KAAM,SAACpH,EAAO8H,EAAShG,EAAOwJ,GAAxB,QAAmCxJ,EAAMiU,cAAgB,KAAK/V,GAASsL,EAAOuK,WAAkBoF,SAAS,EAAA9K,EAAA2C,UAAS,wDAE1IzH,QAAS,aAEbwK,WACIhL,QACK,OAAaqiC,UAAW,SAAAprC,GAAA,OAASA,EAAMiU,cAAgB,GAAKjU,EAAM0P,gBAAgBH,QAAQ,YAAc,GAAG4J,SAAS,EAAA9K,EAAA2C,UAAS,mCAC7H,WAAao6B,UAAW,SAAAprC,GAAA,MAAwC,UAA/BA,EAAMsQ,sBAAoCtQ,EAAMiU,kBACjF,UAAam3B,UAAW,SAAAprC,GAAA,MAAwC,UAA/BA,EAAMsQ,sBAAoCtQ,EAAMiU,eAAerX,KAAM,WACtG,UAAa0I,KAAM,SAACpH,EAAO8H,EAAShG,EAAOwJ,GAAxB,MAAoC,SAAS2D,KAAK3D,EAAOoK,YAAc,SAASzG,KAAKjP,IAAY,aAAaiP,KAAK3D,EAAOoK,YAAc,aAAazG,KAAKjP,IAASib,SAAS,EAAA9K,EAAA2C,UAAS,mDACxM,UAAa1L,KAAM,SAACpH,EAAO8H,EAAShG,EAAOwJ,GAAxB,OAAoCA,EAAOoK,WAAa1V,GAAOib,SAAS,EAAA9K,EAAA2C,UAAS,uDAEzGzH,QAAS,aAEbiR,UACIzR,QACK,OAAaoQ,SAAS,EAAA9K,EAAA2C,UAAS,qCAGxCP,YACIlH,QAAS,cAEbkO,YACI1O,QACK,UAAazD,KAAM,SAACpH,EAAO8H,EAAShG,GAAjB,MAAyD,SAA9BA,EAAM8P,sBAAkC,EAAAvB,EAAA2D,aAAYhU,IAAUib,SAAS,EAAA9K,EAAA2C,UAAS,yDAC9H,UAAa1L,KAAM,SAACpH,EAAO8H,EAAShG,GAAjB,MAAyD,SAA9BA,EAAM8P,sBAAkC,EAAAvB,EAAAulC,aAAY51C,IAAUib,SAAS,EAAA9K,EAAA2C,UAAS,qCAC9H,UAAa1L,KAAM,SAACpH,EAAO8H,EAAShG,GAAjB,MAAyD,SAA9BA,EAAM8P,sBAAkC,EAAAvB,EAAAwlC,eAAc71C,IAAQib,SAAS,EAAA9K,EAAA2C,UAAS,uCAC9H,UAAa1L,KAAM,SAACpH,EAAO8H,EAAShG,GACjC,GAAkC,SAA9BA,EAAM8P,oBAAgC,OAAO,EACjD,KAAK,EAAAvB,EAAA2D,aAAYhU,GAAQ,OAAO,EAChC,IAAMuT,GAAqB,EAAAlD,EAAA+D,UAAStS,EAAMyQ,YACpCy1C,EAAqBz0C,EAAa0F,QAJGgvC,EAK5BjoD,EAAMiU,MAAM,KALgBi0C,EAAA/zC,EAAA8zC,EAAA,GAKpCr0C,EALoCs0C,EAAA,GAKjC9oD,EALiC8oD,EAAA,GAM3C,OAAO,EAAA13C,EAAAgD,oBAAmB1R,EAAMuR,SAAU20C,EAAmBr0C,KAAKC,GAAGH,OAAOrU,GAAImU,IACjF0H,SAAS,EAAA9K,EAAA2C,UAAS,0HCtDpBmyC,kBAAkB,SAAClT,EAAiBuB,EAAmBsL,GAAoB,IAAAuJ,EACvC7U,EAAkBt+B,SAAvDW,EAD4EwyC,EAC5ExyC,QAASmM,EADmEqmC,EACnErmC,SAAU7Q,EADyDk3C,EACzDl3C,cAC3B8gC,EAAgB4B,eACZ1iC,EACA0E,EACAmM,EACA88B,+GCNR,QAAAnjD,EAAA,UAEAA,EAAA,KACYiV,IAAZjV,EAAA,MACY2sD,IAAZ3sD,EAAA,MACY4sD,IAAZ5sD,EAAA,kNAEa6oD,gCAAA,IAAAvhD,2RAAAkJ,CAAAC,mBAAAC,KAAqB,SAAAC,EAAMtK,EAAOgiD,GAAb,IAAA/6C,EAAAu/C,EAAAluD,EAAA,OAAA8R,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxBzD,EAAWjH,EAAMiI,cACjBu+C,EAAYC,EAAezmD,EAAOgiD,GAG/B1pD,EAAI,EALiB,YAKdA,EAAIkuD,EAAUhuD,QALA,CAAAgS,EAAAE,KAAA,gBAAAF,EAAAM,GAM1B47C,EAN0Bl8C,EAAAm8C,GAMV1/C,EANUuD,EAAAE,KAAA,EAMM87C,EAAUluD,GAAG2O,GANnB,OAAAuD,EAAAo8C,GAAAp8C,EAAAwI,MAAA,EAAAxI,EAAAM,IAAAN,EAAAm8C,GAAAn8C,EAAAo8C,IAAA,QAKQtuD,IALRkS,EAAAE,KAAA,uBAAAF,EAAAuI,OAAA,SASvB9L,GATuB,yBAAAuD,EAAAQ,SAAAV,OAAApN,MAArB,gBAAAmoD,EAAA/xC,GAAA,OAAArS,EAAA9H,MAAAyG,KAAA0B,YAAAkhD,GAAN,IAYDiE,EAAiB,SAACzmD,EAAOgiD,GAAR,OACnB6E,UAAmBtuC,sBACnB3J,EAAak4C,0BAFMjlD,6HAAA8N,CAGf,6BAA6BxC,KAAKxU,OAAO0J,KAAK2/C,MAAgBhiD,EAAMmP,eACnEP,EAAam4C,2BAClBR,EAAUS,kBACVV,EAASW,kBAIPP,EAAkB,SAACQ,EAAQC,IACT,sBAAuB,sBAAuB,kBAAmB,qBAAsB,eAEhG5kD,QAAQ,SAAC/D,GACZA,KAAO2oD,IACPD,EAAO1oD,QAAOtB,MAItB,EAAA+zB,EAAApsB,UAAO,EAAMqiD,EAAQC,4ICtCzB,wDAAAxtD,EAAA,KAEamtD,2BAA2B,SAAA7lD,GAAA,IAAGuX,EAAHvX,EAAGuX,oBAAqBrJ,EAAxBlO,EAAwBkO,cAAxB,OACpCP,UAAaiH,gBAAgB2C,EAAqBrJ,IAGzC43C,uBAAuB,SAAC/mD,GAAD,OAChC4O,UAAaqH,kBAAkBjW,uUCPnCrG,EAAA,KACA8U,EAAA9U,EAAA,IAEastD,iBAAiB,SAACjnD,GAC3B,IAAMsQ,GAAuB,EAAA7B,EAAA0J,eAAcnY,GAGrConD,EAAepnD,EAAMsQ,uBAAyBA,GAChD1B,UAAa4E,YAAYxT,EAAMmP,cAAemB,GAElD,OAAArQ,GACIqQ,wBACG82C,0UCZXztD,EAAA,KAEaqtD,+BAAA,IAAA/lD,2RAAAkJ,CAAAC,mBAAAC,KAAoB,SAAAC,EAAOtK,GAAP,IAAAmP,EAAAe,EAAAqH,EAAA9G,EAAAoC,EAAAiL,EAAArG,EAAAb,EAAAnD,EAAA4zC,EAAAv3C,EAAAw3C,EAAA/1C,EAAAg2C,EAAA/wC,EAAAzG,EAAAwG,EAAAixC,EAAAC,EAAAz4C,EAAA04C,EAAAC,EAAAnwC,EAAAowC,EAAAC,EAAA,OAAAz9C,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEzByE,EAIWnP,EAJXmP,cACAe,EAGWlQ,EAHXkQ,cACAqH,EAEWvX,EAFXuX,YACA9G,EACWzQ,EADXyQ,WACAoC,EAAW7S,EAAX6S,OACEiL,EAAc9d,EAAMsG,WAAWjG,OAAOyd,YAExCrG,EAEgBzX,EAFhByX,WACAb,EACgB5W,EADhB4W,YACAnD,EAAgBzT,EAAhByT,YAEJgE,EAAaA,GAAcqG,EAAY3G,QAAQC,IAAI,EAAG,UAAUxF,OAAO,SAEjEy1C,EAA0Bz4C,UAAa4B,aAAaC,GACpDX,EAA0Bu3C,EAAwBv3C,oBAClDw3C,EAA0B14C,UAAawJ,YAAYjJ,EAAesB,GAClEc,EAA0B+1C,EAAa/1C,SACvCg2C,EAA0B34C,UAAa0J,aAAa/G,EAAUd,EAAYgH,GAChFA,EAAgC8vC,EAAe9vC,WAEzCjB,EAA0B5H,UAAaiB,qBAAqBV,EAAeW,GAC3EC,EAA0ByG,EAAwBzG,oBAClDwG,EAA0B3H,UAAaqB,gBAAgBC,EAAef,EAAeW,GAErF03C,EAAkB54C,UAAauJ,cAAcpI,EAAqB0D,GACxEA,EAAwB+zC,EAAgB/zC,YAClCg0C,EAAkB74C,UAAa+H,cAAc5G,EAAqB6G,EAAanD,EAAahD,GAClGmG,EAAwB6wC,EAAgB7wC,YA7BXpM,EAAAE,KAAA,GA+BQkE,UAAa4D,gBAAgBoE,EAAa/D,GA/BlD,eA+BvB7D,EA/BuBxE,EAAAwI,KAgCvB00C,GAA2BI,kBAAmB94C,EAAcmE,MAC5Dw0C,GAA2BnwC,mBAAoBxI,EAAcqE,OAE7DmE,EAAyBmwC,EAAuBnwC,mBAChDowC,EAAyBh5C,UAAa0I,cACxCV,EACAW,EACA9D,EACA+D,EACAjG,EACAd,EACAgH,GAGEowC,EAAuBj5C,UAAayB,kBAAkBlB,EAAeW,GA9C9CtF,EAAAuI,OAAA,SAAA9S,KAiDtBonD,EACA7wC,EACAqxC,EACAtxC,EACA+wC,EACAC,EACAE,EACAG,EACAJ,EACAE,EACAC,IA3DsB,yBAAAn9C,EAAAQ,SAAAV,OAAApN,MAApB,gBAAAmoD,GAAA,OAAApkD,EAAA9H,MAAAyG,KAAA0B,YAAA0lD,wUCFb57C,EAAAzR,EAAA,IACAgM,EAAAhM,EAAA,GACA4U,EAAA5U,EAAA,IAGA+kD,EAAA/kD,EAAA,KAoDMouD,GAhDO7E,kBAAkB,SAACljD,EAAOkwB,EAAU+yB,GAC7C,IAAM/J,EAAahpB,EAASgpB,aACtBr+B,EAAcq+B,EAASh5B,OAASg5B,EAAS8O,WAAc,EACvDtsB,EAAsB,IAAT7gB,GAAgBq+B,EAAS8O,WAAa,GACnDxsB,EAAa0d,EAAS+O,cAGtBC,EAFaloD,EAAMyU,WAEUzH,KAAK,SAAArP,GAAA,OAAKA,EAAEO,QAAU8B,EAAMqU,QAEzD6P,EADyC,UAAxBgkC,EAAezjD,KACJ+2B,EAAQ0d,EAASgP,EAAehqD,OAC9D+9B,EAAmB/X,EAAQ++B,EAAwB/kD,MAEnDgmB,IAAU++B,EAAwB/kD,QAClC+9B,EAAgB,MAGpB,IAAMksB,GACF1jD,KAAOyjD,EAAezjD,MAAQ,GAC9BvG,MAAOgmB,GAAS,IAGpB,OACI7f,GAAW60C,EAAS70C,IAAM,GAC1B+qC,YAAalf,EAASnzB,MACtBk/B,gBACA9iB,QAAW+/B,EAAS4B,UAAY5qB,EAASnzB,MAAMoc,QAC/CgvC,qBACAjoC,OAAWg5B,EAASh5B,OACpBrF,OAAWA,EAAOutC,SAAQ,EAAAh9C,EAAAqiC,kBAAiBztC,EAAMwL,WACjDkwB,QAAcA,EAAQ0sB,QAAQ,GAA9B,IACA5sB,UAIKonB,yBAAyB,SAAC5iD,GACnC,IAAM2iD,KAUN,OARAhqD,OAAO0J,KAAKrC,EAAMkP,aAAa3M,QAAQ,SAAC3F,GACpC,IAAMyrD,EAAcN,EAAiC/nD,EAAOpD,GACtD0rD,EAActoD,EAAM8gD,kBAAkBlkD,IACvC,EAAA+I,EAAA4iD,aAAYF,EAASC,KACtB3F,EAAS/lD,GAAQyrD,KAIlB1F,GAG8B,SAAC3iD,EAAOwoD,GAC7C,IAAMC,KACN,GAA0B,YAAtBzoD,EAAMyT,YAA2B,CACjC,IAAMmD,GAAc,EAAArI,EAAA+D,UAAStS,EAAM4W,aACnC6xC,EAAWxuC,aAAc,EAAA1L,EAAA6kC,eAAcx8B,EAAY6Y,OAAQzvB,EAAMuX,aAGrE,OAAAtX,GACIi5C,SAAe,EACf1yB,UAAe,EACflb,OAAesvC,WAAW56C,EAAMsL,QAChC+I,MAAerU,EAAMqU,MACrBlF,cAAeq5C,EACfh9C,SAAexL,EAAMsG,WAAWlG,OAAOoL,SACvCqH,OAAe7S,EAAM6S,QAEjB7S,EAAMyQ,aACJsJ,YAAY,EAAAxL,EAAA6kC,eAAcpzC,EAAMyQ,WAAYzQ,EAAMyX,aAG9B,aAAtBzX,EAAMyT,aAEE+G,SAAemD,SAAS3d,EAAMwa,UAC9BtK,cAAelQ,EAAMkQ,eAGzBu4C,GAGHzoD,EAAMiU,cAAgB,IAAsD,IAAjDjU,EAAM0P,gBAAgBH,QAAQ,iBACxDsE,QAAS7T,EAAM4T,WAAa5T,EAAM0oD,YAGZ,IAAxB1oD,EAAMiU,gBACJ+L,SAAUhgB,EAAM+T,cAKjB+uC,4BAA4B,SAAChC,GACtC,IAAM6H,KACA3zB,EAAWr8B,OAAO0J,KAAKy+C,GACxBxG,UAAU,SAAAhiD,GAAA,OAAKA,EAAEswD,cAAcr5C,QAAQ,UAAY,KAAM,EAe9D,OAba5W,OAAO0J,KAAK1J,OAAOwxC,OAAO2W,GAAmB,IAErDv+C,QAAQ,SAAA9E,GACT,IAAMorD,EAAmB9zB,wCAAsCt3B,GAE3DorD,EACAF,EAAkBjwD,KAAiC,iBAArBmwD,EAAgCA,EAAmBA,EAAiB7zB,KAC1C,IAAjDC,gCAA8B1lB,QAAQ9R,IAC7CkrD,EAAkBjwD,KAAK+E,KAI/BkrD,EAAkBrrC,OACXqrC,kFClHErH,oBAAoB,WAAyB,IAAxBv9B,EAAwBziB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MACtD,OAAKyiB,EAAevrB,OACburB,EAAepO,OAAO,SAAAmzC,GAAA,MAAe,2BAA2B37C,KAAK27C,EAAYC,aAAY,GAAGl2C,OADpE,+bCDvCnN,EAAA/L,EAAA,GAKAm2B,GAAAn2B,EAAA,0DAGAA,EAAA,0lBAEA,IAAM+M,GAAa,WAEEogC,MAwEhBhhC,SAAOC,QAQPD,SAAOC,QAkBPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAMPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAMPD,SAAOC,QAKPD,SAAOC,QAMPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAQPD,SAAOC,oBArKR,SAAA+gC,iGAAc1lC,CAAAxB,KAAAknC,GACV,IADUv/B,mKAAA7F,CAAA9B,MAAAknC,EAAAnlC,WAAAhJ,OAAAiJ,eAAAklC,IAAAhuC,KAAA8G,MAoBF2G,0BAlBJ,yBACA,uBACA,uBACA,uBACA,aACA,aACA,aACA,aACA,aACA,8BACA,6BACA,0BACA,kBACA,yBACA,yBACA,uBAG8BG,iBApBxB,OAAAT,GAAAsB,EAAA,oBAAArB,EAAAqB,GAAAtB,GAAAsB,EAAA,6BAAApB,EAAAoB,GAAAtB,GAAAsB,EAAA,yBAAA0/B,EAAA1/B,GAAAtB,GAAAsB,EAAA,kBAAA2/B,EAAA3/B,GAAAtB,GAAAsB,EAAA,wBAAA4/B,EAAA5/B,GAAAtB,GAAAsB,EAAA,wBAAA6/B,EAAA7/B,GAAAtB,GAAAsB,EAAA,0BAAA8/B,EAAA9/B,GAAAtB,GAAAsB,EAAA,yBAAAg0C,EAAAh0C,GAAAtB,GAAAsB,EAAA,sBAAAi0C,EAAAj0C,GAAAtB,GAAAsB,EAAA,8BAAA03C,EAAA13C,GAAAtB,GAAAsB,EAAA,6BAAA23C,EAAA33C,GAAAtB,GAAAsB,EAAA,0BAAA43C,EAAA53C,GAAAtB,GAAAsB,EAAA,4BAAA63C,EAAA73C,GAAAtB,GAAAsB,EAAA,mBAAA83C,EAAA93C,GAAAtB,GAAAsB,EAAA,eAAA+3C,EAAA/3C,GAAAtB,GAAAsB,EAAA,iBAAAg4C,EAAAh4C,GAAAtB,GAAAsB,EAAA,uBAAAi4C,EAAAj4C,GAAAtB,GAAAsB,EAAA,yBAAAk4C,EAAAl4C,GAAAtB,GAAAsB,EAAA,uBAAAm4C,EAAAn4C,GAAAtB,GAAAsB,EAAA,uBAAAo4C,EAAAp4C,GAAAtB,GAAAsB,EAAA,aAAAq4C,EAAAr4C,GAAAtB,GAAAsB,EAAA,aAAAs4C,EAAAt4C,GAAAtB,GAAAsB,EAAA,aAAAu4C,EAAAv4C,GAAAtB,GAAAsB,EAAA,aAAAw4C,EAAAx4C,GAAAtB,GAAAsB,EAAA,aAAAy4C,EAAAz4C,KAFdyhD,oBAAsB,SAAC9rC,GAAD,OAAU3V,EAAA,YAAiB2V,IAuB7Cje,OAAOosB,iBAAiB,SAAU9jB,EAAK0hD,eACvC,EAAAvjD,EAAAwjD,SAAQ,WACA3hD,EAAK6Y,iBACLzlB,SAASwvB,KAAKC,UAAUE,OAAO,gBAC/B3vB,SAASwvB,KAAKC,UAAUhT,IAAI,iBAE5Bzc,SAASwvB,KAAKC,UAAUE,OAAO,eAC/B3vB,SAASwvB,KAAKC,UAAUhT,IAAI,mBA5B1B7P,qUAvCmB1B,0DAyEA,IAAfpI,EAAewD,EAAfxD,KAAMS,EAAS+C,EAAT/C,MACpB,KAAMT,KAAQmC,MACV,MAAM,IAAI5C,MAAJ,qBAA+BS,GAEzCmC,KAAKnC,GAAQS,yCAKb0B,KAAKupD,aAAelqD,OAAOmqD,WACvBxpD,KAAKw6B,YACLx6B,KAAK0gB,wBAAyB,kDAgBlC1gB,KAAKypD,yBAA2BzpD,KAAKypD,oEAKrCzpD,KAAK+gB,yBAA2B/gB,KAAK+gB,uEAKrC/gB,KAAKihB,6BAA+BjhB,KAAKihB,2EAKzCjhB,KAAK28C,4BAA8B38C,KAAK28C,wEAKxC38C,KAAK48B,qBAAuB58B,KAAK48B,yEAKjC58B,KAAK4gB,wBAA0B5gB,KAAK4gB,gEAKpC5gB,KAAKwgB,iBAAmBxgB,KAAKwgB,+DAK7BxgB,KAAK0pD,uBAAyB1pD,KAAK0pD,sBAC9B1pD,KAAK0pD,wBAAuB1pD,KAAK2pD,uBAAwB,gDAK9D3pD,KAAK2pD,uBAAwB,+CAK7B3pD,KAAK2pD,uBAAwB,gDAK7B3pD,KAAK0gB,wBAAyB,kDAK9B1gB,KAAK0gB,wBAA0B1gB,KAAK0gB,gEAKpC1gB,KAAKygC,mBAAoB,oDAKzBzgC,KAAK0gC,4BAA6B,wCAKlC1gC,KAAKygC,mBAAoB,EACzBzgC,KAAK0gC,4BAA6B,8CAKlC1gC,KAAK4pD,2BAA4B,8CAKjC5pD,KAAK4pD,2BAA4B,EACjC5pD,KAAK6pD,iBAAmB,+CAIVvvD,GACd0F,KAAK6pD,iBAAmBvvD,0CAIZwvD,GACZ9pD,KAAK+pD,eAAejxD,KAAKgxD,8CAIVA,GACf,IAAM/qC,EAAQ/e,KAAK+pD,eAAep6C,QAAQm6C,GACtC/qC,GAAS,GACT/e,KAAK+pD,eAAejwD,OAAOilB,EAAO,oDAMtC/e,KAAK+pD,oDApHL,OAAO/pD,KAAKupD,cAAgBj0B,sDAK5B,OAAOt1B,KAAKupD,cAAgBh0B,mEA9F/BhqB,2DAAwC,oDACxCA,2DAAwC,gDACxCA,2DAAwC,yCAExCA,2DAAqC,+CACrCA,2DAAqC,+CACrCA,2DAAqC,iDACrCA,2DAAqC,gDAGrCA,2DAAoC,6CACpCA,2DAAoC,qDAGpCA,2DAAyC,oDACzCA,2DAAyC,iDACzCA,2DAAyC,mDAGzCA,2DAAuC,0CACvCA,2DAAuC,yCAEvCA,2DAA0BlM,OAAOmqD,iDAEjCj+C,yGAEAA,2DAAoC,gDACpCA,0DAAoC,gDACpCA,0DAAoC,uDACpCA,0DAAoC,sCACpCA,2DAAoC,oCACpCA,2DAAoC,qCACpCA,2DAAoC,oCACpCA,2DAAoC,oCACpCA,2DAAoC,6PAqDpCq/B,8GAKAA,gjFA7FgB1D,kFCZR/D,mBAAmB,WAC5B9jC,OAAOosB,iBAAiB,UAAW,SAACu+B,GAChC,OAAQA,EAAIprD,KACR,IAAK,kBACG7D,SAASkvD,QAA4B,KAAjBD,EAAIvgD,UAAoBpK,OAAO6qD,eACnD7qD,OAAOmO,SAASqjB,4FCLpC,QAAA92B,EAAA,QACAA,EAAA,IACA4+B,EAAA5+B,EAAA,QACAA,EAAA,MACA21B,EAAA31B,EAAA,QACAA,EAAA,UACAA,EAAA,MACAowD,EAAApwD,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMqwD,EAAM,SAAA/oD,GAAA,IAAGqF,EAAHrF,EAAGqF,WAAH,OACRtB,EAAAH,QAAA/J,cAACy9B,EAAA0xB,eAAOC,UAAU,EAAAC,EAAAtlD,YACdG,EAAAH,QAAA/J,cAACw0B,EAAA9vB,cAAaQ,MAAOsG,GACjBtB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,UACXc,EAAAH,QAAA/J,cAACsvD,EAAAvlD,QAAD,OAEJG,EAAAH,QAAA/J,cAACuvD,EAAAxlD,QAAD,KACIG,EAAAH,QAAA/J,cAACwvD,EAAAzlD,QAAD,KACIG,EAAAH,QAAA/J,cAACyvD,EAAA1lD,QAAD,MACAG,EAAAH,QAAA/J,cAAC0vD,EAAA3lD,QAAD,MACAG,EAAAH,QAAA/J,cAAC2vD,EAAA5lD,SAAau0C,SAAUxjB,YAAUE,aAEtC9wB,EAAAH,QAAA/J,cAAC4vD,EAAA7lD,QAAD,OAGJG,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,UACdc,EAAAH,QAAA/J,cAAC6vD,EAAA9lD,QAAD,WAOpBmlD,EAAIloD,WACAwE,WAAYnG,UAAUxB,kBAGXqrD,kFC3Cf,IAAAt5B,EAAA/2B,EAAA,cAOoB,WAChB,IAAMixD,aAA0BjyD,OAAO0J,MAAK,EAAAquB,EAAAgf,WAAmBliC,KAAK,KAA9D,uBACA08C,EAAW,IAAIh9C,OAAO09C,EAAc,MAAMC,KAAK5rD,OAAOmO,SAASS,UAErE,OAAIq8C,GAAYA,EAAS1xD,OACd0xD,EAAS,GAGb,4GCfX,wDAAAvwD,EAAA,QAEqBmxD,cACjB,SAAAA,EAAY/qD,gGAAOqB,CAAAxB,KAAAkrD,GAAA,IAAAvjD,mKAAA7F,CAAA9B,MAAAkrD,EAAAnpD,WAAAhJ,OAAAiJ,eAAAkpD,IAAAhyD,KAAA8G,KACTG,IADS,OAAAwH,EAKnBwjD,kBAAoB,SAAChuD,EAAOs+B,GACxB9zB,EAAKsR,UACDmyC,UAAU,EACVjuD,QACAs+B,UATW9zB,EAanB22B,OAAS,kBAAM32B,EAAKmR,MAAMsyC,SAElBhmD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,aACVqD,EAAKmR,MAAM3b,MAAMoc,SAEtB5R,EAAKxH,MAAMT,UAhBfiI,EAAKmR,OAAUsyC,UAAU,GAFVzjD,qUADoBtF,UAAMvB,0BAA5BoqD,oKCFdjmD,kgBCAPlL,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,IACAsxD,EAAAtxD,EAAA,IACA0U,EAAA1U,EAAA,GACAqwB,EAAArwB,EAAA,QACAA,EAAA,MACA21B,EAAA31B,EAAA,QACAA,EAAA,6DAEMuxD,grBAAwBjpD,UAAMvB,0DAE5Bd,KAAKG,MAAM8hD,yDAIXjiD,KAAKG,MAAMorD,6CAGN,IAAApyC,EAcDnZ,KAAKG,MAZLqrD,EAFCryC,EAEDqyC,mBACA3Q,EAHC1hC,EAGD0hC,iBACA19C,EAJCgc,EAIDhc,MACAyO,EALCuN,EAKDvN,SACAkvB,EANC3hB,EAMD2hB,iBACA2wB,EAPCtyC,EAODsyC,SACA/qC,EARCvH,EAQDuH,uBACAgrC,EATCvyC,EASDuyC,YACAC,EAVCxyC,EAUDwyC,cACAC,EAXCzyC,EAWDyyC,aACAC,EAZC1yC,EAYD0yC,aACA3tC,EAbC/E,EAaD+E,YAGA4tC,SAkCJ,OA/BIA,EADA3uD,EACeiI,EAAAH,QAAA/J,cAAA,SAAIiC,GACZsuD,EACQrmD,EAAAH,QAAA/J,cAAC6wD,EAAA9mD,QAAD,MAGA41C,EAAiBt7C,MAAM,EAAG,GAAGsI,IAAI,SAAC0xC,GAAD,OAC5Cn0C,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGvhC,IAAK26C,EAAmB90C,GACxB27B,KAAOmZ,EAAmBM,gBAC1Bz+C,QAAS,IACTilC,YACIC,MAAW,wCACXC,UAAW,6CACXxX,KAAW,wCAEfyX,eAAA,GAEAp7B,EAAAH,QAAA/J,cAAC8wD,EAAA/mD,QAAD5E,GACI4rD,gBAAiBT,EACjBE,YAAaA,EACbC,cAAeA,EACfC,aAAcA,EACd1tC,YAAaA,EACbtf,IAAK26C,EAAmB90C,GACxBmH,SAAUA,GACN2tC,OAOhBn0C,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,oBACIinD,yBAAmCxrC,EACnCyrC,kCAAmCrxB,KAGvC11B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,4BAA2B,EAAAmK,EAAA2C,UAAS,cACpDhM,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,+BACVK,QAASknD,GAETzmD,EAAAH,QAAA/J,cAACkvB,EAAAgiC,aAAD,QAGRhnD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAACmwD,EAAAgB,YACGz0B,OAAStO,MAAO,OAAQF,OAAQ,QAChCkjC,UAAA,GAECR,cAgBzBR,EAAgBppD,WACZspD,mBAAoBjrD,UAAUA,UAAUiM,WACpCjM,UAAUkM,OACVlM,UAAUiF,SAEdq1C,iBAAwB5c,YAAcC,uBACtCx+B,SAAwBa,UAAUsrB,IAClCjgB,SAAwBrL,UAAUiF,OAClCrI,MAAwBoD,UAAUiF,OAClCs1B,iBAAwBv6B,UAAUkF,KAClCgmD,SAAwBlrD,UAAUkF,KAClC+yC,WAAwBj4C,UAAUkF,KAClCib,uBAAwBngB,UAAUkF,KAClCkmD,cAAwBprD,UAAUmF,KAClCgmD,YAAwBnrD,UAAUmF,KAClCu8C,QAAwB1hD,UAAUmF,KAClC6lD,UAAwBhrD,UAAUmF,KAClCkmD,aAAwBrrD,UAAUmF,KAClCwY,YAAwB3d,UAAUxB,OAClC8sD,aAAwBtrD,UAAUmF,iBAGvB,EAAAgqB,EAAA/uB,SACX,SAAAU,GAAA,IAAGZ,EAAHY,EAAGZ,OAAQtH,EAAXkI,EAAWlI,QAASqH,EAApBa,EAAoBb,OAAQE,EAA5BW,EAA4BX,GAA5B,OACIwd,YAAwBzd,EAAOyd,YAC/BtS,SAAwBpL,EAAOoL,SAC/B4/C,mBAAwBryD,EAAQ2C,SAAS0pB,YACzCq1B,iBAAwB1hD,EAAQgD,UAAU0+C,iBAC1C19C,MAAwBhE,EAAQgD,UAAUgB,MAC1C29B,iBAAwB3hC,EAAQqD,YAAYs+B,iBAC5C2wB,SAAwBtyD,EAAQgD,UAAUsvD,SAC1CjT,WAAwBr/C,EAAQgD,UAAUq8C,WAC1CkT,YAAwBvyD,EAAQgD,UAAUuvD,YAC1CC,cAAwBxyD,EAAQgD,UAAUowD,mBAC1CX,aAAwBzyD,EAAQ2C,SAAS0wD,eACzCvK,QAAwB9oD,EAAQgD,UAAU8lD,QAC1CsJ,UAAwBpyD,EAAQgD,UAAUovD,UAC1C7qC,uBAAwBhgB,EAAGggB,uBAC3BmrC,aAAwBnrD,EAAG+rD,wBAhBpB,CAkBbnB,8HCpJF,QAAAvxD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM2yD,EAAY,SAAArrD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWoxB,EAAdr0B,EAAcq0B,cAAdi3B,EAAAtrD,EAA6BurD,QAA7B,YAAAtvD,IAAAqvD,KAEVvnD,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAKG,MAAM,8BAC/EnkB,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAWywB,EAAe,eACrC/V,KAAK,OACLktC,YAAY,KACZrjC,SAAS,UACT5rB,EAAE,2GAIVwH,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAKG,MAAM,8BAC/EnkB,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAWywB,EAAe,eACrC/V,KAAK,qBACL6J,SAAS,UACT5rB,EAAE,+GAKlB8uD,EAAUxqD,WACNoC,UAAe/D,UAAUiF,OACzBkwB,cAAen1B,UAAUiF,UAGpBknD,sHC/BT,QAAA3yD,EAAA,QACAA,EAAA,uDAEA,IAAM+yD,EAAoB,SAAAzrD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWoxB,EAAdr0B,EAAcq0B,cAAe/wB,EAA7BtD,EAA6BsD,QAA7B,OACtBS,EAAAH,QAAA/J,cAAA,OACIquB,MAAM,6BACND,MAAM,KACNF,OAAO,KACP9kB,UAAWA,EACXK,QAASA,GAETS,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWoxB,GAAiB,cAAe/V,KAAK,OAAOktC,YAAY,KAAKrjC,SAAS,UAAU5rB,EAAE,uZAI3GkvD,EAAkB5qD,WACdoC,UAAe/D,UAAUiF,OACzBkwB,cAAen1B,UAAUiF,OACzBb,QAAepE,UAAUmF,QAGpBonD,yHCrBT,QAAA/yD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMgzD,EAAe,SAAA1rD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWK,EAAdtD,EAAcsD,QAAd,OACjBS,EAAAH,QAAA/J,cAAA,OACIquB,MAAM,6BACND,MAAM,KACNF,OAAO,KACP9kB,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GACrCK,QAASA,GAETS,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,OAAOktC,YAAY,KAAKrjC,SAAS,UAAU5rB,EAAE,qMAIxFmvD,EAAa7qD,WACToC,UAAW/D,UAAUiF,OACrBb,QAAWpE,UAAUmF,QAGhBqnD,6HCrBT,QAAAhzD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMizD,EAAwB,SAAA3rD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWoxB,EAAdr0B,EAAcq0B,cAAd,OAC1BtwB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACjFpa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWoxB,GAAiB,cAAe/V,KAAK,qBAAqB6J,SAAS,UAAU5rB,EAAE,mNAIxGovD,EAAsB9qD,WAClBoC,UAAe/D,UAAUiF,OACzBkwB,cAAen1B,UAAUiF,UAGpBwnD,uICfT,QAAAjzD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMkzD,EAAyB,SAAA5rD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWoxB,EAAdr0B,EAAcq0B,cAAd,OAC3BtwB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACjFpa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWoxB,GAAiB,cAAe/V,KAAK,qBAAqB6J,SAAS,UAAU5rB,EAAE,gNAIxGqvD,EAAuB/qD,WACnBoC,UAAe/D,UAAUiF,OACzBkwB,cAAen1B,UAAUiF,UAGpBynD,iICfT,QAAAlzD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMmzD,EAAkB,SAAA7rD,GAAyB,IAAtBrE,EAAsBqE,EAAtBrE,KAAMsH,EAAgBjD,EAAhBiD,UACzB6oD,SACJ,GAAInwD,EACA,OAAQA,GACJ,IAAK,KACDmwD,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO0tC,KAAK,UAAUzvD,EAAE,iBACnCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,kBACtCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO4jC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,QAI3G,MACJ,IAAK,KACDmjC,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,8BACtCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,KAAGmyD,KAAK,WACJjoD,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU/hB,EAAE,gCACvBwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uJAAuJ6rB,OAAO,UAAU7J,YAAY,SAC5Lxa,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU/hB,EAAE,sNAE3BwH,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO4jC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,QAI3G,MACJ,IAAK,KACDmjC,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,mBACtCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO0tC,KAAK,UAAUzvD,EAAE,iBACnCwH,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO4jC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,QAI3G,MACJ,IAAK,KACDmjC,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO0tC,KAAK,UAAUzvD,EAAE,iBACnCwH,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO4jC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,QAI3G,MACJ,IAAK,KACDmjC,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,mBACtCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO0tC,KAAK,UAAUzvD,EAAE,iBACnCwH,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO4jC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,QAI3G,MACJ,IAAK,KACDmjC,EACI/nD,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,WACRpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uFAAuF+hB,KAAK,YACpGva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,mFAAmF+hB,KAAK,UAEpGva,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAOK,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAGxF,MACJ,IAAK,KACDmjC,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,kBACtCwH,EAAAH,QAAA/J,cAAA,UAAQuuB,OAAO,UAAU4jC,KAAK,UAAU5tC,GAAG,IAAIC,GAAG,IAAIvhB,EAAE,QACxDiH,EAAAH,QAAA/J,cAAA,KAAGmyD,KAAK,WACJjoD,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8IAA8I+hB,KAAK,SAC3Jva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,4EAA4E+hB,KAAK,aAE7Fva,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO4jC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,QAI3G,MACJ,IAAK,KACDmjC,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO0tC,KAAK,UAAUzvD,EAAE,iBACnCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,kBACtCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO4jC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,QAI3G,MACJ,IAAK,KACDmjC,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,OAAKykB,KAAK,UAAUytC,UAAU,OAC9BhoD,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO0tC,KAAK,UAAUzvD,EAAE,kBACnCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO4jC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,QAI3G,MACJ,IAAK,KACDmjC,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,OAAKykB,KAAK,UAAUytC,UAAU,OAC9BhoD,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU0tC,KAAK,UAAUzvD,EAAE,iHACtCwH,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO4jC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,QAI3G,MACJ,IAAK,QACDmjC,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO9J,KAAK,UAAU0tC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,MAC9G5kB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,6uBAA6uB+hB,KAAK,OAAO0tC,KAAK,cAIlxB,MACJ,IAAK,QACDF,EACI/nD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI6kB,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAE3C5kB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAIkb,KAAK,QACdva,EAAAH,QAAA/J,cAAA,OAAKkyD,UAAU,QAEnBhoD,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAO9J,KAAK,UAAU0tC,KAAK,UAAUvjC,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,MAC9G5kB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wxDAAwxD+hB,KAAK,OAAO0tC,KAAK,cAI7zD,MACJ,QACIF,EACI/nD,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,WACRpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0JAA0J+hB,KAAK,YACvKva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0TAA0T+hB,KAAK,SACvUva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,kVAAkV+hB,KAAK,aAEnWva,EAAAH,QAAA/J,cAAA,QAAMoyD,cAAc,MAAM7jC,OAAO,OAAOK,EAAE,KAAKC,EAAE,KAAKT,MAAM,KAAKF,OAAO,KAAKY,GAAG,OAMpG,OACI5kB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,YAAY+J,MAAM,8BAClG4jC,IAMbD,EAAgBhrD,WACZoC,UAAW/D,UAAUiF,OACrBxI,KAAWuD,UAAUiF,UAGhB0nD,oHCtPT,QAAAnzD,EAAA,QACAA,EAAA,uDAEA,IAAMwzD,EAAY,SAAAlsD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWK,EAAdtD,EAAcsD,QAAd,OACdS,EAAAH,QAAA/J,cAAA,OACIoJ,UAAWA,QAAahH,EACxBqH,QAASA,EACT4kB,MAAM,6BACND,MAAM,KACNF,OAAO,KACP5J,QAAQ,aAERpa,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,qPAAqP+hB,KAAK,UAAU6J,SAAS,cAI7R+jC,EAAUrrD,WACNoC,UAAW/D,UAAUiF,OACrBb,QAAWpE,UAAUmF,QAGhB6nD,oHCrBT,QAAAxzD,EAAA,QACAA,EAAA,uDAEA,IAAMmjC,EAAkB,SAAA77B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACpBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACzFpa,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WAAUpkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,IAAIC,GAAG,IAAIvhB,EAAE,IAAIwhB,KAAK,YAC/Dva,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAOkK,UAAU,2BACrBzkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,MAAMC,GAAG,IAAIvhB,EAAE,MAC1BiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,6DAMxBs/B,EAAgBh7B,WACZoC,UAAW/D,UAAUiF,UAGhB03B,mHClBT,QAAAnjC,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMooC,EAAW,SAAA9gC,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACbc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACpHpa,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,UAAU7J,KAAK,QACvBva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oBACRwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kKAAkK+hB,KAAK,eAKnNwiB,EAASjgC,WACLoC,UAAW/D,UAAUiF,UAGhB28B,gHCjBT,QAAApoC,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMqyD,EAAe,SAAA/qD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACjBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACpHpa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,OAAOktC,YAAY,MAAMrjC,SAAS,UAAU5rB,EAAE,mBAIzFwuD,EAAalqD,WACToC,UAAW/D,UAAUiF,UAGhB4mD,iHCdT,QAAAryD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMyzD,EAAY,SAAAnsD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWI,EAAdrD,EAAcqD,YAAd,OACdU,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAae,SAAUX,IAAgB6kB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aAC/Ipa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,qBAAqB6J,SAAS,UAAU5rB,EAAE,qBAIrF4vD,EAAUtrD,WACNoC,UAAa/D,UAAUiF,OACvBd,YAAanE,UAAUkF,QAGlB+nD,6GCfT,QAAAzzD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM0zD,EAAW,SAAApsD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWI,EAAdrD,EAAcqD,YAAd,OACbU,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAae,SAAUX,IAAgB6kB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aAC/Ipa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAU6J,SAAS,UAAU5rB,EAAE,oDAK1E6vD,EAASvrD,WACLoC,UAAa/D,UAAUiF,OACvBd,YAAanE,UAAUkF,QAGlBgoD,4GChBT,QAAA1zD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM2zD,EAAW,SAAArsD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACbc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYilB,MAAM,6BAA6B/J,QAAQ,aAC7Fpa,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,gBAAgBqb,KAAK,OAAO6J,SAAS,UAAUC,OAAO,WAC/DrkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uFACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wEAKpB8vD,EAASxrD,WACLoC,UAAW/D,UAAUiF,UAGhBkoD,+GCjBT,QAAA3zD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM4zD,EAAc,SAAAtsD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAChBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,YAAY+J,MAAM,8BACnGnkB,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMuuB,OAAO,UAAUK,EAAE,KAAKC,EAAE,MAAMT,MAAM,KAAKF,OAAO,IAAIY,GAAG,MAC/D5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU/hB,EAAE,kBACvBwH,EAAAH,QAAA/J,cAAA,QAAMuuB,OAAO,UAAU7rB,EAAE,qBACzBwH,EAAAH,QAAA/J,cAAA,QAAMuuB,OAAO,UAAUK,EAAE,MAAMC,EAAE,MAAMT,MAAM,IAAIF,OAAO,IAAIY,GAAG,MAC/D5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU/hB,EAAE,kBACvBwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAUmK,EAAE,KAAKC,EAAE,IAAIT,MAAM,IAAIF,OAAO,IAAIY,GAAG,OAC1D5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAUmK,EAAE,KAAKC,EAAE,IAAIT,MAAM,IAAIF,OAAO,IAAIY,GAAG,OAC1D5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAUmK,EAAE,IAAIC,EAAE,IAAIT,MAAM,IAAIF,OAAO,IAAIY,GAAG,OACzD5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAUmK,EAAE,IAAIC,EAAE,IAAIT,MAAM,IAAIF,OAAO,IAAIY,GAAG,OACzD5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAUmK,EAAE,IAAIC,EAAE,IAAIT,MAAM,IAAIF,OAAO,IAAIY,GAAG,OACzD5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAUmK,EAAE,IAAIC,EAAE,IAAIT,MAAM,IAAIF,OAAO,IAAIY,GAAG,OACzD5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAUmK,EAAE,IAAIC,EAAE,IAAIT,MAAM,IAAIF,OAAO,IAAIY,GAAG,OACzD5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAUmK,EAAE,IAAIC,EAAE,IAAIT,MAAM,IAAIF,OAAO,IAAIY,GAAG,OACzD5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAUmK,EAAE,IAAIC,EAAE,IAAIT,MAAM,IAAIF,OAAO,IAAIY,GAAG,OACzD5kB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAUmK,EAAE,IAAIC,EAAE,IAAIT,MAAM,IAAIF,OAAO,IAAIY,GAAG,UAKrE2jC,EAAYzrD,WACRoC,UAAW/D,UAAUiF,UAGhBmoD,oHC9BT,QAAA5zD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM6zD,EAAgB,SAAAvsD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAClBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,YAAY+J,MAAM,8BACnGnkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,gDAAgD+hB,KAAK,OAAO6J,SAAS,cAI7GokC,EAAc1rD,WACVoC,UAAW/D,UAAUiF,UAGhBooD,sHCdT,QAAA7zD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMogC,EAAgB,SAAA94B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAClBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACpHpa,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAOktC,YAAY,OAAOjvD,EAAE,+MACvCwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO6J,SAAS,UAAU5rB,EAAE,qTAKnDu8B,EAAcj4B,WACVoC,UAAW/D,UAAUiF,UAGhB20B,sHCjBT,QAAApgC,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMsgC,EAAgB,SAAAh5B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAClBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,YAAY+J,MAAM,8BACnGnkB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAcqb,KAAK,OAAO6J,SAAS,WAC5CpkB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,gBAAgBmlB,OAAO,WAChCrkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,qIAEZwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,qKAAqK+hB,KAAK,eAKtN0a,EAAcn4B,WACVoC,UAAW/D,UAAUiF,UAGhB60B,kHCnBT,QAAAtgC,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM8zD,EAAY,SAAAxsD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACdc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,YAAY+J,MAAM,8BACnGnkB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,8BAA8BmlB,OAAO,UAAU9J,KAAK,OAAO6J,SAAS,WAC7EpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAA0B1G,EAAE,0KAKxDiwD,EAAU3rD,WACNoC,UAAW/D,UAAUiF,UAGhBqoD,2FChBT,QAAA9zD,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,QACAA,EAAA,MACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,MACAqoB,EAAAroB,EAAA,SACAA,EAAA,SACAA,EAAA,wDAGA,IAAM+zD,EAAsB,SAAAzsD,GA6BtB,IA5BF4qD,EA4BE5qD,EA5BF4qD,gBACAh4C,EA2BE5S,EA3BF4S,QACA3P,EA0BEjD,EA1BFiD,UACAssC,EAyBEvvC,EAzBFuvC,aACAhlC,EAwBEvK,EAxBFuK,SACAgP,EAuBEvZ,EAvBFuZ,SACAtK,EAsBEjP,EAtBFiP,cACAsnC,EAqBEv2C,EArBFu2C,WACAjgC,EAoBEtW,EApBFsW,YACAlT,EAmBEpD,EAnBFoD,GACAy1C,EAkBE74C,EAlBF64C,QACAR,EAiBEr4C,EAjBFq4C,WACAtI,EAgBE/vC,EAhBF+vC,kBACAl1B,EAeE7a,EAfF6a,iBACA09B,EAcEv4C,EAdFu4C,YACAe,EAaEt5C,EAbFs5C,SACA7oB,EAYEzwB,EAZFywB,cACA45B,EAWErqD,EAXFqqD,YACAC,EAUEtqD,EAVFsqD,cACAC,EASEvqD,EATFuqD,aACAnyD,EAQE4H,EARF5H,OACAoiB,EAOExa,EAPFwa,UACAqC,EAME7c,EANF6c,YACAnD,EAKE1Z,EALF0Z,OACAy2B,EAIEnwC,EAJFmwC,WACAx0C,EAGEqE,EAHFrE,KACA68C,EAEEx4C,EAFFw4C,gBACAC,EACEz4C,EADFy4C,gBAEMiU,GAAa,EAAA3rC,EAAA4rC,mBAAkB9vC,EAAa4T,EAAena,GACjE,OACIvS,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,kCACIgpD,yCAA2ClwC,SAASkuC,KAAqBxnD,GAE7EH,IAEAc,EAAAH,QAAA/J,cAACgzD,EAAAjpD,SACGR,GAAIA,EACJknD,cAAeA,EACfhnD,QAASinD,EACThb,aAAcA,EACdn3C,OAAQA,IAEZ2L,EAAAH,QAAA/J,cAACizD,EAAAlpD,SACGX,WAAW,EAAAU,EAAAC,SACP,yBACImpD,gCAAkCrwC,SAASkuC,KAAqBxnD,EAChE4pD,+BAAkCzU,EAAc,IAAOngD,EACvD60D,6BAAkC1U,EAAc,IAAOngD,IAG/Dm3C,aAAcA,GAEdxrC,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,8BACA,iDAGAG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0CACXc,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SACP,mBADO,yBAEiB40C,GAAmB,cAGnDz0C,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,iCAAiCw1C,IAErD10C,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BACXc,EAAAH,QAAA/J,cAACqzD,EAAAtpD,SAAiBjI,KAAMA,MAGhCoI,EAAAH,QAAA/J,cAACszD,EAAAvpD,SACG6qB,eAAgBnY,EAChBo2C,WAAYA,EACZU,YAAajd,EACbkd,aAAej1D,IAEnB2L,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,8BACA,8CAGAG,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,qCACA,6CAGCxL,GAAS,EAAAgV,EAAA2C,UAAS,SAAU,EAAA3C,EAAA2C,UAAS,mBAE1ChM,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,oCACA,6CAGC,EAAAwJ,EAAA2C,UAAS,sBAEdhM,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,sCACI0pD,+CAAiD/U,EAAc,EAC/DgV,+CAAiDhV,EAAc,KAGnEx0C,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQQ,KAAKC,IAAIytC,GAAchuC,SAAUA,KAEpDxG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAA,wEAAmFyW,GACpF3V,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQguC,EAAY9tC,SAAUA,MAG7CxG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yCACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0CACX,EAAAmK,EAAA2C,UAAS,mBAEdhM,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQivC,EAAU/uC,SAAUA,OAI/CxG,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGC,KAAOlkB,EACP9gB,QAAS,IACTilC,YACIC,MAAW,4CACXC,UAAW,iDACXxX,KAAW,4CAEfyX,eAAA,GAEAp7B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sCACXc,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,WAAW,EAAAU,EAAAC,SACP,eACA,uBACA,aACI4pD,eAAgBzd,IAExB1sC,aAAcwX,GAAoBk1B,EAClCvsC,MAAM,EAAA4J,EAAA2C,UAAS,iBACfzM,QAAS,kBAAM+mD,EAAYjnD,QAIvCW,EAAAH,QAAA/J,cAAC4zD,EAAA7pD,SACGgP,QAASA,EACT86C,kBAAmBlzC,EACnBmzC,oBAAqBl9B,EACrBlX,SAAUA,EACVtK,cAAeA,EACfsnC,WAAYA,EACZpG,WAAYA,EACZkd,aAAej1D,EACfygD,QAASA,MAMzB4T,EAAoB5rD,WAChB+pD,gBAAiB1rD,UAAUA,UAAUiM,WACjCjM,UAAUkM,OACVlM,UAAUiF,SAEdyO,QAAe1T,UAAUkM,OACzBnI,UAAe/D,UAAUiF,OACzBoG,SAAerL,UAAUiF,OACzBoV,SAAera,UAAUkM,OACzB6D,cAAe/P,UAAUiF,OACzBoyC,WAAer3C,UAAUkM,OACzBqrC,UAAev3C,UAAUkM,OACzBkL,YAAepX,UAAUA,UAAUiM,WAC/BjM,UAAUkM,OACVlM,UAAUiF,SAEdf,GAAmBlE,UAAUkM,OAC7BytC,QAAmB35C,UAAUkM,OAC7BitC,WAAmBn5C,UAAUkM,OAC7B2kC,kBAAmB7wC,UAAUkF,KAC7ByW,iBAAmB3b,UAAUA,UAAUiM,WACnCjM,UAAUkM,OACVlM,UAAUkF,OAEdkmD,cAAeprD,UAAUmF,KACzBgmD,YAAenrD,UAAUmF,KACzBkmD,aAAerrD,UAAUmF,KACzBk0C,YAAer5C,UAAUkM,OACzBkuC,SAAep6C,UAAUkM,OACzBqlB,cAAevxB,UAAUA,UAAUiM,WAC/BjM,UAAUkM,OACVlM,UAAUiF,SAEd/L,OAAW8G,UAAUiF,OACrBqW,UAAWtb,UAAUA,UAAUiM,WAC3BjM,UAAUkM,OACVlM,UAAUiF,SAEd0Y,YAAiB3d,UAAUxB,OAC3Bgc,OAAiBxa,UAAUiF,OAC3BgsC,WAAiBjxC,UAAUkM,OAC3BzP,KAAiBuD,UAAUiF,OAC3Bq0C,gBAAiBt5C,UAAUiF,OAC3Bs0C,gBAAiBv5C,UAAUiF,kBAGhBsoD,iFC3Nf,QAAA/zD,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,uDAEA,IAAMk1D,EAAe,SAAA5tD,GAAA,IACjBuvC,EADiBvvC,EACjBuvC,aACAlxC,EAFiB2B,EAEjB3B,SACA4E,EAHiBjD,EAGjBiD,UACAsnD,EAJiBvqD,EAIjBuqD,aAJiB,OAMjBxmD,EAAAH,QAAA/J,cAAA,KACIoJ,UAAWA,EACX4J,KAAK,eACLvJ,QAAS,kBAAMinD,EAAahb,KAE3BlxC,IAITuvD,EAAa/sD,WACT0uC,aAAcrwC,UAAUxB,OACxBW,SAAca,UAAUgF,KACxBjB,UAAc/D,UAAUiF,OACxBggB,YAAcjlB,UAAUA,UAAUiM,WAC9BjM,UAAUkM,OACVlM,UAAUiF,SAEdy8C,QAAS1hD,UAAUmF,iBAGR,EAAAgqB,EAAA/uB,SACX,SAAA6R,GAAA,OACIo5C,aADJp5C,EAAGrZ,QACuB2C,SAAS0wD,iBAFxB,CAIbyC,kFClCF,QAAAl1D,EAAA,QACAA,EAAA,IACAgV,EAAAhV,EAAA,KACA6gC,EAAA7gC,EAAA,wDAEA,IAAMm1D,EAAmB,SAAA7tD,GAAA,IAAGrE,EAAHqE,EAAGrE,KAAH,OACrBoI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eAAc7+B,KAAMA,EAAKuP,cAAejI,UAAU,mBAEvDc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,8BACX,EAAAyK,EAAAyT,0BAAyBxlB,IAAS,MAK/CkyD,EAAiBhtD,WACblF,KAAMuD,UAAUiF,kBAGL0pD,wGCpBf,QAAAn1D,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM8hC,EAAgB,SAAAx6B,GAAyB,IAAtBrE,EAAsBqE,EAAtBrE,KAAMsH,EAAgBjD,EAAhBiD,UACvB84B,SACJ,GAAIpgC,EACA,OAAQA,GACJ,IAAK,SACDogC,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,mEAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,UAAU5rB,EAAE,+FACjEwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,+DAGtD,MACJ,IAAK,SACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,kEAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,UAAU5rB,EAAE,+FACjEwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,4DAGtD,MACJ,IAAK,eACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,oIAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,4DAGlD,MACJ,IAAK,QACL,IAAK,OACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,iIAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,0CAGlD,MACJ,IAAK,cACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,qWAAqW0G,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,YAEha,MACJ,IAAK,YACD4T,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,0MAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,wLAGlD,MACJ,IAAK,YACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,yIAC1CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,2IAGtD,MACJ,IAAK,aACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,6MAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,iNAGlD,MACJ,IAAK,WACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,sFAC1CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,4KAGtD,MACJ,IAAK,YACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,+CAC1CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,4KAGtD,MACJ,IAAK,aACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,8CAC1CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,iKAGtD,MACJ,IAAK,aACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,WAAUpkB,EAAAH,QAAA/J,cAAA,QAAM2uB,UAAU,kBAAkBE,EAAE,MAAMT,MAAM,KAAKF,OAAO,IAAIY,GAAG,OAC3H5kB,EAAAH,QAAA/J,cAAA,QAAM2uB,UAAU,mBAAmBE,EAAE,OAAOT,MAAM,KAAKF,OAAO,IAAIY,GAAG,OACrE5kB,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,WAAUpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oHAC1BwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oDAIpB,MACJ,IAAK,cAWL,IAAK,eACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,WAAUpkB,EAAAH,QAAA/J,cAAA,QAAM2uB,UAAU,kBAAkBE,EAAE,MAAMT,MAAM,KAAKF,OAAO,IAAIY,GAAG,OAC3H5kB,EAAAH,QAAA/J,cAAA,QAAM2uB,UAAU,mBAAmBE,EAAE,OAAOT,MAAM,KAAKF,OAAO,IAAIY,GAAG,OACrE5kB,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,WACRpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oHACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oDAIpB,MACJ,IAAK,cACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8CAA8C0G,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,YACrGpkB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,WAAUpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+CAChEwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,sPAEZwH,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,WAC9CpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,2GACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uEAIpB,MACJ,IAAK,aACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,6CAA6C0G,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,YACpGpkB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,WAC9CpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+CACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uPAEZwH,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,WAC9CpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0GACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uEAIpB,MACJ,IAAK,YACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wFAAwF0G,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,YAC/IpkB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,WAC9CpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,sGACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uPAEZwH,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,WAC9CpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0EACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,sKAIpB,MACJ,IAAK,UACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,oLAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,wCAGlD,MACJ,IAAK,WACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,yKAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,yCAGlD,MACJ,IAAK,cACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,mIAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,wDAGlD,MACJ,IAAK,OACL,IAAK,MACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAAS/hB,EAAE,uIAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAYqb,KAAK,OAAO/hB,EAAE,wCAGlD,MACJ,IAAK,QACDw/B,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAASkK,UAAU,qBAAqBE,EAAE,KAAKT,MAAM,KAAKF,OAAO,IAAIY,GAAG,OAC3G5kB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAASkK,UAAU,oBAAoBE,EAAE,IAAIT,MAAM,KAAKF,OAAO,IAAIY,GAAG,OACzG5kB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,kHAAkH0G,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,YACzKpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8OAA8O0G,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,aAG7S,MACJ,IAAK,WACD4T,EACIh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAASkK,UAAU,mBAAmBE,EAAE,OAAOT,MAAM,KAAKF,OAAO,IAAIY,GAAG,OAC3G5kB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAcqb,KAAK,UAASkK,UAAU,kBAAkBE,EAAE,MAAMT,MAAM,KAAKF,OAAO,IAAIY,GAAG,OACzG5kB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wHAAwH0G,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,YAC/KpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+KAA+K0G,UAAU,cAAcqb,KAAK,UAAS6J,SAAS,aAG9O,MACJ,QACI4T,EACIh4B,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU6J,SAAS,UAAU5rB,EAAE,gVAK1D,OACIwH,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,kBAAmBX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,YAAY+J,MAAM,8BACtG6T,IAMbvB,EAAc35B,WACVoC,UAAW/D,UAAUiF,OACrBxI,KAAWuD,UAAUiF,UAGhBq2B,kLCxQF52B,iGCAP,QAAAlL,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEA,IAAMo1D,EAAiB,SAAA9tD,GAOjB,IANFiD,EAMEjD,EANFiD,UACAoqD,EAKErtD,EALFqtD,WACAD,EAIEptD,EAJFotD,YACAW,EAGE/tD,EAHF+tD,aACArB,EAEE1sD,EAFF0sD,WACAj+B,EACEzuB,EADFyuB,eAEA,OAAKi+B,IAAeU,GAAeC,IAAe5+B,EAAuB1qB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BAEpFc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,kBAAmBX,IAExCmqD,EACErpD,EAAAH,QAAA/J,cAACm0D,EAAApqD,SACGmqD,aAAcA,EACdX,YAAaA,IAGjBrpD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,yCACZc,EAAAH,QAAA/J,cAACo0D,EAAArqD,SAAc6S,SAAUgY,KAG7B1qB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,yBAClBsqD,+BAAkCxB,GAAc,GAChDyB,gCAAkCzB,EAAa,IAAMA,GAAc,GACnE0B,6BAAkC1B,EAAa,KAEnDn2B,OAAStO,MAAUykC,EAAV,WAUrCoB,EAAejtD,WACXoC,UAAgB/D,UAAUiF,OAC1B4pD,aAAgB7uD,UAAUkM,OAC1BiiD,WAAgBnuD,UAAUkF,KAC1BsoD,WAAgBxtD,UAAUkM,OAC1BqjB,eAAgBvvB,UAAUiM,WACtBjM,UAAUkM,OACVlM,UAAUiF,SAEdipD,YAAaluD,UAAUkM,kBAGZ0iD,iFC1Df,QAAAp1D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,sDAEA,IAAM21D,EAAgB,SAAAruD,GAAmC,IAAhC+tD,EAAgC/tD,EAAhC+tD,aAAcX,EAAkBptD,EAAlBotD,YAC7BkB,mIAAgB/tD,MAAM6sD,GAAahsD,SAEzC,OAAK2sD,EAGDhqD,EAAAH,QAAA/J,cAAA,OAAK08B,OAASlb,QAAS,SACnBtX,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,mCACX,EAAAmK,EAAA2C,UAAS,YAAag+C,IAE3BhqD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iCACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACVqrD,EAAU9nD,IAAI,SAAAskB,GAAA,OACX/mB,EAAAH,QAAA/J,cAAA,QACI0D,IAAKutB,EACL7nB,WAAW,EAAAU,EAAAC,SAAW,eAClB2qD,sBAAwBzjC,EAAM,IAAOpO,SAASqxC,GAC9CS,sBAAwB1jC,EAAM,EAAKpO,SAASqxC,YAd9ChqD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oCAAmCc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sDAwB/ForD,EAAcxtD,WACVktD,aAAc7uD,UAAUkM,OACxBgiD,YAAcluD,UAAUkM,kBAGbijD,8UCrCf31D,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqwB,EAAArwB,EAAA,IACA0U,EAAA1U,EAAA,GACA4U,EAAA5U,EAAA,QAGAA,EAAA,gOAEM+1D,6SACFh3C,OACIinB,SAAS,KAGbgwB,cAAgB,WACZpoD,EAAKsR,UAAW8mB,SAAUp4B,EAAKmR,MAAMinB,qVANjB19B,UAAMo1B,mDASrB,IAAAte,EAWDnZ,KAAKG,MATL8T,EAFCkF,EAEDlF,QACA86C,EAHC51C,EAGD41C,kBACAC,EAJC71C,EAID61C,oBACAp0C,EALCzB,EAKDyB,SACAtK,EANC6I,EAMD7I,cACAsnC,EAPCz+B,EAODy+B,WACA8W,EARCv1C,EAQDu1C,WACAxU,EATC/gC,EASD+gC,QACA1I,EAVCr4B,EAUDq4B,WAEJ,OAAKkd,EAEDtpD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,2BACvB+qD,mCAAoChwD,KAAK8Y,MAAMinB,WAG/C36B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAC+0D,EAAAhrD,SACGwuB,OAAO,EAAAhlB,EAAA2C,UAAS,gBAChB9S,MAAO47C,IAEX90C,EAAAH,QAAA/J,cAAC+0D,EAAAhrD,SACGwuB,OAAO,EAAAhlB,EAAA2C,UAAS,YAChB9S,MAAOkzC,EAAgBA,EAAhB,KAA8B,EAAA/iC,EAAA2C,UAAS,SAAgBwJ,EAAvD,IAAmEtK,KAGlFlL,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAC+0D,EAAAhrD,SACGwuB,OAAO,EAAAhlB,EAAA2C,UAAS,WAChB9S,MAAO2V,EAAUA,EAAQM,WAAa,QAE1CnP,EAAAH,QAAA/J,cAAC+0D,EAAAhrD,SACGwuB,OAAO,EAAAhlB,EAAA2C,UAAS,cAChB9S,MAAOs5C,GAAc,SAG7BxyC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAC+0D,EAAAhrD,SACGwuB,OAAO,EAAAhlB,EAAA2C,UAAS,cAChB9S,OAAO,EAAAqQ,EAAA8kC,cAAY,EAAA9kC,EAAAokC,eAAcic,MAErC5pD,EAAAH,QAAA/J,cAAC+0D,EAAAhrD,SACGwuB,OAAO,EAAAhlB,EAAA2C,UAAS,YAChB9S,OAAO,EAAAqQ,EAAA8kC,cAAY,EAAA9kC,EAAAokC,eAAcgc,QAI7C3pD,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,0BAClBirD,kCAAmClwD,KAAK8Y,MAAMinB,UAElDp7B,QAAS3E,KAAK+vD,eAEd3qD,EAAAH,QAAA/J,cAACkvB,EAAAsiC,WAAUpoD,UAAU,mCA7CT,cAoDhCwrD,EAAc5tD,WACV+R,QAAmB1T,UAAUkM,OAC7BsiD,kBAAmBxuD,UAAUA,UAAUiM,WACnCjM,UAAUkM,OACVlM,UAAUiF,SAEdwpD,oBAAqBzuD,UAAUA,UAAUiM,WACrCjM,UAAUkM,OACVlM,UAAUiF,SAEdoV,SAAera,UAAUkM,OACzB6D,cAAe/P,UAAUiF,OACzBoyC,WAAer3C,UAAUkM,OACzBiiD,WAAenuD,UAAUkF,KACzBy0C,QAAe35C,UAAUkM,OACzB+kC,WAAejxC,UAAUkM,kBAGdqjD,iFCrGf,QAAA/1D,EAAA,QACAA,EAAA,uDAEA,IAAMo2D,EAAoB,SAAA9uD,GAAA,IACtBoyB,EADsBpyB,EACtBoyB,MACAn1B,EAFsB+C,EAEtB/C,MAFsB,OAItB8G,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,yBACXmvB,GAELruB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,yBACXhG,KAKb6xD,EAAkBjuD,WACduxB,MAAOlzB,UAAUiF,OACjBlH,MAAOiC,UAAUA,UAAUiM,WACvBjM,UAAUkM,OACVlM,UAAUiF,oBAIH2qD,iFCzBf,QAAAp2D,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,QACAA,EAAA,UACAA,EAAA,MACA0U,EAAA1U,EAAA,sDAEA,IAAMq2D,EAAgB,SAAA/uD,GAAA,IAClBoD,EADkBpD,EAClBoD,GACAmsC,EAFkBvvC,EAElBuvC,aACAjsC,EAHkBtD,EAGlBsD,QACAgnD,EAJkBtqD,EAIlBsqD,cACAlyD,EALkB4H,EAKlB5H,OALkB,OAOlB2L,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGC,KAAO3mC,EACP2B,QAAS,IACTilC,YACIC,MAAW,uCACXC,UAAW,4CACXxX,KAAW,uCAEfyX,eAAA,GAEAp7B,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,iCACvBorD,qCAAmD,QAAX52D,EACxC62D,sCAAmD,SAAX72D,KAGxC2L,EAAAH,QAAA/J,cAAA,QACIoJ,UAAU,oBACVK,QAAS,kBAAMgnD,EAAclnD,MAEjCW,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAW,mBAClBsrD,uBAAqC,QAAX92D,EAC1B+2D,wBAAqC,SAAX/2D,IAG9BkL,QAAS,kBAAMA,EAAQisC,KAGP,QAAXn3C,EACG2L,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACK,EAAAmC,EAAA2C,UAAS,OACVhM,EAAAH,QAAA/J,cAACu1D,EAAAxrD,SAAUX,UAAU,kBAGzBc,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACK,EAAAmC,EAAA2C,UAAS,QACVhM,EAAAH,QAAA/J,cAACw1D,EAAAzrD,SAAUX,UAAU,uBASrD8rD,EAAcluD,WACV0uC,aAAerwC,UAAUxB,OACzB0F,GAAelE,UAAUkM,OACzB9H,QAAepE,UAAUmF,KACzBimD,cAAeprD,UAAUmF,KACzBjM,OAAe8G,UAAUiF,kBAGd4qD,iFCjEf,wDAAAr2D,EAAA,IAJA,IAAIsG,EAAWtH,OAAO0O,QAAU,SAAUvK,GAAU,IAAK,IAAIxE,EAAI,EAAGA,EAAIgJ,UAAU9I,OAAQF,IAAK,CAAE,IAAI4uD,EAAS5lD,UAAUhJ,GAAI,IAAK,IAAIkG,KAAO0oD,EAAcvuD,OAAOC,UAAUC,eAAeC,KAAKouD,EAAQ1oD,KAAQ1B,EAAO0B,GAAO0oD,EAAO1oD,IAAY,OAAO1B,aAKvO,SAACmE,GAGXA,EADFsvD,OAFsB,IAIpBxwD,EAPN,SAAkCqQ,EAAK/N,GAAQ,IAAIvF,KAAa,IAAK,IAAIxE,KAAK8X,EAAW/N,EAAKkN,QAAQjX,IAAM,GAAkBK,OAAOC,UAAUC,eAAeC,KAAKsX,EAAK9X,KAAcwE,EAAOxE,GAAK8X,EAAI9X,IAAM,OAAOwE,EAOrM84C,CAAyB30C,GAAO,WAE5C,OAAOgB,UAAMnH,cACX,MACAmF,GAAWkpB,MAAO,6BAA8BD,MAAO,KAAMF,OAAQ,KAAM5J,QAAS,aAAerf,GACnGkC,UAAMnH,cACJ,KACEykB,KAAM,OAAQ6J,SAAU,WAC1BnnB,UAAMnH,cAAc,UAAYukB,GAAI,IAAKC,GAAI,IAAKvhB,EAAG,IAAKwhB,KAAM,YAChEtd,UAAMnH,cAAc,QAAUykB,KAAM,OAAQ6J,SAAU,UAAW5rB,EAAG,gLCd1E,wDAAA7D,EAAA,IAJA,IAAIsG,EAAWtH,OAAO0O,QAAU,SAAUvK,GAAU,IAAK,IAAIxE,EAAI,EAAGA,EAAIgJ,UAAU9I,OAAQF,IAAK,CAAE,IAAI4uD,EAAS5lD,UAAUhJ,GAAI,IAAK,IAAIkG,KAAO0oD,EAAcvuD,OAAOC,UAAUC,eAAeC,KAAKouD,EAAQ1oD,KAAQ1B,EAAO0B,GAAO0oD,EAAO1oD,IAAY,OAAO1B,aAKvO,SAACmE,GAGXA,EADFsvD,OAFsB,IAIpBxwD,EAPN,SAAkCqQ,EAAK/N,GAAQ,IAAIvF,KAAa,IAAK,IAAIxE,KAAK8X,EAAW/N,EAAKkN,QAAQjX,IAAM,GAAkBK,OAAOC,UAAUC,eAAeC,KAAKsX,EAAK9X,KAAcwE,EAAOxE,GAAK8X,EAAI9X,IAAM,OAAOwE,EAOrM84C,CAAyB30C,GAAO,WAE5C,OAAOgB,UAAMnH,cACX,MACAmF,GAAWkpB,MAAO,6BAA8BD,MAAO,KAAMF,OAAQ,KAAM5J,QAAS,aAAerf,GACnGkC,UAAMnH,cACJ,KACEykB,KAAM,OAAQ6J,SAAU,WAC1BnnB,UAAMnH,cAAc,UAAYukB,GAAI,IAAKC,GAAI,IAAKvhB,EAAG,IAAKwhB,KAAM,UAAW6J,SAAU,YACrFnnB,UAAMnH,cAAc,QAAUuuB,OAAQ,OAAQC,cAAe,QAAS9rB,EAAG,2HClB/E7E,OAAA0J,KAAAmuD,GAAAjuD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0yD,EAAAhyD,kHCAA,wDAAA7E,EAAA,KAGai0D,oBAAoB,SAACn2C,EAAYia,EAAena,GACzD,IAAMk5C,EAAyBphB,UAAO70B,SAAS60B,UAAO5f,KAAKlY,GAAaQ,KAAKs3B,UAAO5f,KAAKiC,KAErFi8B,EADsBte,UAAO70B,SAAS60B,UAAO5f,KAAKlY,GAAaQ,KAAKN,IACpCyjC,iBAAmBuV,EAAuBvV,iBAAoB,IAQlG,OANIyS,EAAa,GACbA,EAAa,EACNA,EAAa,MACpBA,EAAa,KAGV7hD,KAAK4kD,MAAM/C,mFCdtB,QAAAh0D,EAAA,QACAA,EAAA,QACAA,EAAA,IACAyJ,EAAAzJ,EAAA,KACA2J,EAAA3J,EAAA,KACAoK,EAAApK,EAAA,KACAmK,EAAAnK,EAAA,SACAA,EAAA,MACA+7B,EAAA/7B,EAAA,wDAKA,IAAMg3D,EAAQ,SAAA1vD,GAGR,IAFFjJ,EAEEiJ,EAFFjJ,KACA44D,EACE3vD,EADF2vD,mBAEMC,EAAU,SAACC,GACbF,EAAmB54D,GAEc,mBAAtBA,EAAK+4D,cACZ/4D,EAAK+4D,aAAa/4D,EAAM84D,IAI1BvsD,EAAU,kBAAMssD,GAAQ,IAM9B,OAJI74D,EAAKg5D,oBAAwC9zD,IAAvBlF,EAAKg5D,gBAC3B7zD,WAAW0zD,EAAS74D,EAAKkpD,OAASvrB,iBAIlC3wB,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,cAAe+wB,YAAUE,UAAW99B,EAAKohD,SAAUjjB,QAAMn+B,EAAK4E,KAAKgsD,gBACzFrkD,QAASA,GAETS,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACK,UAAdlM,EAAK4E,MAAsBoI,EAAAH,QAAA/J,cAACsI,EAAAomB,WAAUtlB,UAAU,qBAClC,SAAdlM,EAAK4E,MAAsBoI,EAAAH,QAAA/J,cAACwI,EAAAkW,cAAatV,UAAU,qBACrC,YAAdlM,EAAK4E,MAAsBoI,EAAAH,QAAA/J,cAACgJ,EAAA0xB,aAAYtxB,UAAU,qBACpC,YAAdlM,EAAK4E,MAAsBoI,EAAAH,QAAA/J,cAACiJ,EAAA0xB,aAAYvxB,UAAU,sBAExDc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,kBACVlM,EAAKmhB,SAEVnU,EAAAH,QAAA/J,cAACm2D,EAAApsD,SAAYN,QAASA,MAKlCosD,EAAM7uD,WACF9J,KAAMmI,UAAU+wD,OACZH,aAAe5wD,UAAUmF,KACzB47C,MAAe/gD,UAAUkM,OACzB2kD,cAAe7wD,UAAUkF,KACzB8T,QAAehZ,UAAUgF,KACzBi0C,SAAej5C,UAAUiF,OACzBxI,KAAeuD,UAAUiF,SAE7BwrD,mBAAoBzwD,UAAUmF,gBAGnBqrD,iFC9Df,QAAAh3D,EAAA,QACAA,EAAA,uDAEA,IAAMw3D,EAAc,SAAAlwD,GAAA,IAAGsD,EAAHtD,EAAGsD,QAAH,OAChBS,EAAAH,QAAA/J,cAAA,UACIoJ,UAAU,sBACVtH,KAAK,SACL2H,QAASA,KAIjB4sD,EAAYrvD,WACRyC,QAASpE,UAAUmF,KAAKuqB,sBAGbshC,8UCffx3D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,QACAA,EAAA,6DAEMy3D,grBAAqBnvD,UAAMvB,+CAEpB,IAAAS,EAAAvB,KACL,OACIoF,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,QAASjF,KAAKG,MAAMq5C,WAEvCx5C,KAAKG,MAAM4pD,eAAeliD,IAAI,SAAC4pD,EAAOhtD,GAAR,OAC1BW,EAAAH,QAAA/J,cAACw2D,EAAAzsD,SACGrG,IAAK6F,EACLrM,KAAMq5D,EACNT,mBAAoBzvD,EAAKpB,MAAM6wD,iCAS3DQ,EAAatvD,WACTs3C,SAAoBj5C,UAAUiF,OAC9BwrD,mBAAoBzwD,UAAUmF,KAC9BqkD,eAAoBxpD,UAAUoxD,QAC1BpxD,UAAU+wD,OACNH,aAAe5wD,UAAUmF,KACzB47C,MAAe/gD,UAAUkM,OACzB2kD,cAAe7wD,UAAUkF,KACzB8T,QAAehZ,UAAUgF,KACzBi0C,SAAej5C,UAAUiF,OACzBxI,KAAeuD,UAAUiF,sBAKtB,EAAAkqB,EAAA/uB,SACX,SAAAU,GAAA,IAAGX,EAAHW,EAAGX,GAAH,OACIswD,mBAAoBtwD,EAAGswD,mBACvBjH,eAAoBrpD,EAAGqpD,iBAHhB,CAKbyH,kFC7CF,QAAAz3D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA20B,EAAA30B,EAAA,KACAsxD,EAAAtxD,EAAA,IACA21B,EAAA31B,EAAA,uDAEA,IAAM63D,EAAc,SAAAvwD,GAAA,IAChB3B,EADgB2B,EAChB3B,SAAUo7B,EADMz5B,EACNy5B,iBACVpa,EAFgBrf,EAEhBqf,uBAFgB,OAIhBtb,EAAAH,QAAA/J,cAAA,OACIuJ,GAAG,eACHH,WAAW,EAAAU,EAAAC,SAAW,gBAClB4sD,sCAAuCnxC,EACvCoxC,8BAAuCh3B,KAI3C11B,EAAAH,QAAA/J,cAACmwD,EAAAgB,YACGC,UAAA,EACA10B,OAASxO,OAAQ,uBAEhB1pB,KAKbkyD,EAAY1vD,WACRxC,SAAwBqyD,UAAWlmC,IACnCnL,uBAAwBqxC,UAAWtsD,iBAGxB,EAAAipB,EAAAsjC,aAAW,EAAAtiC,EAAA/uB,SACtB,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAAH,OACIunB,uBADJlO,EAAY9R,GACmBggB,uBAC3Boa,iBAAwB3hC,EAAQqD,YAAYs+B,mBAH1B,CAKxB82B,mFCtCF,QAAA73D,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,QACAA,EAAA,MACAk4D,EAAAl4D,EAAA,wDAMA,IAAMm4D,EAAS,SAAA7wD,GAAA,IACX8wD,EADW9wD,EACX8wD,2BACA/iC,EAFW/tB,EAEX+tB,aACA1O,EAHWrf,EAGXqf,uBACAgpC,EAJWroD,EAIXqoD,sBACA9lB,EALWviC,EAKXuiC,eACA6oB,EANWprD,EAMXorD,sBACA2F,EAPW/wD,EAOX+wD,qBAPW,OASXhtD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qCAEP8qB,GACAhqB,EAAAH,QAAA/J,cAAC+2D,EAAAI,iBACG3xC,uBAAwBA,EACxB+rC,sBAAuBA,KAInCrnD,EAAAH,QAAA/J,cAAC+2D,EAAAK,eAAcv3C,OAAQ6oB,IACvBx+B,EAAAH,QAAA/J,cAACq3D,EAAAttD,QAAD,MACAG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iBACXc,EAAAH,QAAA/J,cAAC+2D,EAAAO,iBAAD,MACAptD,EAAAH,QAAA/J,cAAC+2D,EAAAQ,gBACGC,oBAAqBP,EACrBQ,oBAAqBjJ,EACrBkJ,eAAgBR,OAMhCF,EAAOhwD,WACHiwD,2BAA4B5xD,UAAUkF,KACtC2pB,aAA4B7uB,UAAUkF,KACtCib,uBAA4BngB,UAAUkF,KACtCikD,sBAA4BnpD,UAAUkF,KACtCm+B,eAA4BrjC,UAAUxB,OACtC0tD,sBAA4BlsD,UAAUmF,KACtC0sD,qBAA4B7xD,UAAUmF,iBAG3B,EAAAgqB,EAAA/uB,SACX,SAAA6R,GAAA,IAAGhS,EAAHgS,EAAGhS,OAAQC,EAAX+R,EAAW/R,OAAQC,EAAnB8R,EAAmB9R,GAAnB,OACI0uB,aAA4B5uB,EAAO4uB,aACnCwU,eAA4BnjC,EAAOmjC,eACnCuuB,2BAA4BzxD,EAAGipD,sBAC/BjpC,uBAA4BhgB,EAAGggB,uBAC/BgpC,sBAA4BhpD,EAAGgpD,sBAC/B+C,sBAA4B/rD,EAAG+rD,sBAC/B2F,qBAA4B1xD,EAAG0xD,uBARxB,CAUbF,kFC9DF,QAAAn4D,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,IACA4U,EAAA5U,EAAA,uDAEA,IAAM4Y,EAAa,SAAAtR,GAAqB,IAAlB6c,EAAkB7c,EAAlB6c,YACZ20C,GAAW,EAAAlkD,EAAA8kC,aAAYv1B,GAE7B,OACI9Y,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eAAeuuD,IAItClgD,EAAWzQ,WACPgc,YAAa3d,UAAUxB,mBAGZ,EAAA2wB,EAAA/uB,SACX,SAAA6R,GAAA,OACI0L,YADJ1L,EAAG/R,OACqByd,cAFb,CAIbvL,+FCrBF5Z,OAAA0J,KAAAqwD,GAAAnwD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA40D,EAAAl0D,qBACA7F,OAAA0J,KAAAswD,GAAApwD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA60D,EAAAn0D,qBACA7F,OAAA0J,KAAAuwD,GAAArwD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA80D,EAAAp0D,qBACA7F,OAAA0J,KAAAwwD,GAAAtwD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+0D,EAAAr0D,8GCHA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,wDAEA,IAAMu4D,EAAgB,SAAAjxD,GAAA,IAAG0Z,EAAH1Z,EAAG0Z,OAAH,OAClB3V,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,2BACXc,EAAAH,QAAA/J,cAACg4D,EAAAjuD,SAAQmU,UAAU,MAAMG,SAAS,EAAA9K,EAAA2C,UAAS,wBAA0B2J,EAAOo4C,UAAW,EAAA1kD,EAAA2C,UAAS,2BAC5FhM,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,0BACImuD,kCAAqD,YAAjBr4C,EAAOs4C,MAC3CC,iCAAqD,WAAjBv4C,EAAOs4C,MAC3CE,kCAAqD,YAAjBx4C,EAAOs4C,aAO/Df,EAAcpwD,WACV6Y,OAAQxa,UAAUxB,UAGbuzD,sXCxBTv4D,EAAA,QACAA,EAAA,IACAk4D,EAAAl4D,EAAA,4DAEMy4D,cACF,SAAAA,EAAYryD,gGAAOqB,CAAAxB,KAAAwyD,GAAA,IAAA7qD,mKAAA7F,CAAA9B,MAAAwyD,EAAAzwD,WAAAhJ,OAAAiJ,eAAAwwD,IAAAt5D,KAAA8G,KACTG,IADS,OAAAwH,EAoBnB6rD,aAAe,WACX,IAAMC,EAAiB9rD,EAAK+rD,eAAeC,QAAQl1C,KAAK,SAAAsM,GAAA,OAAMhwB,SAASgwB,KACvEpjB,EAAKsR,UAAWw6C,oBAtBD9rD,EAyBnBisD,iBAAmB,SAACt5D,GAChBA,EAAEu5D,kBAEF,IAAMC,EAAYnsD,EAAKmR,MAAM26C,eACvB1oC,EAAY+oC,EAAU/4D,SAAWA,SAASg5D,gBAC1CC,EAAYrsD,EAAK+rD,eAAeI,EAAU,WAAa,aAAa1mD,KAAK,SAAA6mD,GAAA,OAAOlpC,EAAGkpC,KAErFD,EACAjpC,EAAGipC,KAEHrsD,EAAKsR,UAAWw6C,gBAAgB,KAjCpC9rD,EAAKmR,OACD26C,gBAAgB,GAEpB9rD,EAAK+rD,gBACDh3D,OAAY,mBAAqB,yBAA2B,sBAAwB,sBACpFi3D,SAAY,oBAAqB,0BAA2B,uBAAwB,uBACpFO,WAAY,oBAAqB,0BAA2B,uBAAwB,uBACpFC,UAAY,iBAAqB,uBAA2B,sBAAwB,qBATzExsD,qUADQtF,UAAMvB,0DAeb,IAAAS,EAAAvB,KAChBA,KAAK0zD,eAAeh3D,MAAMiG,QAAQ,SAACjG,GAC/B3B,SAAS0wB,iBAAiB/uB,EAAO6E,EAAKiyD,cAAc,sCAwBxD,IAAMY,GAAyB,EAAApvD,EAAAC,SAAW,gBAAiB,gBACvDovD,wBAAyBr0D,KAAK8Y,MAAM26C,iBAExC,OACIruD,EAAAH,QAAA/J,cAAA,KACIgT,KAAK,eACL5J,UAAW8vD,EACXzvD,QAAS3E,KAAK4zD,kBAEdxuD,EAAAH,QAAA/J,cAAC+2D,EAAAqC,cAAahwD,UAAU,6BAM/BkuD,wHC5DT,QAAAz4D,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMu6D,EAAe,SAAAjzD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACjBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,YAAY+J,MAAM,8BACnGnkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,8BAA8B1G,EAAE,6DAA6D+hB,KAAK,OAAO+J,cAAc,SAASD,OAAO,cAI/J6qC,EAAapyD,WACToC,UAAW/D,UAAUiF,UAGhB8uD,qHCdT,QAAAv6D,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMw6D,EAAgB,SAAAlzD,GAAmB,IAAhBiD,EAAgBjD,EAAhBiD,UACf84B,EACFh4B,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAA0Bqb,KAAK,OAAOktC,YAAY,KAAKrjC,SAAS,UAAU5rB,EAAE,6fAIpG,OACIwH,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACnH4d,IAKbm3B,EAAcryD,WACVoC,UAAW/D,UAAUiF,OACrBxI,KAAWuD,UAAUiF,UAGhB+uD,qHCvBT,QAAAx6D,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMy6D,EAAe,SAAAnzD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACjBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYilB,MAAM,6BAA6B/J,QAAQ,aAC7Fpa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAA0Bqb,KAAK,UAAU/hB,EAAE,inCAInE42D,EAAatyD,WACToC,UAAW/D,UAAUiF,UAGhBgvD,uHCdT,QAAAz6D,EAAA,QACAA,EAAA,QACAA,EAAA,IACAk4D,EAAAl4D,EAAA,wDAEA,IAAMs4D,EAAkB,SAAAhxD,GAGlB,IAFFqf,EAEErf,EAFFqf,uBACA+rC,EACEprD,EADForD,sBAEMgI,GAAyB,EAAAzvD,EAAAC,SAAW,eAAgB,gBACtDyvD,uBAAwBh0C,IAE5B,OACItb,EAAAH,QAAA/J,cAAA,KACIgT,KAAK,eACL5J,UAAWmwD,EACX9vD,QAAS8nD,GAETrnD,EAAAH,QAAA/J,cAAC+2D,EAAAsC,eAAcjwD,UAAU,sCAKrC+tD,EAAgBnwD,WACZwe,uBAAwBngB,UAAUkF,KAClCgnD,sBAAwBlsD,UAAUmF,QAG7B2sD,yHC5BT,QAAAt4D,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,IACAk4D,EAAAl4D,EAAA,SACAA,EAAA,yDAEA,IAAM04D,EAAiB,SAAApxD,GAIjB,IAHFqxD,EAGErxD,EAHFqxD,oBACAC,EAEEtxD,EAFFsxD,oBACAC,EACEvxD,EADFuxD,eAEM+B,GAAwB,EAAA3vD,EAAAC,SAAW,cAAe,gBACpD2vD,sBAAuBjC,IAE3B,OACIvtD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,KACIgT,KAAK,eACLvJ,QAASiuD,EACTtuD,UAAWqwD,GAEXvvD,EAAAH,QAAA/J,cAAC+2D,EAAAuC,cAAalwD,UAAU,oCAE5Bc,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGC,GAAIuyB,EACJv3D,QAAS,IACTilC,YACIC,MAAW,yBACXC,UAAW,8BACXxX,KAAW,yBAEfyX,eAAA,GAEAp7B,EAAAH,QAAA/J,cAAC25D,EAAA5vD,SACG86B,QAAS4yB,EACTR,2BAA4BO,EAC5B76B,aAAc+6B,OAOlCH,EAAevwD,WACXwwD,oBAAqBnyD,UAAUkF,KAC/BktD,oBAAqBpyD,UAAUkF,KAC/BmtD,eAAqBryD,UAAUmF,QAG1B+sD,6VClDT14D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACA+6D,EAAA/6D,EAAA,KACAg7D,EAAAh7D,EAAA,+NAKMi7D,6SACFC,cAAgB,SAAC1vD,GACboC,EAAKutD,YAAc3vD,KAIvBs6B,mBAAqB,SAACnjC,GAClB,IAAMy4D,GAAwBz4D,EAAMQ,OAAOstB,UAAUsV,SAAS,cAAe,mCACzEn4B,EAAKutD,cAAgBvtD,EAAKutD,YAAYp1B,SAASpjC,EAAMQ,SAAWyK,EAAKxH,MAAM4/B,SAAWo1B,GACtFxtD,EAAKxH,MAAM03B,0VATMx1B,UAAMo1B,8DAc3B18B,SAAS0wB,iBAAiB,YAAazrB,KAAK6/B,mEAI5C9kC,SAAS2wB,oBAAoB,YAAa1rB,KAAK6/B,qDAW/C,IAAMu1B,GAAwB,EAAApwD,EAAAC,SAAW,mBACrCowD,mCAAoCr1D,KAAKG,MAAM4/B,UAE7Cu1B,GAAkC,EAAAtwD,EAAAC,SAAW,8BAC/CswD,mCAAoCv1D,KAAKG,MAAMgyD,6BAEnD,OACI/sD,EAAAH,QAAA/J,cAAA,OAAKyE,IAAKK,KAAKi1D,cAAe3wD,UAAW8wD,GACrChwD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWgxD,GACZlwD,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,4BAA2B,EAAAmK,EAAA2C,UAAS,aACpDhM,EAAAH,QAAA/J,cAAC45D,EAAAU,MAAKp8C,UAAU,SAASq8C,gBAAgB,8BAA8Bv/C,KAAM8+C,EAAeU,oBAEhGtwD,EAAAH,QAAA/J,cAAC65D,EAAAY,iBAAD,kDAnBR,OACIhuC,GAAKvL,QAAQ,EAAA3N,EAAA2C,UAAS,WAAYwkD,QAASC,mBAC3CjuC,GAAKxL,QAAQ,EAAA3N,EAAA2C,UAAS,SAAUwkD,QAASE,2BAuBrDd,EAAe9yD,WACXiwD,2BAA4B5xD,UAAUkF,KACtCs6B,QAA4Bx/B,UAAUkF,KACtCoyB,aAA4Bt3B,UAAUmF,gBAG3BsvD,8FC/Dfj8D,OAAA0J,KAAAszD,GAAApzD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA63D,EAAAn3D,qBACA7F,OAAA0J,KAAAm0B,GAAAj0B,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA04B,EAAAh4B,qBACA7F,OAAA0J,KAAAuzD,GAAArzD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA83D,EAAAp3D,kWCFA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAi8D,EAAAj8D,EAAA,+NAEMy7D,6SACF18C,OACIm9C,iBAAkB,OAGtBC,aAAe,SAACn3C,GACZpX,EAAKsR,UAAWg9C,iBAAkBl3C,+UANvB1c,UAAMo1B,mDASZ,IAAAl2B,EAAAvB,KACCm2D,EAAcn2D,KAAKG,MAAM+V,KAAKlW,KAAK8Y,MAAMm9C,kBAAkBL,QAC3DQ,GAAsB,EAAApxD,EAAAC,SAAW,gBAAX,kBAA8CjF,KAAKG,MAAMiZ,WAQrF,OACIhU,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW8xD,GACZhxD,EAAAH,QAAA/J,cAAC86D,EAAAn/B,aACGS,OAAQt3B,KAAK8Y,MAAMm9C,iBACnBjqC,SAAU,SAAAsL,GAAA,OAAU/1B,EAAK20D,aAAa5+B,KAGlCv+B,OAAO0J,KAAKzC,KAAKG,MAAM+V,MAAMrO,IAAI,SAAAjJ,GAAA,OAC7BwG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKA,GACjBwG,EAAAH,QAAA/J,cAAA,QACIoJ,UAjBH,SAAC+xD,GAAD,OAAe,EAAArxD,EAAAC,SACpC1D,EAAKpB,MAAMs1D,gBACX,eACEa,UAAaD,GACfA,GAamCE,CAAiBh1D,EAAKpB,MAAM+V,KAAKtX,GAAK0a,MACjD7D,MAAOlU,EAAKpB,MAAM+V,KAAKtX,GAAKwd,QAE3B7a,EAAKpB,MAAM+V,KAAKtX,GAAKwd,YAM1ChX,EAAAH,QAAA/J,cAACi7D,EAAD,gBAMhBX,EAAKtzD,WACDkX,UAAiB7Y,UAAUiF,OAC3BiwD,gBAAiBl1D,UAAUiF,OAC3B0Q,KAAiB3V,UAAU+wD,OACvBl1C,OAAQ7b,UAAUiF,OAClB8T,KAAQ/Y,UAAUiF,YAIjBgwD,+OC1DFM,0BACAD,4BACAF,0GCFP,QAAA57D,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACA21B,EAAA31B,EAAA,QACAA,EAAA,yDAEA,IAAM+7D,EAAgB,SAAAz0D,GAAA,IAClBm1D,EADkBn1D,EAClBm1D,iBACAC,EAFkBp1D,EAElBo1D,qBACAC,EAHkBr1D,EAGlBq1D,kBACAC,EAJkBt1D,EAIlBs1D,YACAC,EALkBv1D,EAKlBu1D,gBACAC,EANkBx1D,EAMlBw1D,aANkB,OAQlBzxD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gCACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oCACXc,EAAAH,QAAA/J,cAAC47D,EAAA7xD,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,YACfgnB,OAAQy+B,EACR1+B,WAAYu+B,EACZ9+B,MAAM,wBAEVxyB,EAAAH,QAAA/J,cAAC47D,EAAA7xD,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,qBACfgnB,OAAQu+B,EACRx+B,UAAWq+B,IAEfpxD,EAAAH,QAAA/J,cAAC47D,EAAA7xD,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,mBACfgnB,OAAQw+B,EACRz+B,UAAWs+B,OAM3BX,EAAc5zD,WACVs0D,iBAAsBj2D,UAAUkF,KAChCgxD,qBAAsBl2D,UAAUkF,KAChCixD,kBAAsBn2D,UAAUkF,KAChCkxD,YAAsBp2D,UAAUmF,KAChCkxD,gBAAsBr2D,UAAUmF,KAChCmxD,aAAsBt2D,UAAUmF,iBAGrB,EAAAgqB,EAAA/uB,SACX,SAAA6R,GAAA,IAAG9R,EAAH8R,EAAG9R,GAAH,OACIg2D,kBAAsBh2D,EAAGqgB,wBACzBy1C,iBAAsB91D,EAAGugB,4BACzBw1C,qBAAsB/1D,EAAGi8C,2BACzBga,YAAsBj2D,EAAGq2D,qBACzBH,gBAAsBl2D,EAAGs2D,qBACzBH,aAAsBn2D,EAAGu2D,oBAPlB,CASbnB,kFCtDF,QAAA/7D,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAqwB,EAAArwB,EAAA,IACA21B,EAAA31B,EAAA,QACAA,EAAA,yDAEA,IAAM87D,EAAkB,SAAAx0D,GAAA,IACpB61D,EADoB71D,EACpB61D,cACAC,EAFoB91D,EAEpB81D,aACAC,EAHoB/1D,EAGpB+1D,sBACAn8B,EAJoB55B,EAIpB45B,mBACAo8B,EALoBh2D,EAKpBg2D,aACAC,EANoBj2D,EAMpBi2D,eACAC,EAPoBl2D,EAOpBk2D,2BACAj8B,EARoBj6B,EAQpBi6B,mBARoB,OAUpBl2B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gCACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sCACXc,EAAAH,QAAA/J,cAAC47D,EAAA7xD,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,YACfzM,QAAS0yD,GAETjyD,EAAAH,QAAA/J,cAACkvB,EAAA8iC,iBACG5oD,UAAW,iCACXtH,MAAOk6D,GAAiB,MAAM3qD,iBAGtCnH,EAAAH,QAAA/J,cAAC47D,EAAA7xD,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,aACf+mB,UAAWg/B,EACX/+B,OAAQk/B,IAEZlyD,EAAAH,QAAA/J,cAAC47D,EAAA7xD,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,yBACf+mB,UAAWi/B,EACXh/B,OAAQm/B,IAEZnyD,EAAAH,QAAA/J,cAAC47D,EAAA7xD,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,iBACf+mB,UAAW8C,EACX7C,OAAQkD,OAMxBu6B,EAAgB3zD,WACZg1D,cAA4B32D,UAAUiF,OACtC2xD,aAA4B52D,UAAUkF,KACtCitD,oBAA4BnyD,UAAUkF,KACtC2xD,sBAA4B72D,UAAUkF,KACtCw1B,mBAA4B16B,UAAUkF,KACtC4xD,aAA4B92D,UAAUmF,KACtC4xD,eAA4B/2D,UAAUmF,KACtC6xD,2BAA4Bh3D,UAAUmF,KACtC41B,mBAA4B/6B,UAAUmF,iBAG3B,EAAAgqB,EAAA/uB,SACX,SAAA6R,GAAA,IAAG/R,EAAH+R,EAAG/R,OAAQC,EAAX8R,EAAW9R,GAAX,OACIw2D,cAA4Bz2D,EAAOm8C,iBACnCua,aAA4Bz2D,EAAG8f,gBAC/BkyC,oBAA4BhyD,EAAGipD,sBAC/ByN,sBAA4B12D,EAAGkgB,uBAC/Bqa,mBAA4Bv6B,EAAGk8B,oBAC/By6B,aAA4B32D,EAAG82D,mBAC/BF,eAA4B52D,EAAG42D,eAC/BC,2BAA4B72D,EAAG62D,2BAC/Bj8B,mBAA4B56B,EAAG46B,qBAVxB,CAYbu6B,kFCvEF,QAAA97D,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,QACAA,EAAA,yDAEA,IAAM47D,EAAmB,SAAAt0D,GAAA,IACrBs+B,EADqBt+B,EACrBs+B,KACArD,EAFqBj7B,EAErBi7B,WACAm7B,EAHqBp2D,EAGrBo2D,eAHqB,OAKrBryD,EAAAH,QAAA/J,cAACw8D,EAAAzyD,SACG06B,KAAMA,EACNrD,WAAYA,EACZm7B,eAAgBA,KAIxB9B,EAAiBzzD,WACby9B,KAAgBp/B,UAAUmF,KAC1B+xD,eAAgBl3D,UAAUkF,KAC1B62B,WAAgB/7B,UAAUkF,iBAGf,EAAAiqB,EAAA/uB,SACX,SAAA6R,GAAA,IAAG9R,EAAH8R,EAAG9R,GAAH,OACIi/B,KAAgBj/B,EAAGi3D,mBACnBF,eAAgB/2D,EAAGgpD,sBACnBptB,WAAgB57B,EAAGipD,wBAJZ,CAMbgM,kFC7BF,QAAA57D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAqwB,EAAArwB,EAAA,IAGAu1C,EAAAv1C,EAAA,wDAIA,IAAM69D,EAAiB,SAAAv2D,GAA0C,IAAvCs+B,EAAuCt+B,EAAvCs+B,KAAMrD,EAAiCj7B,EAAjCi7B,WAAYm7B,EAAqBp2D,EAArBo2D,eAClCI,GAAwB,EAAA7yD,EAAAC,SAAW,8CACrC6yD,mDAAoDx7B,GAAcm7B,IAGtE,OACIryD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWuzD,GACZzyD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mCAAmCK,QAASg7B,GACvDv6B,EAAAH,QAAA/J,cAACkvB,EAAAoL,UAASlxB,UAAU,gCACpBc,EAAAH,QAAA/J,cAAA,aAAO,EAAAuT,EAAA2C,UAAS,cAEpBhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uCACVvL,OAAO0J,MAAK,EAAA6sC,EAAAM,wBAAuB/nC,IAAI,SAAAjJ,GAAA,OACpCwG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKA,GACjBwG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iCACXc,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,iCAAiC4J,MAAM,EAAAohC,EAAAU,QAAOpxC,IACvDwG,EAAAH,QAAA/J,cAACkvB,EAAA8iC,iBACG5oD,UAAW,oEACXtH,KAAM4B,EAAI+O,QAAQ,SAAU,KAAKpB,gBAErCnH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,mCAAkC,EAAAgrC,EAAAM,uBAAsBhxC,YAUxGg5D,EAAe11D,WACXy9B,KAAgBp/B,UAAUmF,KAC1B+xD,eAAgBl3D,UAAUkF,KAC1B62B,WAAgB/7B,UAAUkF,gBAGfmyD,iFC/Cf,QAAA79D,EAAA,QACAA,EAAA,IACA20B,EAAA30B,EAAA,KACAyR,EAAAzR,EAAA,IACAg+D,EAAAh+D,EAAA,SAQAA,EAAA,MACA21B,EAAA31B,EAAA,uDAEA,IAAMi+D,EAAS,SAAA32D,GAiBT,IAhBFwlB,EAgBExlB,EAhBFwlB,QACAuhB,EAeE/mC,EAfF+mC,YACAJ,EAcE3mC,EAdF2mC,eACAp8B,EAaEvK,EAbFuK,SACAqsD,EAYE52D,EAZF42D,kBACAC,EAWE72D,EAXF62D,mBACAtO,EAUEvoD,EAVFuoD,0BACAx6B,EASE/tB,EATF+tB,aACAoL,EAQEn5B,EARFm5B,UACAyK,EAOE5jC,EAPF4jC,WACA12B,EAMElN,EANFkN,QACA4pD,EAKE92D,EALF82D,eACAtO,EAIExoD,EAJFwoD,iBACAuO,EAGE/2D,EAHF+2D,kBACAC,EAEEh3D,EAFFg3D,kBACAC,EACEj3D,EADFi3D,qBAaA,OAVAj5D,OAAOosB,iBAAiB,sBAAuB,SAAAnxB,GAC3C6E,QAAQo5D,IAAI,yCAEZj+D,EAAE6nD,iBAEFiW,EAAkB99D,GAClB+9D,MAKAjzD,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,UACdc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACVk2B,GAAap1B,EAAAH,QAAA/J,cAAC68D,EAAAS,iBAAD,MACdpzD,EAAAH,QAAA/J,cAAC68D,EAAAU,WACGrpC,aAAcA,EACdspC,MAAOC,aAGfvzD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBACTslD,GAA6Bx6B,GAC3BhqB,EAAAH,QAAA/J,cAAC68D,EAAAa,kBACGt0D,UAAU,mBACVu0D,aAAchP,EACdllD,QAASszD,IAGf7oC,EACEhqB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAC68D,EAAAe,aACGjyC,SAAS,EAAArb,EAAAa,aAAYT,EAAUib,GAAS,GACxCkyC,mBAAoB3wB,EACpBnD,WAAYA,EACZkzB,eAAgBA,EAChBvsD,SAAUA,EACV2C,QAASA,EACTyqD,aAAcd,EACdrgC,aAAcygC,OAEbtwB,IAAkB/C,IACvB7/B,EAAAH,QAAA/J,cAAC68D,EAAAkB,eAAc30D,UAAU,sBAErB2gC,GACJ7/B,EAAAH,QAAA/J,cAAC68D,EAAAmB,eAAc50D,UAAU,sBAI7Bc,EAAAH,QAAA/J,cAAC68D,EAAAoB,aAAY70D,UAAU,0BASnD0zD,EAAO91D,WACH2kB,QAA2BtmB,UAAUiF,OACrC4iC,YAA2B7nC,UAAUkF,KACrCuiC,eAA2BznC,UAAUiF,OACrCoG,SAA2BrL,UAAUiF,OACrCyyD,kBAA2B13D,UAAUmF,KACrCwyD,mBAA2B33D,UAAUkF,KACrC0xD,aAA2B52D,UAAUkF,KACrCmkD,0BAA2BrpD,UAAUkF,KACrC2pB,aAA2B7uB,UAAUkF,KACrC+0B,UAA2Bj6B,UAAUkF,KACrCw/B,WAA2B1kC,UAAUkF,KACrC8I,QAA2BhO,UAAUiF,OACrC2yD,eAA2B53D,UAAUmF,KACrCmkD,iBAA2BtpD,UAAUxB,OACrCq5D,kBAA2B73D,UAAUmF,KACrC2yD,kBAA2B93D,UAAUmF,KACrC4yD,qBAA2B/3D,UAAUmF,iBAK1B,EAAAgpB,EAAAsjC,aAAW,EAAAtiC,EAAA/uB,SACtB,SAAA6R,GAAA,IAAGhS,EAAHgS,EAAGhS,OAAQE,EAAX8R,EAAW9R,GAAX,OACImmB,QAA2BrmB,EAAOqmB,QAClCuhB,YAA2B5nC,EAAO4nC,YAClCJ,eAA2BxnC,EAAOwnC,eAClCp8B,SAA2BpL,EAAOoL,SAClCwjB,aAA2B5uB,EAAO4uB,aAClC6V,WAA2BzkC,EAAOykC,WAClC12B,QAA2B/N,EAAO+N,QAClC0pD,kBAA2Bv3D,EAAGu3D,kBAC9BC,mBAA2Bx3D,EAAG+oD,wBAC9B0N,aAA2Bz2D,EAAG8f,gBAC9BopC,0BAA2BlpD,EAAGkpD,0BAC9BpvB,UAA2B95B,EAAG85B,UAC9BqvB,iBAA2BnpD,EAAGmpD,iBAC9BuO,kBAA2B13D,EAAG03D,kBAC9BC,kBAA2B33D,EAAG23D,kBAC9BC,qBAA2B53D,EAAG43D,uBAjBZ,CAmBxBN,gGCrIFj/D,OAAA0J,KAAA22D,GAAAz2D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAk7D,EAAAx6D,qBACA7F,OAAA0J,KAAA42D,GAAA12D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAm7D,EAAAz6D,qBACA7F,OAAA0J,KAAA62D,GAAA32D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAo7D,EAAA16D,qBACA7F,OAAA0J,KAAA82D,GAAA52D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAq7D,EAAA36D,qBACA7F,OAAA0J,KAAA+2D,GAAA72D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAs7D,EAAA56D,qBACA7F,OAAA0J,KAAAg3D,GAAA92D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAu7D,EAAA76D,qBACA7F,OAAA0J,KAAAi3D,GAAA/2D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAw7D,EAAA96D,qBACA7F,OAAA0J,KAAAk3D,GAAAh3D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAy7D,EAAA/6D,4GCPA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,IACA6/D,EAAA7/D,EAAA,KACAqwB,EAAArwB,EAAA,uDAIA,IAAM++D,EAAc,SAAAz3D,GAAA,IAChBwlB,EADgBxlB,EAChBwlB,QACAjb,EAFgBvK,EAEhBuK,SACA2C,EAHgBlN,EAGhBkN,QACAyqD,EAJgB33D,EAIhB23D,aACAD,EALgB13D,EAKhB03D,mBACA9zB,EANgB5jC,EAMhB4jC,WACAkzB,EAPgB92D,EAOhB82D,eACAtgC,EARgBx2B,EAQhBw2B,aARgB,OAUhBzyB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACXc,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,YAClB40D,iBAAwBb,EACxBc,uBAAwB70B,IAE5BtgC,QAASkzB,GAETzyB,EAAAH,QAAA/J,cAAA,KACIoJ,UAAU,eACVmR,MAAOlH,GAENA,EAJL,UAOuB,IAAZsY,GACPzhB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,qBACTc,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAW,gIAAXyC,IAAA,aAAsCkE,GAAY,IAAIW,cAAkBX,MAEtFib,GAGTzhB,EAAAH,QAAA/J,cAACkvB,EAAAsiC,WAAUpoD,UAAU,yBAAyBsoD,SAAS,KAE3DxnD,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGC,GAAI44B,EACJ59D,QAAS,IACTilC,YACIC,MAAW,+BACXC,UAAW,oCACXxX,KAAW,+BAEfyX,eAAA,GAEAp7B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAC0+D,EAAAG,iBACGz9B,WAAY08B,EACZ5gC,OAAQP,EACRkhC,mBAAoBA,EACpBZ,eAAgBA,QAOpCW,EAAY52D,WACRunC,aAAoBlpC,UAAUiF,OAC9BqhB,QAAoBtmB,UAAUiF,OAC9BoG,SAAoBrL,UAAUiF,OAC9BwzD,aAAoBz4D,UAAUkF,KAC9BszD,mBAAoBx4D,UAAUkF,KAC9Bw/B,WAAoB1kC,UAAUkF,KAC9B8I,QAAoBhO,UAAUiF,OAC9B2yD,eAAoB53D,UAAUmF,KAC9BmyB,aAAoBt3B,UAAUmF,QAGzBozD,0GC9ET//D,OAAA0J,KAAAu3D,GAAAr3D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA87D,EAAAp7D,6WCAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAgM,EAAAhM,EAAA,GACAkgE,EAAAlgE,EAAA,KACAmgE,EAAAngE,EAAA,KACA2U,EAAA3U,EAAA,IACA21B,EAAA31B,EAAA,8NAEMggE,6SACF9E,cAAgB,SAAC1vD,GACboC,EAAKutD,YAAc3vD,KAGvBs6B,mBAAqB,SAACnjC,GAClB,IAAMy9D,GAAwBz9D,EAAMQ,OAAOstB,UAAUsV,SAAS,YAC1Dn4B,EAAKutD,cAAgBvtD,EAAKutD,YAAYp1B,SAASpjC,EAAMQ,SAClDyK,EAAKxH,MAAMm8B,YAAc69B,GAC5BxyD,EAAKxH,MAAMi4B,YAInBgiC,aAAe,WACXzyD,EAAKxH,MAAMi4B,SACPzwB,EAAKxH,MAAMugB,wBACX/Y,EAAKxH,MAAMssD,yBAEf,EAAA/9C,EAAA0hB,4VAlBsB/tB,UAAMvB,0DAsB5B/F,SAAS0wB,iBAAiB,YAAazrB,KAAK6/B,mEAI5C9kC,SAAS2wB,oBAAoB,YAAa1rB,KAAK6/B,0XAGpCtxB,qFACXvO,KAAKG,MAAMi4B,SACPp4B,KAAKG,MAAMk6D,kBAAoB9rD,mEAC7BvO,KAAKG,MAAM0pC,cAAct7B,uIAG1B,IAAAhN,EAAAvB,KACL,IAAKA,KAAKG,MAAMivB,aAAc,OAAO,EAGrC,IAAMkrC,EAAgBt6D,KAAKG,MAAM0oC,aAAa9yB,OAAO,SAAA40B,GAAA,OAAQA,EAAI1F,aAC3Ds1B,EAAgBv6D,KAAKG,MAAM0oC,aAAaz7B,KAAK,SAAAu9B,GAAA,OAAOA,EAAI1F,aAExDu1B,EAAqBF,EAAc1hE,OAAS,GAAI,EAAA6V,EAAA2C,UAAS,kBAAmB,EAAA3C,EAAA2C,UAAS,gBAE3F,OACIhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBAAqB3E,IAAKK,KAAKi1D,kBAGnCj1D,KAAKG,MAAM0oC,aAAajwC,SAAU0hE,EAAc1hE,SACnDwM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,4BACXk2D,GAELp1D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BAEPg2D,EAAczyD,IAAI,SAACmhC,GAAD,OACd5jC,EAAAH,QAAA/J,cAAA,OACI0D,IAAKoqC,EAAQz6B,QACbjK,WAAW,EAAAU,EAAAC,SAAW,yBAClBw1D,kCAAoCzxB,EAAQz6B,UAAYhN,EAAKpB,MAAMk6D,kBAEvE11D,QAASpD,EAAKm5D,SAAS77D,KAAd0C,EAAyBynC,EAAQz6B,UAE1CnJ,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAW,oBACbc,EAAAH,QAAA/J,cAAC++D,EAAAU,sBACGr2D,UAAA,gDAA2D0kC,EAAQ1vB,KACnEtc,KAAMgsC,EAAQ1vB,OAEjB0vB,EAAQz6B,gBAStBvO,KAAKG,MAAM44D,qBAAsB/4D,KAAKG,MAAM2oC,aAAaf,iBAC5D3iC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,oCAAmC,EAAAmK,EAAA2C,UAAS,wBAMvE,EAAArL,EAAAwB,eAAcgzD,IACfn1D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,6BACX,EAAAmK,EAAA2C,UAAS,oBAEdhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,yBAClBw1D,kCAAoCz6D,KAAKG,MAAMy6D,kBAAoB56D,KAAKG,MAAMk6D,kBAElF11D,QAAS3E,KAAK06D,SAAS77D,KAAKmB,KAAMA,KAAKG,MAAMy6D,kBAE7Cx1D,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAW,mBAAoB,8BAC3CjF,KAAKG,MAAMy6D,uBAM3B56D,KAAKG,MAAM44D,qBAAsB/4D,KAAKG,MAAM8kC,aACjD7/B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,oCAAmC,EAAAmK,EAAA2C,UAAS,6BAGhEhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBAAuBK,QAAS3E,KAAKo6D,cAChDh1D,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,8BAA6B,EAAAmK,EAAA2C,UAAS,YACtDhM,EAAAH,QAAA/J,cAACg/D,EAAAW,YAAWv2D,UAAU,sDAO1Cy1D,EAAgB73D,WACZ2mC,aAAwBtoC,UAAUic,MAClC69C,gBAAwB95D,UAAUiF,OAClC4pB,aAAwB7uB,UAAUkF,KAClCib,uBAAwBngB,UAAUkF,KAClCszD,mBAAwBx4D,UAAUkF,KAClCw/B,WAAwB1kC,UAAUkF,KAClC62B,WAAwB/7B,UAAUkF,KAClC0yD,eAAwB53D,UAAUmF,KAClC0yB,OAAwB73B,UAAUmF,KAClC+mD,sBAAwBlsD,UAAUmF,KAClCojC,aAAwBvoC,UAAUxB,OAClC67D,gBAAwBr6D,UAAUiF,QAGtC,IAAMs1D,GAAmB,EAAAprC,EAAA/uB,SACrB,SAAAkS,GAAA,IAAGrS,EAAHqS,EAAGrS,OAAQE,EAAXmS,EAAWnS,GAAX,OACImoC,aAAwBroC,EAAOqoC,aAC/BwxB,gBAAwB75D,EAAO+N,QAC/B6gB,aAAwB5uB,EAAO4uB,aAC/B6V,WAAwBzkC,EAAOykC,WAC/B4E,cAAwBrpC,EAAOqpC,cAC/Bf,aAAwBtoC,EAAOsoC,aAC/B8xB,gBAAwBp6D,EAAOu6D,wBAC/Br6C,uBAAwBhgB,EAAGggB,uBAC3B+rC,sBAAwB/rD,EAAG+rD,wBAVV,CAavBsN,KAE2BA,gBAApBe,8FC9JT/hE,OAAA0J,KAAAu4D,GAAAr4D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA88D,EAAAp8D,qHCAA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM4gE,EAAuB,SAAAt5D,GAAyB,IAAtBrE,EAAsBqE,EAAtBrE,KAAMsH,EAAgBjD,EAAhBiD,UAC9B22D,SACJ,GAAIj+D,EACA,OAAQA,GACJ,IAAK,MACDi+D,EACI71D,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,UAAU7J,KAAK,QACvBva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,gFAAgF+hB,KAAK,YAC7Fva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+FAA+F+hB,KAAK,YAC5Gva,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,QACJva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8iBAEZwH,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,WACJva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,yUAEZwH,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,QACJva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uWACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0FACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8MAEZwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,mCAAmC+hB,KAAK,YAChDva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,qaAAqa+hB,KAAK,YAClbva,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU/hB,EAAE,+KAG/B,MACJ,IAAK,MACDq9D,EACI71D,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,UAAU7J,KAAK,QACvBva,EAAAH,QAAA/J,cAAA,UAAQykB,KAAK,UAAUF,GAAG,KAAKC,GAAG,KAAKvhB,EAAE,OACzCiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,yvBAAyvB+hB,KAAK,UAG9wB,MACJ,IAAK,MACDs7C,EACI71D,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,UAAU7J,KAAK,QACvBva,EAAAH,QAAA/J,cAAA,UAAQykB,KAAK,UAAUF,GAAG,KAAKC,GAAG,KAAKvhB,EAAE,OACzCiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,2uBAA2uB+hB,KAAK,UAGhwB,MACJ,IAAK,MACDs7C,EACI71D,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,UAAU7J,KAAK,QACvBva,EAAAH,QAAA/J,cAAA,UAAQuuB,OAAO,UAAU7J,YAAY,OAAOH,GAAG,KAAKC,GAAG,KAAKvhB,EAAE,UAC9DiH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU/hB,EAAE,sBACvBwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU/hB,EAAE,4BACvBwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO/hB,EAAE,qCACpBwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU/hB,EAAE,uBACvBwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU/hB,EAAE,6BACvBwH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO/hB,EAAE,wCAG5B,MACJ,IAAK,MACDq9D,EACI71D,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,UAAU7J,KAAK,QACvBva,EAAAH,QAAA/J,cAAA,UAAQykB,KAAK,UAAUF,GAAG,KAAKC,GAAG,KAAKvhB,EAAE,OACzCiH,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,WACJva,EAAAH,QAAA/J,cAAA,QAAM2xD,YAAY,KAAKjvD,EAAE,oCACzBwH,EAAAH,QAAA/J,cAAA,QAAM2xD,YAAY,MAAMjvD,EAAE,0CAC1BwH,EAAAH,QAAA/J,cAAA,QAAM2xD,YAAY,KAAKjvD,EAAE,kCACzBwH,EAAAH,QAAA/J,cAAA,QAAM2xD,YAAY,MAAMjvD,EAAE,uCAC1BwH,EAAAH,QAAA/J,cAAA,QAAM2xD,YAAY,KAAKjvD,EAAE,6EAIrC,MACJ,IAAK,MACDq9D,EACI71D,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,UAAU7J,KAAK,QACvBva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,gFAAgF+hB,KAAK,YAC7Fva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+FAA+F+hB,KAAK,YAC5Gva,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,WACJva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,ogCAIpB,MACJ,IAAK,MACDq9D,EACI71D,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,UAAU7J,KAAK,QACvBva,EAAAH,QAAA/J,cAAA,UAAQykB,KAAK,OAAOF,GAAG,KAAKC,GAAG,KAAKvhB,EAAE,OACtCiH,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,WACJva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+dAEZwH,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,WACJva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,iKACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wRAIpB,MACJ,IAAK,MACDq9D,EACI71D,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,UAAU7J,KAAK,QACvBva,EAAAH,QAAA/J,cAAA,UAAQykB,KAAK,UAAUF,GAAG,KAAKC,GAAG,KAAKvhB,EAAE,OACzCiH,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO/hB,EAAE,sIAG5B,MACJ,IAAK,MACDq9D,EACI71D,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,UAAQykB,KAAK,OAAOF,GAAG,KAAKC,GAAG,KAAKvhB,EAAE,OACtCiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8fAA8f+hB,KAAK,UAAU6J,SAAS,YAC9hBpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wgBAAwgB+hB,KAAK,UAAU6J,SAAS,YACxiBpkB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oDAAoD+hB,KAAK,UAAU6J,SAAS,YACpFpkB,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,UAAU6J,SAAS,UAAU5rB,EAAE,yxDAGlD,MACJ,IAAK,MACDq9D,EACI71D,EAAAH,QAAA/J,cAAA,KAAGsuB,SAAS,UAAU7J,KAAK,QACvBva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0EAA0E+hB,KAAK,YACvFva,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,icAAic+hB,KAAK,UAQle,OACIva,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,YAAY+J,MAAM,8BAClG0xC,IAMbN,EAAqBz4D,WACjBoC,UAAW/D,UAAUiF,OACrBxI,KAAWuD,UAAUiF,UAGhBm1D,0HC9IT,QAAA5gE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM8gE,EAAa,SAAAx5D,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYilB,MAAM,6BAA6B/J,QAAQ,aAC7Fpa,EAAAH,QAAA/J,cAAA,QACIoJ,UAAU,cACVqb,KAAK,OACLktC,YAAY,KACZrjC,SAAS,UACT5rB,EAAE,6bAKdi9D,EAAW34D,WACPoC,UAAW/D,UAAUiF,UAGhBq1D,mHCpBT,QAAA9gE,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,wDAEA,IAAMm/D,EAAgB,SAAA73D,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAClBc,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,WAAW,EAAAU,EAAAC,SAAWX,EAAW,qCACjCE,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,cAMvB8nD,EAAch3D,WACVoC,UAAW/D,UAAUiF,UAGhB0zD,yHCpBT,QAAAn/D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,wDAEA,IAAM6+D,EAAmB,SAAAv3D,GAInB,IAHFiD,EAGEjD,EAHFiD,UACAu0D,EAEEx3D,EAFFw3D,aACAl0D,EACEtD,EADFsD,QAeA,OACIS,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,WAAW,EAAAU,EAAAC,SAAWX,EAAW,qCACjCE,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,WACfzM,QAjBW,WACXk0D,IACAA,EAAaqC,SACbrC,EAAasC,WACRpwD,KAAK,SAAAqwD,GAC4B,aAA1BA,EAAcC,SACd12D,WAgBxBi0D,EAAiB12D,WACboC,UAAc/D,UAAUiF,OACxBb,QAAcpE,UAAUmF,KACxBmzD,aAAct4D,UAAUxB,UAGnB65D,uHCxCT,QAAA7+D,EAAA,QACAA,EAAA,QACAA,EAAA,IACAokC,EAAApkC,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,wDAEA,IAAMo/D,EAAc,SAAA93D,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAChBc,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,WAAW,EAAAU,EAAAC,SAAWX,EAAW,yCACjCE,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,UACfzM,QAAS+5B,qBAIjBy6B,EAAYj3D,WACRoC,UAAW/D,UAAUiF,UAGhB2zD,oHCpBT,QAAAp/D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,wDAEA,IAAMk/D,EAAgB,SAAA53D,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWK,EAAdtD,EAAcsD,QAAd,OAClBS,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGR,GAAG,kBACHH,WAAW,EAAAU,EAAAC,SAAWX,EAAW,qCACjCE,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,WACfzM,QAASA,KAIjBs0D,EAAc/2D,WACVoC,UAAW/D,UAAUiF,OACrBb,QAAWpE,UAAUmF,QAGhBuzD,kHCrBT,QAAAl/D,EAAA,QACAA,EAAA,QACAA,EAAA,MACAglC,EAAAhlC,EAAA,wDAEA,IAAM0+D,EAAY,SAAAp3D,GAAA,IAAG+tB,EAAH/tB,EAAG+tB,aAAcspC,EAAjBr3D,EAAiBq3D,MAAjB,OACdtzD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0DACXc,EAAAH,QAAA/J,cAAC+jD,EAAAh6C,SAAOqkB,MAAM,OAAOF,OAAO,YAE7BsvC,EAAM9/D,QACTwM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBAEPo0D,EAAM7wD,IAAI,SAACyJ,EAAM6a,GAAP,OACL7a,EAAKgqD,YAAehqD,EAAKgqD,aAAelsC,EACrC,KAEAhqB,EAAAH,QAAA/J,cAAC6jC,EAAA1c,YAAWzjB,IAAKutB,EAAK8N,GAAI3oB,EAAK8tB,QAAS96B,UAAU,oBAAoBi3D,aAAa,6BAC/En2D,EAAAH,QAAA/J,cAAA,QAAMua,MAAOnE,EAAKzM,KAAMP,UAAU,0BAA0BgN,EAAKgI,KAAMhI,EAAKzM,YASxG4zD,EAAUv2D,WACNw2D,MAAOn4D,UAAUoxD,QAAQpxD,UAAU+wD,OAC/Bh4C,KAAM/Y,UAAU+wD,OACZhtD,UAAW/D,UAAUiF,SAEzB4pB,aAAc7uB,UAAUkF,KACxB25B,QAAc7+B,UAAUiF,OACxBX,KAActE,UAAUiF,aAIvBizD,2FClCT,wDAAA1+D,EAAA,IAJA,IAAIsG,EAAWtH,OAAO0O,QAAU,SAAUvK,GAAU,IAAK,IAAIxE,EAAI,EAAGA,EAAIgJ,UAAU9I,OAAQF,IAAK,CAAE,IAAI4uD,EAAS5lD,UAAUhJ,GAAI,IAAK,IAAIkG,KAAO0oD,EAAcvuD,OAAOC,UAAUC,eAAeC,KAAKouD,EAAQ1oD,KAAQ1B,EAAO0B,GAAO0oD,EAAO1oD,IAAY,OAAO1B,aAKvO,SAACmE,GAGXA,EADFsvD,OAFsB,IAIpBxwD,EAPN,SAAkCqQ,EAAK/N,GAAQ,IAAIvF,KAAa,IAAK,IAAIxE,KAAK8X,EAAW/N,EAAKkN,QAAQjX,IAAM,GAAkBK,OAAOC,UAAUC,eAAeC,KAAKsX,EAAK9X,KAAcwE,EAAOxE,GAAK8X,EAAI9X,IAAM,OAAOwE,EAOrM84C,CAAyB30C,GAAO,WAE5C,OAAOgB,UAAMnH,cACX,MACAmF,GAAWkpB,MAAO,6BAA8BD,MAAO,KAAMF,OAAQ,KAAM5J,QAAS,mBAAqBrf,GACzGkC,UAAMnH,cAAc,QAAUykB,KAAM,OAAQ/hB,EAAG,qEAC/CyE,UAAMnH,cAAc,QAAUykB,KAAM,UAAW/hB,EAAG,wEAClDyE,UAAMnH,cAAc,QAAUykB,KAAM,UAAW/hB,EAAG,q8CChBtD7D,EAAA,QACAA,EAAA,IACA4+B,EAAA5+B,EAAA,IACAqoB,EAAAroB,EAAA,SAGAA,EAAA,yDAKA,IAAMsoB,EAAa,SAAAhhB,GAA8C,IAA3Ck6D,EAA2Cl6D,EAA3Ck6D,aAActhC,EAA6B54B,EAA7B44B,GAAIv6B,EAAyB2B,EAAzB3B,SAAaS,yHAAY61C,CAAA30C,GAAA,iCACvDutB,GAAQ,EAAAxM,EAAAuM,eAAcsL,GACtB9K,GAAQ,EAAA/M,EAAAyM,iBAAgBD,GAAM,EAAA4sC,EAAAv2D,YAEpC,IAAKkqB,EACD,MAAM,IAAI/xB,MAAJ,oBAA8B68B,GAGxC,OACIA,EACI70B,EAAAH,QAAA/J,cAACy9B,EAAA8iC,QAADp7D,GAAS45B,GAAIrL,EAAM8sC,gBAAiBH,GAAgB,SAAUnhC,MAAOjL,EAAMiL,OAAWj6B,GACjFT,GAGL0F,EAAAH,QAAA/J,cAAA,IAAAmF,GAAG6N,KAAK,gBAAmB/N,GACtBT,IAKjB2iB,EAAWngB,WACPq5D,aAAch7D,UAAUiF,OACxB9F,SAAca,UAAUxB,OACxBk7B,GAAc15B,UAAUiF,kBAGb6c,oKCrCRpd,8VCAPlL,EAAA,QACAA,EAAA,IACAgM,EAAAhM,EAAA,OACAA,EAAA,KACA21B,EAAA31B,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAM4hE,EAAat5D,UAAM02B,KAAK,kBAAMr+B,QAAA+C,KAAA1D,EAAAO,EAAA,uBAAAP,EAAAO,EAAA,iBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAE9By7B,grBAAcj4B,UAAMvB,0DAElBd,KAAKG,MAAM8hD,yDAIXjiD,KAAKG,MAAMorD,6CAIX,IAAM/lC,GAAc,EAAAzf,EAAAqK,kBAAiBpQ,KAAKG,MAAMo7B,eAAgB,MAAO,gBACjEqgC,EAAqB57D,KAAKG,MAAMq6B,UAAY,iBAAmB,kCAC/DqhC,GAAgC,aAAc,WAAY,cAAcr+B,SAASx9B,KAAKG,MAAMoP,iBAC1FvP,KAAKG,MAAM26B,iBAEnB,OACI11B,EAAAH,QAAA/J,cAAA,OAAKuJ,GAAG,kBAAkBH,UAAU,mBAChCc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mBACTtE,KAAKG,MAAM8S,QACT7N,EAAAH,QAAA/J,cAACkK,EAAAH,QAAM62D,UAASC,SAAU32D,EAAAH,QAAA/J,cAACihC,EAAAl3B,QAAD,OACtBG,EAAAH,QAAA/J,cAACygE,GACG5a,SAAU/gD,KAAKG,MAAM4gD,SACrBhgB,OAAQ37B,EAAAH,QAAA/J,cAAC8gE,EAAA/2D,SAAOg8B,eAAA,IAChBI,QAASj8B,EAAAH,QAAA/J,cAAC+gE,EAAAh3D,SAAQg8B,eAAA,IAClBi7B,eAAgBl8D,KAAKG,MAAM+7D,eAC3BjpD,OAAQjT,KAAKG,MAAM8S,OACnBuH,WAAYxa,KAAKG,MAAMqa,WACvBF,YAAata,KAAKG,MAAMma,YACxB6hD,gBAAiBn8D,KAAKG,MAAMg8D,gBAC5BC,kBAAmBp8D,KAAKG,MAAMi8D,kBAC9BP,6BAA8BA,EAC9BnhD,YAAa1a,KAAKG,MAAMua,YACxBD,UAAWza,KAAKG,MAAMsa,aAIlCrV,EAAAH,QAAA/J,cAACmhE,EAAAp3D,QAAD,OAEJG,EAAAH,QAAA/J,cAAA,OACIoJ,UAAWs3D,GAEXx2D,EAAAH,QAAA/J,cAACohE,EAAAr3D,SACGu1B,UAAWx6B,KAAKG,MAAMq6B,UACtB+hC,sBAAuB/2C,GAAexlB,KAAKG,MAAM26B,iBACjDI,iBAAkBl7B,KAAKG,MAAM+6B,8BAQrDZ,EAAMp4B,WACF6+C,SAAkBxgD,UAAUkM,OAC5B8C,cAAkBhP,UAAUiF,OAC5BiV,UAAkBla,UAAUkM,OAC5BquB,iBAAkBv6B,UAAUkF,KAC5B+0B,UAAkBj6B,UAAUkF,KAC5By1B,iBAAkB36B,UAAUkF,KAC5B67B,gBAAkB/gC,UAAUmF,KAC5Bu8C,QAAkB1hD,UAAUmF,KAC5Bw2D,eAAkB37D,UAAUmF,KAC5B6lD,UAAkBhrD,UAAUmF,KAC5B61B,cAAkBh7B,UAAUxB,OAC5B2b,YAAkBna,UAAUkM,OAC5BwG,OAAkB1S,UAAUiF,mBAGjB,EAAAkqB,EAAA/uB,SACX,SAAAU,GAAA,IAAGlI,EAAHkI,EAAGlI,QAASuH,EAAZW,EAAYX,GAAZ,OACIga,YAAmBvhB,EAAQ2C,SAAS80C,aAAal2B,YACjDD,UAAmBthB,EAAQ2C,SAAS80C,aAAan2B,UACjDD,WAAmBrhB,EAAQqD,YAAYge,WACvCF,YAAmBnhB,EAAQqD,YAAY8d,YACvCwgB,iBAAmB3hC,EAAQqD,YAAYs+B,iBACvCqhC,gBAAmBhjE,EAAQqD,YAAY2/D,gBACvCC,kBAAmBjjE,EAAQqD,YAAY4/D,kBACvCrb,SAAmB5nD,EAAQgmB,MAAM4hC,SACjCxxC,cAAmBpW,EAAQgmB,MAAM5P,cACjC2rB,iBAAmB/hC,EAAQgmB,MAAM+b,iBACjCoG,gBAAmBnoC,EAAQgmB,MAAMmiB,gBACjC2gB,QAAmB9oD,EAAQgmB,MAAM8iC,QACjCia,eAAmB/iE,EAAQgmB,MAAM6M,SACjCu/B,UAAmBpyD,EAAQgmB,MAAMosC,UACjChwB,cAAmBpiC,EAAQgmB,MAAMoc,cACjCtoB,OAAmB9Z,EAAQgmB,MAAMlM,OACjCunB,UAAmB95B,EAAG85B,YAlBf,CAoBbF,07BCpGFx0B,EAAA/L,EAAA,OACAA,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,8NAEMyiE,6SACF1jD,OAAkBwjB,YAAY,KAC9BmgC,cAAgB90D,EAAK+0D,gBAAgB79D,KAArB8I,KAChBgpD,QACIgM,WACIC,SAAY,OACZC,WAAY,OACZrjB,SAAY,WACZsjB,OAAY,EACZC,WAAY,qBACZ36B,MAAY,OACZ46B,QAAY,OACZC,UAAY,QACZvgD,QAAY,OACZwgD,UAAY,OACZ9zC,OAAY,QAEhB+zC,WACI/6B,MAAO,kBAIfg7B,kBAAoB,WAChBriE,SAAS0wB,iBAAiB,QAAS9jB,EAAK80D,eAAe,MAG3DY,qBAAuB,WACnBtiE,SAAS2wB,oBAAoB,QAAS/jB,EAAK80D,0VA3BhCp6D,UAAMvB,sDA8BLxG,GACRA,EAAEgjE,SAAyB,KAAdhjE,EAAEijE,SACfv9D,KAAKiZ,UAAWqjB,YAAat8B,KAAK8Y,MAAMwjB,8CAIvC,IAAA/6B,EAAAvB,KACL,OACIoF,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,aAAamzB,MAAO7+B,OAAO0O,UAAWzH,KAAK2wD,OAAOgM,WAAajgD,QAAS1c,KAAK8Y,MAAMwjB,WAAa,QAAU,UAC9Gt8B,KAAKG,MAAMq9D,QAAQ9/C,OAAO7V,IAAI,SAAA2K,GAAA,IAAAK,EAAAJ,EAAAD,EAAA,GAAE1J,EAAF+J,EAAA,GAAK4qD,EAAL5qD,EAAA,SAAkB,eAAN/J,GAAmC,mBAAN20D,GAAoBr4D,EAAAH,QAAA/J,cAAA,OAAK0D,IAAKkK,GAAG1D,EAAAH,QAAA/J,cAAA,QAAM08B,MAAOr2B,EAAKovD,OAAOwM,WAAYr0D,EAArC,KAAb,IAA8D20D,GAAkB,iBAAb,IAAOA,EAAP,YAAAznD,EAAOynD,IAAiBt1D,KAAKC,WAAU,EAAAtC,EAAAwB,MAAKm2D,GAAI,KAAM,GAAKA,eAM1OjB,EAAKt6D,WACDs7D,QAASj9D,UAAUic,kBAGR,EAAAkT,EAAA/uB,SACX,SAAAy2C,GAAA,IAAGj+C,EAAHi+C,EAAGj+C,QAAH,OACIqkE,QAASzkE,OAAOykE,QAAQrkE,EAAQgmB,SAFzB,CAIbq9C,kFC1DF,QAAAziE,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEA,IAAM2jE,EAAa,SAAAr8D,GAAA,IACfk7D,EADel7D,EACfk7D,oBACA/hC,EAFen5B,EAEfm5B,UACAU,EAHe75B,EAGf65B,iBAHe,OAKfV,EACIp1B,EAAAH,QAAA/J,cAACyiE,EAAA14D,SACGi2B,iBAAkBA,IAGtB91B,EAAAH,QAAA/J,cAAC0iE,EAAA34D,SACGs3D,oBAAqBA,EACrBrhC,iBAAkBA,KAI9BwiC,EAAWx7D,WACPq6D,oBAAqBh8D,UAAUkF,KAC/B+0B,UAAqBj6B,UAAUkF,KAC/By1B,iBAAqB36B,UAAUkF,gBAGpBi4D,iFC3Bf,QAAA3jE,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAM8jE,EAAc,SAAAx8D,GAAA,IAAGk7D,EAAHl7D,EAAGk7D,oBAAqBrhC,EAAxB75B,EAAwB65B,iBAAxB,OAChB91B,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,kBACvB64D,uBAAwBvB,KAGtBrhC,GAAqBqhC,EAGnBn3D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAC8gC,EAAA/2B,SAASX,UAAU,yCAChBc,EAAAH,QAAA/J,cAAC6iE,EAAA94D,QAAD,OAEJG,EAAAH,QAAA/J,cAAC8iE,EAAA/4D,QAAD,MACAG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAC+iE,EAAAh5D,QAAD,QARRG,EAAAH,QAAA/J,cAACihC,EAAAl3B,QAAD,QAeZ44D,EAAY37D,WACRq6D,oBAAqBh8D,UAAUkF,KAC/By1B,iBAAqB36B,UAAUkF,gBAGpBo4D,8UCnCf9jE,EAAA,QACAA,EAAA,QACAA,EAAA,IACAmkE,EAAAnkE,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,6DAEMokE,cACF,SAAAA,EAAYh+D,gGAAOqB,CAAAxB,KAAAm+D,GAAA,IAAAx2D,mKAAA7F,CAAA9B,MAAAm+D,EAAAp8D,WAAAhJ,OAAAiJ,eAAAm8D,IAAAjlE,KAAA8G,KACTG,IADS,OAAAwH,EAiBnBy2D,aAAe,SAAC9sD,EAAMhX,GACdgX,EAAKhT,QAAUqJ,EAAKxH,MAAM7B,OAAyB,cAAhBhE,EAAE4C,OAAOuH,IAC5CkD,EAAKxH,MAAM6rB,UAAW9uB,QAAUW,KAAM8J,EAAKxH,MAAMtC,KAAMS,MAAOgT,EAAKhT,SAEvEqJ,EAAK02D,oBArBU12D,EAwBnB22D,oBAAsB,SAAChtD,GACfA,EAAKhT,QAAUqJ,EAAKxH,MAAM7B,OAC1BqJ,EAAKxH,MAAM6rB,UAAW9uB,QAAUW,KAAM8J,EAAKxH,MAAMtC,KAAMS,MAAOgT,EAAKhT,SAEvEqJ,EAAK42D,wBA5BU52D,EA+BnB62D,gBAAkB,SAACltD,GACf3J,EAAKsR,UAAW3H,SAChB3J,EAAK42D,uBACL52D,EAAK02D,oBAlCU12D,EAqCnB82D,sBAAwB,SAACntD,GACrB3J,EAAKsR,UAAW3H,UAtCD3J,EAyCnB+2D,gBAAkB,SAACC,GACf,IAAMC,EAAmBD,EAAe/lE,OAClC0Y,EAAO3J,EAAKmR,MAAMxH,KAElButD,EADeF,EAAejkB,UAAU,SAACokB,GAAD,OAAeA,EAAUxgE,QAAUgT,EAAKhT,QACrD,EAC7BugE,EAAYD,EACZj3D,EAAK82D,sBAAsBE,EAAeE,IAE1Cl3D,EAAK82D,sBAAsBE,EAAe,KAjD/Bh3D,EAqDnBo3D,gBAAkB,SAACJ,GACf,IAAMC,EAAmBD,EAAe/lE,OAClC0Y,EAAO3J,EAAKmR,MAAMxH,KAElB0tD,EADeL,EAAejkB,UAAU,SAACokB,GAAD,OAAeA,EAAUxgE,QAAUgT,EAAKhT,QACrD,EAC7B0gE,GAAa,EACbr3D,EAAK82D,sBAAsBE,EAAeK,IAE1Cr3D,EAAK82D,sBAAsBE,EAAeC,EAAmB,KA7DlDj3D,EAiEnBstD,cAAgB,SAAC1vD,GACboC,EAAKutD,YAAc3vD,GAlEJoC,EAqEnBk4B,mBAAqB,SAACnjC,GACdiL,EAAKutD,cAAgBvtD,EAAKutD,YAAYp1B,SAASpjC,EAAMQ,SAAWyK,EAAKmR,MAAMmmD,eAC3Et3D,EAAKsR,UAAWgmD,gBAAgB,IACzBt3D,EAAKutD,cAAgBvtD,EAAKutD,YAAYp1B,SAASpjC,EAAMQ,SAAWyK,EAAKmR,MAAMomD,qBAClFv3D,EAAKsR,UAAWimD,qBAAqB,EAAOD,gBAAgB,KAzEjDt3D,EA6EnB42D,qBAAuB,WACnB52D,EAAKsR,SAAS,SAACH,GAAD,OACVomD,qBAAsBpmD,EAAMomD,wBA/EjBv3D,EAmFnB02D,iBAAmB,WACf12D,EAAKsR,UAAWgmD,gBAAiBt3D,EAAKmR,MAAMmmD,kBApF7Bt3D,EAuFnBw3D,cAAgB,WACZx3D,EAAKsR,SAAS,SAACH,GAAD,OAAcmmD,gBAAiBnmD,EAAMmmD,eAAgBC,qBAAqB,MAxFzEv3D,EA2FnBy3D,kBAAoB,WAChBz3D,EAAKsR,SAAS,SAACH,GAAD,OAAcmmD,gBAAiBnmD,EAAMmmD,eAAgBC,qBAAqB,MA5FzEv3D,EA+FnB03D,eAAiB,WAAM,IAAAC,EACK33D,EAAKxH,MAArB+V,EADWopD,EACXppD,KAAM5X,EADKghE,EACLhhE,MAEVuG,EAAO,GAOX,OANIqR,GACAnd,OAAO0J,KAAKyT,GAAMuI,KAAK,SAAA7f,GAEnB,OADAiG,EAJY,SAACsR,GAAD,OAAeA,EAAS/I,KAAK,SAAAkE,GAAA,OAAQA,EAAKhT,QAAUA,SAAcuG,KAIvE06D,CAAYrpD,EAAKtX,MAIzBiG,GAzGQ8C,EA4GnB63D,kBAAoB,WAChB,IAAMb,KACAzoD,EAAOvO,EAAKxH,MAAM+V,KAQxB,OANAnd,OAAO0J,KAAKyT,GAAMrO,IAAI,SAAAjJ,KAChB,SAAU,UAAU4+B,SAAS5+B,IAAQsX,EAAKtX,GAAKiJ,IAAI,SAAA/L,GAC7B,oBAAnBA,EAASwC,OAAgCqgE,EAAe7lE,KAAKgD,OAI/D6iE,GApHPh3D,EAAKmR,OACDmmD,gBAAqB,EACrBC,qBAAqB,EACrB5tD,SALW3J,qUADUtF,UAAMo1B,8DAW/B18B,SAAS0wB,iBAAiB,YAAazrB,KAAK6/B,mEAI5C9kC,SAAS2wB,oBAAoB,YAAa1rB,KAAK6/B,qDA4G/C,OACIz6B,EAAAH,QAAA/J,cAAA,OACIyE,IAAKK,KAAKi1D,cACV3wD,UAAW,uBACXM,SAAS,KAETQ,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,iCAClBw6D,yCAA0Cz/D,KAAK8Y,MAAMmmD,iBAEzDt6D,QAAS3E,KAAKm/D,eAEd/5D,EAAAH,QAAA/J,cAACgjE,EAAAwB,mBAAkBC,SAAU3/D,KAAKG,MAAM7B,MAAOgG,UAAU,uCACzDc,EAAAH,QAAA/J,cAAA,QAAM2C,KAAMmC,KAAKG,MAAMtC,KAAMS,MAAO0B,KAAKG,MAAM7B,OAC1C0B,KAAKq/D,mBAIdj6D,EAAAH,QAAA/J,cAAC0kE,EAAA36D,SACGu1B,UAAWx6B,KAAKG,MAAMq6B,UACtBjnB,KAAMvT,KAAK8Y,MAAMmmD,eACjBtzC,QAAS3rB,KAAKq+D,kBAEdj5D,EAAAH,QAAA/J,cAAC2kE,EAAA56D,SACGiR,KAAMlW,KAAKG,MAAM+V,KACjBrY,KAAMmC,KAAKG,MAAMtC,KACjBS,MAAO0B,KAAKG,MAAM7B,MAClB8/D,aAAcp+D,KAAKo+D,aACnBI,gBAAiBx+D,KAAKw+D,mBAG9Bp5D,EAAAH,QAAA/J,cAAC4kE,EAAA76D,SACGu1B,UAAWx6B,KAAKG,MAAMq6B,UACtB7O,QAAS3rB,KAAKw+D,gBACdjrD,KAAMvT,KAAK8Y,MAAMomD,oBACjBzpD,MAAOzV,KAAK8Y,MAAMxH,KAAKzM,MAEvBO,EAAAH,QAAA/J,cAAC6kE,EAAA96D,SACGw5D,sBAAuBz+D,KAAKy+D,sBAC5BC,gBAAiB1+D,KAAK0+D,gBACtBK,gBAAiB/+D,KAAK++D,gBACtBvkC,UAAWx6B,KAAKG,MAAMq6B,UACtBlpB,KAAMtR,KAAK8Y,MAAMxH,KACjBqtD,eAAgB3+D,KAAKw/D,oBACrBJ,kBAAmBp/D,KAAKo/D,kBACxBd,oBAAqBt+D,KAAKs+D,iCAQlDH,EAAmBj8D,WACfs4B,UAAWj6B,UAAUkF,KACrByQ,KAAW3V,UAAUxB,OACrBlB,KAAW0C,UAAUiF,OACrBwmB,SAAWzrB,UAAUmF,KACrBpH,MAAWiC,UAAUiF,kBAGV24D,4GCjMf,QAAApkE,EAAA,QACAA,EAAA,QACAA,EAAA,IACA6gC,EAAA7gC,EAAA,wDAEA,IAAM2lE,EAAoB,SAAAr+D,GAA6B,IAA1Bs+D,EAA0Bt+D,EAA1Bs+D,SAAUr7D,EAAgBjD,EAAhBiD,UAC/B07D,SACJ,GAAIL,EACA,OAAQA,GACJ,IAAK,YACDK,EACI56D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,UAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,UAKrB,MACJ,IAAK,kBACDgjE,EACI56D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,WAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,WAKrB,MACJ,IAAK,WACDgjE,EACI56D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,kBAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,kBAKrB,MACJ,IAAK,MACDgjE,EACI56D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,gBAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,kBAKrB,MACJ,IAAK,OACDgjE,EACI56D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,WAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,eAKrB,MACJ,IAAK,aACDgjE,EACI56D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,gBAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,gBAKrB,MACJ,IAAK,WACDgjE,EACI56D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,eAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,eAKrB,MACJ,IAAK,aACDgjE,EACI56D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,eAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,iBAKrB,MACJ,IAAK,QACDgjE,EACI56D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,cAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,cAKrB,MACJ,IAAK,QACDgjE,EACI56D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,YAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,aAKrB,MACJ,IAAK,UACDgjE,EACI56D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,iBAIjB,MACJ,IAAK,SACDgjE,EACI56D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,gBAIjB,MACJ,IAAK,cACDgjE,EACI56D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,eAIjB,MACJ,QACIgjE,EACI56D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC0/B,EAAAiB,eACGv3B,UAAU,gBACVtH,KAAK,aAO7B,OACIoI,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,uBAAwBX,IAC9C07D,IAKbN,EAAkBx9D,WACdy9D,SAAWp/D,UAAUiF,OACrBlB,UAAW/D,UAAUiF,UAGhBk6D,mGCnPT,QAAA3lE,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,QACAA,EAAA,yDAEA,IAAMkmE,EAAqB,SAAA5+D,GAAA,IACvB3B,EADuB2B,EACvB3B,SACA86B,EAFuBn5B,EAEvBm5B,UACAjnB,EAHuBlS,EAGvBkS,KACAoY,EAJuBtqB,EAIvBsqB,QAJuB,OAMvB6O,EACIp1B,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,uCAChBc,EAAAH,QAAA/J,cAACglE,EAAAj7D,SACGwQ,MAAM,sBACN6U,QAAS/W,EACToY,QAASA,GAERjsB,IAIT0F,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGC,GAAI7sB,EACJnY,QAAS,IACTilC,YACIC,MAAW,+BACXC,UAAW,mCACXxX,KAAW,+BAEfyX,eAAA,GAEAp7B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uCACV5E,MAMrBugE,EAAmB/9D,WACfxC,SAAWa,UAAUozD,QACrBn5B,UAAWj6B,UAAUkF,KACrBkmB,QAAWprB,UAAUmF,KACrB6N,KAAWhT,UAAUkF,gBAGVw6D,iFChDf,IAAAzgE,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAMomE,EAAmB,SAAA9+D,GAAA,IACrBm9D,EADqBn9D,EACrBm9D,gBACAJ,EAFqB/8D,EAErB+8D,aACAloD,EAHqB7U,EAGrB6U,KACArY,EAJqBwD,EAIrBxD,KACAS,EALqB+C,EAKrB/C,MALqB,OAQjBvF,OAAO0J,KAAKyT,GAAMrO,IAAI,SAAAjJ,GAAA,QAEhB,SAAU,UAAU4+B,SAAS5+B,IAC/BwG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKA,GACjBwG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BAA4Bc,EAAAH,QAAA/J,cAAA,YAAO0D,IAClDwG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yCACXc,EAAAH,QAAA/J,cAACklE,EAAAn7D,SACGwzC,UAAWviC,EAAKtX,GAChBf,KAAMA,EACNS,MAAOA,EACP8/D,aAAcA,EACdI,gBAAiBA,UAQ7C2B,EAAiBj+D,WACbs8D,gBAAiBj+D,UAAUmF,KAC3B04D,aAAiB79D,UAAUmF,KAC3BwQ,KAAiB+nB,YAAcoiC,yBAC/BxiE,KAAiB0C,UAAUiF,OAC3BlH,MAAiBiC,UAAUiF,kBAGhB26D,iFCzCf,IAAA3gE,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqwB,EAAArwB,EAAA,IACAmkE,EAAAnkE,EAAA,wDAEA,IAAMumE,EAAmB,SAAAj/D,GAAA,IACrBo3C,EADqBp3C,EACrBo3C,UACA56C,EAFqBwD,EAErBxD,KACAS,EAHqB+C,EAGrB/C,MACAkgE,EAJqBn9D,EAIrBm9D,gBACAJ,EALqB/8D,EAKrB+8D,aALqB,OAOrB3lB,EAAU5wC,IAAI,SAAC/L,EAAUqwB,GAAX,MACU,oBAAnBrwB,EAASwC,OACV8G,EAAAH,QAAA/J,cAAA,OACI0D,IAAKutB,EACL7nB,UAAA,uBAAiChG,IAAUxC,EAASwC,MAAQ,+BAAiC,IAC7FT,KAAMA,EACNS,MAAOxC,EAASwC,MAChBqG,QAAS,SAACrK,GAAD,OAAO8jE,EAAatiE,EAAUxB,KAEvC8K,EAAAH,QAAA/J,cAACgjE,EAAAwB,mBAAkBC,SAAU7jE,EAASwC,MAAOgG,UAAU,qCACvDc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,6BACXxI,EAAS+I,MAEdO,EAAAH,QAAA/J,cAAA,OAAKuJ,GAAG,YAAYH,UAAU,2BAA2BK,QAAS,kBAAM65D,EAAgB1iE,KACpFsJ,EAAAH,QAAA/J,cAACkvB,EAAAzQ,gBAAD,WAMhB2mD,EAAiBp+D,WACbu2C,UAAiBxa,YAAcC,uBAC/BsgC,gBAAiBj+D,UAAUmF,KAC3B04D,aAAiB79D,UAAUmF,KAC3B7H,KAAiB0C,UAAUiF,OAC3BlH,MAAiBiC,UAAUiF,kBAGhB86D,iFCzCf,QAAAvmE,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,QACAA,EAAA,yDAEA,IAAMwmE,EAAsB,SAAAl/D,GAAA,IACxB3B,EADwB2B,EACxB3B,SACA86B,EAFwBn5B,EAExBm5B,UACAjnB,EAHwBlS,EAGxBkS,KACAoY,EAJwBtqB,EAIxBsqB,QACAlW,EALwBpU,EAKxBoU,MALwB,OAOxB+kB,EACIp1B,EAAAH,QAAA/J,cAACglE,EAAAj7D,SACGqlB,QAAS/W,EACToY,QAASA,EACTlW,MAAOA,EACP3Q,iBAAiB,yBAEhBpF,GAGL0F,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGE,YACIC,MAAW,gCACXC,UAAW,oCACXxX,KAAW,gCAEfqX,GAAI7sB,EACJnY,QAAS,IACTolC,eAAA,GAEAp7B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wCACV5E,MAMrB6gE,EAAoBr+D,WAChBxC,SAAWa,UAAUozD,QACrBn5B,UAAWj6B,UAAUkF,KACrBkmB,QAAWprB,UAAUmF,KACrB6N,KAAWhT,UAAUkF,KACrBgQ,MAAWlV,UAAUiF,kBAGV+6D,iFChDf,QAAAxmE,EAAA,QACAA,EAAA,QACAA,EAAA,IACAsxD,EAAAtxD,EAAA,IACA8I,EAAA9I,EAAA,KACAmJ,EAAAnJ,EAAA,KACAoJ,EAAApJ,EAAA,KACAymE,EAAAzmE,EAAA,SACAA,EAAA,KACA0U,EAAA1U,EAAA,sDAEA,IAAM0mE,EAAoB,SAAAp/D,GAAA,IACtBo9D,EADsBp9D,EACtBo9D,sBACAC,EAFsBr9D,EAEtBq9D,gBACAK,EAHsB19D,EAGtB09D,gBACAvkC,EAJsBn5B,EAItBm5B,UACAlpB,EALsBjQ,EAKtBiQ,KACAqtD,EANsBt9D,EAMtBs9D,eACAS,EAPsB/9D,EAOtB+9D,kBACAd,EARsBj9D,EAQtBi9D,oBARsB,OAUtBl5D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACMkuB,GACFp1B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,kCACXc,EAAAH,QAAA/J,cAAA,QAAMyJ,QAAS,kBAAMy6D,MACjBh6D,EAAAH,QAAA/J,cAAC2H,EAAA2yB,SAAD,OAEJpwB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,SAASgN,EAAKzM,OAGlCO,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BAAf,mBAGAc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mCACXc,EAAAH,QAAA/J,cAACmwD,EAAAgB,YACGC,UAAA,EACA10B,OAASxO,OAAQ,SAEjBhkB,EAAAH,QAAA/J,cAACslE,EAAAE,iBAAgBf,SAAUruD,EAAKhT,UAGxC8G,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAACmxB,EAAApnB,SAAOX,UAAU,wCAAwCO,MAAM,EAAA4J,EAAA2C,UAAS,UAAWzM,QAAS,kBAAM25D,EAAoBhtD,OAE3HlM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mCAAmCK,QAAS,kBAAMo6D,EAAgBJ,KAC7Ev5D,EAAAH,QAAA/J,cAACgI,EAAAuyB,gBAAD,OAEJrwB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oCAEPq6D,EAAe92D,IAAI,SAAC/L,EAAUqwB,GAAX,OACf/mB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKutB,GACjB/mB,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,6CAClB07D,oDAAqD7kE,EAASwC,QAAUgT,EAAKhT,QAEjFqG,QAAS,kBAAM85D,EAAsB3iE,UAMzDsJ,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mCAAmCK,QAAS,kBAAM+5D,EAAgBC,KAC7Ev5D,EAAAH,QAAA/J,cAACiI,EAAAwyB,iBAAD,UAMhB8qC,EAAkBv+D,WACdu8D,sBAAuBl+D,UAAUmF,KACjCg5D,gBAAuBn+D,UAAUmF,KACjCq5D,gBAAuBx+D,UAAUmF,KACjC80B,UAAuBj6B,UAAUkF,KACjC6L,KAAuB/Q,UAAUxB,OACjC4/D,eAAuBp+D,UAAUic,MACjC4iD,kBAAuB7+D,UAAUmF,KACjC44D,oBAAuB/9D,UAAUmF,gBAGtB+6D,0GChFf,QAAA1mE,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,sDAIA,IAAM2mE,EAAkB,SAAAr/D,GAAkB,IAAfs+D,EAAet+D,EAAfs+D,SACnBiB,SACJ,GAAIjB,EACA,OAAQA,GACJ,IAAK,YAeL,IAAK,kBACDiB,EACIx7D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,wGACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,sGACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,oNAGtB,MACJ,IAAK,WACDwvD,EACIx7D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,qGACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,mGACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,yEAGtB,MACJ,IAAK,MACDwvD,EACIx7D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,wJACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,+JACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,wGAGtB,MACJ,IAAK,OACDwvD,EACIx7D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,qLACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,+JAGtB,MACJ,IAAK,aACDwvD,EACIx7D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,wHACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,6HAGtB,MACJ,IAAK,WACDwvD,EACIx7D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,iIACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,gIAGtB,MACJ,IAAK,aACDwvD,EACIx7D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,sHACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,qHAGtB,MACJ,IAAK,QACDwvD,EACIx7D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,0HACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,wIAGtB,MACJ,IAAK,QACDwvD,EACIx7D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,2FACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,kHACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,iHACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,sFAGtB,MACJ,QACIwvD,EACIx7D,EAAAH,QAAA/J,cAAA,sBAOhB,OACIkK,EAAAH,QAAA/J,cAAA,WACK0lE,IAKbF,EAAgBx+D,WACZy9D,SAAUp/D,UAAUiF,UAGfk7D,8GC1HT3nE,OAAA0J,KAAAo+D,GAAAl+D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2iE,EAAAjiE,qBACA7F,OAAA0J,KAAAq+D,GAAAn+D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4iE,EAAAliE,wWCDA7E,EAAA,QACAA,EAAA,IACA+mE,EAAA/mE,EAAA,+NAEMwiC,6SACFzjB,OACIinB,SAAS,KAWbk1B,cAAgB,SAAC1vD,GACboC,EAAKutD,YAAc3vD,KAGvBs6B,mBAAqB,SAACnjC,GACdiL,EAAKutD,cAAgBvtD,EAAKutD,YAAYp1B,SAASpjC,EAAMQ,SAAWyK,EAAKmR,MAAMinB,SAC3Ep4B,EAAKsR,UAAW8mB,SAAS,OAIjCghC,YAAc,WACVp5D,EAAKsR,UAAW8mB,SAAS,OAG7BihC,WAAa,SAACtkE,GACLiL,EAAKutD,YAAYp1B,SAASpjC,EAAMQ,SACjCyK,EAAKsR,UAAW8mB,SAAS,+UA7BZ19B,UAAMo1B,8DAMvB18B,SAAS0wB,iBAAiB,YAAazrB,KAAK6/B,mEAI5C9kC,SAAS2wB,oBAAoB,YAAa1rB,KAAK6/B,qDAuB1C,IAAAt+B,EAAAvB,KACCihE,EACF77D,EAAAH,QAAA/J,cAAC4lE,EAAAjkC,mBACGG,WAAYh9B,KAAKi1D,cACjB77C,UAAWpZ,KAAKG,MAAMiZ,UACtBojB,YAAax8B,KAAKG,MAAMq8B,YACxBC,aAAcz8B,KAAKG,MAAMs8B,aACzBH,WAAYt8B,KAAK8Y,MAAMinB,QACvBxmB,QAASvZ,KAAKG,MAAMoZ,QACpBwjB,UAAW/8B,KAAKG,MAAMT,SAASS,MAAMwE,QACrCgnB,QAAS3rB,KAAK+gE,cAGtB,OACI37D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACKjK,UAAMy1B,SAASjwB,IAAI7H,KAAKG,MAAMT,SAAU,SAAAq4B,GAAA,OACrC11B,UAAM6+D,aAAanpC,GACfpzB,QAASpD,EAAKy/D,eAGrBC,YAMjB1kC,EAAWr6B,WACPkX,UAAc7Y,UAAUiF,OACxBg3B,YAAcj8B,UAAUiF,OACxB9F,SAAca,UAAUxB,OACxB09B,aAAcl8B,UAAUiF,OACxB+T,QAAchZ,UAAUiF,UAGnB+2B,4FCvET,QAAAxiC,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,KACAonE,EAAApnE,EAAA,wDAEA,IAAMqnE,EAAe,SAAA//D,GAAA,IACjBuK,EADiBvK,EACjBuK,SACAywB,EAFiBh7B,EAEjBg7B,cACAC,EAHiBj7B,EAGjBi7B,WACAd,EAJiBn6B,EAIjBm6B,cAJiB,OAMjBp2B,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACMkvB,EAAcgU,YAAchU,EAAc/2B,GACxCW,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,UACPo8D,yBAA0B7lC,EAAcgU,aAG3ChU,EAAcjiB,SAAWnU,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BAA+Bk3B,EAAcjiB,UAG3FnU,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sCAAqC,EAAAmK,EAAA2C,UAAS,OAAQoqB,EAAc+sB,mBAAmB1jD,OACtGO,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qCAAoCc,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQ8vB,EAAc+sB,mBAAmBjqD,MAAOgG,UAAU,uCAAuCsH,SAAUA,KACpK0wB,GACDl3B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wCACQ,OAAlB+3B,GAA0Bj3B,EAAAH,QAAA/J,cAACimE,EAAAhkC,eAAcngC,KAAMq/B,EAAgB,SAAW,WAInFj3B,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAACg4D,EAAAjuD,SAAQmU,UAAU,OAAO9U,UAAU,iCAAiC+U,cAAc,mCAAmCC,KAAK,OAAOC,QAASiiB,EAAcjiB,cAO7K6nD,EAAal/D,WACT0J,SAAerL,UAAUiF,OACzB62B,cAAe97B,UAAUkF,KACzB62B,WAAe/7B,UAAUkF,KACzB+1B,cAAej7B,UAAUxB,kBAGdqiE,oKCjDRn8D,iGCAP,QAAAlL,EAAA,QACAA,EAAA,IACAgM,EAAAhM,EAAA,GACAwJ,EAAAxJ,EAAA,KACAunE,EAAAvnE,EAAA,wDAKA,IAAMwnE,EAAa,SAAAlgE,GAAgC,IAA7Bk6B,EAA6Bl6B,EAA7Bk6B,cAAe52B,EAActD,EAAdsD,QAC3B6qC,IAAcjU,EAAcp+B,MAC9BqkE,SACJ,GAAIhyB,EAEA,QADmB,EAAAzpC,EAAAqK,kBAAiBmrB,GAAgB,QAAS,UAEzD,IAAK,wBACDimC,EAAiBp8D,EAAAH,QAAA/J,cAAComE,EAAAG,WAAD,MACjB,MACJ,IAAK,sBACDD,EAAiBp8D,EAAAH,QAAA/J,cAAComE,EAAAI,aAAD,MACjB,MACJ,QACIF,EAAiBp8D,EAAAH,QAAA/J,cAAComE,EAAAK,cAAapoD,QAASgiB,EAAcp+B,MAAMoc,UAIxE,OAAKi2B,EAEDpqC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBAAyBK,QAASA,GAC7CS,EAAAH,QAAA/J,cAACqI,EAAAqoB,WAAUtnB,UAAU,cAExBk9D,GANc,MAW3BD,EAAWr/D,WACP0J,SAAerL,UAAUiF,OACzBb,QAAepE,UAAUmF,KACzB61B,cAAeh7B,UAAUxB,kBAGdwiE,8FC3CfxoE,OAAA0J,KAAAm/D,GAAAj/D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0jE,EAAAhjE,qBACA7F,OAAA0J,KAAAo/D,GAAAl/D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2jE,EAAAjjE,qBACA7F,OAAA0J,KAAAq/D,GAAAn/D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4jE,EAAAljE,6GCFA,QAAA7E,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,0DAeS2nE,aAbY,kBACjBt8D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,8CACX,EAAAmK,EAAA2C,UAAS,gDAEdhM,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,UAAU,wCACVE,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,oHCZ3B,QAAArX,EAAA,QACAA,EAAA,uDAEA,IAAM4nE,EAAe,SAAAtgE,GAAA,IAAGkY,EAAHlY,EAAGkY,QAAH,OACjBnU,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,qBAAqBiV,KAI7CooD,EAAaz/D,WACTqX,QAAShZ,UAAUiF,UAGdm8D,kHCbT,QAAA5nE,EAAA,IACAokC,EAAApkC,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,0DAsBS0nE,WApBU,kBACfr8D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,8CACX,EAAAmK,EAAA2C,UAAS,2CAEdhM,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,UAAU,wCACVE,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,UACfzM,QAAS+5B,oBAEbt5B,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,8BAA6B,EAAAmK,EAAA2C,UAAS,8BAAgC,gBACnFhM,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,0BAA0B4J,KAAK,gBACxC9I,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,8CACX,EAAAmK,EAAA2C,UAAS,wLCnBnBnM,iGCAP,QAAAlL,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,KACAgoE,EAAAhoE,EAAA,wDAEA,IAAMioE,EAAe,SAAA3gE,GAAA,IAAGsD,EAAHtD,EAAGsD,QAAH,OACjBS,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAC6mE,EAAAE,UAAS39D,UAAU,mCAExBc,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,oCAAmC,EAAAmK,EAAA2C,UAAS,oBAC1DhM,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,UAAU,wEACVE,YAAA,EACAG,QAASA,EACTE,MAAM,EAAA4J,EAAA2C,UAAS,YAEnBhM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,qCACX,EAAAmK,EAAA2C,UAAS,qEAKtB4wD,EAAa9/D,WACTyC,QAASpE,UAAUmF,gBAGRs8D,mGC5Bf,QAAAjoE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMkoE,EAAW,SAAA5gE,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACbc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYilB,MAAM,6BAA6B/J,QAAQ,aAC7Fpa,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,UAAUK,UAAU,kBACxCzkB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,gBAAgBglB,MAAM,IAAIF,OAAO,IAAIU,EAAE,KAAKC,EAAE,MAAMN,OAAO,OAAOO,GAAG,MACrF5kB,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,cAAcmb,GAAG,IAAIC,GAAG,KAAKvhB,EAAE,IAAIwhB,KAAK,SAC1Dva,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,gBAAgBmlB,OAAO,OAAO7rB,EAAE,2DAK5DqkE,EAAS//D,WACLoC,UAAW/D,UAAUiF,UAGhBy8D,mHClBT,QAAAloE,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAGa+V,oBAEPjS,KAAM,WAAciD,UAAW4lD,YAC/B7oD,KAAM,UAAciD,UAAWohE,YAC/BrkE,KAAM,aAAciD,UAAWqhE,YAC/BtkE,KAAM,SAAciD,UAAWshE,2FCXrC,QAAAroE,EAAA,IACAyF,EAAAzF,EAAA,QAGAA,EAAA,QACAA,EAAA,IACAyR,EAAAzR,EAAA,QAGAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAEA,IAAMqoE,EAAS,SAAA/gE,GAaT,IAZFqK,EAYErK,EAZFqK,OACA+I,EAWEpT,EAXFoT,MACAI,EAUExT,EAVFwT,WACAwzB,EASEhnC,EATFgnC,gBACAz8B,EAQEvK,EARFuK,SACAo4C,EAOE3iD,EAPF2iD,eACAlC,EAMEzgD,EANFygD,iBACApkB,EAKEr8B,EALFq8B,aACAC,EAIEt8B,EAJFs8B,gBACA0kC,EAGEhhE,EAHFghE,mBACAr2C,EAEE3qB,EAFF2qB,SACA/iB,EACE5H,EADF4H,kBAEA,GAAIy0B,EACA,OACIt4B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iDACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,8BAA8BuQ,EAAWzH,KAAK,SAAArP,GAAA,OAAKA,EAAEO,QAAUmW,SAAc5P,MADjG,IAGIO,EAAAH,QAAA/J,cAAA,SAAGkK,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAW,+BAAgC,gIAA3CyC,IAAA,aAAsEkE,GAAY,IAAIW,cAAkBX,QAC3H,EAAAJ,EAAAmiC,UAASjiC,EAAQ,IAI9B,IAAM42D,GAAyB,EAAAt9D,EAAAC,UAAas9D,iBAAkBF,IAE9D,OACIj9D,EAAAH,QAAA/J,cAAC8gC,EAAA/2B,SAASX,UAAU,6BAChBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWg+D,GACZl9D,EAAAH,QAAA/J,cAACsnE,EAAAv9D,SACG8mB,YAAalX,EACbvQ,UAAU,sBACVzG,KAAK,QACLmuB,SAAUA,EACV1tB,MAAOmW,KAET4tD,GACFj9D,EAAAH,QAAA/J,cAACunE,EAAAx9D,SACGX,WAAW,EAAAU,EAAAC,SAAW,aAAey9D,qCAAsCL,IAC3EM,iBAAiB,6CACjBC,YAAA,EACAC,mBAAA,EACAllC,iBAAiB,EACjBznB,KAAMmyB,EACNxqC,KAAK,WACLS,MAAOsN,EACPogB,SAAUA,IAGd5mB,EAAAH,QAAA/J,cAAC4nE,EAAA79D,SACGX,WAAW,EAAAU,EAAAC,SAAW,2BAA6B89D,iDAAkDV,IACrGW,sBAAsB,4BACtBC,eAAe,yBACfr3D,SAAUA,EACVs3D,eAAgBj6D,EAAkByC,OAClCy3D,mBAAmB,EAAA33D,EAAAqiC,kBAAiBjiC,GACpCnH,GAAG,SACH2+D,cAAef,EAAqBz2D,EAAW,KAC/Cy3D,0BAAA,EACAC,UAAA,EACAC,kBAAA,EACA5lC,gBAAiBA,EACjB6lC,sBAAA,EACAC,WAAY,GACZ5lE,KAAK,SACLmuB,SAAUA,EACVhvB,KAAK,MACLsB,MAAOoN,KAGftG,EAAAH,QAAA/J,cAACwoE,EAAAz+D,SACG48C,QAASC,EACTkC,eAAgBA,EAChBh4B,SAAUA,MAM1Bo2C,EAAOlgE,WACHwJ,OAAQnL,UAAUiM,WACdjM,UAAUkM,OACVlM,UAAUiF,SAEdiP,MAAkBlU,UAAUiF,OAC5BqP,WAAkBopB,YAAcC,uBAChCmK,gBAAkBpK,YAAc0lC,iBAChC/3D,SAAkBrL,UAAUiF,OAC5Bw+C,eAAkBzjD,UAAUkF,KAC5Bq8C,iBAAkBvhD,UAAUiM,WACxBjM,UAAUkM,OACVlM,UAAUiF,SAEdk4B,aAAoBn9B,UAAUkF,KAC9Bk4B,gBAAoBp9B,UAAUkF,KAC9B48D,mBAAoB9hE,UAAUkF,KAC9BumB,SAAoBzrB,UAAUmF,KAC9BuD,kBAAoB1I,UAAUxB,mBAGnB,EAAAS,EAAAwB,UAASohE,mfCnHxBroE,EAAA,IACA+L,EAAA/L,EAAA,GACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,IACAsxD,EAAAtxD,EAAA,IACAqwB,EAAArwB,EAAA,QACAA,EAAA,UACAA,EAAA,MACAqoB,EAAAroB,EAAA,+NAOM6pE,6SACFC,SAAWxhE,UAAMyhE,cACjBhrD,OACIirD,YAAiB,EAAA3hD,EAAA4hD,kBAAiBr8D,EAAKxH,MAAM+V,KAAMvO,EAAKxH,MAAM7B,OAAOmO,OACrEw3D,iBAAiB,KAWrB7F,aAAe,SAAC9sD,GACRA,EAAKhT,QAAUqJ,EAAKxH,MAAM7B,OAC1BqJ,EAAKxH,MAAM6rB,UAAW9uB,QAAUW,KAAM8J,EAAKxH,MAAMtC,KAAMS,MAAOgT,EAAKhT,SAEvEqJ,EAAK02D,sBAGTpJ,cAAgB,SAAC1vD,GAAD,OAAUoC,EAAKutD,YAAc3vD,KAE7Cs6B,mBAAqB,SAACnjC,GACdiL,EAAKutD,cAAgBvtD,EAAKutD,YAAYp1B,SAASpjC,EAAMQ,SAAWyK,EAAKmR,MAAMmrD,iBAC3Et8D,EAAKsR,UAAWgrD,iBAAiB,OAIzC5F,iBAAmB,WACf12D,EAAKsR,SAAS,SAACH,GAAD,OAAcmrD,iBAAkBnrD,EAAMmrD,sBAGxDC,aAAe,SAACxnE,GACZ,IAAIiL,EAAKw8D,iBACT,GAAsB,IAAlBznE,EAAM6gE,QAAV,CAMA7gE,EAAMylD,iBACN,IAAMpjC,GAAQ,EAAAqD,EAAA4hD,kBAAiBr8D,EAAKxH,MAAM+V,KAAMvO,EAAKxH,MAAM7B,OACrDA,GAAQ,EAAA8jB,EAAAgiD,mBAAkBz8D,EAAKxH,MAAM+V,KAAMvO,EAAKmR,MAAMirD,YAO5D,OAAQrnE,EAAM6gE,SACV,KAAK,GACL,KAAK,GAPD51D,EAAKmR,MAAMmrD,iBAAmBt8D,EAAKxH,MAAM7B,QAAUA,GACnDqJ,EAAKxH,MAAM6rB,UAAW9uB,QAAUW,KAAM8J,EAAKxH,MAAMtC,KAAMS,WAE3DqJ,EAAK02D,mBAMD,MACJ,KAAK,GACD,GAAI12D,EAAKmR,MAAMmrD,gBAAiB,CAC5B,IAAMI,GAAa,EAAAjiD,EAAAkiD,cAAa38D,EAAKmR,MAAMirD,WAAYhlD,EAAMnmB,QAC7D+O,EAAKsR,UAAW8qD,WAAYM,IAEhC,MACJ,KAAK,GACD,GAAI18D,EAAKmR,MAAMmrD,gBAAiB,CAC5B,IAAMM,GAAa,EAAAniD,EAAAoiD,cAAa78D,EAAKmR,MAAMirD,WAAYhlD,EAAMnmB,QAC7D+O,EAAKsR,UAAW8qD,WAAYQ,SACpB58D,EAAKxH,MAAM0iE,mBACnBl7D,EAAK02D,mBAET,MACJ,KAAK,IACI12D,EAAKmR,MAAMmrD,iBAAmBt8D,EAAKxH,MAAM0iE,mBAC1Cl7D,EAAK02D,mBAET,MACJ,KAAK,GACG12D,EAAKmR,MAAMmrD,iBAAmBt8D,EAAKxH,MAAM0iE,mBACzCl7D,EAAK02D,mBAOjB,GAAyB,IAArB3hE,EAAMkC,IAAIhG,OAAc,CACxB,IAAM6rE,EAAO/nE,EAAMkC,IAAI2N,cACjBm4D,EAAa/8D,EAAKxH,MAAM+V,KAAKrO,IAAI,SAAAiiB,GAAA,OAAKA,EAAEjlB,KAAK,GAAG0H,gBAClD4f,SAEAxkB,EAAKmR,MAAMirD,aACX53C,EAAMu4C,EAAW/0D,QAAQ80D,EAAM98D,EAAKmR,MAAMirD,WAAa,SAE/CzmE,IAAR6uB,IAA8B,IAATA,IACrBA,EAAMu4C,EAAW/0D,QAAQ80D,IAEzBt4C,GAAO,GACPxkB,EAAKsR,UAAW8qD,WAAY53C,UA3D5BxkB,EAAKmR,MAAMmrD,iBACXt8D,EAAK02D,8VAtCEh8D,UAAMvB,0DAQrB/F,SAAS0wB,iBAAiB,YAAazrB,KAAK6/B,mEAI5C9kC,SAAS2wB,oBAAoB,YAAa1rB,KAAK6/B,qDAyF1C,IAAAt+B,EAAAvB,KACL,GAAIA,KAAKG,MAAMw9B,gBACX,OACIv4B,EAAAH,QAAA/J,cAACypE,EAAA1/D,SACGpH,KAAMmC,KAAKG,MAAMtC,KACjBS,MAAO0B,KAAKG,MAAM7B,MAClB4X,KAAMlW,KAAKG,MAAM+V,KACjB8V,SAAUhsB,KAAKG,MAAM6rB,WAMjC,IAAM44C,GACF/6C,+BAAgC7pB,KAAK8Y,MAAM+rD,WAA3C,uBAMEV,GAAmB,EAAAr+D,EAAAg/D,aAAY9kE,KAAKG,MAAM+V,SACzClW,KAAKG,MAAM+V,KAAKtd,OAAS,MAEzBG,OAAO0J,KAAKzC,KAAKG,MAAM+V,MAAMtd,OAAS,GAE7C,OACIwM,EAAAH,QAAA/J,cAAA,OACIyE,IAAKK,KAAKi1D,cACV3wD,WAAW,EAAAU,EAAAC,SAAW,qBAAsBjF,KAAKG,MAAMmE,WACnDygE,iBAAsB/kE,KAAKG,MAAM0iE,kBACjCmC,iBAAsBhlE,KAAK8Y,MAAMmrD,gBACjCgB,qBAAsBd,KAG1B/+D,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,oBAAqBjF,KAAKG,MAAMwiE,kBAClDuC,6BAAiCllE,KAAK8Y,MAAMmrD,gBAC5CkB,gCAAiCnlE,KAAKG,MAAMyiE,aAEhDh+D,SAAUu/D,EAAmB,KAAO,IACpCx/D,QAAS3E,KAAKq+D,iBACd+G,UAAWplE,KAAKkkE,cAEflkE,KAAKG,MAAMyiE,YACZx9D,EAAAH,QAAA/J,cAAA,QAAM2C,KAAMmC,KAAKG,MAAMtC,KAAMS,MAAO0B,KAAKG,MAAM7B,MAAOgG,UAAA,8CAAyDtE,KAAKG,MAAM7B,OAAS,IAAIiO,iBAErIvM,KAAKG,MAAMyiE,YACbx9D,EAAAH,QAAA/J,cAAA,QAAM2C,KAAMmC,KAAKG,MAAMtC,KAAMS,MAAO0B,KAAKG,MAAM7B,MAAOgG,UAAU,2BAC3D,EAAA8d,EAAAi9C,gBAAer/D,KAAKG,MAAM+V,KAAMlW,KAAKG,MAAM7B,UAK/C6lE,GAAoB/+D,EAAAH,QAAA/J,cAACkvB,EAAAsiC,WAAUpoD,WAAW,EAAAU,EAAAC,SAAW,0BAClDogE,+BAAgCrlE,KAAKG,MAAM0iE,sBAInDz9D,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGC,GAAIpgC,KAAK8Y,MAAMmrD,gBACf7oE,QAAS,IACTilC,YACIC,gCAAoCtgC,KAAKG,MAAM0iE,kBAAoB,8BAAgC,IACnGtiC,yCAAyCvgC,KAAKG,MAAM0iE,kBAAoB,mCAAqC,IAC7G95C,8BAAmC/oB,KAAKG,MAAM0iE,kBAAoB,6BAA+B,KAErGyC,UAhDS,kBAAM/jE,EAAK0X,UAAW4rD,WAAYtjE,EAAKsiE,SAASh7C,QAAQ08C,eAiDjE/kC,eAAA,GAEAp7B,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,kBACvBugE,uBAAwBxlE,KAAKG,MAAM0iE,qBAGnCz9D,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,QAClBwgE,aAAczlE,KAAKG,MAAM0iE,oBAE7BljE,IAAKK,KAAK6jE,SACVjsC,MAAO53B,KAAKG,MAAM0iE,kBAAoB+B,OAAuBtnE,GAE7D8H,EAAAH,QAAA/J,cAACmwD,EAAAgB,YACGqZ,YAAA,EACApZ,UAAA,EACAqZ,cAAe,IACfC,sBAAuB,SAAAzlE,GAAA,OAASiF,EAAAH,QAAA/J,cAAA,MAAAmF,KAASF,GAAOmE,UAAU,mBAAmBszB,OAASlb,QAAS,YAC/FmpD,sBAAuB,SAAA1lE,GAAA,OAASiF,EAAAH,QAAA/J,cAAA,MAAAmF,KAASF,GAAOmE,UAAU,mBAAmBszB,OAASlb,QAAS,cAE9F,EAAA5W,EAAAg/D,aAAY9kE,KAAKG,MAAM+V,MACpB9Q,EAAAH,QAAA/J,cAAC4qE,EAAA7gE,SACGm5D,aAAcp+D,KAAKo+D,aACnBwE,WAAY5iE,KAAKG,MAAMyiE,WACvBlK,MAAO14D,KAAKG,MAAM+V,KAClBrY,KAAMmC,KAAKG,MAAMtC,KACjBS,MAAO0B,KAAKG,MAAM7B,QAEtBvF,OAAO0J,KAAKzC,KAAKG,MAAM+V,MAAMrO,IAAI,SAAAjJ,GAAA,OAC7BwG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKA,GACjBwG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eAAe1F,GAC9BwG,EAAAH,QAAA/J,cAAC4qE,EAAA7gE,SACGm5D,aAAc78D,EAAK68D,aACnBwE,WAAYrhE,EAAKpB,MAAMyiE,WACvBlK,MAAOn3D,EAAKpB,MAAM+V,KAAKtX,GACvBf,KAAM0D,EAAKpB,MAAMtC,KACjBS,MAAOiD,EAAKpB,MAAM7B,yBAclEslE,EAAS1hE,WACLoC,UAAmB/D,UAAUiF,OAC7Bm9D,iBAAmBpiE,UAAUiF,OAC7Bo9D,WAAmBriE,UAAUkF,KAC7Bo9D,kBAAmBtiE,UAAUkF,KAC7Bk4B,gBAAmBp9B,UAAUkF,KAC7ByQ,KAAmB3V,UAAUiM,WACzBjM,UAAUic,MACVjc,UAAUxB,SAEdlB,KAAU0C,UAAUiF,OACpBwmB,SAAUzrB,UAAUmF,KACpBpH,MAAUiC,UAAUiM,WAChBjM,UAAUkM,OACVlM,UAAUiF,qBAIH,EAAAhG,EAAAwB,UAAS4iE,kFC7PxB,QAAA7pE,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,KACAyR,EAAAzR,EAAA,uDAEA,IAAMgsE,EAAQ,SAAA1kE,GAAA,IACV+8D,EADU/8D,EACV+8D,aACAwE,EAFUvhE,EAEVuhE,WACAlK,EAHUr3D,EAGVq3D,MACA76D,EAJUwD,EAIVxD,KACAS,EALU+C,EAKV/C,MALU,OAOVo6D,EAAM7wD,IAAI,SAACyJ,EAAM6a,GAAP,OACN/mB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKutB,GACjB/mB,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,cAClB+gE,uBAAwB1nE,IAAUgT,EAAKhT,QAE3CM,IAAKutB,EACLtuB,KAAMA,EACNS,MAAOgT,EAAKhT,MACZqG,QAASy5D,EAAav/D,KAAK,KAAMyS,MAE9BsxD,GAActxD,EAAK69B,aACtB/pC,EAAAH,QAAA/J,cAACg4D,EAAAjuD,SAAQmU,UAAU,MAAM9U,UAAU,qBAAqBiV,SAAS,EAAA/N,EAAAy6D,iBAAgB30D,EAAKhT,QAClF8G,EAAAH,QAAA/J,cAAA,SAAGkK,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAA,gDAA2DgN,EAAKzM,MAAQ,IAAI0H,oBAGtFq2D,IAAetxD,EAAK69B,aACvB/pC,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAA,qCAAgDgN,EAAKzM,MAAQ,IAAI0H,iBAErEq2D,GAAcx9D,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,mBAAmBgN,EAAKzM,WAMxEkhE,EAAM7jE,WACFk8D,aAAc79D,UAAUmF,KACxBk9D,WAAcriE,UAAUkF,KACxB5H,KAAc0C,UAAUiF,OACxBlH,MAAciC,UAAUiM,WACpBjM,UAAUkM,OACVlM,UAAUiF,oBAIHugE,iFChDf,QAAAhsE,EAAA,QACAA,EAAA,uDAEA,IAAMmsE,EAAe,SAAA7kE,GAAA,IACjBxD,EADiBwD,EACjBxD,KACAqY,EAFiB7U,EAEjB6U,KACA5X,EAHiB+C,EAGjB/C,MACA0tB,EAJiB3qB,EAIjB2qB,SAJiB,OAMjB5mB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wCACXc,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,+BAA+BzG,KAAMA,EAAMS,MAAOA,EAAO0tB,SAAUA,GAChFpqB,MAAMukE,QAAQjwD,GACXA,EAAKrO,IAAI,SAACyJ,EAAM6a,GAAP,OACL/mB,EAAAH,QAAA/J,cAAA,UAAQ0D,IAAKutB,EAAK7tB,MAAOgT,EAAKhT,OAAQgT,EAAKzM,QAG/C9L,OAAO0J,KAAKyT,GAAMrO,IAAI,SAAAjJ,GAAA,OAClBwG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKA,GACjBwG,EAAAH,QAAA/J,cAAA,YAAUu4B,MAAO70B,GACZsX,EAAKtX,GAAKiJ,IAAI,SAACyJ,EAAM6a,GAAP,OACX/mB,EAAAH,QAAA/J,cAAA,UAAQ0D,IAAKutB,EAAK7tB,MAAOgT,EAAKhT,OAAQgT,EAAKzM,eAS3EqhE,EAAahkE,WACTgU,KAAM3V,UAAUiM,WACZjM,UAAUxB,OACVwB,UAAUic,QAEd3e,KAAU0C,UAAUiF,OACpBwmB,SAAUzrB,UAAUmF,KACpBpH,MAAUiC,UAAUiM,WAChBjM,UAAUkM,OACVlM,UAAUiF,oBAIH0gE,8KC1Cf,IAAApgE,EAAA/L,EAAA,GAEaslE,iBAAiB,SAACnpD,EAAM5X,GACjC,IAAMihE,EAAc,SAACppD,GAAD,OAAeA,EAAS/I,KAAK,SAAAkE,GAAA,OAAQA,EAAKhT,QAAUA,SAAcuG,MAClFA,EAAO,GASX,OARI,EAAAiB,EAAAg/D,aAAY5uD,GACZrR,EAAO06D,EAAYrpD,GAEnBnd,OAAO0J,KAAKyT,GAAMuI,KAAK,SAAA7f,GAEnB,OADAiG,EAAO06D,EAAYrpD,EAAKtX,MAIzBiG,GAGEm/D,mBAAmB,SAAC9tD,EAAM5X,GACnC,IAAMihE,EAAc,SAACppD,GAAD,OAAcA,EAASukC,UAAU,SAAAppC,GAAA,OAAQA,EAAKhT,QAAUA,KACxEgT,KASJ,OARI,EAAAxL,EAAAg/D,aAAY5uD,GACZ5E,GAAS7E,OAAQ8yD,EAAYrpD,GAAOtd,OAAQsd,EAAKtd,QAEjDG,OAAO0J,KAAKyT,GAAMuI,KAAK,SAAA7f,GAEnB,OADA0S,GAAS7E,OAAQ8yD,EAAYrpD,EAAKtX,IAAOhG,OAAQsd,EAAKtX,GAAKhG,UAI5D0Y,GAGE8yD,oBAAoB,SAACluD,EAAM6I,GACpC,IAAMwgD,EAAc,SAACppD,GAAD,OAAcA,EAAS4I,IACvCtlB,SASJ,OARI,EAAAqM,EAAAg/D,aAAY5uD,GACZzc,EAAS8lE,EAAYrpD,GAErBnd,OAAO0J,KAAKyT,GAAMuI,KAAK,SAAA7f,GAEnB,OADAnF,EAAS8lE,EAAYrpD,EAAKtX,KACZN,QAGf7E,EAAO6E,OAGLgmE,eAAe,SAACvlD,EAAOnmB,GAEhC,OADoBmmB,EAAQ,EAAK,EAAKnmB,EAAS,EAAKmmB,EAAQ,GAInDylD,eAAe,SAACzlD,EAAOnmB,GAEhC,OADoBmmB,EAAQ,IAAOnmB,EAAS,EAAImmB,EAAQ,kFClD5D,QAAAhlB,EAAA,IACAyF,EAAAzF,EAAA,QAGAA,EAAA,QACAA,EAAA,IACAyR,EAAAzR,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,wDAEA,IAAMqsE,EAAa,SAAA/kE,GAmCb,IAlCFwgD,EAkCExgD,EAlCFwgD,QACAv9C,EAiCEjD,EAjCFiD,UACA0+D,EAgCE3hE,EAhCF2hE,sBACAC,EA+BE5hE,EA/BF4hE,eACAoD,EA8BEhlE,EA9BFglE,gBACAz6D,EA6BEvK,EA7BFuK,SACA06D,EA4BEjlE,EA5BFilE,SACAC,EA2BEllE,EA3BFklE,WACArD,EA0BE7hE,EA1BF6hE,eACAC,EAyBE9hE,EAzBF8hE,kBACAqD,EAwBEnlE,EAxBFmlE,OACA/hE,EAuBEpD,EAvBFoD,GACA2+D,EAsBE/hE,EAtBF+hE,cACAC,EAqBEhiE,EArBFgiE,yBACA3+D,EAoBErD,EApBFqD,YACA4+D,EAmBEjiE,EAnBFiiE,SACAC,EAkBEliE,EAlBFkiE,iBACAC,EAiBEniE,EAjBFmiE,qBAiBEiD,EAAAplE,EAhBFqlE,oBAgBEppE,IAAAmpE,KAAAE,EAAAtlE,EAfFulE,iBAeEtpE,IAAAqpE,KAAAE,EAAAxlE,EAdFylE,wBAcExpE,IAAAupE,KAbFpzC,EAaEpyB,EAbFoyB,MACAgwC,EAYEpiE,EAZFoiE,WACAsD,EAWE1lE,EAXF0lE,UACAC,EAUE3lE,EAVF2lE,UACAnpE,EASEwD,EATFxD,KACAmuB,EAQE3qB,EARF2qB,SACArnB,EAOEtD,EAPFsD,QACAsiE,EAME5lE,EANF4lE,YACAC,EAKE7lE,EALF6lE,OACAC,EAIE9lE,EAJF8lE,SACAnqE,EAGEqE,EAHFrE,KACAsgB,EAEEjc,EAFFic,KACAhf,EACE+C,EADF/C,MAEMkxC,EAAkB0zB,KAAoBA,EAAetqE,OACvDwuE,GAAoB,EAClBC,EAAkBN,IAAczoE,IAAUyoE,EAC1CO,EAAkBN,IAAc1oE,IAAU0oE,EA4C1CO,EAAc,SAACr7C,GACjB,IAAMs7C,EAA6B,iBAARt7C,EAAmBA,EAAI3Z,MAAM,KAAO2Z,EAAI3X,WAAWhC,MAAM,KACpF,OAAOi1D,GAAeA,EAAY5uE,OAAS,EAAI4uE,EAAY,GAAG5uE,OAAS,GAGrE6uE,EAAiB,WACnB,IAAIJ,EAAJ,CACA,IAAIK,SAEEC,EAAiBrpE,EAAQipE,EAAYjpE,GAAS,EAGpD,KAFyBsN,IAAY,EAAAJ,EAAA0jC,kBAAiBtjC,KAEnCA,GAAY03D,EAAW,CACtC,IAAMsE,EAAY5sB,YAAY18C,GAAS08C,WAAW,EAAA9uC,KAAA27D,IAAI,GAAO,EAAIF,IACjED,EAAkB1sB,WAAW4sB,GAAWpf,QAAQmf,QAEhDD,EAAkB1sB,YAAa18C,EAAS,GAAGkqD,QAAQmf,GAEvD37C,GAAW9uB,QAAUoB,MAAOopE,EAAiB7pE,YAG3CiqE,EAA4B,WAC9B,IAAIC,SAEEJ,EAAiBrpE,EAAQipE,EAAYjpE,GAAS,EAGpD,KAFyBsN,IAAY,EAAAJ,EAAA0jC,kBAAiBtjC,KAEnCA,GAAY03D,EAAW,CACtC,IAAMsE,EAAY5sB,YAAY18C,GAAS08C,WAAW,EAAA9uC,KAAA27D,IAAI,GAAO,EAAIF,IACjEI,EAAkB/sB,WAAW4sB,GAAWpf,QAAQmf,QAEhDI,EAAkB/sB,YAAa18C,EAAS,GAAGkqD,QAAQmf,GAEvD,OAAOI,GAGLC,EAAiB,WACnB,GAAK1pE,IAASgpE,EAAd,CACA,IAAMS,EAAkBD,IACpBtE,GAAwBuE,EAAkB,GAC9C/7C,GAAW9uB,QAAUoB,MAAOypE,EAAiBlqE,YAQ7CwqD,EAAgB/pD,EAEhBgf,IACA+qC,EAAgBye,EAAsBxoE,EAAtB,IAA+Bgf,EAAYA,EAA3C,IAAmDhf,GAGvE,IAAM2pE,EAAqB1E,IAA8B,WAATvmE,GAA8B,QAATA,GAE/D8tC,GACF1lC,EAAAH,QAAA/J,cAACgtE,EAAAjjE,SACGsnB,YApGY,SAACjyB,GAKjB,GAJIgjB,IACAhjB,EAAE4C,OAAOoB,MAAQhE,EAAE4C,OAAOoB,MAAMqP,QAAQ2P,EAAM,IAAIwvB,QAGlDxyC,EAAE4C,OAAOoB,QAAUA,GAAkB,aAATtB,EAAhC,CAIA,GAAa,WAATA,GAA8B,QAATA,EAAgB,CACrC,IAAMyuD,GAAYnxD,EAAE4C,OAAOoB,OAA4B,KAAnBhE,EAAE4C,OAAOoB,OAAmC,OAAnBhE,EAAE4C,OAAOoB,MAChE6pE,EAAevB,EAAY,cAAkB,IAE7CzzB,EAAY,IAAI7lC,OAAU66D,EAAd,WAAoC7E,EAAW,aAAe,IAA9D,KACb/1D,KAAKjT,EAAE4C,OAAOoB,OAEb8pE,EAA0B9E,GAAY,IAAIh2D,OAAU66D,EAAd,mBACvC56D,KAAKjT,EAAE4C,OAAOoB,OAEb+pE,EAAkB,IAAI/6D,OAAU66D,EAAd,0BACnB56D,KAAKjT,EAAE4C,OAAOoB,OAEbgqE,EAAyB,IAAI/6D,KAAJ,KAAajT,EAAE4C,OAAOoB,OAOrD,GALImlE,GAAcN,IACdiE,EAAmB,IAAI95D,OAAU66D,EAAd,UAAoC1E,EAApC,eAA6DN,EAA7D,QACd51D,KAAKjT,EAAE4C,OAAOoB,SAGjB60C,GAAcsY,IAAa2b,EAC7B9sE,EAAE4C,OAAOoB,MAAQmtD,GAAYmb,GAAayB,GAAmBC,GAAmC,QAATtrE,EACjF1C,EAAE4C,OAAOoB,OACRhE,EAAE4C,OAAOoB,WACb,IAAK8pE,EAER,YADA9tE,EAAE4C,OAAOoB,MAAQA,GAKzB0tB,EAAS1xB,KA8DLunD,QAASA,EACTv9C,WAAW,EAAAU,EAAAC,SAAWgjE,EAAqB,uBAAyB,GAAI7E,EAAgB,2BAA6B,GAAI,SAAWmF,eAAgB/4B,GAAayzB,GACjKD,sBAAuBA,EACvBsD,SAAUA,EACVC,WAAYA,EACZle,cAAeA,EACf8a,kBAAmBA,EACnB3zB,UAAWA,EACX/qC,GAAIA,EACJ2+D,cAAeA,EACfC,yBAA0BA,EAC1B3+D,YAAaA,EACb6+D,iBAAkB0E,EAClBvB,aAAcA,EACdjD,WAAYA,EACZ5lE,KAAMA,EACN8G,QAASA,EACTu/D,aAjCa,SAAC5pE,GACA,KAAdA,EAAEijE,SAAgBkK,IACJ,KAAdntE,EAAEijE,SAAgByK,KAgClBf,YAAaA,EACbE,SAAUA,EACVnqE,KAAMA,IAGRwrE,GACFpjE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iBACXc,EAAAH,QAAA/J,cAACutE,EAAAxjE,SACGoiE,gBAAiBA,EACjBI,eAAgBA,EAChBH,gBAAiBA,GAAoB9D,GAAwBsE,IAA8B,EAC3FE,eAAgBA,KAItBU,GACFtjE,EAAAH,QAAA/J,cAACg4D,EAAAjuD,SAAQX,WAAW,EAAAU,EAAAC,SAAW,IAAM0jE,aAAcl1C,IAAUra,UAAU,OAAOG,QAASi2B,EAAY0zB,EAAe,GAAK,QAChHzvC,GACHruB,EAAAH,QAAA/J,cAAA,SAAO0tE,QAAS/qE,EAAMyG,UAAU,sBAAsBmvB,KAEnD+yC,GACHphE,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,uBAAuBkiE,GAEtCyB,GACGO,GAEH19B,IAGT,OACI1lC,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,OACO46D,GACC9hE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW+hE,GACZjhE,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAcohE,EAAd,WAAyC,UAAzC,YAAgEa,EAAO36D,kBAGhGnH,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,IAEpCokE,MASjBtC,EAAWlkE,WACP2/C,QAASthD,UAAUiM,WACfjM,UAAUkM,OACVlM,UAAUiF,SAEdlB,UAA0B/D,UAAUiF,OACpCw9D,sBAA0BziE,UAAUiF,OACpCy9D,eAA0B1iE,UAAUiF,OACpC6gE,gBAA0B9lE,UAAUiF,OACpCoG,SAA0BrL,UAAUiF,OACpC09D,eAA0BjlC,YAAcC,uBACxCilC,kBAA0B5iE,UAAUkM,OACpC+5D,OAA0BjmE,UAAUiF,OACpCf,GAA0BlE,UAAUiF,OACpC49D,cAA0B7iE,UAAUiF,OACpC69D,yBAA0B9iE,UAAUkF,KACpCf,YAA0BnE,UAAUiF,OACpC89D,SAA0B/iE,UAAUkF,KACpC89D,iBAA0BhjE,UAAUkF,KACpC+9D,qBAA0BjjE,UAAUkF,KACpCihE,aAA0BnmE,UAAUkF,KACpCmhE,UAA0BrmE,UAAUkF,KACpCqhE,iBAA0BvmE,UAAUkF,KACpCguB,MAA0BlzB,UAAUiF,OACpCi+D,WAA0BljE,UAAUkM,OACpC5O,KAA0B0C,UAAUiF,OACpCwmB,SAA0BzrB,UAAUmF,KACpCf,QAA0BpE,UAAUmF,KACpCuhE,YAA0B1mE,UAAUiF,OACpC0hE,OAA0B3mE,UAAUiF,OACpC2hE,SAA0B5mE,UAAUkF,KACpCzI,KAA0BuD,UAAUiF,OACpC8X,KAA0B/c,UAAUiF,OACpClH,MAA0BiC,UAAUiM,WAChCjM,UAAUkM,OACVlM,UAAUiF,qBAIH,EAAAhG,EAAAwB,UAASolE,kFClQxB,QAAArsE,EAAA,QACAA,EAAA,QACAA,EAAA,KACAqwB,EAAArwB,EAAA,uDAEA,IAAM8uE,EAAmB,SAAAxnE,GAAA,IACrB2mE,EADqB3mE,EACrB2mE,eACAP,EAFqBpmE,EAErBomE,eACAJ,EAHqBhmE,EAGrBgmE,gBACAC,EAJqBjmE,EAIrBimE,gBAJqB,OAMrBliE,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,UAAW,yDACXI,YAAa2iE,EACb1iE,QAAS8iE,EACT7iE,SAAS,MAETQ,EAAAH,QAAA/J,cAACkvB,EAAAqjC,UAASnpD,UAAW,gDAAkDI,YAAa2iE,KAExFjiE,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,UAAW,yDACXI,YAAa4iE,EACb3iE,QAASqjE,EACTpjE,SAAS,MAETQ,EAAAH,QAAA/J,cAACkvB,EAAAojC,WAAUlpD,UAAW,iDAAkDI,YAAa4iE,OAKjGuB,EAAiB3mE,WACb8lE,eAAiBznE,UAAUmF,KAC3B+hE,eAAiBlnE,UAAUmF,KAC3B2hE,gBAAiB9mE,UAAUkF,KAC3B6hE,gBAAiB/mE,UAAUkF,gBAGhBojE,iFCtCf,QAAA9uE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM+uE,EAAQ,SAAAznE,GAAA,IACVkrB,EADUlrB,EACVkrB,YACAs1B,EAFUxgD,EAEVwgD,QACAv9C,EAHUjD,EAGViD,UACA0+D,EAJU3hE,EAIV2hE,sBACAuD,EALUllE,EAKVklE,WACAD,EANUjlE,EAMVilE,SACAje,EAPUhnD,EAOVgnD,cACA8a,EARU9hE,EAQV8hE,kBACA1+D,EATUpD,EASVoD,GACA2+D,EAVU/hE,EAUV+hE,cACAC,EAXUhiE,EAWVgiE,yBACA3+D,EAZUrD,EAYVqD,YACA6+D,EAbUliE,EAaVkiE,iBACAmD,EAdUrlE,EAcVqlE,aACAjD,EAfUpiE,EAeVoiE,WACA5lE,EAhBUwD,EAgBVxD,KACA8G,EAjBUtD,EAiBVsD,QACAu/D,EAlBU7iE,EAkBV6iE,aACA+C,EAnBU5lE,EAmBV4lE,YACAE,EApBU9lE,EAoBV8lE,SACAnqE,EArBUqE,EAqBVrE,KArBU,OAuBVoI,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,OACO82D,GACHh+D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW0+D,GACZ59D,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAW+9D,EAA2BA,EAA3B,WAA6D,GAAI,UAA5E,YAAmGI,EAAc72D,kBAGtInH,EAAAH,QAAA/J,cAAA,SACI6tE,aAAc1F,EAA2B,WAAQ/lE,EACjDukD,QAASA,EAAU,UAAY,GAC/Bv9C,WAAW,EAAAU,EAAAC,SAAWX,GACtB0kE,WAAA,iBAA2BnrE,EAC3BorE,WAAU3C,EACV4C,aAAY3C,EACZlhE,SAAUX,EACVD,GAAIA,EACJ0kE,UAAWhG,EAAoBM,EAAaN,EAAoB,EAAIM,EACpE5lE,KAAMA,EACNmuB,SAAUO,EACV5nB,QAASA,EACTygE,UAAW7B,EAAmBW,OAAe5mE,EAC7C2pE,YAAaA,QAAe3pE,EAC5B8rE,SAAU1C,EACVS,SAAUA,QAAY7pE,EACtBN,KAAe,WAATA,EAAoB,OAASA,EACnCsB,MAAO+pD,GAAiB,OAKpCygB,EAAM5mE,WACFqqB,YAAahsB,UAAUmF,KACvBm8C,QAAathD,UAAUiM,WACnBjM,UAAUkM,OACVlM,UAAUiF,SAEdlB,UAAuB/D,UAAUiF,OACjCw9D,sBAAuBziE,UAAUiF,OACjC8gE,SAAuB/lE,UAAUiF,OACjC+gE,WAAuBhmE,UAAUiM,WAC7BjM,UAAUkM,OACVlM,UAAUiF,SAEd6iD,cAAe9nD,UAAUiM,WACrBjM,UAAUkM,OACVlM,UAAUiF,SAEd29D,kBAA0B5iE,UAAUkM,OACpChI,GAA0BlE,UAAUiF,OACpC49D,cAA0B7iE,UAAUiF,OACpC69D,yBAA0B9iE,UAAUkF,KACpCf,YAA0BnE,UAAUiF,OACpC+9D,iBAA0BhjE,UAAUkF,KACpCihE,aAA0BnmE,UAAUkF,KACpCg+D,WAA0BljE,UAAUkM,OACpC5O,KAA0B0C,UAAUiF,OACpCb,QAA0BpE,UAAUmF,KACpCw+D,aAA0B3jE,UAAUmF,KACpCuhE,YAA0B1mE,UAAUiF,OACpC2hE,SAA0B5mE,UAAUkF,KACpCzI,KAA0BuD,UAAUiF,OACpClH,MAA0BiC,UAAUiM,WAChCjM,UAAUkM,OACVlM,UAAUiF,oBAIHsjE,iFC7Ff,QAAA/uE,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,wDAEA,IAAMsvE,EAAc,SAAAhoE,GAAA,IAChB2iD,EADgB3iD,EAChB2iD,eACAnC,EAFgBxgD,EAEhBwgD,QACA71B,EAHgB3qB,EAGhB2qB,SAHgB,QAKdg4B,GACE5+C,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBACXc,EAAAH,QAAA/J,cAAC4nE,EAAA79D,SACGX,UAAU,4BACV2+D,eAAe,6CACfx+D,GAAG,eACH5G,KAAK,gBACLmuB,SAAUA,EACV1tB,MAAM,WACNtB,KAAK,WACL6kD,QAASA,IAEbz8C,EAAAH,QAAA/J,cAAA,SAAOoJ,UAAU,sBAAsBskE,QAAQ,iBAAgB,EAAAn6D,EAAA2C,UAAS,iBACxEhM,EAAAH,QAAA/J,cAACg4D,EAAAjuD,SACGmU,UAAU,OACV9U,UAAU,wBACV+U,cAAc,6BACdC,KAAK,OACLC,SAAS,EAAA9K,EAAA2C,UAAS,4DAKlCi4D,EAAYnnE,WACR2/C,QAASthD,UAAUiM,WACfjM,UAAUkM,OACVlM,UAAUiF,SAEdw+C,eAAgBzjD,UAAUkF,KAC1BumB,SAAgBzrB,UAAUmF,gBAGf2jE,iFC3Cf,QAAAtvE,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAuvE,EAAAvvE,EAAA,SAGAA,EAAA,SACAA,EAAA,KAEA0U,EAAA1U,EAAA,sDAEA,IAAMmoE,EAAU,SAAA7gE,GAOT,IANH2S,EAMG3S,EANH2S,UACAG,EAKG9S,EALH8S,UACAE,EAIGhT,EAJHgT,cACAqpB,EAGGr8B,EAHHq8B,aACA1R,EAEG3qB,EAFH2qB,SACA/iB,EACG5H,EADH4H,kBAEMsgE,EAAkC,IAAlBl1D,GAAsB,EAAA5F,EAAA2C,UAAS,YAAa,EAAA3C,EAAA2C,UAAS,YAE3E,GAAIssB,EACA,OAAsB,IAAlBrpB,EAEIjP,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mDACV0P,GAKT5O,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mDACV0P,GAEL5O,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mDACV6P,IAMjB,IAAMq1D,EAAgC,IAAlBn1D,EAAsB,WAAa,SACvD,OACIjP,EAAAH,QAAA/J,cAAC8gC,EAAA/2B,SACGX,UAAU,sDACV8X,OAAQmtD,EACRltD,WAAA,GAEAjX,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAC4nE,EAAA79D,SACGjI,KAAK,SACLa,KAAK,YACLS,MAAO0V,EACP1P,UAAA,6BAAwCklE,EACxCvG,gBAAgB,EAAAj+D,EAAAC,SAAW,yBAA0B,kCAArC,6BAAqGukE,EAArG,UAChBx9C,SAAUA,EACVk3C,eAAgBj6D,EAAkB+K,cAClCsvD,UAAA,EACAsD,WAAA,IAGe,IAAlBvyD,GACGjP,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAC4nE,EAAA79D,SACGjI,KAAK,SACLa,KAAK,YACLS,MAAO6V,EACP7P,UAAU,WACV2+D,eAAe,yBACfj3C,SAAUA,EACVk3C,eAAgBj6D,EAAkBkL,UAClCmvD,UAAA,EACAsD,WAAA,IAEJxhE,EAAAH,QAAA/J,cAACouE,EAAAG,eAAcnlE,UAAU,kCACzBc,EAAAH,QAAA/J,cAACouE,EAAAI,iBAAgBplE,UAAU,wCAQnD49D,EAAQhgE,WACJ8R,UAAmBzT,UAAUiF,OAC7B2O,UAAmB5T,UAAUiF,OAC7B6O,cAAmB9T,UAAUkM,OAC7BixB,aAAmBn9B,UAAUkF,KAC7BumB,SAAmBzrB,UAAUmF,KAC7BuD,kBAAmB1I,UAAUxB,mBAGlB,EAAAS,EAAAwB,UAASkhE,+FC7FxBnpE,OAAA0J,KAAAknE,GAAAhnE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAyrE,EAAA/qE,qBACA7F,OAAA0J,KAAAmnE,GAAAjnE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0rE,EAAAhrE,8GCDA,QAAA7E,EAAA,QACAA,EAAA,uDAEA,IAAM0vE,EAAgB,SAAApoE,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAClBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,MAC5EhkB,EAAAH,QAAA/J,cAAA,QACIoJ,UAAU,cACVuoD,YAAY,KACZrjC,SAAS,UACT5rB,EAAE,6IAKd6rE,EAAcvnE,WACVoC,UAAW/D,UAAUiF,UAGhBikE,wHClBT,QAAA1vE,EAAA,QACAA,EAAA,uDAEA,IAAM2vE,EAAkB,SAAAroE,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACpBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWilB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,MAC5EhkB,EAAAH,QAAA/J,cAAA,QACIoJ,UAAU,cACVuoD,YAAY,KACZrjC,SAAS,UACT5rB,EAAE,gJAKd8rE,EAAgBxnE,WACZoC,UAAW/D,UAAUiF,UAGhBkkE,oLClBFzkE,kgBCAPlL,EAAA,QACAA,EAAA,IACAyF,EAAAzF,EAAA,QAGAA,EAAA,gOAEM8vE,6SACFC,gBAAkB,SAACx5D,GACf,IAAIy5D,mIAAoBpiE,EAAKxH,MAAMgQ,sBAKnC,OAHIxI,EAAKxH,MAAMgQ,oBAAoBvX,OAAS,IAAM+O,EAAKxH,MAAM6pE,uBACzDD,EAAgBA,EAAch0D,OAAO,SAAAk0D,GAAA,MAAmB,MAAbA,EAAG3rE,OAA8B,MAAb2rE,EAAG3rE,SAE/DyrE,EAActrD,KAAK,SAAAwrD,GAAA,OAAMA,EAAG3rE,QAAUgS,+UAPvBjO,UAAMvB,wDAW5B,IAAMopE,EAAqBlqE,KAAKG,MAAMgQ,oBAAoB,GAAG7R,MACvD6rE,EAAqBnqE,KAAKG,MAAMipD,oBAAoB8gB,GAE1DlqE,KAAKG,MAAMiqE,iBAAkBvsE,MAASmC,KAAKG,MAAM6pE,qBAAuB,WAAa,UAAxD,iBAAkF1rE,MAAO4rE,IACtHlqE,KAAKG,MAAMkqE,kBACP/5D,cAAe45D,EACftvD,SAAeuvD,gDAKnB,IAAMG,EAAetqE,KAAKG,MAAM6pE,qBAC5BhqE,KAAKG,MAAMoqE,uBAAyBvqE,KAAKG,MAAMqqE,qBAC7CC,EAAmBzqE,KAAKG,MAAMipD,oBAAoBppD,KAAKG,MAAMmQ,eAE/DtQ,KAAKG,MAAMmQ,gBAAkBg6D,GAC7BtqE,KAAKG,MAAMiqE,iBAAkBvsE,MAASmC,KAAKG,MAAM6pE,qBAAuB,WAAa,UAAxD,iBAAkF1rE,MAAO0B,KAAKG,MAAMmQ,gBAGjItQ,KAAKG,MAAMya,WAAa6vD,GACxBzqE,KAAKG,MAAMiqE,iBAAkBvsE,iBAAkBysE,EAAgBhsE,MAAO0B,KAAKG,MAAMya,wDAKrF,IAAM8vD,GAAmC1qE,KAAKG,MAAM6pE,sBAA4D,MAApChqE,KAAKG,MAAMqqE,sBAA0E,IAA1CxqE,KAAKG,MAAMgQ,oBAAoBvX,OAChJ+xE,EAAkC3qE,KAAKG,MAAM6pE,qBAC/ChqE,KAAKG,MAAMoqE,uBAAyBvqE,KAAKG,MAAMqqE,qBAC7CC,EAAkCzqE,KAAKG,MAAMipD,oBAAoBppD,KAAKG,MAAMmQ,eAC5Es6D,GAAmC5qE,KAAK8pE,gBAAgBa,GACxDE,GAAmC7qE,KAAKG,MAAM6pE,sBAAmD,aAA3BhqE,KAAKG,MAAM0T,YACjFi3D,EAAkC9qE,KAAKG,MAAM6pE,sBAC5ChqE,KAAKG,MAAM0T,cAAgB7T,KAAKG,MAAM4qE,sBAAwB/qE,KAAKG,MAAMgQ,oBAAoBvX,OAAS,EAGzGgyE,GAA6BF,EAC7B1qE,KAAKgrE,mBAKLH,GACA7qE,KAAKG,MAAM6rB,UAAW9uB,QAAUW,KAAM,cAAeS,MAAO,cAG5DwsE,GACA9qE,KAAKG,MAAM6rB,UAAW9uB,QAAUW,KAAM,cAAeS,MAAO0B,KAAKG,MAAM4qE,wBAGvE/qE,KAAKG,MAAMya,WAAa6vD,GACxBzqE,KAAKG,MAAMiqE,iBAAkBvsE,iBAAkBmC,KAAKG,MAAMmQ,cAAiBhS,MAAO0B,KAAKG,MAAMya,6CAKjG,OACIxV,EAAAH,QAAA/J,cAAC+vE,EAAAhmE,QAAD5E,GACIypE,gBAAiB9pE,KAAK8pE,iBAClB9pE,KAAKG,iBAMzB0pE,EAAgB3nE,WACZqoE,uBAAwBhqE,UAAUiF,OAClCulE,qBAAwBxqE,UAAUiF,OAClCkL,qBAAwBnQ,UAAUiF,OAClCoV,SAAwBra,UAAUiM,WAC9BjM,UAAUkM,OACVlM,UAAUiF,SAEd0lE,WAAY3qE,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,SAEd2lE,WAAY5qE,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,SAEd4lE,WAAY7qE,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,SAEdmL,iBAAkBpQ,UAAUxB,OAC5BssE,WAAkB9qE,UAAUiM,WACxBjM,UAAUkM,OACVlM,UAAUiF,SAEd8lE,WAAY/qE,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,SAEd8K,cAAqB/P,UAAUiF,OAC/B2K,oBAAqB8tB,YAAcC,uBACnClnB,YAAqBzW,UAAUiM,WAC3BjM,UAAUiF,OACVjF,UAAUkM,SAEdkL,YAAsBpX,UAAUiF,OAChCqO,YAAsBtT,UAAUiF,OAChC4jD,oBAAsB7oD,UAAUmF,KAChCskE,qBAAsBzpE,UAAUkF,KAChCi4B,aAAsBn9B,UAAUkF,KAChCyiD,kBAAsB3nD,UAAUic,MAChCwP,SAAsBzrB,UAAUmF,KAChC2kE,iBAAsB9pE,UAAUmF,KAChC0kE,gBAAsB7pE,UAAUmF,KAChCwY,YAAsB3d,UAAUxB,OAChC4S,SAAsBssB,YAAcC,uBACpCssC,qBAAsBjqE,UAAUiF,OAChCqL,WAAsBtQ,UAAUiM,WAC5BjM,UAAUkM,OACVlM,UAAUiF,SAEdqS,WAAmBtX,UAAUiF,OAC7ByN,OAAmB1S,UAAUiF,OAC7ByD,kBAAmB1I,UAAUxB,mBAGlB,EAAAS,EAAAwB,UAAS6oE,0PC1IxBrqE,EAAAzF,EAAA,QACAA,EAAA,IACA2+B,EAAA3+B,EAAA,UACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,MACA8U,EAAA9U,EAAA,IACA4U,EAAA5U,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAM2sD,EAAW,SAAArlD,GAwBX,IAvBFkpE,EAuBElpE,EAvBFkpE,uBACAQ,EAsBE1pE,EAtBF0pE,qBACAr6D,EAqBErP,EArBFqP,qBACAkK,EAoBEvZ,EApBFuZ,SACAtK,EAmBEjP,EAnBFiP,cACAH,EAkBE9O,EAlBF8O,oBACAQ,EAiBEtP,EAjBFsP,iBACA26D,EAgBEjqE,EAhBFiqE,WACAt0D,EAeE3V,EAfF2V,YACAW,EAcEtW,EAdFsW,YACA9D,EAaExS,EAbFwS,YACAu1C,EAYE/nD,EAZF+nD,oBACA0gB,EAWEzoE,EAXFyoE,gBACAE,EAUE3oE,EAVF2oE,qBACAtsC,EASEr8B,EATFq8B,aACA1R,EAQE3qB,EARF2qB,SACAo+C,EAOE/oE,EAPF+oE,gBACAC,EAMEhpE,EANFgpE,iBACAG,EAKEnpE,EALFmpE,qBACAtsD,EAIE7c,EAJF6c,YACArN,EAGExP,EAHFwP,WACA5H,EAEE5H,EAFF4H,kBACAi/C,EACE7mD,EADF6mD,kBAEMqjB,IACA1mE,MAAM,EAAA4J,EAAA2C,UAAS,YAAa9S,MAAO,aAGnCktE,EAAeD,EAAYn+D,KAAK,SAAAq+D,GAAA,MAA2B,YAAjBA,EAAOntE,QASvD,GARmC,IAA/B6R,EAAoBvX,QAAkC,MAAlB0X,EAChCk7D,GACAD,EAAYG,MAERF,GACRD,EAAYzyE,MAAO+L,MAAM,EAAA4J,EAAA2C,UAAS,YAAa9S,MAAO,YAGtDo/B,EAAc,CACd,IAAMvmB,GAAgB,EAAAxI,EAAA+D,UAASsE,GACzB20D,GAAsBx7D,EAAoB/C,KAAK,SAAArP,GAAA,OAAKA,EAAEO,QAAUgS,SAAsBzL,KAC5F,OACIO,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mDACM,aAAhBuP,EACQ+G,EADR,IACoB+wD,EACZx0D,EAAcnF,OAAO,sBAF7B,KAEuD2F,GAMpE,IAAMi0D,EAAqB,SAAAp5D,GAAgB,IAAbtV,EAAasV,EAAbtV,OAClBW,EAAgBX,EAAhBW,KAAMS,EAAUpB,EAAVoB,MACRutE,EAAkBziB,EAAoB9qD,GAE5C8rE,GAAkBvsE,OAAMS,UACxB+rE,GACI/5D,cAAehS,EACfsc,SAAeixD,KAyCnB9E,SAAWC,SACXr2D,EAAiBD,KACjBq2D,GAAY,EAAAl4D,EAAAwP,uBAAsB1N,EAAiBD,GAAsB6M,IAAKjN,GAC9E02D,GAAY,EAAAn4D,EAAAwP,uBAAsB1N,EAAiBD,GAAsB2M,IAAK/M,IAGlF,IAAMnQ,GACF2rE,cACI/E,YACAC,YACAh7C,SA/CoB,SAAAnZ,GAAgB,IAAb3V,EAAa2V,EAAb3V,OACnBW,EAAgBX,EAAhBW,KAAMS,EAAUpB,EAAVoB,MAGd8rE,GAAkBvsE,KAFZkuE,aAA8B/B,EAAuBO,EAAyBC,GAE7ClsE,UACvC0tB,GAAW9uB,QAAUW,OAAMS,aA4C3B0tE,cACIhvE,KAAkB,SAClBumE,kBAAkB,EAClBL,eAAkBj6D,EAAkB2R,eAItCqxD,EAAaV,EAAY3yE,OAAS,GAAKuX,EAAoBvX,OAAS,EAE1E,OACIwM,EAAAH,QAAA/J,cAAC8gC,EAAA/2B,SAASX,UAAU,8BACb2nE,GACC7mE,EAAAH,QAAA/J,cAACgxE,EAAAjnE,QAAD5E,GACIxC,KAAK,WACLspB,MAAO,GACP7oB,MAAOgtE,GACHnrE,EAAM2rE,eAGhBG,GACE7mE,EAAAH,QAAA/J,cAACw9B,EAAApsB,SAAD,KACM09D,GACE5kE,EAAAH,QAAA/J,cAACixE,EAAAlnE,SACG8lE,qBAAsBA,EACtBR,uBAAwBA,EACxBqB,mBAAoBA,EACpBN,WAAYA,EACZn7D,oBAAqBA,EACrB6G,YAAaA,EACbu0D,YAAaA,EACb13D,YAAaA,EACbu1C,oBAAqBA,EACrBlB,kBAAmBA,EACnBkkB,mBAAoBjsE,EAAM6rE,aAC1BhgD,SAAUA,EACVo+C,gBAAiBA,EACjBlsD,YAAaA,EACbmuD,mBAAoBlsE,EAAM2rE,aAC1Bj7D,WAAYA,KAEjBm5D,GACC5kE,EAAAH,QAAA/J,cAACoxE,EAAArnE,SACGmkD,oBAAqBA,EACrBwiB,mBAAoBA,EACpBN,WAAYA,EACZn7D,oBAAqBA,EACrBi8D,mBAAoBjsE,EAAM6rE,aAC1BK,mBAAoBlsE,EAAM2rE,aAC1BtB,qBAAsBA,IAE9BplE,EAAAH,QAAA/J,cAACqxE,EAAAtnE,SACGpH,KAAM,uBACNmuB,SA7FS,SAAAorB,GAAgB,IAAbl6C,EAAak6C,EAAbl6C,OACpBW,EAAgBX,EAAhBW,KAAMS,EAAUpB,EAAVoB,MACd8rE,GAAkBvsE,OAAMS,UAGxB,IAAIqsE,EAAwBrsE,EAAQisE,EAAyBC,EACxDV,EAAgBa,KACjBA,EAAwBx6D,EAAoB,GAAG7R,MAC/C8rE,GAAkBvsE,MAASS,EAAQ,WAAa,UAA9B,iBAAwDA,MAAOqsE,KAGrF,IACM6B,GACFl8D,cAAeq6D,EACf/vD,SAH2BwuC,EAAoBuhB,IAO9CrsE,GAAyB,aAAhBuV,IACV24D,EAAuB34D,YAAc,YAGrCvV,GAASuV,IAAgBk3D,IACzByB,EAAuB34D,YAAck3D,GAGzCV,OAAsBmC,KAoENluE,MAAO0rE,OAQ/BtjB,EAASxkD,WACLqoE,uBAAwBhqE,UAAUiF,OAClCulE,qBAAwBxqE,UAAUiF,OAClCkL,qBAAwBnQ,UAAUiF,OAClCoV,SAAwBra,UAAUiM,WAC9BjM,UAAUkM,OACVlM,UAAUiF,SAEdmL,iBAAkBpQ,UAAUxB,OAC5BusE,WAAkB/qE,UAAUiM,WACxBjM,UAAUkM,OACVlM,UAAUiF,SAEd8K,cAAqB/P,UAAUiF,OAC/B2K,oBAAqB8tB,YAAcC,uBACnClnB,YAAqBzW,UAAUiM,WAC3BjM,UAAUiF,OACVjF,UAAUkM,SAEdkL,YAAsBpX,UAAUiF,OAChCqO,YAAsBtT,UAAUiF,OAChC4jD,oBAAsB7oD,UAAUmF,KAChCokE,gBAAsBvpE,UAAUmF,KAChCskE,qBAAsBzpE,UAAUkF,KAChCi4B,aAAsBn9B,UAAUkF,KAChCyiD,kBAAsB3nD,UAAUic,MAChCwP,SAAsBzrB,UAAUmF,KAChC0kE,gBAAsB7pE,UAAUmF,KAChCwY,YAAsB3d,UAAUxB,OAChCyrE,qBAAsBjqE,UAAUiF,OAChCqL,WAAsBtQ,UAAUiM,WAC5BjM,UAAUkM,OACVlM,UAAUiF,SAEdyD,kBAAmB1I,UAAUxB,kBAGlB2nD,iFC7Nf,QAAA3sD,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,yDAEA,IAAM0yE,EAAc,SAAAprE,GAQd,IAPFiD,EAOEjD,EAPFiD,UACA6iB,EAME9lB,EANF8lB,MACA4/C,EAKE1lE,EALF0lE,UACAC,EAIE3lE,EAJF2lE,UACAnpE,EAGEwD,EAHFxD,KACAS,EAEE+C,EAFF/C,MACA0tB,EACE3qB,EADF2qB,SAeM0gD,EAAavlD,GAASA,EAAQ,GAEpC,OACI/hB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,eAAgBX,GAAaqoE,sBAAyBruE,EAAQ0oE,GAAe1oE,EAAQyoE,KAC5G3hE,EAAAH,QAAA/J,cAAA,SAAOoJ,UAAU,sBAAsBskE,QAAQ,SAC3CxjE,EAAAH,QAAA/J,cAAA,SACIuJ,GAAG,QACHH,UAAU,mDACVtH,KAAK,QACLqgB,IAAKqvD,EACLnvD,IAAK4J,EACL6/C,UAAWA,EACXD,UAAWA,EACXlpE,KAAMA,EACN+uE,MAAM,IACN5gD,SA3BK,SAAC1xB,GACdA,EAAE4C,OAAOoB,QAAUA,GACnB0tB,GAAW9uB,QAAUW,OAAMS,MAAOhE,EAAE4C,OAAOoB,UA0BnCsG,SAAS,IACTtG,MAAOA,IAEX8G,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBACXc,EAAAH,QAAA/J,cAAC2xE,EAAA5nE,SACG3G,MAAOA,EACP6oB,MAAOA,EACPxiB,QA7BA,SAACrK,EAAGykB,GAChBA,IAAUzgB,GACV0tB,GAAW9uB,QAAUW,OAAMS,MAAOygB,SA+B9B3Z,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,qBACVszB,OAAStO,cAAuB,GAARhrB,EAAf,QAAgCA,EAAQ,EAAI,SAAW,QAAvD,QAGjB8G,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,gCACXooE,KAGCpuE,GACF8G,EAAAH,QAAA/J,cAAA,aACK,EAAAuT,EAAA2C,UAAS,aAAc9S,GAAS,KAGzC8G,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BACX6iB,MAQrBslD,EAAYvqE,WACRoC,UAAY/D,UAAUiF,OACtBknE,WAAYnsE,UAAUkM,OACtBs6D,UAAYxmE,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,SAEdwhE,UAAWzmE,UAAUiM,WACjBjM,UAAUkM,OACVlM,UAAUiF,SAEd3H,KAAU0C,UAAUiF,OACpBwmB,SAAUzrB,UAAUmF,KACpBpH,MAAUiC,UAAUiM,WAChBjM,UAAUkM,OACVlM,UAAUiF,qBAIH,EAAAhG,EAAAwB,UAASyrE,kFCnGxB,QAAA1yE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM+yE,EAAY,SAAAzrE,GAA+B,IAA5B/C,EAA4B+C,EAA5B/C,MAAO6oB,EAAqB9lB,EAArB8lB,MAAOxiB,EAActD,EAAdsD,QACzBgrD,mIAAgB/tD,MAAMulB,GAAO1kB,SACnC,OACI2C,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACKqjD,EAAU9nD,IAAI,SAAAskB,GAAA,OACX/mB,EAAAH,QAAA/J,cAAA,QACI0D,IAAKutB,EACL7nB,WAAW,EAAAU,EAAAC,SAAW,4BAClB8nE,mCAAqC5gD,EAAM,IAAOpO,SAASzf,GAC3D0uE,mCAAqC7gD,EAAM,EAAKpO,SAASzf,KAE7DqG,QAAS,SAACrK,GAAD,OAAOqK,EAAQrK,EAAG6xB,EAAM,UAOrD2gD,EAAU5qE,WACNyC,QAASpE,UAAUmF,KACnByhB,MAAS5mB,UAAUiM,WACfjM,UAAUkM,OACVlM,UAAUiF,SAEdlH,MAAOiC,UAAUiM,WACbjM,UAAUkM,OACVlM,UAAUiF,oBAIHsnE,iFClCf,QAAA/yE,EAAA,QACAA,EAAA,IACA2+B,EAAA3+B,EAAA,UACAqwB,EAAArwB,EAAA,uDAEA,IAAMkzE,EAAiB,SAAA5rE,GAIjB,IAHFxD,EAGEwD,EAHFxD,KACAmuB,EAEE3qB,EAFF2qB,SACA1tB,EACE+C,EADF/C,MAKM4uE,GAAiB,EAAAloE,EAAAC,SACnB,+BACA,gBACEkoE,uCAAwC7uE,IAE9C,OACI8G,EAAAH,QAAA/J,cAACw9B,EAAApsB,SAAD,KACIlH,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,yBAAyBK,QAVpC,WACXqnB,GAAW9uB,QAAUoB,OAAQA,EAAOT,YAU5BuH,EAAAH,QAAA/J,cAACkvB,EAAAsiC,WAAUpoD,UAAW4oE,EAAgBx3C,cAAe,yCAKrEu3C,EAAe/qE,WACXrE,KAAU0C,UAAUiF,OACpBwmB,SAAUzrB,UAAUmF,KACpBpH,MAAUiC,UAAUkF,gBAGTwnE,6PChCflzE,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,IACA2+B,EAAA3+B,EAAA,cACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,MACA8U,EAAA9U,EAAA,IACA4U,EAAA5U,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEA,IAAMqzE,EAAmB,SAAA/rE,GAgBnB,IAfFkpE,EAeElpE,EAfFkpE,uBACAQ,EAcE1pE,EAdF0pE,qBACA56D,EAaE9O,EAbF8O,oBACAm7D,EAYEjqE,EAZFiqE,WACAM,EAWEvqE,EAXFuqE,mBACAxiB,EAUE/nD,EAVF+nD,oBACApyC,EASE3V,EATF2V,YACAu0D,EAQElqE,EARFkqE,YACA13D,EAOExS,EAPFwS,YACAu4D,EAME/qE,EANF+qE,mBACApgD,EAKE3qB,EALF2qB,SACAo+C,EAIE/oE,EAJF+oE,gBACAlsD,EAGE7c,EAHF6c,YACAmuD,EAEEhrE,EAFFgrE,mBACAx7D,EACExP,EADFwP,WAEIw8D,GAAuB,EAE3B,GAAoB,YAAhBx5D,EAA2B,CAC3B,IAAMy5D,GAA6B,EAAAz+D,EAAAuI,yBAAwBjH,GAC3Dk9D,KAA0Bx8D,IAAc,EAAAlC,EAAA+D,UAASsE,GAAekH,GAAaqvD,QAAO,EAAA5+D,EAAA+D,UAASwL,GAAc,SAAWovD,EAG1H,IAAME,GAA0B,EAAAxoE,EAAAC,SAAW,qBACvCwoE,WAAYJ,IAUhB,OACIjoE,EAAAH,QAAA/J,cAACw9B,EAAApsB,SAAD,KACMi/D,EAAY3yE,OAAS,GACnBwM,EAAAH,QAAA/J,cAACsnE,EAAAv9D,SACG8mB,YAAaw/C,EACb1tE,KAAK,uBACLmuB,SAbK,SAAAxZ,GAAgB,IAAbtV,EAAasV,EAAbtV,OACZW,EAAgBX,EAAhBW,KAAMS,EAAUpB,EAAVoB,MAEd0tB,GAAW9uB,QAAUW,KAAM,cAAeS,WAC1C8rE,GAAkBvsE,OAAMS,WAUZA,MAAOysE,IAGG,aAAhBl3D,EACEzO,EAAAH,QAAA/J,cAACw9B,EAAApsB,SAAD,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACT6L,EAAoBvX,OAAS,GAC3BwM,EAAAH,QAAA/J,cAACunE,EAAAx9D,SACG49D,mBAAA,EACAllC,iBAAiB,EACjBznB,KAAM/F,EACNtS,KAAK,yBACLmuB,SAAU4/C,EACVttE,MAAOisE,IAGc,MAA3BA,GACEnlE,EAAAH,QAAA/J,cAACgxE,EAAAjnE,QAAD5E,GACIxC,KAAK,WACLspB,MAAO,GACP7oB,MAAOgtE,GACHe,IAGiB,MAA3B9B,GACEnlE,EAAAH,QAAA/J,cAACwyE,EAAAzoE,SACGzG,KAAK,WACLX,KAAK,WACLwvE,qBAAsBA,IAGA,MAA3B9C,GAA6D,MAA3BA,GACjCnlE,EAAAH,QAAA/J,cAAC4nE,EAAA79D,QAAD5E,GACI4iE,eAAe,yBACfxvC,MAAsC,IAA/BtjB,EAAoBvX,OAAeuX,EAAoB,GAAGtL,KAAO,KACxEhH,KAAK,WACLS,MAAO8qD,EAAoBmhB,IACvB6B,EACAC,MAKpBjnE,EAAAH,QAAA/J,cAACw9B,EAAApsB,SAAD,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWkpE,GACZpoE,EAAAH,QAAA/J,cAACwyE,EAAAzoE,SACGpH,KAAK,cACLwvE,qBAAsBA,IAGzBA,GACGjoE,EAAAH,QAAA/J,cAACyyE,EAAA1oE,QAAD,UAU5BmoE,EAAiBlrE,WACbqoE,uBAAwBhqE,UAAUiF,OAClCulE,qBAAwBxqE,UAAUiF,OAClComE,mBAAwBrrE,UAAUmF,KAClC4lE,WAAwB/qE,UAAUiM,WAC9BjM,UAAUkM,OACVlM,UAAUiF,SAEd2K,oBAAqB8tB,YAAcC,uBACnClnB,YAAqBzW,UAAUiM,WAC3BjM,UAAUiF,OACVjF,UAAUkM,SAEd8+D,YAAqBhrE,UAAUic,MAC/B3I,YAAqBtT,UAAUiF,OAC/B4jD,oBAAqB7oD,UAAUmF,KAC/B0mE,mBAAqB7rE,UAAUxB,OAC/BitB,SAAqBzrB,UAAUmF,KAC/B0kE,gBAAqB7pE,UAAUmF,KAC/BwY,YAAqB3d,UAAUxB,OAC/BstE,mBAAqB9rE,UAAUxB,OAC/B8R,WAAqBtQ,UAAUiM,WAC3BjM,UAAUkM,OACVlM,UAAUiF,oBAIH4nE,iFC/If,QAAArzE,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,IACA4U,EAAA5U,EAAA,QAIAA,EAAA,yDAEA,IAAM6zE,EAAoB,SAAAvsE,GAcpB,IAbFsP,EAaEtP,EAbFsP,iBACAR,EAYE9O,EAZF8O,oBACA6G,EAWE3V,EAXF2V,YACAnD,EAUExS,EAVFwS,YACAw5D,EASEhsE,EATFgsE,qBACA7uE,EAQE6C,EARF7C,KACAX,EAOEwD,EAPFxD,KACAmuB,EAME3qB,EANF2qB,SACA9N,EAKE7c,EALF6c,YACArG,EAIExW,EAJFwW,WACAhH,EAGExP,EAHFwP,WACAoC,EAEE5R,EAFF4R,OACAhK,EACE5H,EADF4H,kBAEI4kE,SACAC,SACAC,SACArH,SACEsH,GACF,EAAAr/D,EAAA2kC,UAAQ,EAAA3kC,EAAA+D,UAAS7B,GAAcqN,IAAe,EAAAvP,EAAA2D,aAAYuF,GAAcA,EAAaqG,EAAYlM,OAAO,aAEtGi8D,EAAqBt9D,EAAiBu9D,MAAQv9D,EAAiBu9D,MAAM3wD,IAAM,QAmBjF,OAjBI8vD,GACAS,EAAoBE,EAAgCz2D,QAAQs8B,QAAQ,OACpEg6B,EAAoBG,EAAgCz2D,QAAQC,IACxD3G,EAAa,MAAao9D,EAAqB,YAEnDH,EAAoBE,EAAgCz2D,QAAQs8B,QAAQ,OACpEg6B,EAAoBG,EAAgCz2D,QAAQC,IAAIy2D,EAAoB,WAEpE,aAAhBp6D,GACAi6D,EAAgBt2D,IAAI,EAAG,OACvBu2D,GAAgB,EAChBrH,GAAe,IAEfqH,GAAgB,EAChBrH,GAAe,GAIfthE,EAAAH,QAAA/J,cAACwyE,EAAAzoE,SACGmU,UAAU,OACV+0D,uBAAA,EACAC,wBAAA,EACAlL,eAAgBj6D,EAAkB2R,aAClCmzD,cAAeA,EACfM,oBAA8B,aAAT7vE,EACrBm/B,iBAAiB,EACjB+oC,aAAcA,EACdjzC,MAAsC,IAA/BtjB,EAAoBvX,OAAeuX,EAAoB,GAAGtL,KAAO,KACxErG,KAAMA,EACNX,KAAMA,EACNmuB,SAAUA,EACVsiD,SAAUR,EACVS,SAAUV,EACVh9D,WAAYA,EACZqC,WAAYD,EACZ3U,MAAO0Y,KAKnB42D,EAAkB1rE,WACd0Y,SAAUra,UAAUiM,WAChBjM,UAAUiF,OACVjF,UAAUkM,SAEdkE,iBAAqBpQ,UAAUxB,OAC/BoR,oBAAqB8tB,YAAcC,uBACnClnB,YAAqBzW,UAAUiM,WAC3BjM,UAAUiF,OACVjF,UAAUkM,SAEdoH,YAAsBtT,UAAUiF,OAChC6nE,qBAAsB9sE,UAAUkF,KAChCjH,KAAsB+B,UAAUiF,OAChC3H,KAAsB0C,UAAUiF,OAChCwmB,SAAsBzrB,UAAUmF,KAChCwY,YAAsB3d,UAAUxB,OAChC8R,WAAsBtQ,UAAUiM,WAC5BjM,UAAUkM,OACVlM,UAAUiF,SAEdqS,WAAmBtX,UAAUiF,OAC7ByN,OAAmB1S,UAAUiF,OAC7ByD,kBAAmB1I,UAAUxB,mBAGlB,EAAA2wB,EAAA/uB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAASsH,EAAZ+R,EAAY/R,OAAZ,OACIkQ,iBAAqBxX,EAAQgmB,MAAMxO,iBACnCR,oBAAqBhX,EAAQgmB,MAAMhP,oBACnC6G,YAAqB7d,EAAQgmB,MAAMnI,YACnCnD,YAAqB1a,EAAQgmB,MAAMtL,YACnCmY,SAAqB7yB,EAAQgmB,MAAM6M,SACnC9N,YAAqBzd,EAAOyd,YAC5BrN,WAAqB1X,EAAQgmB,MAAMtO,WACnCgH,WAAqB1e,EAAQgmB,MAAMtH,WACnC5E,OAAqB9Z,EAAQgmB,MAAMlM,OACnChK,kBAAqB9P,EAAQgmB,MAAMlW,oBAX5B,CAab2kE,mfCjHF7zE,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,IACAqwB,EAAArwB,EAAA,QAIAA,EAAA,KACA4U,EAAA5U,EAAA,IAOA0U,EAAA1U,EAAA,GACAqoB,EAAAroB,EAAA,SACAA,EAAA,gOAEMy0E,6SACF11D,OACI21D,WAAuB,GACvBC,YACAC,uBAAuB,EACvBC,sBAAuB,EACvBtwE,MAAuBqJ,EAAKxH,MAAM7B,MAClCuwE,eAmBJxQ,iBAAmB,WACf12D,EAAKsR,SAAS,SAAAH,GAAA,OAAY61D,uBAAwB71D,EAAM61D,4BAG5DG,eAAiB,SAACx0E,IACTqN,EAAKonE,SAASjvC,SAASxlC,EAAE4C,SAAWyK,EAAKmR,MAAM61D,wBAChDhnE,EAAKsR,UAAW01D,uBAAuB,IACjChnE,EAAKmR,MAAMxa,OAA6B,aAApBqJ,EAAKxH,MAAM3B,MACjCmJ,EAAKqnE,uBAAsB,EAAArgE,EAAA+kC,YAAW/rC,EAAKmR,MAAMxa,MAAO,oBAKpE0a,aAAe,WACPrR,EAAKmR,MAAMxa,QAAW,iBAAkBqJ,EAAKxH,OAAUwH,EAAKxH,MAAM8uE,eAClEtnE,EAAKsR,UAAW21D,sBAAsB,OAI9C11D,aAAe,WACXvR,EAAKsR,UAAW21D,sBAAsB,OAG1CM,iBAAmB,SAAC5tD,GAAgD,IAAjCqtD,IAAiCjtE,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,KAAAA,UAAA,GAC5DpD,EAAQgjB,GACP,EAAA3S,EAAAylC,aAAY91C,KAAUA,EAAQ,IAEX,aAApBqJ,EAAKxH,MAAM3B,KACXmJ,EAAKqnE,sBAAsB1wE,GAE3BqJ,EAAKqnE,uBAAsB,EAAArgE,EAAA+kC,YAAWp1C,EAAO,gBAEjDqJ,EAAKsR,UAAW01D,6BAGpBQ,cAAgB,SAAC70E,GACb,IAAMgE,EAAQhE,EAAE4C,OAAOoB,MACjB8wE,GAAkB,EAAAzgE,EAAA+kC,aAAW,EAAA/kC,EAAA0lC,UAAQ,EAAA1lC,EAAA+D,YAAYpU,GAAQ,eAC/DqJ,EAAKqnE,sBAAsBI,GAC3BznE,EAAKxH,MAAM6rB,SAAS1xB,MAGxB+0E,qBAAuB,WACnB1nE,EAAKsR,UAAW3a,MAAO,MAAQqJ,EAAK+7B,aAChC/7B,EAAK2nE,UACL3nE,EAAK2nE,SAASC,mBAKtBP,sBAAwB,SAAC1wE,GAAU,IAAAghE,EACW33D,EAAKxH,MAAvCwzC,EADuB2rB,EACvB3rB,YAAan1C,EADU8gE,EACV9gE,KAAMqS,EADIyuD,EACJzuD,WAG3B,GAFAlJ,EAAKsR,UAAW3a,SAASqJ,EAAK+7B,aAEjB,aAATllC,EAAqB,CACrB,IAAMopE,GAAiB,EAAAj5D,EAAAilC,iBAAgBt1C,GACjCkxE,GAAiB,EAAA7gE,EAAA+kC,YAAWp1C,EAAO,eACzCqJ,EAAKsR,UAAW3a,MAAOspE,EAAW6G,WAAYe,GAAkB7nE,EAAK+7B,aAIzE,IAAM+rC,EAAqB,aAATjxE,GAAuB,EAAAmQ,EAAA+kC,YAAWp1C,EAAO,eAAiBA,EAC5E,GAAIqJ,EAAK2nE,YAAa,EAAA3gE,EAAAylC,aAAYq7B,KAAcA,GAC5C,GAAKA,EAOD9nE,EAAK2nE,SAASr2D,UACVmI,eAAe,EAAAzS,EAAA+kC,YAAW+7B,GAC1BnuD,eAAe,EAAA3S,EAAA+kC,YAAW+7B,SATnB,CACX,IAAMC,GAAe,EAAA/gE,EAAA+kC,YAAW7iC,EAAY8iC,GAC5ChsC,EAAK2nE,SAASr2D,UACVmI,cAAesuD,EACfpuD,cAAeouD,QAY/BhsC,YAAc,WAAM,IAAAisC,EACWhoE,EAAKxH,MAAxBtC,EADQ8xE,EACR9xE,KAAMmuB,EADE2jD,EACF3jD,SACVA,GACAA,GAAW9uB,QAAUW,OAAMS,MAAOqJ,EAAKmR,MAAMxa,YA0BrDsxE,iBAAmB,WAAM,IAAAC,EACuCloE,EAAKxH,MAAzDumE,EADamJ,EACbnJ,aAAcloE,EADDqxE,EACCrxE,KAAMX,EADPgyE,EACOhyE,KAAM41B,EADbo8C,EACap8C,MAAOyvC,EADpB2M,EACoB3M,eACnC+D,EAAgBt/D,EAAKxH,MAArB8mE,YACF3oE,SAAOtB,SAAMgvB,SAEjB,OAAQxtB,GACJ,IAAK,WACDwtB,EAAWrkB,EAAKwnE,cAChBnyE,EAAO,OACPsB,EAAQqJ,EAAKmR,MAAMxa,MACnB,MACJ,QACI2oE,EAAcA,IAAe,EAAAx4D,EAAA2C,UAAS,iBACtCpU,EAAO,OACPsB,GAAQ,EAAAqQ,EAAA+kC,YAAW/rC,EAAKxH,MAAM7B,MAAO,eAG7C,OACI8G,EAAAH,QAAA/J,cAAC4nE,EAAA79D,SACGX,UAAU,0BACV2+D,eAAe,2CACfgG,YAAU,EACVC,aAAYvhE,EAAKmR,MAAMxa,MACvB4kE,eAAgBA,EAChBG,0BAA0B,EAC1B5vC,MAAOA,EACPizC,aAAcA,EACd7oE,KAAMA,EACNmuB,SAAUA,EACVrnB,QAASgD,EAAK02D,iBACd4I,YAAaA,EACbjqE,KAAMA,EACNsB,MAAOA,+UAtKE+D,UAAMvB,0DAWvB/F,SAAS0wB,iBAAiB,QAASzrB,KAAK8uE,gBAAgB,GADxC,IAAA31D,EAEQnZ,KAAKG,MAArB3B,EAFQ2a,EAER3a,KAAMF,EAFE6a,EAEF7a,MACRwxE,EAAyB,aAATtxE,GAAsB,EAAAmQ,EAAA+kC,aAAW,EAAA/kC,EAAA0lC,UAAQ,EAAA1lC,EAAA+D,YAAY,GAAI,gBAAiB,EAAA/D,EAAA+kC,YAAWp1C,EAAO,eAElH0B,KAAKgvE,sBAAsBc,GAEvB9vE,KAAKG,MAAMiuE,wBACXpuE,KAAK+vE,uBAAsB,EAAAphE,EAAAqmC,iBAAgBh1C,KAAK8Y,MAAMxa,uDAK1DvD,SAAS2wB,oBAAoB,QAAS1rB,KAAK8uE,gBAAgB,sXAyFnC1tD,6GACK,EAAAgB,EAAA4tD,kBAAiB5uD,EAAephB,KAAKG,MAAM+S,mBAAlE+8D,SACAvB,KACFG,KACJoB,EAAettE,QAAQ,SAAAutE,GACnB,IAAMC,EAAQD,EAAOC,MAAM59D,MAAM,OAEpB,IADD49D,EAAMxgE,QAAQ,aAEtBk/D,GAAY,EAAG,IAEnBH,EAAS51E,MACLq3E,QACAC,QAASF,EAAOE,YAIxBpwE,KAAKiZ,UACDy1D,WACAG,iJAyCC,IAAAttE,EAAAvB,KACL,OAAIA,KAAKG,MAAMw9B,gBAEPv4B,EAAAH,QAAA/J,cAAA,OAAKyE,IAAK,SAAA4F,GAAUhE,EAAKwtE,SAAWxpE,GAASjB,UAAU,cACnDc,EAAAH,QAAA/J,cAAA,SACIuJ,GAAIzE,KAAKG,MAAMtC,KACfA,KAAMmC,KAAKG,MAAMtC,KACjByG,UAAU,iDACVtH,KAAK,OACLsB,MAAO0B,KAAK8Y,MAAMxa,MAClB+e,IAAKrd,KAAKG,MAAMmuE,SAChB/wD,IAAKvd,KAAKG,MAAMouE,SAChBviD,SAAU,SAAC1xB,GAGP,IAAM4C,EAAS5C,EAAE+1E,YAAYnzE,OAE7BmC,OAAO9B,WADP,WAA6BL,EAAOozE,aAAe,IAChB,GAEnC/uE,EAAK2tE,iBAAiB50E,EAAE4C,OAAOoB,UAGvC8G,EAAAH,QAAA/J,cAAA,SAAOoJ,UAAU,6BAA6BskE,QAAS5oE,KAAKG,MAAMtC,MAC7DmC,KAAK8Y,MAAMxa,OAAS0B,KAAKG,MAAM8mE,YAChC7hE,EAAAH,QAAA/J,cAACkvB,EAAAsiC,WAAUpoD,UAAU,4BAOjCc,EAAAH,QAAA/J,cAAA,OACIuJ,GAAIzE,KAAKG,MAAMsE,GACf9E,IAAK,SAAA4F,GAAUhE,EAAKwtE,SAAWxpE,GAC/BjB,UAAU,aACV0U,aAAchZ,KAAKgZ,aACnBE,aAAclZ,KAAKkZ,cAEjBlZ,KAAK4vE,mBACPxqE,EAAAH,QAAA/J,cAACkvB,EAAA2iC,cACGzoD,WAAW,EAAAU,EAAAC,SAAW,+CAClBsrE,8BAAgCvwE,KAAK8Y,MAAM81D,qBAC3C4B,+BAAgCxwE,KAAKG,MAAMszB,QAE/C9uB,QAAS3E,KAAKq+D,mBAEjBr+D,KAAKG,MAAM8uE,cACR7pE,EAAAH,QAAA/J,cAACkvB,EAAAmjC,WACGjpD,WAAW,EAAAU,EAAAC,SAAW,4CAClBsrE,+BAAgCvwE,KAAK8Y,MAAM81D,uBAE/CjqE,QAAS3E,KAAK8Y,MAAM81D,qBAAuB5uE,KAAKqvE,0BAAuB/xE,IAG/E8H,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGC,GAAIpgC,KAAK8Y,MAAM61D,sBACfvzE,QAAS,IACTilC,YACIC,uDAA4DtgC,KAAKG,MAAMiZ,UAAvE,SACAmnB,gEAAiEvgC,KAAKG,MAAMiZ,UAA5E,cACA2P,qDAA2D/oB,KAAKG,MAAMiZ,UAAtE,SAEJonB,eAAA,GAEAp7B,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,sBAClBwrE,2BAAqD,SAAzBzwE,KAAKG,MAAMiZ,aAG3ChU,EAAAH,QAAA/J,cAACw1E,EAAAzrE,SACGtF,IAAK,SAAA4F,GAAUhE,EAAK+tE,SAAW/pE,GAC/BorE,SAAU3wE,KAAKkvE,iBACfa,sBAAuB/vE,KAAKG,MAAMiuE,uBAC9BpuE,KAAK+vE,sBAAsBlxE,KAAKmB,WAAQ1C,EAC5CoxE,SAAU1uE,KAAK8Y,MAAM41D,SACrBG,SAAU7uE,KAAK8Y,MAAM+1D,SACrB+B,cAAe5wE,KAAK8Y,MAAMxa,MAC1Bq1C,YAAa3zC,KAAKG,MAAMwzC,YACxBo6B,cAAe/tE,KAAKG,MAAM4tE,cAC1BM,oBAAqBruE,KAAKG,MAAMkuE,oBAChC1tC,OAAQ3gC,KAAKG,MAAMwgC,OACnB4tC,SAAUvuE,KAAKG,MAAMouE,SACrBD,SAAUtuE,KAAKG,MAAMmuE,SACrBz9D,WAAY7Q,KAAKG,MAAM0Q,WACvBvS,MAA2B,aAApB0B,KAAKG,MAAM3B,KAAsBwB,KAAK8Y,MAAM21D,WAAazuE,KAAKG,MAAM7B,oBASvGkwE,EAAW17B,cACPa,YAAak9B,UAAS/9B,aAAaa,YACnCn1C,KAAa,QAGjBgwE,EAAWtsE,UAAX7B,KACOwwE,UAAS3uE,WACZghE,eAAgB3iE,UAAUic,MAC1BiX,MAAgBlzB,UAAUiF,oBAGf,EAAAhG,EAAAwB,UAASwtE,4GCvSxB,IAAA9/D,EAAA3U,EAAA,IACAgM,EAAAhM,EAAA,GAEA,IAAMk2E,KACOD,8BAAA,IAAA3uE,2RAAAkJ,CAAAC,mBAAAC,KAAmB,SAAAC,EAAO0H,GAAP,IAAAU,EAAApa,EAAAqa,EAAAnZ,EAAAoZ,EAAAlK,EAAAmK,EAAaC,EAAbxR,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAA0B,KAA1B,OAAA8I,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACvBsH,EADuB,CAAAxH,EAAAE,KAAA,eAAAF,EAAAuI,OAAA,uBAKtBf,KAAQ69D,EALc,CAAArlE,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAMajF,KAAG+M,gBAAgBR,GANhC,OAQxB,GAFMU,EANkBlI,EAAAwI,MAQpB,EAAArN,EAAAqK,kBAAiB0C,GAAyB,gBAAiB,YAC3D,IAASpa,EAAI,EAAGA,EAAIoa,EAAuB1D,cAAciE,QAAQza,OAAQF,IAErE,GADMqa,EAAaD,EAAuB1D,cAAciE,QAAQ3a,GAAGqa,WAE/D,IAASnZ,EAAI,EAAGA,EAAImZ,EAAWna,OAAQgB,IAEnC,GADMoZ,EAAUD,EAAWnZ,GAAGoZ,QAE1B,IAASlK,EAAI,EAAGA,EAAIkK,EAAQpa,OAAQkQ,IAC1BmK,EAASD,EAAQlK,GAClBmnE,EAAen9D,EAAuBQ,SAASlE,iBAChD6gE,EAAen9D,EAAuBQ,SAASlE,mBAEnD6gE,EAAen9D,EAAuBQ,SAASlE,eAAe6D,EAAOA,QACjEA,EAAOi9D,OArBX,cAAAtlE,EAAAuI,OAAA,SA8BrB88D,EAAe79D,GAAMc,IA9BA,wBAAAtI,EAAAQ,SAAAV,OAAApN,MAAnB,gBAAAmoD,GAAA,OAAApkD,EAAA9H,MAAAyG,KAAA0B,YAAAsuE,qKCLN/qE,kWCAPlL,EAAA,QACAA,EAAA,IACA4U,EAAA5U,EAAA,IAGA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,6DAEM82E,iBACF,SAAAA,EAAY1wE,gGAAOqB,CAAAxB,KAAA6wE,GAAA,IAAAlpE,mKAAA7F,CAAA9B,MAAA6wE,EAAA9uE,WAAAhJ,OAAAiJ,eAAA6uE,IAAA33E,KAAA8G,KACTG,IADS2wE,EAAA53E,KAAAyO,GAAA,IAEPgsC,EAAmCxzC,EAAnCwzC,YAAa9iC,EAAsB1Q,EAAtB0Q,WAAYvS,EAAU6B,EAAV7B,MAC3BoxE,GAAe,EAAA/gE,EAAA+D,UAASpU,GAASuS,GAAYmB,OAAO2hC,GAH3C,OAIfhsC,EAAKmR,OACDsI,cAAesuD,EACfpuD,cAAehjB,EACfyyE,cAAe,OACfC,aAAe,GACfJ,cAAe,IATJjpE,qUADAtF,UAAMo1B,mDA2IhB,IAAAte,EAEkCnZ,KAAKG,MADpCwzC,EADHx6B,EACGw6B,YAAai9B,EADhBz3D,EACgBy3D,cAAejwC,EAD/BxnB,EAC+BwnB,OAAQotC,EADvC50D,EACuC40D,cAAeM,EADtDl1D,EACsDk1D,oBACvDK,EAFCv1D,EAEDu1D,SAAU79D,EAFTsI,EAEStI,WAAYg+D,EAFrB11D,EAEqB01D,SAFrBoC,EAGoDjxE,KAAK8Y,MAAtDsI,EAHH6vD,EAGG7vD,cAAe2vD,EAHlBE,EAGkBF,cAAezvD,EAHjC2vD,EAGiC3vD,cAClC4vD,SAAiBC,SAUrB,OARIP,GACAM,EAAqBN,EAArB,KAAwD,IAAlBA,GAAsB,EAAAniE,EAAA2C,UAAS,QAAS,EAAA3C,EAAA2C,UAAS,SACvF+/D,GAAa,IAEbD,GAAkB,EAAAziE,EAAA2C,UAAS,6BAC3B+/D,GAAa,GAIb/rE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,WAAW4kE,aAAY5nD,GAClClc,EAAAH,QAAA/J,cAACk2E,EAAAnsE,SACGmc,cAAeA,EACf2vD,cAAeA,EACf1vD,iBAAkBrhB,KAAKqhB,iBACvBgwD,WAAYrxE,KAAKqxE,WACjBC,WAAYtxE,KAAKsxE,aAErBlsE,EAAAH,QAAA/J,cAACq2E,EAAAtsE,SACGmc,cAAeA,EACf2vD,cAAeA,EACfp9B,YAAaA,EACbtyB,iBAAkBrhB,KAAKqhB,iBACvBxQ,WAAYA,EACZyQ,cAAeA,EACfC,eAAgBvhB,KAAKuhB,eACrBmtD,SAAUA,EACVL,oBAAqBA,EACrB2C,aAAchxE,KAAK8Y,MAAMk4D,aACzBnC,SAAUA,EACV2C,YAAaxxE,KAAKwxE,YAClBt4D,aAAclZ,KAAKkZ,eAEvB9T,EAAAH,QAAA/J,cAACu2E,EAAAxsE,SACG07B,OAAQA,EACRiwC,cAAe5wE,KAAK8Y,MAAM83D,eAAiBM,EAC3CC,WAAYA,EACZpD,cAAeA,EACfM,oBAAqBA,EACrB1pE,QAAS3E,KAAK0xE,kDAzK9BJ,WAAa,SAACK,GACVpwE,EAAK0X,UAAW83D,cAAeY,UAGnCN,WAAa,SAAC5B,GACVluE,EAAK0X,UACDmI,eAAe,EAAAzS,EAAA+D,UAAS+8D,GAAUz9D,OAAOzQ,EAAKpB,MAAMwzC,cACrD,WACC,GAAIpyC,EAAKpB,MAAM4vE,sBAAuB,CAClC,IAAM6B,GAAiB,EAAAjjE,EAAAqmC,iBAAgBy6B,GACvCluE,EAAKpB,MAAM4vE,sBAAsB6B,YAK7CJ,YAAc,SAAC90E,GACX,IAAMQ,EAASR,EAAM8uB,cAEhBtuB,EAAOstB,UAAUsV,SAAS,6BAAgC5iC,EAAOstB,UAAUsV,SAAS,2BACrF5iC,EAAOoH,WAAa,yBACpB/C,EAAK0X,UACD+3D,aAAe9zE,EAAO20E,aAAa,aACnCjB,cAAe1zE,EAAO20E,aAAa,0BAK/C34D,aAAe,SAACxc,GACZ,IAAMQ,EAASR,EAAM8uB,cAEjBtuB,EAAOstB,UAAUsV,SAAS,2BAC1B5iC,EAAOstB,UAAUE,OAAO,yBAExBnpB,EAAK0X,UACD+3D,aAAe,KACfJ,cAAe,cAK3BkB,mBAAqB,SAACx3E,GAAM,IAAAy3E,EAC8BxwE,EAAKpB,MAAnDwzC,EADgBo+B,EAChBp+B,YAAa46B,EADGwD,EACHxD,SAAUD,EADPyD,EACOzD,SAAUqC,EADjBoB,EACiBpB,SAEnCpiD,GAAc,EAAA5f,EAAA+D,UAASpY,EAAE4C,OAAO80E,QAAQ5/D,MAAMyhC,QAAQ,OACtDo+B,EAAc1jD,EAAYlX,UAAS,EAAA1I,EAAA+D,UAAS47D,IAC5C4D,EAAc3jD,EAAYjX,SAAQ,EAAA3I,EAAA+D,UAAS67D,IAEjD,IAAI0D,IAAaC,EAAjB,CAIA,IAAM9+B,EAAiB7kB,EAAYvc,OAAO2hC,GAC1CpyC,EAAK0X,UACDmI,cAAegyB,EACf9xB,cAAe8xB,IAGfu9B,GACAA,EAASv9B,UAIjB7xB,eAAiB,SAACjnB,EAAG0C,GAGjB,GAFI1C,GAAGA,EAAEu5D,kBAEI,QAAT72D,EAAJ,CAKA,IAKMoV,GAAO,EAAAzD,EAAA+D,UAASnR,EAAKuX,MAAMsI,eAAwB,WAATpkB,EAAoB,OAASA,GAAM1C,EAAE4C,OAAO80E,QAAQh1E,GAAMuV,MAAM,KAAK,IAAIP,OAAOzQ,EAAKpB,MAAMwzC,aAEvIpyC,EAAK8f,iBAAiBjP,EAAMpV,IAEhCuE,EAAK0X,UACDmI,cAAehP,EACf2+D,eAVAoB,MAAQ,OACR3jD,KAAQ,QACR4jD,OAAQ,QAQgBp1E,IACzB,WACC,GAAIuE,EAAKpB,MAAM4vE,sBAAuB,CAClC,IAAM6B,GAAiB,EAAAjjE,EAAAqmC,iBAAgB5iC,GACvC7Q,EAAKpB,MAAM4vE,sBAAsB6B,WAnBrCrwE,EAAKuwE,mBAAmBx3E,SAwBhCi1E,cAAgB,WAAM,IAAA8C,EACkB9wE,EAAKpB,MAAjCwzC,EADU0+B,EACV1+B,YAAa9iC,EADHwhE,EACGxhE,WAEfyhE,GAAe,EAAA3jE,EAAA+D,UAAS7B,GAAYmB,OAAO2hC,GACjDpyC,EAAK0X,UACDmI,cAAekxD,EACfhxD,cAAe,GACfyvD,cAAe,eAIvBW,SAAW,WAAM,IAAAa,EACqBhxE,EAAKpB,MAA/BwzC,EADK4+B,EACL5+B,YAAag9B,EADR4B,EACQ5B,SAEf6B,GAAM,EAAA7jE,EAAA+D,YAAWV,OAAO2hC,GAC9BpyC,EAAK0X,UACDmI,cAAeoxD,EACflxD,cAAekxD,EACfzB,cAAe,SAGfJ,GACAA,EAAS6B,GAAK,SAItBnxD,iBAAmB,SAACjP,EAAMkL,GAAS,IAAAm1D,EACAlxE,EAAKpB,MAA5BouE,EADuBkE,EACvBlE,SAAUD,EADamE,EACbnE,SAEZoE,GAAkB,EAAA/jE,EAAA+D,UAASN,GAAMmF,QAAQs8B,QAAQv2B,GAEvD,OADwB,EAAA3O,EAAA+D,UAASN,GAAMmF,QAAQo7D,MAAMr1D,GAChCjG,UAAS,EAAA1I,EAAA+D,UAAS47D,KAChCoE,EAAgBp7D,SAAQ,EAAA3I,EAAA+D,UAAS67D,SAsDhDsC,EAAS/9B,cACLa,YAAa,aACb26B,UAAa,EAAA3/D,EAAA+D,YAAWV,OAAO,cAC/Bu8D,UAAa,EAAA5/D,EAAA+D,YAAW8E,IAAI,IAAK,KAAKxF,OAAO,eAGjD6+D,EAAS3uE,WACLyxC,YAAepzC,UAAUiF,OACzBorE,cAAerwE,UAAUiM,WACrBjM,UAAUkM,OACVlM,UAAUiF,SAEdm7B,OAAqBpgC,UAAUiF,OAC/B6oE,oBAAqB9tE,UAAUkF,KAC/BsoE,cAAqBxtE,UAAUkF,KAC/BipE,SAAqBnuE,UAAUoxD,QAC3BpxD,UAAU+wD,OACN6e,MAAS5vE,UAAUic,MACnB4zD,QAAS7vE,UAAUiF,UAG3B+oE,SAAUhuE,UAAUiM,WAChBjM,UAAUxB,OACVwB,UAAUiF,SAEd8oE,SAAU/tE,UAAUiM,WAChBjM,UAAUxB,OACVwB,UAAUiF,SAEduqE,sBAAuBxvE,UAAUmF,KACjCirE,SAAuBpwE,UAAUmF,KACjCmL,WAAuBtQ,UAAUiM,WAC7BjM,UAAUkM,OACVlM,UAAUiF,SAEdlH,MAAUiC,UAAUiF,OACpBqpE,SAAUtuE,UAAUoxD,QAAQpxD,UAAUkM,mBAG3BokE,iFC/Of,QAAA92E,EAAA,QACAA,EAAA,IACA64E,EAAA74E,EAAA,wDAMA,IAAM84E,EAAe,SAAC1yE,GAClB,IAAM2yE,GACF1gE,KAAQhN,EAAAH,QAAA/J,cAAC03E,EAAAG,aAAoB5yE,GAC7BgyE,MAAQ/sE,EAAAH,QAAA/J,cAAC03E,EAAAI,eAAoB7yE,GAC7BquB,KAAQppB,EAAAH,QAAA/J,cAAC03E,EAAAK,cAAoB9yE,GAC7BiyE,OAAQhtE,EAAAH,QAAA/J,cAAC03E,EAAAM,gBAAoB/yE,IAGjC,OACIiF,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACMwmE,EAAc3yE,EAAM4wE,iBAKlC8B,EAAa3wE,WACT6uE,cAAexwE,UAAUiF,kBAGdqtE,8FC3Bf95E,OAAA0J,KAAA0wE,GAAAxwE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAi1E,EAAAv0E,qBACA7F,OAAA0J,KAAA2wE,GAAAzwE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAk1E,EAAAx0E,qBACA7F,OAAA0J,KAAA4wE,GAAA1wE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAm1E,EAAAz0E,qBACA7F,OAAA0J,KAAA6wE,GAAA3wE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAo1E,EAAA10E,yRCHA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA8xC,EAAA9xC,EAAA,KACA2I,EAAA3I,EAAA,KAGA4U,EAAA5U,EAAA,IAOA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,wDAEA,IAoHag5E,iBAAe,SAAC5yE,GACzB,IAAMozE,EArHM,SAAAlyE,GA6BZ,IAhBE,IAZF+f,EAYE/f,EAZF+f,cACAuyB,EAWEtyC,EAXFsyC,YACA06B,EAUEhtE,EAVFgtE,oBACAK,EASErtE,EATFqtE,SACAsC,EAQE3vE,EARF2vE,aACA3vD,EAOEhgB,EAPFggB,iBACAxQ,EAMExP,EANFwP,WACAyQ,EAKEjgB,EALFigB,cACAC,EAIElgB,EAJFkgB,eACAstD,EAGExtE,EAHFwtE,SACA2C,EAEEnwE,EAFFmwE,YACAt4D,EACE7X,EADF6X,aAMMi3D,KACAoD,KACAC,GAAqB,EAAA7kE,EAAA+D,YAAWmhC,QAAQ,OACxC4/B,GAAqB,EAAA9kE,EAAA+D,UAAS0O,GAC9BkzB,EAAqBm/B,EAAgBC,cAAgB,EACrDC,EAAqBF,EAAgBl8D,QAAQs8B,QAAQ,SACrD+/B,EAAqBH,EAAgBl8D,QAAQo7D,MAAM,SACnDkB,GAAqB,EAAAllE,EAAA+D,UAAS4O,GAI3B5oB,GADiB,EAAAiW,EAAAimC,WAAU6+B,EAAiB,GAAGd,MAAM,SAASn0D,MACvC9lB,EAAI,EAAGA,IACnCy3E,EAAMr3E,MAAK,EAAA6V,EAAAgmC,SAAQg/B,EAAoBj7E,GAAGsZ,OAAO2hC,IAGrD,IAAK,IAAIxnB,EAAM,EAAGA,EAAMmoB,EAAanoB,GAAO,EACxCgkD,EAAMr3E,KAAK26E,EAAgBl8D,QAAQvF,OAAO2hC,EAAYhmC,QAAQ,MAAM,EAAAk+B,EAAAioC,SAAQ3nD,EAAK,EAAG,QAGxF,IAAM4nD,GAAsB,EAAAplE,EAAA4lC,WAAUk/B,EAAiB,GAAG5/B,QAAQ,SAASr1B,MAC3E,GAAIu1D,EAtBe,EAsBoB,GAAK5D,EAAMv3E,QAAU,GAExD,IAAK,IAAIF,EAAI,EAAGA,GAAK,EAAIq7E,EAxBV,EAwB4Cr7E,IACvDy3E,EAAMr3E,MAAK,EAAA6V,EAAA0lC,SAAQu/B,EAAkBl7E,EAAG,OAAOsZ,OAAO2hC,SAElDogC,GAER5D,EAAMr3E,MAAK,EAAA6V,EAAA0lC,SAAQu/B,EAAkB,GAAG5hE,OAAO2hC,IAGnD,IAAMqgC,GAAoB,EAAArlE,EAAA+D,UAAS7B,GAAYgjC,QAAQ,OAiEvD,OA/DAs8B,EAAMtoE,IAAI,SAACuK,GACP,IAAMmc,GAAiB,EAAA5f,EAAA+D,UAASN,GAAMyhC,QAAQ,OACxCogC,GAAiB,EAAAtlE,EAAA+D,UAASs+D,GAAcn9B,QAAQ,OAChDqgC,EAAiB5yD,GAAiBiN,EAAYg/C,OAAOsG,GACrDM,EAAiB5lD,EAAYg/C,OAAOiG,EAAc,OAElDtD,EAAkBxB,EAAS34D,OAAO,SAAArZ,GAAA,OAEpCA,EAAMyzE,MAAM/iE,KAAK,SAAAxP,GAAA,OAAKA,IAAMwU,IAAQ,EAAA1P,EAAAorB,kBAAiBlwB,MAAO,EAAA+Q,EAAA+D,UAASN,GAAMoM,UACzE41D,IAAyBlE,EAAOt3E,OAChCy7E,EAAuBnE,EAAOroE,IAAI,SAAAnL,GAAA,QAAWA,EAAM0zE,QAAQnyD,MAAM,6BAA4B,GAC7F1E,EAAuB22D,EAAOroE,IAAI,SAAAnL,GAAA,OAASA,EAAM0zE,UAAS,IAAM,GAChEkE,GAAuB,EAAA3lE,EAAAilC,iBAAgBxhC,GACvCmiE,EAAuBhmD,EAAYwG,UAAUy+C,EAAcK,GAC3DW,EAAuBjmD,EAAYwG,UAAUy+C,EAAcS,GAC3DQ,EAAkCpzD,EAAiBkN,EAAa,OAChE7pB,EAEF+vE,GAEK5jE,IAAe0d,EAAYlX,SAAS28D,IACtCzlD,EAAYjX,SAAQ,EAAA3I,EAAA0lC,SAAQ2/B,EAAmB,MAE/CnF,EAASpwD,KAAK,SAAAD,GAAA,OAAO,EAAA7P,EAAA+D,UAASN,GAAMoM,QAAUA,KAE9C41D,IAAeC,EAGhBK,EAAiBnmD,EAAY4jD,UAAYsB,EAAgBtB,QAE/DoB,EAAKz6E,KACDsM,EAAAH,QAAA/J,cAAA,QACI0D,IAAKwT,EACL9N,WAAW,EAAAU,EAAAC,SAAW,kBAClB0vE,yBAAmCT,EACnCU,wBAAmCT,EACnCU,kCAAmCX,GAAa7F,IAAwB8F,EACxEW,iCAAmCX,GAAY9F,EAC/C0G,2BAAmCrwE,EACnCswE,wBAAmCN,EACnCO,gCAAmCT,GAAoBnG,EACvD6G,0BAAmCX,GAAclG,IAErD1pE,QAASD,OAAcpH,EAAY,SAAChD,GAAD,OAAOinB,EAAejnB,EAAG,QAC5D66E,YAAW/iE,EACXgjE,gBAAkBd,EAAlB,KAAkE,IAAxBA,GAA4B,EAAA7lE,EAAA2C,UAAS,QAAS,EAAA3C,EAAA2C,UAAS,SACjGogE,YAAaA,EACbt4D,aAAcA,IAEXk7D,GAAcC,KAAqBK,IAAmBD,GACrDrvE,EAAAH,QAAA/J,cAACg4D,EAAAjuD,SACGmU,UAAU,MACV9U,UAAU,yBACV+U,cAAc,8BACdC,KAAK,MACLC,QAASA,IAGhBgV,EAAYnc,WAKlBmhE,EAIM8B,CAAQl1E,GAAO0H,IAAI,SAAA2W,GAAA,OAAOA,IAEvC,OACIpZ,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uCACTvL,OAAO0J,KAAKorB,qBACThmB,IAAI,SAACyJ,EAAM6a,GAAP,OACD/mB,EAAAH,QAAA/J,cAAA,QAAM0D,IAAKutB,EAAK7nB,UAAU,uCAAuCupB,oBAAkBvc,MAGzFiiE,IAKdR,EAAajgC,cACT47B,YACAG,aAGJkE,EAAa7wE,UAAb7B,KACO8gB,WACHwyB,YAAqBpzC,UAAUiF,OAC/B6oE,oBAAqB9tE,UAAUkF,KAC/BipE,SAAqBnuE,UAAUoxD,QAC3BpxD,UAAU+wD,OACN6e,MAAS5vE,UAAUic,MACnB4zD,QAAS7vE,UAAUiF,UAG3BwrE,aAAczwE,UAAUiF,OACxB0T,aAAc3Y,UAAUmF,KACxB8rE,YAAcjxE,UAAUmF,KACxBmL,WAActQ,UAAUiM,WACpBjM,UAAUkM,OACVlM,UAAUiF,SAEdqpE,SAAUtuE,UAAUoxD,QAAQpxD,UAAUkM,6RC3K1C1S,EAAA,QACAA,EAAA,IACA2I,EAAA3I,EAAA,KACA4U,EAAA5U,EAAA,QACAA,EAAA,0DAEai5E,iBAAiB,SAAA3xE,GAKxB,IAJF+f,EAIE/f,EAJF+f,cACAC,EAGEhgB,EAHFggB,iBACAC,EAEEjgB,EAFFigB,cACAC,EACElgB,EADFkgB,eAEMgN,GAAuB,EAAA5f,EAAA+D,UAAS0O,GAChCk0D,GAAuB,EAAA3mE,EAAA+D,UAAS4O,GAEtC,OACIlc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wCACTvL,OAAO0J,KAAK+pB,iBAAe3kB,IAAI,SAACsqE,EAAOhmD,GACrC,IAAM+nD,EAAc/B,IAAUmD,EAAqB/9D,QAAQvF,OAAO,QAAUsjE,EAAqB/H,OAAOh/C,EAAa,QAC/G7pB,EAAc2c,EAAiBkN,EAAYhX,QAAQ46D,MAAMA,GAAQ,SACvE,OACI/sE,EAAAH,QAAA/J,cAAA,QACI0D,IAAKutB,EACL7nB,WAAW,EAAAU,EAAAC,SAAW,kBAClB0vE,yBAA4BT,EAC5Ba,2BAA4BrwE,IAEhCC,QAASD,OAAcpH,EAAY,SAAChD,GAAD,OAAOinB,EAAejnB,EAAG,UAC5Di7E,aAAYpD,GAEX3lD,gBAAc2lD,SASxBjwE,UAAf7B,KAAgC8gB,gsBCvChCpnB,EAAA,QACAA,EAAA,IACA4U,EAAA5U,EAAA,QACAA,EAAA,MACAy7E,EAAAz7E,EAAA,yDAEak5E,gBAAgB,SAAA5xE,GAWzB,IANE,IAJF+f,EAIE/f,EAJF+f,cACAC,EAGEhgB,EAHFggB,iBACAC,EAEEjgB,EAFFigB,cACAC,EACElgB,EADFkgB,eAEMsyD,GAAkB,EAAAllE,EAAA+D,UAAS4O,GAC3BiN,GAAkB,EAAA5f,EAAA+D,UAAS0O,GAF/Bq0D,GAGuC,EAAAD,EAAAlnD,WAAUC,GAAahc,MAAM,KAHpEmjE,EAAAjjE,EAAAgjE,EAAA,GAGKE,EAHLD,EAAA,GAGsBE,EAHtBF,EAAA,GAKIG,KACGrnD,GAAQmnD,EAAkB,EAAGnnD,IAASonD,EAAgB,EAAGpnD,IAC9DqnD,EAAM/8E,KAAK01B,GAEf,OACIppB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uCACTuxE,EAAMhuE,IAAI,SAAC2mB,EAAMrC,GACf,IAAM2pD,EAA0B,IAAR3pD,GAAqB,KAARA,EAC/BznB,EAAkB2c,EAAiBkN,EAAYhX,QAAQiX,KAAKA,GAAO,QACzE,OACIppB,EAAAH,QAAA/J,cAAA,QACI0D,IAAKutB,EACL7nB,WAAW,EAAAU,EAAAC,SAAW,kBAClB0vE,yBAA4BnmD,IAASqlD,EAAgBrlD,OACrDwmD,wBAA4Bc,EAC5Bf,2BAA4BrwE,IAEhCC,QAASD,OAAcpH,EAAY,SAAChD,GAAD,OAAOinB,EAAejnB,EAAG,SAC5Dy7E,YAAWvnD,GAEVA,QASXtsB,UAAd7B,KAA+B8gB,ksBC7C/BpnB,EAAA,QACAA,EAAA,IACA4U,EAAA5U,EAAA,QACAA,EAAA,MACAy7E,EAAAz7E,EAAA,yDAIam5E,kBAAkB,SAAA7xE,GAY3B,IAPE,IAJF+f,EAIE/f,EAJF+f,cACAC,EAGEhgB,EAHFggB,iBACAC,EAEEjgB,EAFFigB,cACAC,EACElgB,EADFkgB,eAEMsyD,GAAkB,EAAAllE,EAAA+D,UAAS4O,GAC3BiN,GAAkB,EAAA5f,EAAA+D,UAAS0O,GAG3B40D,KACFC,IAHoB,EAAAT,EAAA/mD,YAAWF,GAAahc,MAAM,KAAK,GAG9B,GACpB7Z,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAM05E,GAAS,EAAAoD,EAAAlnD,YAAU,EAAA3f,EAAA+D,YAAW8b,KAAKynD,IACzCD,EAAQl9E,KAAKs5E,GACb6D,GAAY7D,EAAO7/D,MAAM,KAAK,GAAK,EAEvC,OACInN,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yCACT0xE,EAAQnuE,IAAI,SAACuqE,EAAQjmD,GAAQ,IAAA+pD,EACc9D,EAAO7/D,MAAM,KAD3B4jE,EAAA1jE,EAAAyjE,EAAA,GACpBP,EADoBQ,EAAA,GACHP,EADGO,EAAA,GAErBjC,GAAgByB,IAAoB9B,EAAgBrlD,OACpD9pB,EAAe2c,EAAiBkN,EAAYhX,QAAQiX,KAAKmnD,GAAkB,SAC7Et0D,EAAiBkN,EAAYhX,QAAQiX,KAAKonD,GAAgB,QACxDQ,EAA2B,IAARjqD,GAAqB,KAARA,EACtC,OACI/mB,EAAAH,QAAA/J,cAAA,QACI0D,IAAKutB,EACL7nB,WAAW,EAAAU,EAAAC,SAAW,kBAClB0vE,yBAA4BT,EAC5Ba,2BAA4BrwE,EAC5BswE,wBAA4BoB,IAEhCzxE,QAASD,OAAcpH,EAAY,SAAChD,GAAD,OAAOinB,EAAejnB,EAAG,WAC5D+7E,cAAajE,GAEZA,QASTlwE,UAAhB7B,KAAiC8gB,0FCrDjC,QAAApnB,EAAA,QACAA,EAAA,IACAqwB,EAAArwB,EAAA,IACA0U,EAAA1U,EAAA,sDAEA,IAAMu8E,EAAiB,SAAAj1E,GAAA,IACnBs/B,EADmBt/B,EACnBs/B,OACAotC,EAFmB1sE,EAEnB0sE,cACAM,EAHmBhtE,EAGnBgtE,oBACAuC,EAJmBvvE,EAInBuvE,cACAO,EALmB9vE,EAKnB8vE,WACAxsE,EANmBtD,EAMnBsD,QANmB,OAQnBS,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACOyhE,GAAiBptC,GAAU0tC,IAC1BjpE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACTq8B,GAAUv7B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,kBAAkBq8B,GAC5C0tC,GAAuBjpE,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,kBAAhB,IAAuC6sE,EAAsC,IAAzB,EAAA1iE,EAAA2C,UAAS,eAAqBw/D,GACzG7C,GACE3oE,EAAAH,QAAA/J,cAACkvB,EAAA0iC,mBACGxoD,UAAU,iBACVK,QAASA,OAQjC2xE,EAAep0E,WACX0uE,cAAqBrwE,UAAUiF,OAC/Bm7B,OAAqBpgC,UAAUiF,OAC/B6oE,oBAAqB9tE,UAAUkF,KAC/BsoE,cAAqBxtE,UAAUkF,KAC/B0rE,WAAqB5wE,UAAUkF,KAC/Bd,QAAqBpE,UAAUmF,gBAGpB4wE,iFCtCf,QAAAv8E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqwB,EAAArwB,EAAA,IAKA2I,EAAA3I,EAAA,KACA4U,EAAA5U,EAAA,QAMAA,EAAA,MACAy7E,EAAAz7E,EAAA,wDAIA,IAAMw8E,EAAiB,SAAAl1E,GAQjB,IAPF+f,EAOE/f,EAPF+f,cACA2vD,EAME1vE,EANF0vE,cACAyF,EAKEn1E,EALFm1E,uBACArI,EAIE9sE,EAJF8sE,sBACA9sD,EAGEhgB,EAHFggB,iBACAgwD,EAEEhwE,EAFFgwE,WACAC,EACEjwE,EADFiwE,WAEMmF,EAAmC,SAAlB1F,EACjB2F,EAAmC,UAAlB3F,EACjB4F,EAAmC,SAAlB5F,EACjB6F,EAAmC,WAAlB7F,EACjBxiD,GAAiB,EAAA5f,EAAA+D,UAAS0O,GAE5BszB,EAAe,EACfiiC,IAAgBjiC,EAAe,IAC/BkiC,IAAgBliC,EAAe,KAEnC,IAAMmiC,GAAU,EAAArB,EAAA/mD,YAAWF,EAAYhX,SACjC66D,GAAU,EAAAoD,EAAAlnD,WAAUC,EAAYhX,SAChCq+D,GAAiBe,EAAevE,EAASyE,GAAStkE,MAAM,KAAK,GAE7DukE,EAA0Bz1D,GAAiB,EAAA1S,EAAAimC,WAAUrmB,EAAa,GAAI,SACtEwoD,EAA0B11D,GAAiB,EAAA1S,EAAAkmC,UAAStmB,EAAammB,GAAe,SAChFsiC,EAA0B31D,GAAiB,EAAA1S,EAAA4lC,WAAUhmB,EAAa,GAAI,SACtE0oD,EAA0B51D,GAAiB,EAAA1S,EAAA8lC,UAASlmB,EAAammB,GAAe,SAChFwiC,EAA0B71D,EAAiBkN,EAAYhX,QAAQiX,KAAKonD,GAAgB,SAAWzH,EAErG,OACI/oE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAACi8E,EAAAlyE,SACGX,WAAW,EAAAU,EAAAC,SAAW,0CAClBmyE,0BAA2BL,IAE/BpyE,QAASoyE,OAAwBz5E,EAAY,kBAAM+zE,GAAW,EAAA1iE,EAAAkmC,UAASzzB,EAAeszB,MAEtFtvC,EAAAH,QAAA/J,cAACkvB,EAAA4iC,uBAAsB1oD,UAAU,oBAErCc,EAAAH,QAAA/J,cAACi8E,EAAAlyE,SACGX,WAAW,EAAAU,EAAAC,SAAW,2CAClBmyE,0BAA2BN,IAE/BO,WAAYZ,EACZ9xE,QAASmyE,OAAyBx5E,EAAY,kBAAM+zE,GAAW,EAAA1iE,EAAAimC,WAAUxzB,EAAe,MAExFhc,EAAAH,QAAA/J,cAACkvB,EAAAqL,iBAAgBnxB,UAAU,oBAG/Bc,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACMmqE,GACErxE,EAAAH,QAAA/J,cAACi8E,EAAAlyE,SACGX,UAAU,sCACV+yE,WAAYZ,EACZhjD,MAAOjH,gBAAc+B,EAAYvc,OAAO,QACxCrN,QAAS,kBAAM6xE,OAAyBl5E,EAAYg0E,EAAW,aAGpEmF,GAAgBC,IACftxE,EAAAH,QAAA/J,cAACi8E,EAAAlyE,SACGX,WAAW,EAAAU,EAAAC,SAAW,uCAClBqyE,0BAA2BJ,IAE/BzjD,MAAOlF,EAAYvc,OAAO,QAC1BrN,QAAS,kBAAMuyE,OAA0B55E,EAAYg0E,EAAW,YAGrEqF,GAAgBC,IACfxxE,EAAAH,QAAA/J,cAACi8E,EAAAlyE,SACGX,WAAW,EAAAU,EAAAC,SAAW,uCAClBqyE,0BAA2BJ,IAE/BvyE,QAASuyE,OAA0B55E,EAAY,kBAAMg0E,EAAW,YAE9DqF,MAAqBvE,EACrBwE,MAAqBC,IAKnCzxE,EAAAH,QAAA/J,cAACi8E,EAAAlyE,SACGX,WAAW,EAAAU,EAAAC,SAAW,2CAClBmyE,0BAA2BJ,IAE/BK,WAAYZ,EACZ9xE,QAASqyE,OAAyB15E,EAAY,kBAAM+zE,GAAW,EAAA1iE,EAAA4lC,WAAUnzB,EAAe,MAExFhc,EAAAH,QAAA/J,cAACkvB,EAAAuL,kBAAiBrxB,UAAU,oBAEhCc,EAAAH,QAAA/J,cAACi8E,EAAAlyE,SACGX,WAAW,EAAAU,EAAAC,SAAW,0CAClBmyE,0BAA2BH,IAE/BtyE,QAASsyE,OAAwB35E,EAAY,kBAAM+zE,GAAW,EAAA1iE,EAAA8lC,UAASrzB,EAAeszB,MAEtFtvC,EAAAH,QAAA/J,cAACkvB,EAAA6iC,wBAAuB3oD,UAAU,sBAMlDiyE,EAAer0E,WACXkf,cAAwB7gB,UAAUiF,OAClCurE,cAAwBxwE,UAAUiF,OAClCgxE,uBAAwBj2E,UAAUkF,KAClC0oE,sBAAwB5tE,UAAUkF,KAClC4b,iBAAwB9gB,UAAUmF,KAClC2rE,WAAwB9wE,UAAUmF,KAClC4rE,WAAwB/wE,UAAUmF,gBAGvB6wE,iFCnIf,QAAAx8E,EAAA,QACAA,EAAA,uDAEA,IAAMw9E,EAAiB,SAAAl2E,GAAA,IACnB3B,EADmB2B,EACnB3B,SACA4E,EAFmBjD,EAEnBiD,UACA+yE,EAHmBh2E,EAGnBg2E,UACA5jD,EAJmBpyB,EAInBoyB,MACA9uB,EALmBtD,EAKnBsD,QALmB,OAOnBS,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACO+qE,GACCjyE,EAAAH,QAAA/J,cAAA,UACIoJ,UAAWA,EACXK,QAASA,GAER8uB,EACA/zB,KAMjB63E,EAAer1E,WACXxC,SAAUa,UAAUiM,WAChBjM,UAAUic,MACVjc,UAAUxB,OACVwB,UAAUiF,SAEdlB,UAAW/D,UAAUiF,OACrB6xE,UAAW92E,UAAUkF,KACrBguB,MAAWlzB,UAAUiF,OACrBb,QAAWpE,UAAUmF,gBAGV6xE,oKCnCRtyE,iGCAP,QAAAlL,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,IACA4U,EAAA5U,EAAA,QAGAA,EAAA,MACAy9E,EAAAz9E,EAAA,wDAIA,IAAM09E,EAAoB,SAAAp2E,GAOpB,IANF2V,EAME3V,EANF2V,YACAW,EAKEtW,EALFsW,YACAC,EAIEvW,EAJFuW,mBACAswC,EAGE7mD,EAHF6mD,kBACAl8B,EAEE3qB,EAFF2qB,SACA9N,EACE7c,EADF6c,YAEMw5D,GAAqB,EAAA/oE,EAAA+D,UAASsE,GAC9B2gE,GAAwB,EAAAhpE,EAAA2kC,SAAQokC,EAAmBngE,QAAS2wC,EAAkB,IAC9E0vB,GAAwB,EAAAjpE,EAAA2kC,SAAQokC,EAAmBngE,QAASK,EAAmBrY,OAAO,GAAG,IACzFs4E,GAAkB,EAAAlpE,EAAA2kC,SAAQokC,EAAmBngE,QAASI,GACtDmgE,GAAkB,EAAAnpE,EAAA+D,UAASwL,GAE3B65D,GAAa,EAAAP,EAAAQ,eACfF,EAAgBvgE,QAChBogE,EAAqBpgE,QACrBqgE,GACEK,GAAgB,EAAAT,EAAAU,iBAClBJ,EAAgBvgE,QAChBsgE,EACAF,GACJ,OACIvyE,EAAAH,QAAA/J,cAACyyE,EAAA1oE,SACG6S,SAAUigE,EAAW39D,IACrB4R,SAAUA,EACVnuB,KAAK,cACLopE,YAAY,QACZpvD,WAAYkgE,EAAW79D,MACvB+9D,cAAeA,KAK3BR,EAAkBv1E,WACd8U,YAAazW,UAAUiM,WACnBjM,UAAUiF,OACVjF,UAAUkM,SAEdkL,YAAoBpX,UAAUiF,OAC9BoS,mBAAoBrX,UAAUic,MAC9B3e,KAAoB0C,UAAUiF,OAC9BwmB,SAAoBzrB,UAAUmF,KAC9BwY,YAAoB3d,UAAUxB,mBAGnB,EAAA2wB,EAAA/uB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAASsH,EAAZ+R,EAAY/R,OAAZ,OACI0P,oBAAqBhX,EAAQgmB,MAAMhP,oBACnCwH,YAAqBxe,EAAQgmB,MAAMxH,YACnCX,YAAqB7d,EAAQgmB,MAAMnI,YACnCY,mBAAqBze,EAAQgmB,MAAMvH,mBACnCswC,kBAAqB/uD,EAAQgmB,MAAM+oC,kBACnCl8B,SAAqB7yB,EAAQgmB,MAAM6M,SACnC9N,YAAqBzd,EAAOyd,cARrB,CAUbu5D,qKCnEKxyE,0iBCAPlL,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAwlC,EAAAxlC,EAAA,QACAA,EAAA,UACAA,EAAA,KACAuJ,EAAAvJ,EAAA,+NAEMo+E,6SACFr/D,OAAUinB,SAAS,KAUnBq4C,eAAiB,WACbzwE,EAAKsR,SAAS,SAACH,GAAD,OAAcinB,SAAUjnB,EAAMinB,cAGhDs4C,aAAe,SAACC,GAEZ,IAAMh6E,EAAuB,iBAAf,IAAOg6E,EAAP,YAAAtiE,EAAOsiE,IAAmBA,EAAIp7E,OAAO+6E,cAAgBK,EAE/Dh6E,IAAUqJ,EAAKxH,MAAM83E,eACrBtwE,EAAKxH,MAAM6rB,UAAW9uB,QAAUW,KAAM8J,EAAKxH,MAAMtC,KAAMS,cAI/Di6E,QAAU,SAAChzE,GACFA,IACiB,UAAlBA,EAAKizE,SAIT7wE,EAAKutD,YAAc3vD,EAHfoC,EAAK8wE,eAAiBlzE,MAM9Bs6B,mBAAqB,SAACnjC,GACdiL,EAAKutD,cAAgBvtD,EAAKutD,YAAYp1B,SAASpjC,EAAMQ,SACjDyK,EAAKmR,MAAMinB,SACXp4B,EAAKsR,UAAW8mB,SAAS,+UApChB19B,UAAMvB,0DAIvB/F,SAAS0wB,iBAAiB,YAAazrB,KAAK6/B,mEAI5C9kC,SAAS2wB,oBAAoB,YAAa1rB,KAAK6/B,qDAkC/C,IADK1mB,EAUDnZ,KAAKG,MAPL83E,EAHC9+D,EAGD8+D,cACAp6E,EAJCsb,EAIDtb,KACA8/B,EALCxkB,EAKDwkB,gBACAspC,EANC9tD,EAMD8tD,YACAnvD,EAPCqB,EAODrB,SACAD,EARCsB,EAQDtB,WACA5O,EATCkQ,EASDlQ,kBAEJ,OACI7D,EAAAH,QAAA/J,cAAA,OACIyE,IAAKK,KAAKu4E,QACVj0E,WAAW,EAAAU,EAAAC,SAbE,oIAaFyC,IACDgxE,uBAA0B14E,KAAKG,MAAM68D,WAG3Cr/B,EACMv4B,EAAAH,QAAA/J,cAAA,SACE8B,KAAK,OACLyH,GAAOi0E,oBACPp6E,MAAO25E,EACPjsD,SAAUhsB,KAAKq4E,aACfx6E,KAAMA,EACNwf,IAAKxF,EACL0F,IAAKzF,IAGL1S,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAC4nE,EAAA79D,SACGi+D,eAAgBj6D,EAChBjM,KAAK,OACL0pE,cAAA,EACAjiE,GAAOi0E,oBACPp0E,WAAW,EAAAU,EAAAC,SAAcyzE,qBACzBp6E,MAAO25E,EACPtzE,QAAS3E,KAAKo4E,eACdv6E,KAAMA,EACNopE,YAAaA,IAEjB7hE,EAAAH,QAAA/J,cAACoI,EAAA4lB,WAAU5kB,UAAco0E,sBACzBtzE,EAAAH,QAAA/J,cAACqkC,EAAAY,eACGC,GAAKpgC,KAAK8Y,MAAMinB,QAChBM,YACIC,MAAW,6BACXC,UAAW,kCACXxX,KAAW,6BAEf3tB,QAAS,IACTolC,eAAA,GAEAp7B,EAAAH,QAAA/J,cAACy9E,EAAA1zE,SACG6S,SAAUA,EACVD,WAAYA,EACZvT,UAAW,YACX0nB,SAAUhsB,KAAKq4E,aACfO,SAxDX,cAyDWX,cAAeA,gBAWvDE,EAAWj2E,WACP4V,SAAUvX,UAAUiM,WAChBjM,UAAUkM,OACVlM,UAAUiF,OACVjF,UAAUxB,SAEdkwE,aAAiB1uE,UAAUkF,KAC3Bk4B,gBAAiBp9B,UAAUkF,KAC3B5H,KAAiB0C,UAAUiF,OAC3BwmB,SAAiBzrB,UAAUmF,KAC3Bs3D,QAAiBz8D,UAAUiF,OAC3ByhE,YAAiB1mE,UAAUiF,OAC3ByyE,cAAiB13E,UAAUiF,OAC3BqS,WAAiBtX,UAAUiM,WACvBjM,UAAUkM,OACVlM,UAAUiF,OACVjF,UAAUxB,qBAIH,EAAAS,EAAAwB,UAASm3E,6fC3IxBp+E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACA4U,EAAA5U,EAAA,uSAEA,IAAM8+E,EAAS,SAAAx3E,GAOT,IANFu3E,EAMEv3E,EANFu3E,SACAX,EAKE52E,EALF42E,cACAngE,EAIEzW,EAJFyW,SACAD,EAGExW,EAHFwW,WACAmU,EAEE3qB,EAFF2qB,SACA1nB,EACEjD,EADFiD,UAEMw0E,EAAwBjhE,GACxB,EAAAlJ,EAAA+D,UAASmF,IACT,EAAAlJ,EAAA+D,YACAqmE,EAAwBjhE,GACxB,EAAAnJ,EAAA+D,UAASoF,IACT,EAAAnJ,EAAA+D,YAAWT,KAAK,MAAMF,OAAO,MAAMgiC,QAAQ,MAAMilC,aAAa,OAC9DC,GAAwB,EAAAtqE,EAAA+D,YAP5BwmE,EAQ4BjB,EAAc1lE,MAAM,KARhD4mE,EAAA1mE,EAAAymE,EAAA,GAQMjnE,EARNknE,EAAA,GAQYpnE,EARZonE,EAAA,GASI5nE,KAAWtP,OAAA8N,EAAInO,MAAM,IAAIa,SAAQoF,IAAI,SAAC2J,GAAD,OAAK,IAAIA,GAAIjS,OAAO,KACzDkS,KAAWxP,OAAA8N,EAAInO,MAAM,IAAIa,SAAQoF,IAAI,SAAC2J,GAAD,OAAK,IAAQ,EAAJA,GAAQjS,OAAO,KAE7D65E,EAAe,SAACp8E,EAAMq8E,EAAeC,GACvC,MADyE53E,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,KAAAA,UAAA,KACvD43E,EAAY,KAAAC,EACSD,EAAW/mE,MAAM,KAD1BinE,EAAA/mE,EAAA8mE,EAAA,GAClBE,EADkBD,EAAA,GACPE,EADOF,EAAA,IAEZ,MAATx8E,GAAgBq8E,IAAkBI,GAAwB,MAATz8E,GAAgBq8E,IAAkBK,IACpF1tD,GAAqB,MAAThvB,EAAeq8E,EAAgBI,GAA3C,KAAiE,MAATz8E,EAAeq8E,EAAgBK,MAKnG,OACIt0E,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAc2zE,EAAd,cAAqCt0E,IACjDc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAcs0E,EAAd,cACDxzE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAcs0E,EAAd,qBACDxzE,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAc2zE,EAAd,wBAA+C,gBAAgBxzE,EAAAH,QAAA/J,cAAA,eAAS,EAAAuT,EAAA2C,UAAS,UACjGhM,EAAAH,QAAA/J,cAAA,WACKqW,EAAM1J,IAAI,SAACqK,EAAGtT,GACXq6E,EAAkBhnE,KAAKC,GACvB,IAAMynE,EAA0Bb,EAAkBvhE,QAAQxF,OAAO,GAC3D6nE,EAAkBX,EAAkBlkD,UACtC4kD,EACAZ,GACEc,EAAoBZ,EAAkBlkD,UACxC+jD,EACAC,EACA,UACEe,EAAaF,GAAmBC,EACtC,OACIz0E,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAc2zE,EAAd,uBAAAlxE,KACDkxE,EADC,iCAC2C3mE,IAASC,GADpDxK,KAEDkxE,EAFC,kCAE2CkB,IACtDl7E,IAAKA,EACL+F,QAAS,WAAQy0E,EAAa,IAAKlnE,EAAG+lE,EAAe6B,KAEpD5nE,OAMrB9M,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAcs0E,EAAd,uBACDxzE,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAc2zE,EAAd,wBAA+C,gBAAgBxzE,EAAAH,QAAA/J,cAAA,eAAS,EAAAuT,EAAA2C,UAAS,YACjGhM,EAAAH,QAAA/J,cAAA,WACKuW,EAAQ5J,IAAI,SAACkyE,EAAIn7E,GACdq6E,EAAkBhnE,KAAKA,GAAMF,OAAOgoE,GACpC,IAAMD,EAAab,EAAkBlkD,UAAU+jD,EAAmBC,EAAiB,UACnF,OACI3zE,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAc2zE,EAAd,uBAAAlxE,KACDkxE,EADC,iCAC2C7mE,IAAWgoE,GADtDryE,KAEDkxE,EAFC,kCAE2CkB,IACtDl7E,IAAKA,EACL+F,QAAS,WAAQy0E,EAAa,IAAKW,EAAI9B,EAAe6B,KAErDC,UAWrClB,EAAO32E,WACHoC,UAAW/D,UAAUiF,OACrBsS,SAAWvX,UAAUiM,WACjBjM,UAAUkM,OACVlM,UAAUiF,OACVjF,UAAUxB,SAEditB,SAAezrB,UAAUmF,KACzBkzE,SAAer4E,UAAUiF,OACzByyE,cAAe13E,UAAUiM,WACrBjM,UAAUkM,OACVlM,UAAUiF,OACVjF,UAAUxB,SAEd8Y,WAAYtX,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,OACVjF,UAAUxB,oBAIH85E,iFC/Gf,IAAMmB,EAAiB,SACnB3nE,EACA4nE,GAFmB,OAGlB5nE,EAAKN,OAAO7F,KAAK4kD,MAAMz+C,EAAKN,SAAWkoE,GAAYA,IAE3C/B,kBAAkB,SAC3Bh6D,EACA+5D,EACAiC,GAEA,IAAI57E,EAAQ25E,EAAc5gE,SAAS6iE,GAC7BA,EAAiB7iE,SAAS6G,GACtBA,EACAg8D,EACJjC,EAGN,OADA35E,EAAQ07E,EAAe17E,EAAO,IACjB0T,OAAO,UAGXgmE,gBAAgB,SACzB95D,EACAg8D,EACAniE,GAEA,IAAMggE,GACF79D,MAAOgE,EAAY7G,SAAS6iE,GACtBA,EACAh8D,EACN9D,IAAKrC,GAIT,OADAggE,EAAW79D,MAAQ8/D,EAAejC,EAAW79D,MAAO,GAC7C69D,0PCjCXv4E,EAAAzF,EAAA,QACAA,EAAA,IACA2+B,EAAA3+B,EAAA,cACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEA,IAAMogF,EAAiB,SAAA94E,GAQjB,IAPFuqE,EAOEvqE,EAPFuqE,mBACAN,EAMEjqE,EANFiqE,WACAn7D,EAKE9O,EALF8O,oBACAi5C,EAIE/nD,EAJF+nD,oBACAgjB,EAGE/qE,EAHF+qE,mBACAC,EAEEhrE,EAFFgrE,mBACA7B,EACEnpE,EADFmpE,qBAQM4P,GAAajqE,EAAoBsO,KAAK,SAAAwrD,GAAA,MAAmB,MAAbA,EAAG3rE,QAErD,OACI8G,EAAAH,QAAA/J,cAACw9B,EAAApsB,SAAD,KACM6D,EAAoBvX,OAAS,GAC3BwM,EAAAH,QAAA/J,cAACsnE,EAAAv9D,SACG8mB,YAZc,SAAC2pB,GAC3B,IAAM2kC,EAAe3kC,EAAI3/B,OAAO,SAAAk0D,GAAA,MAAmB,MAAbA,EAAG3rE,OAA8B,MAAb2rE,EAAG3rE,QAC7D,OAAI+7E,EAAazhF,QAAU,KAEpByhF,EAQkBC,CAAsBnqE,GACnCtS,KAAK,uBACLmuB,SAAU4/C,EACVttE,MAAOksE,IAGY,MAAzBA,GACEplE,EAAAH,QAAA/J,cAACgxE,EAAAjnE,QAAD5E,GACIxC,KAAK,WACLS,MAAOgtE,EACPnkD,MAAO,IACHklD,IAGe,MAAzB7B,GACEplE,EAAAH,QAAA/J,cAACwyE,EAAAzoE,SACGmU,UAAU,OACV5a,KAAK,WACLX,KAAK,aAGe,MAAzB2sE,GAAyD,MAAzBA,GAC/BplE,EAAAH,QAAA/J,cAAC4nE,EAAA79D,QAAD5E,GACI4iE,eAAe,yBACfplE,KAAK,WACL41B,MAAO2mD,EAAYjqE,EAAoB,GAAGtL,KAAO,KACjDvG,MAAO8qD,EAAoBohB,IACvB4B,EACAC,MAOxB8N,EAAej4E,WACX0pE,mBAAoBrrE,UAAUmF,KAC9B4lE,WAAoB/qE,UAAUiM,WAC1BjM,UAAUkM,OACVlM,UAAUiF,SAEd2K,oBAAsB8tB,YAAcC,uBACpCkrB,oBAAsB7oD,UAAUmF,KAChC0mE,mBAAsB7rE,UAAUxB,OAChCstE,mBAAsB9rE,UAAUxB,OAChCyrE,qBAAsBjqE,UAAUiF,kBAGrB20E,iFC7Ef,IAAA36E,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,wDAEA,IAAMooE,EAAY,SAAA9gE,GAIX,IAHHq8B,EAGGr8B,EAHHq8B,aACAorB,EAEGznD,EAFHynD,WACA98B,EACG3qB,EADH2qB,SAEA,GAAI0R,EACA,OACIt4B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBACP,EAAAmK,EAAA2C,UAAS,cADjB,KACmC03C,GAI3C,IAAMyxB,mIAAe34E,MAAM,GAAGa,SAC9B,OACI2C,EAAAH,QAAA/J,cAAC8gC,EAAA/2B,SACGX,UAAU,4BACV8X,QAAQ,EAAA3N,EAAA2C,UAAS,yBACjBiL,WAAA,GAEAjX,EAAAH,QAAA/J,cAACs/E,EAAAv1E,SACGw1E,iBAAkBF,EAAUA,EAAS1yE,IAAI,SAAAnP,GAAA,OAAKA,EAAI,KAClDmF,KAAK,aACLmuB,SAAUA,EACV0uD,iBAAkB5xB,MAMlCqZ,EAAUjgE,WACNw7B,aAAcn9B,UAAUkF,KACxBqjD,WAAcvoD,UAAUiM,WACpBjM,UAAUkM,OACVlM,UAAUiF,SAEdwmB,SAAUzrB,UAAUmF,iBAGT,EAAAlG,EAAAwB,UAASmhE,kFC7CxB,QAAApoE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAMA,IAAM4gF,EAAiB,SAAAt5E,GAKjB,IAJFo5E,EAIEp5E,EAJFo5E,gBACA58E,EAGEwD,EAHFxD,KACAmuB,EAEE3qB,EAFF2qB,SACA0uD,EACEr5E,EADFq5E,gBAEMtc,EAAe,SAAC9sD,IACbA,EAAKpU,OAAO20E,aAAa,gBAAkB6I,GAC5C1uD,GAAW9uB,QAAUW,OAAMS,OAAQgT,EAAKpU,OAAO20E,aAAa,kBAIpE,OACIzsE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mBACVm2E,EAAgB5yE,IAAI,SAAC+yE,EAAazuD,GAAd,OACjB/mB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBAAuB1F,IAAKutB,GACtCyuD,EAAY/yE,IAAI,SAAAnP,GAAA,OACb0M,EAAAH,QAAA/J,cAAA,QACI0D,IAAKlG,EACL4L,WAAW,EAAAU,EAAAC,SAAW,8BAAgC41E,uCAAwCH,IAAoBhiF,IAClHwwE,aAAYxwE,EACZiM,QAASy5D,GAER1lE,UAS7BiiF,EAAez4E,WACXu4E,gBAAiBl6E,UAAUoxD,QAAQpxD,UAAUic,OAC7C3e,KAAiB0C,UAAUiF,OAC3BwmB,SAAiBzrB,UAAUmF,KAC3Bg1E,gBAAiBn6E,UAAUkM,kBAGhBkuE,yPCzCF/8C,yBAAyB,SAAC98B,GAAD,QAAAW,EAAAC,UAAA9I,OAAekH,EAAf8B,MAAAH,EAAA,EAAAA,EAAA,KAAA0yB,EAAA,EAAAA,EAAA1yB,EAAA0yB,IAAer0B,EAAfq0B,EAAA,GAAAzyB,UAAAyyB,GAAA,OAClCp7B,OAAO+hF,oBAAoBh6E,EAAUoB,eAAiBsF,OAClD,SAACmjC,EAAKowC,GAAN,OAAA16E,KACOsqC,EACAqwC,gBAAkBD,GAAlB94E,OAA2BnC,WAJnC,IAgBDk7E,EAAoB,SAACD,GAAoB,QAAAE,EAAAv5E,UAAA9I,OAAXkH,EAAW8B,MAAAq5E,EAAA,EAAAA,EAAA,KAAAp5E,EAAA,EAAAA,EAAAo5E,EAAAp5E,IAAX/B,EAAW+B,EAAA,GAAAH,UAAAG,GAC3C,IAAMzB,EAAQN,EAAOsN,KAAK,SAAAkE,GAAA,OAAQypE,KAAQzpE,QAC1C,OAAQypE,KAAQ36E,wHAARsH,IAAmBqzE,EAAO36E,EAAM26E,uFCxB5C,QAAAhhF,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMmhF,EAAc,kBAChB91E,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAC6iE,EAAA94D,QAAD,MACAG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eACXc,EAAAH,QAAA/J,cAACigF,EAAAl2E,QAAD,OAEJG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAC+iE,EAAAh5D,QAAD,SAKZi2E,EAAYh5E,WACRg5B,iBAAkB36B,UAAUkF,gBAGjBy1E,8UCtBfnhF,EAAA,QACAA,EAAA,UACAA,EAAA,6DAEMqhF,cACF,SAAAA,EAAYj7E,gGAAOqB,CAAAxB,KAAAo7E,GAAA,IAAAzzE,mKAAA7F,CAAA9B,MAAAo7E,EAAAr5E,WAAAhJ,OAAAiJ,eAAAo5E,IAAAliF,KAAA8G,KACTG,IADS,OAEfwH,EAAKmR,OACDvF,MAAM,GAEV5L,EAAK0zE,kBAAoB1zE,EAAK0zE,kBAAkBx8E,KAAvB8I,GACzBA,EAAK2zE,kBAAoB3zE,EAAK2zE,kBAAkBz8E,KAAvB8I,GANVA,qUADItF,UAAMo1B,8DAWzBz3B,KAAKiZ,UACD1F,MAAM,gDAKVvT,KAAKiZ,UACD1F,MAAM,qCAKV,OACInO,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBAAgBK,QAAS3E,KAAKs7E,mBACzCl2E,EAAAH,QAAA/J,cAAC8iE,EAAA/4D,SAAYy4B,cAAA,KAGjBt4B,EAAAH,QAAA/J,cAACglE,EAAAj7D,SACGwQ,MAAM,iBACN6U,QAAStqB,KAAK8Y,MAAMvF,KACpBoY,QAAS3rB,KAAKq7E,mBAEdj2E,EAAAH,QAAA/J,cAAC8iE,EAAA/4D,SAAY04B,iBAAA,yBAOlBy9C,gLC7CRj6C,sWCAP3hC,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,4NAEA,IAAMwhF,EAAgB35E,MAAM45E,KAAK55E,MAAM,IAAIa,QACrC0+B,6SACFroB,WAWA2iE,WAAa,SAACC,GAAQ,IAAApc,EACkB33D,EAAKxH,MAAhC8T,EADSqrD,EACTrrD,QAWT,OARI8O,WAAY,SAACmJ,GAAD,OAASA,IAAQjY,GAC7B+O,UAAY,SAACkJ,GAAD,OAASA,IAAQjY,GAC7BkP,UAAY,SAAC+I,GAAD,OAASA,EAAMjY,GAC3BmP,WAAY,SAAC8I,GAAD,OAASA,EAAMjY,GAC3BgP,SAAY,SAACiJ,GAAD,OAASA,EAAM,GAC3BhJ,UAAY,SAACgJ,GAAD,QAAWA,EAAM,KATfozC,EACA/vD,eAWgBmsE,GAAOA,EAAM,gVAxBrBr5E,UAAMvB,0DAGhB,IAAAS,EAAAvB,KAChBA,KAAKuF,KAAKo2E,iBAAiB,kBAAkBh5E,QAAQ,SAACooB,EAAIoB,GAEtD5qB,EAAK0X,+HAALvR,IACKykB,EAAMpB,EAAG6wD,gDAoBb,IAAAnzE,EAAAzI,KAAAmZ,EACoDnZ,KAAKG,MAAtDmoB,EADHnP,EACGmP,YAAa4Y,EADhB/nB,EACgB+nB,SAAUD,EAD1B9nB,EAC0B8nB,cAAelmB,EADzC5B,EACyC4B,OAExC8gE,EADe9iF,OAAO0J,KAAK6lB,GAAa5K,OAAO7V,IAAI,SAAA8gB,GAAA,OAAaL,EAAYK,KAChDppB,OAAO,GAAG,OAGtCu8E,EAAU56C,GAAuB,QAAXnmB,EAItBghE,EAAU76C,GAAuB,SAAXnmB,EAEtBy+B,EAAWx5C,KAAK8Y,MAAM+iE,EAAa5yD,OAEzC,OACI7jB,EAAAH,QAAA/J,cAAA,OACIyE,IAAK,SAAA4F,GAAA,OAAQkD,EAAKlD,KAAOA,GACzBjB,UAAU,UAERi3E,EAAc1zE,IAAI,SAACskB,GAAD,OAChB/mB,EAAAH,QAAA/J,cAAC8gF,EAAA/2E,SACGgP,QAASxL,EAAKgzE,WAAWtvD,GACzB4vD,QAASA,EACT96C,cAAeA,EACf66C,OAAQA,EACRl9E,IAAKutB,EACL0vD,aAAcA,EACdv9E,MAAO6tB,MAGb0vD,EAAa5yD,OAAS,GACpB7jB,EAAAH,QAAA/J,cAAC+gF,EAAAh3E,SACG82E,QAASA,EACTD,OAAQA,EACRtiC,SAAUA,IAGlBp0C,EAAAH,QAAA/J,cAACghF,EAAAj3E,SACG62E,OAAQA,EACRtiC,SAAUA,cAO9BrY,EAAoBj/B,WAChB+R,QAAe1T,UAAUkM,OACzB8C,cAAehP,UAAUiF,OACzB8iB,YAAe/nB,UAAUxB,OACzBmiC,SAAe3gC,UAAUkF,KACzBsV,OAAexa,UAAUiF,mBAGd,EAAAhG,EAAAwB,UAASmgC,kFCzFxB,QAAApnC,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEA,IAAMoiF,EAAe,SAAA96E,GAOf,IANF4S,EAME5S,EANF4S,QACA8nE,EAKE16E,EALF06E,QACA96C,EAIE5/B,EAJF4/B,cACA66C,EAGEz6E,EAHFy6E,OACAD,EAEEx6E,EAFFw6E,aACAv9E,EACE+C,EADF/C,MAEQ2qB,EAAgB4yD,EAAhB5yD,MAAOD,EAAS6yD,EAAT7yD,KACTozD,EAAkB99E,IAAU2qB,EAC5BozD,EAAkB/9E,IAAU2V,EAElC,OACI7O,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,iBAClBq3E,qBAAuBR,GAAUM,EACjCG,sBAAuBR,GAAWK,KAGpCA,GAAapzD,GACX5jB,EAAAH,QAAA/J,cAACshF,EAAAv3E,SACG6jB,aAAcE,EACd+yD,QAASA,EACTD,OAAQA,IAGhB12E,EAAAH,QAAA/J,cAACuhF,EAAAx3E,SACGm3E,UAAWA,EACXL,QAASA,EACT96C,cAAeA,EACfo7C,YAAaA,EACbP,OAAQA,EACRx9E,MAAOA,MAMvB69E,EAAaj6E,WACT+R,QAAe1T,UAAUkM,OACzBsvE,QAAex7E,UAAUkF,KACzBw7B,cAAe1gC,UAAUkF,KACzBq2E,OAAev7E,UAAUkF,KACzBo2E,aAAet7E,UAAUxB,OACzBT,MAAeiC,UAAUkM,mBAGd,EAAAjN,EAAAwB,UAASm7E,kFCtDxB,QAAApiF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM2iF,EAAQ,SAAAr7E,GAAA,IACV+6E,EADU/6E,EACV+6E,UACAL,EAFU16E,EAEV06E,QACAM,EAHUh7E,EAGVg7E,YACAp7C,EAJU5/B,EAIV4/B,cACA66C,EALUz6E,EAKVy6E,OACAx9E,EANU+C,EAMV/C,MANU,OAQV8G,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAW,uBAClB03E,8BAAiCP,EACjCQ,gCAAiCP,EACjCQ,6BAAiCf,GAAUM,GAAan7C,EACxD67C,2BAAiChB,GAAUM,EAC3CW,4BAAiChB,GAAWK,KAG/C99E,IAITo+E,EAAMx6E,WACFk6E,UAAe77E,UAAUkF,KACzBs2E,QAAex7E,UAAUkF,KACzB42E,YAAe97E,UAAUkF,KACzBw7B,cAAe1gC,UAAUkF,KACzBq2E,OAAev7E,UAAUkF,KACzBnH,MAAeiC,UAAUkM,kBAGdiwE,iFClCf,QAAA3iF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMijF,EAAY,SAAA37E,GAAA,IACdynB,EADcznB,EACdynB,aACAizD,EAFc16E,EAEd06E,QACAD,EAHcz6E,EAGdy6E,OAHc,OAKd12E,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,4BACXwkB,EAAavpB,MAAM,GAAI,IAE5B6F,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAW,2BAClBg4E,+BAAiCnB,EACjCoB,gCAAiCnB,KAGpCjzD,EAAavpB,OAAO,MAKjCy9E,EAAU96E,WACN4mB,aAAcvoB,UAAUiF,OACxBu2E,QAAcx7E,UAAUkF,KACxBq2E,OAAcv7E,UAAUkF,gBAGbu3E,iFC9Bf,QAAAjjF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMojF,EAAqB,SAAA97E,GAAA,IACvBy6E,EADuBz6E,EACvBy6E,OACAtiC,EAFuBn4C,EAEvBm4C,SAFuB,OAIvBp0C,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,qBAClBm4E,6BAA8BtB,IAElClkD,OAASylD,WAAY7jC,IAErBp0C,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BAChBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BAChBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BAChBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BAChBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BAChBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BAChBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BAChBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,iCAIxB64E,EAAmBj7E,WACf45E,OAAUv7E,UAAUkF,KACpB+zC,SAAUj5C,UAAUkM,kBAGT0wE,iFC9Bf,QAAApjF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAonE,EAAApnE,EAAA,wDAEA,IAAMujF,EAAmB,SAAAj8E,GAAA,IACrB06E,EADqB16E,EACrB06E,QACAD,EAFqBz6E,EAErBy6E,OACAtiC,EAHqBn4C,EAGrBm4C,SAHqB,OAKrBp0C,EAAAH,QAAA/J,cAAA,QACIoJ,UAAU,kBACVszB,OAASylD,WAAY7jC,IAErBp0C,EAAAH,QAAA/J,cAACimE,EAAAhkC,eACG74B,WAAW,EAAAU,EAAAC,SAAW,gBAClBs4E,oBAAsBzB,EACtB0B,qBAAsBzB,IAE1BrmD,cAAc,qBACd14B,KAAK,aAKjBsgF,EAAiBp7E,WACb65E,QAAUx7E,UAAUkF,KACpBq2E,OAAUv7E,UAAUkF,KACpB+zC,SAAUj5C,UAAUkM,kBAGT6wE,iFC/Bf,QAAAvjF,EAAA,QACAA,EAAA,IACAqwB,EAAArwB,EAAA,uDAIA,IAAM0jF,EAAgB,SAAAp8E,GAAA,IAAAq8E,EAAAr8E,EAClBkY,eADkBjc,IAAAogF,EACR,GADQA,EAElB37C,EAFkB1gC,EAElB0gC,aAFkB,OAGfxoB,EACHnU,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,WACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBACXc,EAAAH,QAAA/J,cAAA,OAAKquB,MAAM,6BAA6BD,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACnEpa,EAAAH,QAAA/J,cAAA,KAAGykB,KAAK,OAAO6J,SAAS,WACpBpkB,EAAAH,QAAA/J,cAAA,UAAQukB,GAAG,IAAIC,GAAG,IAAIvhB,EAAE,IAAIwhB,KAAK,YACjCva,EAAAH,QAAA/J,cAAA,QAAMykB,KAAK,OAAO6J,SAAS,UAAU5rB,EAAE,oLAInDwH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBAAgBiV,GAC/BnU,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBAAgBK,QAASo9B,GACpC38B,EAAAH,QAAA/J,cAACkvB,EAAAwB,UAAD,QAZK,MAiBjB6xD,EAAcv7E,WACVqX,QAAchZ,UAAUiF,OACxBu8B,aAAcxhC,UAAUmF,gBAGb+3E,yOC/BRE,2BACAC,2BACAh8C,yGCFP,IAAApiC,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEA,IAAM4jF,EAAiB,SAAAt8E,GAKjB,IAJF4Y,EAIE5Y,EAJF4Y,cAIE4jE,EAAAx8E,EAHFy8E,gBAGExgF,IAAAugF,KAAAE,EAAA18E,EAFF28E,sBAEE1gF,IAAAygF,KAAAE,EAAA58E,EADFmgC,iBACElkC,IAAA2gF,OAEEryE,EAGAqO,EAHArO,SACAqP,EAEAhB,EAFAgB,OACAijE,EACAjkE,EADAikE,kBAGEC,GAAqBD,EAAoB,EAAI,IAAM,IAAKA,EAAxD,IAEN,OACI94E,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAA,YAAsB2W,EAAS,EAAI,MAAQ,SAC1CumB,EAAUsQ,gBACR1sC,EAAAH,QAAA/J,cAACkjF,EAAAn5E,SAASgV,cAAeA,EAAeunB,UAAWA,IAErDs8C,GACE14E,EAAAH,QAAA/J,cAACmjF,EAAAp5E,QAAD,MAEJG,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,eAAf,KACAhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,YACXc,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQuP,EAAQrP,SAAUA,EAAUC,UAAA,IACzCmyE,GACE54E,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAhB,IAA+B65E,EAA/B,SAQxBR,EAAez7E,WACX+X,cAAgB1Z,UAAUxB,OAC1B++E,SAAgBv9E,UAAUkF,KAC1Bu4E,eAAgBz9E,UAAUkF,KAC1B+7B,UAAgBjhC,UAAUxB,mBAGf,EAAAS,EAAAwB,UAAS28E,kFClDxB,IAAAn+E,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,wDAEA,IAAMukF,EAAW,SAAAj9E,GAAA,IACb4Y,EADa5Y,EACb4Y,cACAunB,EAFangC,EAEbmgC,UAFa,OAIbp8B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,aACXc,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAACqjF,EAAAt5E,SACGyc,IAAI,sCACJC,WACIgG,EAAKviB,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SACFrG,IAAK4iC,EAAUsQ,eACflmC,SAAUqO,EAAcrO,SACxBF,OAAQ81B,EAAUlmB,iBAKlClW,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,6CAA8CowB,EAAUsQ,oBAI/EwsC,EAASp8E,WACL+X,cAAe1Z,UAAUxB,OACzByiC,UAAejhC,UAAUxB,mBAGd,EAAAS,EAAAwB,UAASs9E,wGCjCxB,wDAAAvkF,EAAA,IAEA,IAAMykF,EAA8B,SAACr+E,GAAU,IACnCyqB,EAA4BzqB,EAA5ByqB,QAAY6zD,yHADuBzoC,CACP71C,GADO,YAG3C,IAAKyqB,EAAS,MAAM,IAAIxtB,MAAM,mBAE9B,OAAOiF,UAAMnH,cACT0vB,EAAQre,cACRkyE,IAIK58D,eAAe,SAACspB,EAAUxpB,GAKnC,IAJA,IAAMs3B,KACFv3B,EAAcypB,EACduzC,EAAc,KAEXh9D,EAAI9oB,QAAQ,CACf,IAAMqlB,EAAQyD,EAAIzD,MAAM,cAExB,IAAKA,EAAO,CACRg7B,EAAIngD,KAAK4oB,GACT,MALW,IASRi9D,EAGH1gE,EAHA,GACG2gE,EAEH3gE,EAFA,GACAc,EACAd,EADAc,MAGE8/D,EAASn9D,EAAIniB,MAAM,EAAGwf,GAG5B,GAFA2C,EAAMA,EAAIniB,MAAMwf,EAAQ4/D,EAAI/lF,QAExB8lF,EAAa,CACb,IAAMI,EAAeJ,EAAf,IAA8BE,EAC9BjrB,EAAYhyC,EAAUm9D,GACtBx5E,EAAYjD,UAAM08E,eAAeprB,GAAWA,EAAU6qB,EAA4B7qB,GAExF,IAAKtxD,UAAM08E,eAAez5E,GAAU,MAAM,IAAIlI,MAAJ,sBAAgC0hF,EAAhC,2CAC1C,IAAKx5E,EAAS,MAAM,IAAIlI,MAAJ,gBAA0BshF,EAA1B,OAA4CI,EAA5C,kBAAuE3zC,EAAvE,eAEpB8N,EAAIngD,KAAKuJ,UAAM6+D,aAAa57D,GAAW1G,IAAKmgB,EAAOrf,SAAUm/E,KAC7DH,EAAc,UAEVG,EAAOjmF,QAAQqgD,EAAIngD,KAAK+lF,GAExBD,KAAUj9D,EACVs3B,EAAIngD,KAAK6oB,EAAUi9D,IAEnBF,EAAcE,EAI1B,GAAIF,EAAa,MAAM,IAAIthF,MAAJ,gBAA0BshF,EAA1B,kBAAuDvzC,EAAvD,eAGvB,OAAO8N,EAAIzxC,OAAO,SAACkuC,EAAK7sB,GACpB,IAAMm2D,EAAOtpC,EAAIA,EAAI98C,OAAS,GAM9B,MALoB,iBAATomF,GAAwC,iBAAZn2D,EACnC6sB,EAAIA,EAAI98C,OAAS,GAAKomF,EAAOn2D,EAE7B6sB,EAAI58C,KAAK+vB,GAEN6sB,uFCjEf,QAAA37C,EAAA,IACAyF,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,MACAi3B,EAAAj3B,EAAA,QAIAA,EAAA,yDAEA,IAAM6jF,EAAiB,SAAAv8E,GAAkC,IAA/BiD,EAA+BjD,EAA/BiD,UAAW2V,EAAoB5Y,EAApB4Y,cAE7BoG,EAIApG,EAJAoG,UACAzU,EAGAqO,EAHArO,SACAyO,EAEAJ,EAFAI,YACAY,EACAhB,EADAgB,OAGEm9B,GAAmB,EAAApnB,EAAAxV,oBAAmBvB,GACtCglE,GAAmB,EAAAjuD,EAAAlV,WAAU7B,GAC7BinB,GAAmB,EAAAlQ,EAAAhW,SAAQf,GAEjC,OACI7U,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,UAAWX,IAClCc,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,mBACfhM,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,qBACfhM,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,iBAEnBhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,UACXc,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQ2U,EAAWzU,SAAUA,KAExCxG,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQ0sC,EAAkBxsC,SAAUA,KAE/CxG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW2W,GAAU,EAAI,SAAW,QACrC7V,EAAAH,QAAA/J,cAAC6gC,EAAA92B,SAAMyG,OAAQuP,EAAQrP,SAAUA,EAAUC,UAAA,OAGhDq1B,GACC97B,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,mBACfhM,EAAAH,QAAA/J,cAAA,cACK+jF,GAAc5kE,EACXjV,EAAAH,QAAA/J,cAACo0D,EAAArqD,SAAc6S,SAAUuC,IAEzB,MAKhBjV,EAAAH,QAAA/J,cAACgkF,EAAAj6E,QAAD,QAKZ24E,EAAe17E,WACXoC,UAAe/D,UAAUiF,OACzByU,cAAe1Z,UAAUxB,OACzB2sD,YAAenrD,UAAUmF,iBAGd,EAAAlG,EAAAwB,UAAS48E,kFClExB,QAAA7jF,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,QACAA,EAAA,yDAEA,IAAMolF,EAAe,SAAA99E,GAAA,IACjB4Y,EADiB5Y,EACjB4Y,cACAm3B,EAFiB/vC,EAEjB+vC,kBACAl1B,EAHiB7a,EAGjB6a,iBACAwvC,EAJiBrqD,EAIjBqqD,YAJiB,OAKfzxC,EAAcu3B,WAAa,KAC7BpsC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,QACXc,EAAAH,QAAA/J,cAACkkF,EAAAn6E,SACGgV,cAAeA,EACfm3B,kBAAmBA,EACnBl1B,iBAAkBA,EAClBwvC,YAAaA,MAKzByzB,EAAaj9E,WACT+X,cAAmB1Z,UAAUxB,OAC7BqyC,kBAAmB7wC,UAAUkF,KAC7ByW,iBAAmB3b,UAAUkF,KAC7BimD,YAAmBnrD,UAAUmF,iBAGlB,EAAAgqB,EAAA/uB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAAH,OACI8gB,cAAmB9gB,EAAQ2C,SAASme,cACpCm3B,kBAAmBj4C,EAAQ2C,SAASs1C,kBACpCl1B,iBAAmB/iB,EAAQ2C,SAASogB,iBACpCwvC,YAAmBvyD,EAAQ2C,SAAS4vD,cAL7B,CAObyzB,kFCnCF,IAAA3/E,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,wDAEA,IAAMslF,EAAa,SAAAh+E,GAKb,IAJF4Y,EAIE5Y,EAJF4Y,cACAm3B,EAGE/vC,EAHF+vC,kBACAl1B,EAEE7a,EAFF6a,iBACAwvC,EACErqD,EADFqqD,YAEM4zB,EAAepjE,GACf,EAAAzN,EAAA2C,UAAS,qJACT6I,EAAcslE,iBAEpB,OACIn6E,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACg4D,EAAAjuD,SAAQmU,UAAU,OAAOE,KAAK,WAAWC,QAAS+lE,IACnDl6E,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,UAAU,uCACVI,aAAcwX,GAAoBk1B,EAClCvsC,MAAM,EAAA4J,EAAA2C,UAAS,QACfzM,QAAS+mD,MAMzB2zB,EAAWn9E,WACP+X,cAAmB1Z,UAAUxB,OAC7BqyC,kBAAmB7wC,UAAUkF,KAC7ByW,iBAAmB3b,UAAUkF,KAC7BimD,YAAmBnrD,UAAUmF,iBAGlB,EAAAlG,EAAAwB,UAASq+E,kFCrCxB,IAAA7/E,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqwB,EAAArwB,EAAA,uDAEA,IAAM6nC,EAAkB,SAAAvgC,GAAA,IACpB4Y,EADoB5Y,EACpB4Y,cADoB,OAGpB7U,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACXc,EAAAH,QAAA/J,cAACkvB,EAAA+X,UAAS79B,UAAU,2BACpBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAA0B2V,EAAcihC,YAIhEtZ,EAAgB1/B,WACZg5C,SAAU36C,UAAUiF,mBAGT,EAAAhG,EAAAwB,UAAS4gC,kFClBxB,QAAA7nC,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAMylF,EAAgB,SAAAn+E,GAGhB,IAFFy5B,EAEEz5B,EAFFy5B,iBACAnP,EACEtqB,EADFsqB,QAEA,OAAKmP,EAED11B,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,kBACVK,QAASgnB,GAETvmB,EAAAH,QAAA/J,cAACukF,EAAAx6E,SACGX,UAAU,oBAPQ,MAalCk7E,EAAct9E,WACV44B,iBAAkBv6B,UAAUkF,KAC5BkmB,QAAkBprB,UAAUmF,gBAGjB85E,iFC1Bf,QAAAzlF,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM2lF,EAAoB,SAAAr+E,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWoxB,EAAdr0B,EAAcq0B,cAAd,OACtBtwB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYglB,MAAM,KAAKF,OAAO,KAAK5J,QAAQ,aACjFpa,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWoxB,GAAiB,cAAe/V,KAAK,qBAAqB6J,SAAS,UAAU5rB,EAAE,2GAChGwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWoxB,GAAiB,cAAgB/V,KAAK,UAAU6J,SAAS,UAAU5rB,EAAE,6QAK9F8hF,EAAkBx9E,WACdoC,UAAe/D,UAAUiF,OACzBkwB,cAAen1B,UAAUiF,kBAGdk6E,iFCjBf,QAAA3lF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA4+B,EAAA5+B,EAAA,uDAEA,IAAMuoB,EAAa,SAAAjhB,GAAA,IAAG3B,EAAH2B,EAAG3B,SAAU4E,EAAbjD,EAAaiD,UAAW21B,EAAxB54B,EAAwB44B,GAAxB,OACf70B,EAAAH,QAAA/J,cAACy9B,EAAAgnD,MACGr7E,WAAW,EAAAU,EAAAC,SAAW,gBAAiBX,EAAW,UAClD21B,GAAIA,GAEHv6B,IAIT4iB,EAAWpgB,WACPxC,SAAWa,UAAUxB,OACrBuF,UAAW/D,UAAUiF,OACrBy0B,GAAW15B,UAAUiF,kBAGV8c,6PCpBfvoB,EAAA,IACA4+B,EAAA5+B,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,mEAEqB,SAACoG,GAAD,OACjBiF,EAAAH,QAAA/J,cAACkK,EAAAH,QAAM62D,UAASC,SAAU32D,EAAAH,QAAA/J,cAACihC,EAAAl3B,QAAD,OACtBG,EAAAH,QAAA/J,cAACy9B,EAAAinD,OAAD,MAEQ,EAAApkB,EAAAv2D,WAAkB4C,IAAI,SAACsnB,EAAOhD,GAAR,OAClB/mB,EAAAH,QAAA/J,cAAC2kF,EAAA56E,QAAD5E,GAAoBzB,IAAKutB,GAASgD,EAAWhvB,wFCXjE,QAAApG,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAM+lF,EAAc,SAAAz+E,GAAA,IAChBm9B,EADgBn9B,EAChBm9B,cACAC,EAFgBp9B,EAEhBo9B,QACAshD,EAHgB1+E,EAGhB0+E,SAHgB,OAKhB36E,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACTk6B,GACEp5B,EAAAH,QAAA/J,cAACsjC,GAAcl6B,UAAU,qCAGjCc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAC8kF,EAAA/6E,SACGyc,IAAI,8DACJC,WACIukB,MAAO9gC,EAAAH,QAAA/J,cAAA,KAAGgT,KAAK,eAAevJ,QAAS85B,IACvCwhD,MAAO76E,EAAAH,QAAA/J,cAAA,KAAGgT,KAAK,eAAevJ,QAASo7E,UAO3DD,EAAY59E,WACRs8B,cAAej+B,UAAUmF,KACzB+4B,QAAel+B,UAAUmF,KACzBq6E,SAAex/E,UAAUmF,gBAGdo6E,iFCjCR,IAAMI,iBAAgB,aAChBvhD,gBAAgBuhD,2GCD7B,QAAAnmF,EAAA,IACA8+B,EAAA9+B,EAAA,IACAmgE,EAAAngE,EAAA,SACAA,EAAA,2DAYSy+D,iBAVgB,kBACrBpzD,EAAAH,QAAA/J,cAACg/D,EAAAimB,cACG/mE,UAAU,OACVE,KAAMlU,EAAAH,QAAA/J,cAAC29B,EAAA+0B,cAAD,MACNp0C,WAAW,uBAEXpU,EAAAH,QAAA/J,cAACklF,EAAAn7E,QAAD,6gBCXRlL,EAAA,QACAA,EAAA,QACAA,EAAA,IACAgoB,EAAAhoB,EAAA,+NAEMsmF,6SACFvnE,OAAUwnE,cAAc,KAExBnhD,cAAgB,WACZx3B,EAAKsR,UACDqnE,cAAe34E,EAAKmR,MAAMwnE,0VALZj+E,UAAMvB,+CASnB,IAAAS,EAAAvB,KACGsgF,EAAiBtgF,KAAK8Y,MAAtBwnE,aADHnnE,EAEmBnZ,KAAKG,MAArB0E,EAFHsU,EAEGtU,KAAM6zD,EAFTv/C,EAESu/C,MAER6nB,GACFC,WAAYF,EAAe,UAAY,UAErCG,GAAoB,EAAAz7E,EAAAC,SAAW,uBACjCy7E,4BAA6BJ,IAE3BK,GAAqB,EAAA37E,EAAAC,SAAW,iBAClC27E,sBAAuBN,IAE3B,OACIl7E,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eAAeK,QAAS3E,KAAKm/B,eACxC/5B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWm8E,GAAoB57E,IAEzCO,EAAAH,QAAA/J,cAAA,OACIoJ,UAAWq8E,EACX/oD,MAAO2oD,GAEPn7E,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eACVo0D,EAAM7wD,IAAI,SAACyJ,EAAM6a,GAAP,OACP/mB,EAAAH,QAAA/J,cAAC6mB,EAAAid,WAAD3+B,GAAYzB,IAAKutB,GAAS7a,GAAM6tB,cAAe59B,EAAK49B,+BAShFkhD,EAAYn+E,WACRw2D,MAAOn4D,UAAUic,MACjB3X,KAAOtE,UAAUiF,UAGZ66E,mHCpDT,QAAAtmF,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAM8mF,EAAe,SAAAx/E,GAAA,IACjBwD,EADiBxD,EACjBwD,KACAszB,EAFiB92B,EAEjB82B,UACAC,EAHiB/2B,EAGjB+2B,OAHiB,OAKjBhzB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBAAsBK,QAASyzB,GAC1ChzB,EAAAH,QAAA/J,cAAA,YAAO2J,GACPO,EAAAH,QAAA/J,cAACm9B,EAAApzB,SACGqzB,QAASH,MAKrB0oD,EAAa3+E,WACT2C,KAAWtE,UAAUiF,OACrB2yB,UAAW53B,UAAUkF,KACrB2yB,OAAW73B,UAAUmF,QAGhBm7E,iXCvBT9mF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA21B,EAAA31B,EAAA,IACAkoB,EAAAloB,EAAA,+NAEMomF,6SACFW,WAAa,WAAM,IACP1nE,EAAczR,EAAKxH,MAAnBiZ,UACU,SAAdA,EACAzR,EAAKxH,MAAM4gF,iBACU,UAAd3nE,GACPzR,EAAKxH,MAAM6gF,6BAInBC,YAAc,WACVt5E,EAAKxH,MAAM++B,yVAXQ78B,UAAMvB,+CAcpB,IAAAqY,EAC6CnZ,KAAKG,MAA/CqZ,EADHL,EACGK,WAAYF,EADfH,EACeG,KAAMF,EADrBD,EACqBC,UAAW1Z,EADhCyZ,EACgCzZ,SAE/BwhF,GAAe,EAAAl8E,EAAAC,SAAW,uBAAX,yBAA4DuU,GAEjF,OACIpU,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW48E,EAAcv8E,QAAS3E,KAAK8gF,YACvCxnE,GAELlU,EAAAH,QAAA/J,cAAC+mB,EAAAud,QACGpmB,UAAWA,EACXylB,SAAU7+B,KAAKihF,aAEdvhF,aAOrBygF,EAAaj+E,WACTkX,UAAW7Y,UAAUiF,OACrB9F,SAAWa,UAAUiM,WACjBjM,UAAUic,MACVjc,UAAUxB,SAEd4hC,OAAapgC,UAAUmF,KACvBw5B,YAAa3+B,UAAUmF,KACvB4T,KAAa/Y,UAAU+wD,OACnBhtD,UAAW/D,UAAUiF,SAEzBgU,WAAyBjZ,UAAUiF,OACnCu7E,eAAyBxgF,UAAUmF,KACnCs7E,wBAAyBzgF,UAAUmF,MAGvC,IAAMm7B,GAAmB,EAAAnR,EAAA/uB,SACrB,SAAA6R,GAAA,IAAG9R,EAAH8R,EAAG9R,GAAH,OACIqgF,eAAyBrgF,EAAGqgF,eAC5BC,wBAAyBtgF,EAAGsgF,wBAC5B9hD,YAAyBx+B,EAAGw+B,cAJX,CAMvBihD,KAE2BA,aAApBt/C,iFCjET,QAAA9mC,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAmgE,EAAAngE,EAAA,KAGAonF,EAAApnF,EAAA,KACA8+B,EAAA9+B,EAAA,QAIAA,EAAA,KACA2U,EAAA3U,EAAA,IACA21B,EAAA31B,EAAA,uDAEA,IAAMqnF,EAAa,SAAA//E,GAAA,IACf81D,EADe91D,EACf81D,aACA/nC,EAFe/tB,EAEf+tB,aACAoL,EAHen5B,EAGfm5B,UACA9Z,EAJerf,EAIfqf,uBAEAua,EANe55B,EAMf45B,mBACAq8B,EAPej2D,EAOfi2D,eACA7K,EAReprD,EAQforD,sBACAnxB,EATej6B,EASfi6B,mBATe,OAYfl2B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,2BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACVk2B,GACDp1B,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACg/D,EAAAl7B,YACGn6B,MAAM,EAAA4J,EAAA2C,UAAS,SACfkI,KAAMlU,EAAAH,QAAA/J,cAAC29B,EAAAg1B,WAAUvpD,UAAU,iBAC3B86B,QAASnQ,UAAO9P,QAEpB/Z,EAAAH,QAAA/J,cAACg/D,EAAAl7B,YACGn6B,MAAM,EAAA4J,EAAA2C,UAAS,aACfkI,KAAMlU,EAAAH,QAAA/J,cAAC29B,EAAAsB,eAAc71B,UAAU,iBAC/B86B,QAASnQ,UAAO9yB,YAEpBiJ,EAAAH,QAAA/J,cAACg/D,EAAAl7B,YACGn6B,MAAM,EAAA4J,EAAA2C,UAAS,aACfkI,KAAMlU,EAAAH,QAAA/J,cAAC29B,EAAAwB,eAAc/1B,UAAU,iBAC/B86B,QAASnQ,UAAO3yB,YAEpB8I,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,OACdc,EAAAH,QAAA/J,cAACg/D,EAAA2mB,cACGh8E,MAAM,EAAA4J,EAAA2C,UAAS,aACfgnB,OAAQk/B,EACRn/B,UAAWg/B,IASf/xD,EAAAH,QAAA/J,cAACg/D,EAAA2mB,cACGh8E,MAAM,EAAA4J,EAAA2C,UAAS,iBACfgnB,OAAQkD,EACRnD,UAAW8C,SAInB7L,IAAgBoL,IACpBp1B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,kBACXc,EAAAH,QAAA/J,cAACg/D,EAAAl7B,YACG1lB,KAAMlU,EAAAH,QAAA/J,cAACimF,EAAAtmB,YAAWv2D,UAAU,iBAC5BO,MAAM,EAAA4J,EAAA2C,UAAS,UACfiuB,cAAe,WACP3e,GACA+rC,KAEJ,EAAA/9C,EAAA0hB,uBAQpBgxD,EAAWl/E,WACPi1D,aAA4B52D,UAAUkF,KACtC2pB,aAA4B7uB,UAAUkF,KACtC+0B,UAA4Bj6B,UAAUkF,KACtCib,uBAA4BngB,UAAUkF,KACtC2xD,sBAA4B72D,UAAUkF,KACtCw1B,mBAA4B16B,UAAUkF,KACtC6xD,eAA4B/2D,UAAUmF,KACtC+mD,sBAA4BlsD,UAAUmF,KACtC6xD,2BAA4Bh3D,UAAUmF,KACtC41B,mBAA4B/6B,UAAUmF,iBAG3B,EAAAgqB,EAAA/uB,SACX,SAAA6R,GAAA,IAAGhS,EAAHgS,EAAGhS,OAAQE,EAAX8R,EAAW9R,GAAX,OACI0uB,aAA4B5uB,EAAO4uB,aACnC+nC,aAA4Bz2D,EAAG8f,gBAC/Bga,UAA4B95B,EAAG85B,UAC/B9Z,uBAA4BhgB,EAAGggB,uBAC/B02C,sBAA4B12D,EAAGkgB,uBAC/Bqa,mBAA4Bv6B,EAAGk8B,oBAC/B06B,eAA4B52D,EAAG42D,eAC/B7K,sBAA4B/rD,EAAG+rD,sBAC/B8K,2BAA4B72D,EAAG62D,2BAC/Bj8B,mBAA4B56B,EAAG46B,qBAXxB,CAab8lD,qHC7GF,wDAAArnF,EAAA,IACA8+B,EAAA9+B,EAAA,IACAmgE,EAAAngE,EAAA,KACAsnF,EAAAtnF,EAAA,OAYSunF,0BAVyB,kBAC9Bl8E,EAAAH,QAAA/J,cAACg/D,EAAAimB,cACG/mE,UAAU,QACVE,KAAMlU,EAAAH,QAAA/J,cAAC29B,EAAA60B,SAAD,MACNl0C,WAAW,iBAEXpU,EAAAH,QAAA/J,cAACmmF,EAAAE,cAAD,oGCXRxoF,OAAA0J,KAAA++E,GAAA7+E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAsjF,EAAA5iF,8GCAA,QAAA7E,EAAA,QACAA,EAAA,IACA0nF,EAAA1nF,EAAA,KACAmgE,EAAAngE,EAAA,wDAEA,IAAMwnF,EAAgB,SAAAlgF,GAAA,IAAG6U,EAAH7U,EAAG6U,KAAH,OAClB9Q,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KAEQ4J,GAAQA,EAAKtd,OACTsd,EAAKrO,IAAI,SAACyJ,EAAM6a,GAAP,OACL/mB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKutB,GACjB/mB,EAAAH,QAAA/J,cAACg/D,EAAAl7B,YAAWn6B,KAAMyM,EAAK6a,QAI/B/mB,EAAAH,QAAA/J,cAACumF,EAAAC,kBAAD,QAMhBH,EAAcr/E,WACVgU,KAAM3V,UAAUxB,UAGXwiF,0HCzBT,wDAAAxnF,EAAA,IACA0U,EAAA1U,EAAA,GACA8+B,EAAA9+B,EAAA,MAgBS2nF,kBAdiB,kBACtBt8E,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sCACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBACXc,EAAAH,QAAA/J,cAAC29B,EAAA60B,UAASppD,UAAU,uBAExBc,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,oCAAmC,EAAAmK,EAAA2C,UAAS,qBAC1DhM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,qCAAoC,EAAAmK,EAAA2C,UAAS,iICZ7E,wDAAArX,EAAA,IACA0U,EAAA1U,EAAA,GACA8+B,EAAA9+B,EAAA,IAGA6+B,EAAA7+B,EAAA,KAEA,IAAM4+D,IAEEr/C,KAASlU,EAAAH,QAAA/J,cAAC29B,EAAAg1B,WAAUvpD,UAAU,iBAC9BO,MAAS,EAAA4J,EAAA2C,UAAS,SAClBguB,QAASnQ,SAAO9P,kBAUTw5C,iFCrBf,IAAAn5D,EAAAzF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA20B,EAAA30B,EAAA,SACAA,EAAA,UACAA,EAAA,MACA21B,EAAA31B,EAAA,uDAEA,IAAM4nF,EAAS,SAACxhF,GACZ,OAAIA,EAAMqvC,UACCpqC,EAAAH,QAAA/J,cAAC0mF,EAAA38E,QAAmB9E,EAAMhD,OAG9BiI,EAAAH,QAAA/J,cAAC2mF,EAAA58E,SAAamqB,aAAcjvB,EAAMivB,gBAG7CuyD,EAAOz/E,WACH/E,MAAc8gC,YAAcoiC,yBAC5B7wB,UAAcjvC,UAAUkF,KACxB2pB,aAAc7uB,UAAUkF,iBAKb,EAAAipB,EAAAsjC,aAAW,EAAAtiC,EAAA/uB,SACtB,SAAAU,GAAA,IAAGb,EAAHa,EAAGb,OAAQC,EAAXY,EAAWZ,OAAX,OACI2uB,aAAc5uB,EAAO4uB,aACrBjyB,MAAcsD,EAAOtD,MACrBqyC,UAAc/uC,EAAO+uC,YAJH,CAMxBmyC,uSC9BF5nF,EAAA,QACAA,EAAA,IACAyJ,EAAAzJ,EAAA,KACA0U,EAAA1U,EAAA,OACAA,EAAA,yDAEA,IAAMynE,EAAiB,SAAAngE,GAAuB,IAApBrE,EAAoBqE,EAApBrE,KAAMuc,EAAclY,EAAdkY,QACxBuoE,EAAM,GASV,OAPIA,EADmB,iBAAnB,IAAOvoE,EAAP,YAAAvD,EAAOuD,IACDnU,EAAAH,QAAA/J,cAACqjF,EAAAt5E,SACHyc,IAAKnI,EAAQmI,IACbC,UAAWpI,EAAQoI,YAGjBpI,EAGNnU,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAACsI,EAAAomB,WAAU5sB,KAAMA,IACjBoI,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,kBAAkBw9E,IAAO,EAAArzE,EAAA2C,UAAS,6DAK3DowD,EAAet/D,WACXqX,QAAShZ,UAAUiM,WACfjM,UAAU+wD,OACN3vC,UAAWphB,UAAUxB,OACrB2iB,IAAWnhB,UAAUiF,SAEzBjF,UAAUiF,SAEdxI,KAAMuD,UAAUiF,kBAGLg8D,oKCnCRv8D,iGCAP,QAAAlL,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,MACA21B,EAAA31B,EAAA,uDAEA,IAAMgjC,aAAA,IAAA17B,2RAAAkJ,CAAAC,mBAAAC,KAAY,SAAAC,EAAOlK,GAAP,OAAAgK,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRtK,EAAOqpC,cAAcrpC,EAAOu6D,yBADpB,wBAAAnwD,EAAAQ,SAAAV,OAAApN,MAAZ,gBAAAmoD,GAAA,OAAApkD,EAAA9H,MAAAyG,KAAA0B,YAAAq7B,GAIAglD,EAAW,WACb1iF,OAAOmO,SAASU,KAAO02C,UAAI1U,OAAO,YAGhC8xC,EAAuB,SAAAxvE,GAAA,IAAGhS,EAAHgS,EAAGhS,OAAQ87B,EAAX9pB,EAAW8pB,WAAX,OACzBl3B,EAAAH,QAAA/J,cAAC+mF,EAAAh9E,SACGwQ,OAAO,EAAAhH,EAAA2C,UAAS,WAChB8wE,qBAAqB,EAAAzzE,EAAA2C,UAAS,oCAC9B+wE,oBAAoB,EAAA1zE,EAAA2C,UAAS,sBAC7B2rB,UAAW,kBAAMA,EAAUv8B,IAC3BuhF,SAAUA,EACVzlD,WAAYA,GAEZl3B,EAAAH,QAAA/J,cAACqjF,EAAAt5E,SAASyc,IAAI,6FAItBsgE,EAAqB9/E,WACjB1B,OAAYD,UAAUxB,OACtBu9B,WAAY/7B,UAAUkF,MAG1B,IAAM28E,GAAoB,EAAA1yD,EAAA/uB,SACtB,SAAAkS,GAAA,IAAGrS,EAAHqS,EAAGrS,OAAH,OACI87B,YAAa97B,EAAOu6B,2BACpBv6B,WAHkB,CAKxBwhF,aACaI,iFCxCf,QAAAroF,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,wDAEA,IAAMsoF,EAAgB,SAAAhhF,GAQhB,IAPF8gF,EAOE9gF,EAPF8gF,mBACAziF,EAME2B,EANF3B,SACAwiF,EAKE7gF,EALF6gF,oBACAnlD,EAIE17B,EAJF07B,UACAglD,EAGE1gF,EAHF0gF,SACAzlD,EAEEj7B,EAFFi7B,WACA7mB,EACEpU,EADFoU,MAEA,OAAI6mB,EAEIl3B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,2BACXc,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,2BAA2BmR,GACzCrQ,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,4BAA4B5E,GACzC0F,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,2BACXc,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,WAAW,EAAAU,EAAAC,SAAW,0BAA2B,yCACjDT,YAAA,EACAK,KAAMs9E,EACNx9E,QAASo9E,IAEb38E,EAAAH,QAAA/J,cAACmxB,EAAApnB,SACGX,WAAW,EAAAU,EAAAC,SAAW,0BAA2B,qCACjDT,YAAA,EACAK,KAAMq9E,EACNv9E,QAASo4B,OAQ1B33B,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,OAGX+1E,EAAcngF,WACVigF,mBAAqB5hF,UAAUiF,OAC/B08E,oBAAqB3hF,UAAUiF,OAC/B82B,WAAqB/7B,UAAUkF,KAC/Bs8E,SAAqBxhF,UAAUmF,KAC/Bq3B,UAAqBx8B,UAAUmF,KAC/B+P,MAAqBlV,UAAUiF,kBAGpB68E,wMClDNC,2EADFr9E,2GCAQ,WACwC,kBAAmBs9E,WAClEljF,OAAOosB,iBAAiB,OAAQ,WAC5B,IAAI+2D,EAAYnjF,OAAOmO,SAASS,SAE1Bw0E,GADND,EAAY,eAAej1E,KAAKi1E,GAAanjF,OAAOmO,SAASS,SAASN,QAAQ,aAAc,IAAM,IAC5F,oBACN40E,UAAUG,cACLC,SAASF,GACT13E,KAAK,SAAA63E,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBhqE,QACbypE,UAAUG,cAAcO,WAKxB9jF,QAAQo5D,IAAI,6CAKZp5D,QAAQo5D,IAAI,2CAM/B2qB,MAAM,SAAA/lF,GACHgC,QAAQhC,MAAM,4CAA6CA,UAM/DmlF,WAAT,WACC,kBAAmBC,WACnBA,UAAUG,cAAcS,MAAMp4E,KAAK,SAAA63E,GAC/BA,EAAaN","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"f8976a1b0f3e004d4226\",\"account_password\":\"57e1189847554654c3b2\",\"api_toke\":\"9187e95fc47f5cab9380\",\"authorized_application\":\"b6d916f574315ff274f0\",\"cashier_password\":\"acc425edfa29c0397119\",\"contract\":\"a94246efae9e6b189f79\",\"financial_assessment\":\"05c47663c699916ce8c9\",\"limits\":\"74dd8369cd901d220d51\",\"login_history\":\"d51635e061dc3cb79c2d\",\"personal_details\":\"18711e4d92a743e2e0b9\",\"portfolio\":\"74396f38c1d3529f3da4\",\"self_exclusion\":\"e3dc9c8d8062aece0f2c\",\"settings\":\"9e7aeb08a04ef8de20fa\",\"statement\":\"d18d3931786cf7f49fbe\",\"vendors~smart_chart\":\"99ad659db3094f4046b7\",\"smart_chart\":\"c817678c02bacbed0b10\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([267,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date-time';\n","export * from './icon-arrow.jsx';\nexport * from './icon-back.jsx';\nexport * from './icon-calendar-today.jsx';\nexport * from './icon-calendar.jsx';\nexport * from './icon-chevron-double-left.jsx';\nexport * from './icon-chevron-double-right.jsx';\nexport * from './icon-chevron-left.jsx';\nexport * from './icon-chevron-right.jsx';\nexport * from './icon-country-flag.jsx';\nexport * from './icon-clear.jsx';\nexport * from './icon-clock.jsx';\nexport * from './icon-close.jsx';\nexport * from './icon-error.jsx';\nexport * from './icon-exclamation.jsx';\nexport * from './icon-info-blue.jsx';\nexport * from './icon-info-outline.jsx';\nexport * from './icon-flag.jsx';\nexport * from './icon-minimize.jsx';\nexport * from './icon-minus.jsx';\nexport * from './icon-plus.jsx';\nexport * from './icon-question.jsx';\nexport * from './icon-red-dot.jsx';\nexport * from './icon-success.jsx';\nexport * from './icon-warning.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            <span className={classNames('btn__text', classNameSpan)}>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","export * from './icon-bell.jsx';\nexport * from './icon-cashier.jsx';\nexport * from './icon-hamburger.jsx';\nexport * from './icon-portfolio.jsx';\nexport * from './icon-statement.jsx';\nexport * from './icon-trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconInfoBlue }    from 'Assets/Common/icon-info-blue.jsx';\nimport { IconInfoOutline } from 'Assets/Common/icon-info-outline.jsx';\nimport { IconQuestion }    from 'Assets/Common/icon-question.jsx';\nimport { IconRedDot }      from 'Assets/Common/icon-red-dot.jsx';\n\nclass Tooltip extends React.Component {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip')}\n                data-tooltip={message}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <IconInfoOutline\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <IconInfoBlue\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <IconQuestion className={icon_class} />}\n                {icon === 'dot'      && <IconRedDot className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","export default from './input-field.jsx';\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const loading_class = classNames('block-ui__loading', className);\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.string,\n    updateSelected  : PropTypes.func,\n};\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill-template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","export * from './drawer-header.jsx';\nexport * from './drawer-item.jsx';\nexport * from './drawer-items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer-toggle.jsx';\nexport * from './toggle-drawer.jsx';\n","export BinaryLink         from './binary-link.jsx';\nexport ButtonLink         from './button-link.jsx';\nexport default            from './binary-routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export * from './icon-trade-types.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info.current_spot, spot_time);\n\n    const is_expired = contract_info.is_expired;\n    const exit = (exit_time in digits_info) || !is_expired ? {} :\n        createDigitInfo(contract_info.exit_tick, exit_time);\n\n    return {\n        ...entry,\n        ...current,\n        ...exit,\n    };\n};\n\nconst createDigitInfo = (spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            spot,\n        },\n    };\n};\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconClock = ({\n    className,\n    onClick,\n    height = '16',\n    width = '16',\n}) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 16 16'\n        width={width}\n        height={height}\n        className={className}\n        onClick={onClick}\n    >\n        <g fill='none' fillRule='nonzero' stroke='#5C5C5C'>\n            <circle cx='8' cy='8' r='7.5' />\n            <path strokeLinecap='round' strokeLinejoin='round' d='M8 3.5v5h3.5' />\n        </g>\n    </svg>\n);\n\nIconClock.propTypes = {\n    className: PropTypes.string,\n    height   : PropTypes.string,\n    onClick  : PropTypes.func,\n    width    : PropTypes.string,\n};\n\nexport { IconClock };\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport { IconError };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconInfoBlue = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#2196F3' />\n            <g fill='#FFF' transform='translate(6.5 4)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <rect width='2' height='5' x='.5' y='3' rx='1' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconInfoBlue.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoBlue };\n","export * from './icon-maximize.jsx';\nexport * from './icon-positions.jsx';\nexport * from './icon-settings.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Button     from './button.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={val.text}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return <div className='button-menu'>{menu}</div>;\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","export default from './range-slider.jsx';\n","import { localize } from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","import extend                  from 'extend';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport {\n    getEndSpotTime,\n    isUserSold }               from 'Stores/Modules/Contract/Helpers/logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n\nconst getSpotCount = (contract_info, spot_count) =>\n    isDigitContract(contract_info.contract_type) ? spot_count + 1 : spot_count;\n\n// -------------------- Lines --------------------\nexport const createMarkerExpiry = (contract_info) => {\n    const end_spot_time = getEndSpotTime(contract_info);\n\n    if (contract_info.status === 'open' || !end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        end_spot_time,\n    );\n};\n\nexport const createMarkerPurchaseTime = (contract_info) => {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n};\n\nexport const createMarkerStartTime = (contract_info) => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = (contract_info) => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type      = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props  = {};\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n        const spot_count = 1;\n\n        component_props = {\n            spot_value: contract_info.entry_tick,\n            spot_epoch: contract_info.entry_tick_time,\n            spot_count,\n        };\n    }\n\n    return createMarkerConfig(\n        marker_type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        component_props,\n    );\n};\n\nexport const createMarkerSpotExit = (contract_info, idx, align_label) => {\n    if (!contract_info.exit_tick_time || isUserSold(contract_info)) return false;\n    const spot_count = getSpotCount(contract_info, idx);\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        contract_info.exit_tick_time,\n        contract_info.exit_tick,\n        {\n            spot_value: `${contract_info.exit_tick}`,\n            spot_epoch: `${contract_info.exit_tick_time}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n            spot_count,\n            align_label,\n        },\n    );\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, idx, align_label) => {\n    const spot_count = getSpotCount(contract_info, idx);\n\n    const marker_config = createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_MIDDLE.type,\n        tick.time,\n        tick.price,\n        {\n            spot_value: `${tick.price}`,\n            spot_epoch: `${tick.time}`,\n            spot_count,\n            align_label,\n        },\n    );\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    return marker_config;\n};\n","import { localize }    from '_common/localize';\nimport MarkerLine      from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpotLabel from 'Modules/SmartChart/Components/Markers/marker-spot-label.jsx';\nimport MarkerSpot      from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpotLabel,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n    SPOT_ENTRY: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type          : 'LINE_END',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'dash',  label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type          : 'LINE_PURCHASE',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type          : 'LINE_START',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type          : 'SPOT_ENTRY',\n        marker_config : MARKER_CONTENT_TYPES.SPOT_ENTRY,\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_EXIT: {\n        type          : 'SPOT_EXIT',\n        marker_config : MARKER_CONTENT_TYPES.SPOT,\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type          : 'SPOT_MIDDLE',\n        marker_config : MARKER_CONTENT_TYPES.SPOT,\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React        from 'react';\n\nconst MarkerSpot = ({\n    className,\n    spot_count,\n    status,\n}) => (\n    <div\n        className={classNames('chart-spot', className, {\n            'chart-spot__spot--won' : status === 'won',\n            'chart-spot__spot--lost': status === 'lost',\n        })}\n    >{spot_count}\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    className : PropTypes.string,\n    spot_count: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\n\nexport default observer(MarkerSpot);\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list\n    .filter(barrier => barrier !== undefined && barrier !== null)\n    .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","import ContractType from '../Helpers/contract-type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal_checked',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3.613 8.5l3.26 3.668a.5.5 0 1 1-.747.664l-4-4.5a.5.5 0 0 1 0-.664l4-4.5a.5.5 0 0 1 .748.664L3.614 7.5H13.5a.5.5 0 1 1 0 1H3.613z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconInfoOutline = ({ className, onMouseEnter, onMouseLeave }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        height='16'\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        viewBox='0 0 16 16'\n        width='16'\n        xmlns='http://www.w3.org/2000/svg'\n    >\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.16)' fillRule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM8 6a.75.75 0 1 0 0-1.5A.75.75 0 0 0 8 6zm0 1a.5.5 0 0 0-.5.5v4a.5.5 0 1 0 1 0v-4A.5.5 0 0 0 8 7z' />\n    </svg>\n);\n\nIconInfoOutline.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoOutline };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconQuestion = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='#FFF' fillRule='evenodd'>\n            <path d='M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm0-1A7 7 0 1 0 8 1a7 7 0 0 0 0 14z' fillRule='nonzero' />\n            <path d='M7.39 9.518c.007-.373.052-.668.134-.885.082-.216.25-.456.503-.72l.646-.636c.276-.298.415-.618.415-.96 0-.33-.09-.588-.272-.774-.18-.187-.444-.28-.789-.28-.335 0-.605.084-.809.254a.842.842 0 0 0-.306.682H6c.007-.508.196-.918.57-1.23.373-.313.859-.469 1.457-.469.622 0 1.106.16 1.453.478.347.318.52.755.52 1.31 0 .55-.266 1.091-.799 1.625l-.538.508c-.24.255-.36.62-.36 1.097h-.912zm-.039 1.492a.5.5 0 0 1 .136-.355c.09-.096.224-.144.402-.144.178 0 .312.048.404.144a.493.493 0 0 1 .139.355.477.477 0 0 1-.139.351c-.092.093-.226.139-.404.139-.178 0-.312-.046-.402-.139a.481.481 0 0 1-.136-.35z' />\n        </g>\n    </svg>\n);\n\nIconQuestion.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuestion };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconRedDot = ({ className }) => (\n    <svg className={className} width='4' height='4' xmlns='http://www.w3.org/2000/svg'>\n        <circle cx='1163' cy='626' r='2' transform='translate(-1161 -624)' fill='#E31C4B' fillRule='nonzero' />\n    </svg>\n);\n\nIconRedDot.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconRedDot };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconSuccess = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4CAF50' />\n            <path fill='#FFF' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconSuccess.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSuccess };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconWarning = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V4a1 1 0 0 1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconWarning.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconWarning };\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs-item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-dialog__row' onClick={toggle || onClick}>\n        <span className='settings-dialog__row-name'>{name}</span>\n        {toggle ?\n            <SwitchButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst SwitchButton = ({ style, toggled }) => {\n    const toggle_style = style || 'switch-button';\n    const icon_class = classNames(toggle_style, {\n        [`${toggle_style}--toggled`]: toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nSwitchButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default SwitchButton;\n","export * from './icon-logout.jsx';\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account-password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api-token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized-applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier-password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial-assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login-history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal-details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self-exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon-trade-categories.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport UILoader          from 'App/Components/Elements/ui-loader.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract-info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    currency,\n    is_contract_mode,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    resetPurchase,\n    togglePurchaseLock,\n    purchase_info,\n    proposal_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_contract_mode || is_disabled}\n                id={`purchase_${type}`}\n                className='btn--primary btn-purchase'\n                has_effect\n                onClick={() => {\n                    onClickPurchase(info.id, info.stake, type);\n                }}\n            >\n                <React.Fragment>\n                    <div className='btn-purchase__effect-main' />\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__content'>\n                        <div className='btn-purchase__trade-type'>\n                            <IconTradeType type={type.toLowerCase()} className='btn-purchase__trade-type-icon' />\n                            <span className='btn-purchase__trade-type-text'>{localize('[_1]', trade_types[type])}</span>\n                        </div>\n                    </div>\n                    <div className='btn-purchase__info'>\n                        <div className='btn-purchase__return'>{is_disabled ? '---,-' : info.returns}</div>\n                        <div className='btn-purchase__profit'>\n                            {is_disabled ? '--,--' : <Money amount={info.profit} currency={currency} className='btn-purchase__currency' />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Button>\n        );\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {is_purchase_error &&\n                <MessageBox\n                    purchase_info={purchase_info}\n                    onClick={resetPurchase}\n                    currency={currency}\n                />\n                }\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                <React.Fragment>\n                    {(!is_purchase_enabled && idx === 0) &&\n                    <UILoader classNameBlock='purchase-container__loading' />\n                    }\n                    <ContractInfo\n                        currency={currency}\n                        proposal_info={info}\n                        has_increased={info.has_increased}\n                        is_visible={!is_contract_mode}\n                    />\n                    <div className='btn-purchase__shadow-wrapper'>\n                        {\n                            is_purchase_confirm_on ?\n                                <PopConfirm\n                                    alignment='left'\n                                    cancel_text={localize('Cancel')}\n                                    confirm_text={localize('Purchase')}\n                                    message={localize('Are you sure you want to purchase this contract?')}\n                                >\n                                    {purchase_button}\n                                </PopConfirm>\n                                :\n                                purchase_button\n                        }\n                    </div>\n                </React.Fragment>\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_contract_mode          : PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_contract_mode          : modules.smart_chart.is_contract_mode,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', `popconfirm--${alignment}`, {\n        [`popconfirm--${alignment}--open`]: is_visible,\n        'popconfirm--open'                : is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm__title'>\n                <IconExclamation className='popconfirm__icon_exclamation' />\n                <h4 className='popconfirm__header'>{message}</h4>\n            </div>\n            <div className='popconfirm__button-wrapper'>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onClose}\n                >\n                    <span className='popconfirm__button-text'>{cancel_text}</span>\n                </div>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onConfirm}\n                >\n                    <span className='popconfirm__button-text'>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className, classNamePath }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className={classNamePath || undefined} fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className={classNamePath || undefined} fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path className={classNamePath || undefined} fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                        this.props.ui_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules, ui }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n        ui_store       : ui,\n    })\n)(TradeParams);\n","export default from './dropdown.jsx';\n","export default from './trading-date-picker.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer__header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='drawer__icons drawer__icons-btn-close' onClick={closeBtn}>\n                        <IconClose className='drawer__icons-icon-close' />\n                    </div>\n                    <div className='drawer__notifications'>\n                        <h4 className='drawer__notifications-header'>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='drawer__icons drawer__icons-btn-close' onClick={closeBtn}>\n                        <IconClose className='drawer__icons-icon-close' />\n                    </div>\n                    <div className='drawer__icons drawer__brand-logo'>\n                        <div className='drawer__image' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer__item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' className='drawer__item-link' onClick={custom_action}>\n                        <span className='drawer__item-link-text'>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink className='drawer__item-link' to={link_to}>\n                        <span className='drawer__item-link-text'>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer-header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer__bg', {\n            'drawer--show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', { [`drawer--${alignment}`]: alignment });\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames={{\n                    enter    : 'drawer__container--enter',\n                    enterDone: 'drawer__container--enter-done',\n                    exit     : 'drawer__container--exit',\n                }}\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","export default from './error-component.jsx';\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            <IconPortfolio className='portfolio-empty__icon' />\n            <span className='portfolio-empty__text'>{localize('No running contract')}</span>\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","export default from './date-picker.jsx';\n","import PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { connect }             from 'Stores/connect';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }             from 'Stores/Modules/Contract/Helpers/logic';\nimport { LastDigitPrediction } from '../Components/LastDigitPrediction';\n\nconst Digits = ({\n    contract_info,\n    digits_info,\n    display_status,\n    is_trade_page,\n}) => {\n    const { barrier, contract_type } = contract_info;\n    const is_digit = isDigitContract(contract_type);\n    const is_ended = isEnded(contract_info);\n\n    return (\n        <React.Fragment>\n            { contract_type && is_digit &&\n                <LastDigitPrediction\n                    barrier={+barrier}\n                    contract_type={contract_type}\n                    digits_info={digits_info}\n                    is_ended={is_ended}\n                    is_trade_page={is_trade_page}\n                    status={display_status}\n                />\n            }\n        </React.Fragment>\n    );\n};\n\nDigits.propTypes = {\n    contract_info : PropTypes.object,\n    digits_info   : PropTypes.object,\n    display_status: PropTypes.string,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        digits_info   : modules.contract.digits_info,\n        display_status: modules.contract.display_status,\n    })\n)(Digits);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract-error.jsx';\nimport { InfoBoxLongcode } from '../Components/InfoBox';\nimport ChartCloseBtn       from '../../SmartChart/Components/chart-close-btn.jsx';\n\nconst InfoBox = ({\n    is_contract_mode,\n    contract_info,\n    onClickNewTrade,\n    onClose,\n    removeError,\n    sell_info,\n}) => {\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    const Contents = InfoBoxLongcode;\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        <CSSTransition\n            in={is_contract_mode}\n            timeout={250}\n            classNames={{\n                enter    : 'info-box-container--enter',\n                enterDone: 'info-box-container--enter-done',\n                exit     : 'info-box-containert--exit',\n            }}\n            unmountOnExit\n        >\n            <React.Fragment>\n                <div className='info-box-container'>\n                    { contract_info.contract_type &&\n                        <div className={box_class}>\n                            <Contents\n                                contract_info={contract_info}\n                                is_ended={is_ended}\n                                sell_info={sell_info}\n                            />\n                        </div>\n                    }\n                    <ContractError\n                        message={sell_info.error_message}\n                        onClickClose={removeError}\n                    />\n                    <ChartCloseBtn\n                        is_contract_mode={is_contract_mode}\n                        onClose={(e) => {\n                            onClose();\n                            onClickNewTrade(e);\n                        }}\n                    />\n                </div>\n            </React.Fragment>\n        </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info   : PropTypes.object,\n    is_contract_mode: PropTypes.bool,\n    is_trade_page   : PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onClose         : PropTypes.func,\n    removeError     : PropTypes.func,\n    sell_info       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info   : modules.contract.contract_info,\n        removeError     : modules.contract.removeSellError,\n        sell_info       : modules.contract.sell_info,\n        onClickNewTrade : modules.trade.onClickNewTrade,\n        onClose         : modules.contract.onCloseContract,\n        is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg className='chart-spot__icon' xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 210,\n\t\"./ja.js\": 210\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 475;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance, true);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base-store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid  = LocalStore.get('active_loginid');\n        this.accounts = LocalStore.getObject(storage_key);\n        this.switched = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract-store';\nimport PortfolioStore  from './Portfolio/portfolio-store';\nimport SmartChartStore from './SmartChart/smart-chart-store';\nimport StatementStore  from './Statement/statement-store';\nimport TradeStore      from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                  from 'mobx';\nimport { isEmptyObject }          from '_common/utility';\nimport { localize }               from '_common/localize';\nimport { WS }                     from 'Services';\nimport { createChartBarrier }     from './Helpers/chart-barriers';\nimport { createChartMarkers }     from './Helpers/chart-markers';\nimport {\n    createChartTickMarkers,\n    destroyChartTickMarkers }    from './Helpers/chart-tick-markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base-store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onLoadContract(contract_info) {\n        if (contract_info === this.contract_id || !contract_info) return;\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.contract_info = contract_info;\n        this.contract_id   = +contract_info.contract_id;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        this.smart_chart.setContractMode(true);\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        this.smart_chart.setContractMode(false);\n        return new Promise((resolve) => resolve(this.onCloseContract()));\n    }\n\n    @action.bound\n    onCloseContract() {\n        this.forgetProposalOpenContract();\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n        this.chart_config      = {};\n\n        destroyChartTickMarkers();\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n        this.onCloseContract();\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            this.contract_id   = null;\n            this.smart_chart.setContractMode(false);\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n\n        createChartBarrier(this.smart_chart, this.contract_info);\n\n        if (this.contract_info.tick_count && this.contract_info.exit_tick_time) { // TODO: remove this.contract_info.exit_tick_time when ongoing contracts are implemented\n            createChartTickMarkers(this.smart_chart, this.contract_info);\n        } else {\n            createChartMarkers(this.smart_chart, this.contract_info);\n        }\n\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import {\n    createMarkerExpiry,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime }     from './chart-marker-helpers';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerExpiry,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n        <div className='chart-marker-line__label'>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import { observer }  from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { addComma }  from '_common/base/currency_base';\nimport { toMoment }  from 'Utils/Date';\nimport { IconClock } from 'Assets/Common/icon-clock.jsx';\nimport MarkerSpot    from './marker-spot.jsx';\n\nclass MarkerSpotLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_label: !this.props.has_hover_toggle,\n        };\n    }\n\n    handleHoverToggle = () => {\n        this.setState((state) =>  ({ show_label: !state.show_label }));\n    }\n\n    render() {\n        let marker_spot =\n            <MarkerSpot\n                className={this.props.spot_className}\n                spot_count={this.props.spot_count}\n                status={this.props.status}\n            />;\n\n        if (this.props.has_hover_toggle) {\n            marker_spot =\n                <div className='marker-hover-container' onMouseEnter={this.handleHoverToggle} onMouseLeave={this.handleHoverToggle}>\n                    { marker_spot }\n                </div>;\n        }\n\n        return (\n            <div className={'chart-spot-label'}>\n                {this.state.show_label &&\n                    <div className='chart-spot-label__info-container'>\n                        <div className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${this.props.align_label}`}>\n                            <div className='chart-spot-label__time-container'>\n                                <IconClock height='10' width='10' className='chart-spot-label__time-icon' />\n                                <p className='chart-spot-label__time'>{toMoment(+this.props.spot_epoch).format('HH:mm:ss')}</p>\n                            </div>\n                            <div className='chart-spot-label__value-container'>\n                                <p>{addComma(this.props.spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { marker_spot }\n            </div>);\n    }\n}\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label     : PropTypes.oneOf(['top', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    spot_className  : PropTypes.string,\n    spot_count      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_epoch      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_value      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status          : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const is_number      = typeof value === 'number';\n    // need to explicitly convert date string to a JS Date object then pass that into Moment\n    // to get rid of the warning: Deprecation warning: moment construction falls back to js Date\n    const formatted_date = moment(new Date(value)).format('YYYY-MM-DD');\n    return is_number ? epochToMoment(value) : moment.utc(formatted_date);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n","import { WS }                  from 'Services';\nimport {\n    createMarkerExpiry,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerSpotMiddle,\n    createMarkerStartTime    } from './chart-marker-helpers';\n\nexport const createChartTickMarkers = (SmartChartStore, contract_info) => {\n    const tick_marker_handler = tickMarker.getInstance(SmartChartStore, contract_info);\n\n    if (contract_info.exit_tick_time) {\n        tick_marker_handler.addSpotsFromHistory();\n        tick_marker_handler.addLines();\n    } else {\n        // TODO: implement middle tick markers for ongoing contracts\n        // tick_marker_handler.addMarkerSpotsFromStream();\n    }\n};\n\nexport const destroyChartTickMarkers = () => {\n    tickMarker.destroyInstance();\n};\n\nconst zip = (arr, ...arrs) => arr.map((val, idx) => arrs.reduce((a, curr) => [...a, curr[idx]], [val]));\n\nconst makeTickArr = (price_arr, times_arr) =>\n    zip(price_arr, times_arr).reduce((acc, tick) => [...acc, { price: tick[0], time: tick[1] }], []);\n\nconst fnForEach = (fn) => ([...args]) => args.forEach(fn);\n\nconst tickMarker = (function () {\n    let instance;\n\n    const tickMarkerHandler = (SmartChartStore, { ...contract_info }) => {\n        const ticks_history_req = {\n            ticks_history: contract_info.underlying,\n            start        : contract_info.entry_tick_time,\n            end          : contract_info.exit_tick_time,\n            count        : (contract_info.tick_count + 1), // add 1 to prevent for 1-tick contracts from returning 5000 ticks\n        };\n        const ticks_added_to_chart = [];\n\n        const addMarkerFromContract = (markerConfigFn, tick, idx) => {\n            const align_label = labelTopOrBottom(tick, idx);\n            const marker_config = markerConfigFn(contract_info, idx, align_label);\n\n            if (marker_config) SmartChartStore.createMarker(marker_config);\n        };\n\n        const labelTopOrBottom = (tick, idx) => {\n            let align_label = 'top';\n            if (tick && tick.price) {\n                if (idx > 0 && ticks_added_to_chart.length) {\n                    const prev_tick = ticks_added_to_chart[idx - 1];\n\n                    if (+tick.price < +prev_tick.price) align_label = 'bottom';\n                    if (+tick.price === +prev_tick.price) align_label = prev_tick.align_label;\n                }\n                ticks_added_to_chart.push({ ...tick, align_label });\n            }\n            return align_label;\n        };\n\n        const addMarkerFromTick = (markerConfigFn, tick, idx) => {\n            const align_label = labelTopOrBottom(tick, idx);\n            const marker_config = markerConfigFn(contract_info, tick, idx, align_label);\n\n            if (marker_config) SmartChartStore.createMarker(marker_config);\n        };\n\n        const isContractTick = tick =>\n            +tick.time >= +contract_info.entry_tick_time && +tick.time <= +contract_info.exit_tick_time;\n\n        const isMiddleTick = tick =>\n            +tick.time > contract_info.entry_tick_time && tick.time < contract_info.exit_tick_time;\n\n        const isEntryTick = tick => +tick.time === +contract_info.entry_tick_time;\n\n        const isExitTick = tick => +tick.time === +contract_info.exit_tick_time;\n\n        const addTickToChart = (tick, idx) => {\n            const is_entry  = idx === 0 && isEntryTick(tick);\n            const is_exit   = isExitTick(tick);\n            const is_middle = isMiddleTick(tick);\n\n            if (is_entry) addMarkerFromContract(createMarkerSpotEntry, tick, idx);\n            if (is_exit) addMarkerFromContract(createMarkerSpotExit, tick, idx);\n            if (is_middle) addMarkerFromTick(createMarkerSpotMiddle, tick, idx);\n        };\n\n        const addTicks = ([ ...ticks_arr ]) => {\n            const contract_ticks = ticks_arr\n                .sort((a, b) => +a.time - +b.time)\n                .filter(isContractTick);\n\n            contract_ticks.forEach(addTickToChart);\n        };\n\n        const onTicksHistory = (data) => {\n            const { prices, times } = data.history;\n            const ticks = makeTickArr(prices, times);\n\n            addTicks(ticks);\n        };\n\n        return {\n            addSpotsFromHistory: () =>\n                WS.sendRequest({ ...ticks_history_req }).then(onTicksHistory),\n            addLines: () => {\n                fnForEach(addMarkerFromContract)([createMarkerExpiry, createMarkerPurchaseTime, createMarkerStartTime]);\n            },\n            getContractId: () => contract_info.contract_id,\n        };\n    };\n\n    return {\n        getInstance: (SmartChartStore, contract_info) => {\n            if (!instance || instance.getContractId() !== contract_info.contract_id) {\n                instance = tickMarkerHandler(SmartChartStore, contract_info);\n            }\n            return instance;\n        },\n        destroyInstance: () => {\n            // TODO: forget tick history stream for ongoing contracts here\n            if (instance) instance = null;\n        },\n    };\n})();\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const formatMoney = (currency, amount) => <Money amount={amount} currency={currency} />;\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport {\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText }          from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndSpotTime,\n    isUserSold,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            // TODO: Refactor with contract-store and use common helpers to handle contract result\n            WS.proposalOpenContract(contract_id).then(action((proposal_response) => {\n                // populate result details box for specified positions card\n                WS.forget('proposal_open_contract', this.populateResultDetails, { contract_id: response.contract_id });\n                this.populateResultDetails(proposal_response);\n            }));\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        portfolio_position.purchase_time = (proposal.is_forward_starting === 1) ?\n            proposal.date_start\n            :\n            proposal.purchase_time;\n\n        portfolio_position.bid_price        = proposal.bid_price;\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.underlying_code  = proposal.underlying;\n        portfolio_position.underlying_name  = proposal.display_name;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.tick_count       = proposal.tick_count;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n        portfolio_position.chart_config     = proposal;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        const bid_price = this.positions[i].bid_price;\n        this.positions[i].is_sell_requested = false;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        // Toast messages are temporary UI for prompting user of sold contracts\n        if (response.error) {\n            // If unable to sell due to error, give error via toast message if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n            this.root_store.ui.addToastMessage({\n                message: response.error.message,\n                type   : 'error',\n            });\n        } else if (!response.error && response.sell) {\n            const i = this.getPositionIndexById(response.sell.contract_id);\n            this.positions[i].is_sell_requested = false;\n            // update contract store sell info after sell\n            this.root_store.modules.contract.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addToastMessage({\n                message: `Contract was sold for ${response.sell.sold_for}.`,\n                type   : 'info',\n            });\n        }\n    }\n\n    populateResultDetails(response) {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n        const sell_time = isUserSold(contract_response) ?\n            +contract_response.date_expiry\n            :\n            getEndSpotTime(contract_response);\n\n        this.positions[i].id_sell          = +contract_response.transaction_ids.sell;\n        this.positions[i].barrier          = +contract_response.barrier;\n        this.positions[i].duration         = getDurationTime(contract_response);\n        this.positions[i].duration_unit    = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].entry_spot       = +contract_response.entry_spot;\n        this.positions[i].sell_time        = sell_time;\n        this.positions[i].result           = getDisplayStatus(contract_response);\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const is_contract_mode = this.root_store.modules.smart_chart.is_contract_mode;\n        let i = this.getPositionIndexById(contract_id);\n        // check if position to be removed is out of range from the maximum amount rendered in drawer\n        if (this.positions.length > 4) i += 1;\n        this.positions.splice(i, 1);\n        // check if chart is in contract_mode before removing contract details from chart\n        if (is_contract_mode) {\n            this.root_store.modules.contract.onCloseContract();\n            this.root_store.modules.trade.requestProposal();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        details        : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        expiry_time    : portfolio_pos.expiry_time,\n        id             : portfolio_pos.contract_id,\n        indicative     : 0,\n        payout,\n        purchase,\n        reference      : +portfolio_pos.transaction_id,\n        type           : portfolio_pos.contract_type,\n        underlying_code: portfolio_pos.symbol,\n    };\n};\n","import { localize }   from '_common/localize';\nimport {\n    epochToMoment,\n    getDiffDuration } from 'Utils/Date';\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n\n    if (duration_ms >= 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60 * 24));\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        return Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / (1000));\n    }\n    return Math.floor(duration_ms / (1000));\n};\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        s: { name: localize('seconds') },\n        m: { name: localize('minutes') },\n        h: { name: localize('hours') },\n        d: { name: localize('days') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            return unit_map.d.name;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            return unit_map.h.name;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            return unit_map.m.name;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n\nexport const getDurationPeriod = (contract_info) => (\n    getDiffDuration(\n        epochToMoment(contract_info.purchase_time || contract_info.date_start),\n        epochToMoment(contract_info.date_expiry)\n    )\n);\n\nexport const getDurationTime = (contract_info) => (\n    contract_info.tick_count ?\n        contract_info.tick_count\n        :\n        getDurationUnitValue(getDurationPeriod(contract_info))\n);\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nconst store_name = 'smart_chart_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties, store_name });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format-response';\nimport BaseStore                        from '../../base-store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n        WS.forgetAll('proposal');\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url-helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query-string';\nimport getValidationRules                from './Constants/validation-rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract-type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_allow_equal             = false;\n    @observable is_equal_checked           = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount     = 10;\n    @observable basis      = '';\n    @observable basis_list = [];\n    @observable currency   = '';\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            store_name,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => [\n                this.symbol,\n                this.contract_type,\n                this.duration_unit,\n                this.expiry_type,\n                this.duration_units_list,\n                this.contract_types_list,\n            ],\n            () => {\n                this.changeAllowEquals();\n            },\n            { delay: 500 }\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal', 'ticks_history');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        this.currency           = this.root_store.client.currency;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, checked } = e.target;\n        let { value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (value === 'is_equal') {\n            if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type)) {\n                if (checked) {\n                    this.is_equal_checked = 1;\n                    value = 'rise_fall_equal';\n                } else {\n                    this.is_equal_checked = 0;\n                    value = 'rise_fall';\n                }\n            }\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    // toggle smartcharts to contract mode\n                    const contract_id = getPropertyValue(response, ['buy', 'contract_id']);\n                    if (contract_id) {\n                        this.root_store.modules.contract.onMount(contract_id);\n                        this.root_store.ui.openPositionsDrawer();\n                    }\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n                this.is_purchase_enabled = true;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        e.preventDefault();\n        WS.forgetAll('proposal').then(this.requestProposal());\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false, obj_old_values = {}) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        WS.forgetAll('proposal');\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values))\n        ) {\n            const prev_currency = obj_old_values &&\n            !isEmptyObject(obj_old_values) &&\n            obj_old_values.currency ? obj_old_values.currency : this.currency;\n            if (isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency)) {\n                obj_new_values.amount = is_changed_by_user && obj_new_values.amount ?\n                    obj_new_values.amount : getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    changeAllowEquals() {\n        const hasCallPutEqual = (contract_type_list) => {\n            if (!contract_type_list) return false;\n\n            return getPropertyValue(contract_type_list, 'Up/Down')\n                .some(contract => contract.value === 'rise_fall_equal');\n        };\n        const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n            if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n            const contract_list = Object.keys(contract_type_list || {})\n                .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n\n            const contract_duration_list = contract_list\n                .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n            // Check whether rise fall equal is exists and has the current store duration unit\n            return hasCallPutEqual(contract_type_list) ? contract_duration_list\n                .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n                .some(duration => duration.value === duration_unit) : false;\n        };\n        const check_callput_equal_duration = hasDurationForCallPutEqual(this.contract_types_list,\n            this.duration_unit, this.contract_start_type);\n\n        if (!(/^(rise_fall|rise_fall_equal)$/.test(this.contract_type))) {\n            this.is_allow_equal = false;\n            this.is_equal_checked = 0;\n        }\n\n        if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type) && (check_callput_equal_duration || this.expiry_type === 'endtime') && hasCallPutEqual(this.contract_types_list)) {\n            this.is_allow_equal = true;\n        } else {\n            this.is_allow_equal = false;\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.processNewValuesAsync(\n                { currency: this.root_store.client.currency },\n                { currency: this.currency }\n            );\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal', 'ticks_history');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_encoded = encodeURIComponent(query_string);\n        const query_params = new URLSearchParams(query_encoded);\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['stake', 'payout'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['stake', 'payout'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['stake', 'payout'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['stake', 'payout'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['stake', 'payout'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query-string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base-store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    openPositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base-name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport PositionsDrawer             from './Components/Elements/PositionsDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast-message.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <React.Fragment>\n                <div className='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PositionsDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer className='footer'>\n                    <Footer />\n                </footer>\n            </React.Fragment>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './positions-drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { CSSTransition }              from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconMinimize }               from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            active_contract_id,\n            active_positions,\n            error,\n            currency,\n            is_contract_mode,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            openContract,\n            toggleDrawer,\n            server_time,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            // Show only 4 most recent open contracts\n            body_content = active_positions.slice(0, 4).map((portfolio_position) => (\n                <CSSTransition\n                    key={portfolio_position.id}\n                    in={!!(portfolio_position.underlying_code)}\n                    timeout={150}\n                    classNames={{\n                        enter    : 'positions-drawer-card__wrapper--enter',\n                        enterDone: 'positions-drawer-card__wrapper--enter-done',\n                        exit     : 'positions-drawer-card__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <PositionsDrawerCard\n                        active_position={active_contract_id}\n                        onClickSell={onClickSell}\n                        onClickRemove={onClickRemove}\n                        openContract={openContract}\n                        server_time={server_time}\n                        key={portfolio_position.id}\n                        currency={currency}\n                        {...portfolio_position}\n                    />\n                </CSSTransition>\n            ));\n        }\n\n        return (\n            <div className={classNames(\n                'positions-drawer', {\n                    'positions-drawer--open'         : is_positions_drawer_on,\n                    'positions-drawer--contract-mode': is_contract_mode,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconMinimize />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n                {/* TODO: Re-enable reports button positions drawer footer once implemented */}\n                {/* <div className='positions-drawer__footer'> */}\n                {/* <a className='btn btn--link btn--alternate' href='javascript:;'> */}\n                {/* <span className='btn__text'> */}\n                {/* {localize('Go to Reports')} */}\n                {/* </span> */}\n                {/* </a> */}\n                {/* </div> */}\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_contract_mode      : PropTypes.bool,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    openContract          : PropTypes.func,\n    server_time           : PropTypes.object,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, modules, client, ui }) => ({\n        server_time           : common.server_time,\n        currency              : client.currency,\n        active_contract_id    : modules.contract.contract_id,\n        active_positions      : modules.portfolio.active_positions,\n        error                 : modules.portfolio.error,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        is_empty              : modules.portfolio.is_empty,\n        is_loading            : modules.portfolio.is_loading,\n        onClickSell           : modules.portfolio.onClickSell,\n        onClickRemove         : modules.portfolio.removePositionById,\n        openContract          : modules.contract.onLoadContract,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        toggleDrawer          : ui.togglePositionsDrawer,\n    })\n)(PositionsDrawer);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className, classNamePath, is_bold = false }) => (\n    is_bold ?\n        <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                className={classNames(classNamePath, 'color1-fill')}\n                fill='#000'\n                fillOpacity='.8'\n                fillRule='evenodd'\n                d='M8 9.586l5.293-5.293a1 1 0 0 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 1.414-1.414L8 9.586z'\n            />\n        </svg>\n        :\n        <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                className={classNames(classNamePath, 'color1-fill')}\n                fill='rgba(0, 0, 0, 0.8)'\n                fillRule='nonzero'\n                d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z'\n            />\n        </svg>\n);\n\nIconArrow.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconArrow };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, classNamePath, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path className={classNamePath || 'color1-fill'} fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    onClick      : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={classNames('inline-icon', className)}\n        onClick={onClick}\n    >\n        <path className='color1-fill' fill='#000' fillOpacity='.8' fillRule='nonzero' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCountryFlag = ({ type, className }) => {\n    let IconCountry;\n    if (type) {\n        switch (type) {\n            case 'de':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#333' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#FFCD00' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#F10000' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'es':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#DD172C' mask='url(#b)' d='M0 0h24v4H0zm0 12h24v4H0z' />\n                            <path fill='#FFD133' mask='url(#b)' d='M0 4h24v8H0z' />\n                            <g mask='url(#b)'>\n                                <path fill='#FFEDB1' d='M5.333 7.333h1.334V8H5.333z' />\n                                <path d='M4.054 7.3l.167 2.007a1.138 1.138 0 0 0 1.112 1.026c.566 0 1.065-.461 1.112-1.026L6.613 7.3c.014-.174-.105-.3-.288-.3H4.341c-.176 0-.301.133-.287.3z' stroke='#A41517' strokeWidth='.667' />\n                                <path fill='#A41517' d='M4 8h2.667v.667H6L5.333 10l-.666-1.333H4zM2 6h1.333v4.667H2zm5.333 0h1.333v4.667H7.333zM4 5.333c0-.368.306-.666.673-.666h1.32c.372 0 .674.296.674.666v.33A.33.33 0 0 1 6.34 6H4.327A.327.327 0 0 1 4 5.664v-.33z' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'fr':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#001F9B' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF002D' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'id':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#E12237' mask='url(#b)' d='M0 0h24v8H0z' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 8h24v8H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'it':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#1BB65D' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#E43D4C' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'pl':\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M0 14.16c0 1.01.805 1.827 1.797 1.827h20.406c.992 0 1.797-.818 1.797-1.826V8H0v6.16z' fill='#F44336' />\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84V8h24V1.84C24 .83 23.195.012 22.203.012z' fill='#FFF' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n            case 'pt':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#128415' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF2936' mask='url(#b)' d='M8 0h16v16H8z' />\n                            <circle stroke='#FAF94F' mask='url(#b)' cx='8' cy='8' r='3.5' />\n                            <g mask='url(#b)'>\n                                <path d='M6.5 6.341c0-.188.145-.341.333-.341h2.334c.184 0 .333.152.333.341v2.327C9.5 9.404 8.907 10 8.175 10h-.35C7.093 10 6.5 9.41 6.5 8.668V6.341z' fill='#FFF' />\n                                <path d='M8 8.92c.414 0 .75-1.086.75-1.5a.75.75 0 1 0-1.5 0c0 .414.336 1.5.75 1.5z' fill='#1D50B5' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'ru':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#FFF' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#E53B35' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#0C47B7' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'th':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#F12532' xlinkHref='#a' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 3h24v10H0z' />\n                            <path fill='#322B6C' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'vi':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#EA403F' xlinkHref='#a' />\n                            <path fill='#FFFE4E' mask='url(#b)' d='M12 10.45l-2.939 2.095 1.084-3.442-2.9-2.148 3.609-.033L12 3.5l1.146 3.422 3.61.033-2.901 2.148 1.084 3.442z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_cn':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M7.742 7.186h1.04V13h-1.04V7.186zm7.453 5.77h-.952l-.255-.927.996.032c.244 0 .366-.161.366-.474V6.883h-4.11v-.938h5.15v5.922c0 .723-.399 1.09-1.196 1.09zM9.968 7.64h4.175v4.207H9.968V7.639zm3.2 3.355v-.863h-2.203v.863h2.203zM10.965 9.31h2.203v-.842h-2.203v.842zM9.082 5.503c.576.496 1.019.938 1.329 1.327l-.775.517c-.333-.41-.776-.863-1.33-1.38l.776-.464zm-.3-.874a7.406 7.406 0 0 1-.896 1.23L7 5.298C7.664 4.586 8.13 3.82 8.417 3l1.02.216c-.067.183-.145.356-.211.518h2.746v.895h-1.461c.232.324.42.636.564.917l-.93.334a9.512 9.512 0 0 0-.73-1.251h-.632zm4.707 0a6.6 6.6 0 0 1-.686 1.068l-.886-.561c.543-.658.93-1.37 1.152-2.125l1.007.216c-.066.172-.121.345-.177.507H17v.895h-1.661c.21.291.387.572.531.83l-.93.335a9.04 9.04 0 0 0-.697-1.165h-.754z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_tw':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M8.602 4.413c-.13.151-.26.302-.38.432h3.605c0 .431-.011.83-.033 1.175h.617v.648h-.67l-.098.68h.444v.528h-.563c-.022.065-.033.119-.054.173l.314.237c-.585.291-1.18.54-1.786.744a165.06 165.06 0 0 1 2.23-.075c.454-.227.908-.475 1.374-.734l.725.475a18.267 18.267 0 0 1-4.091 1.683 126.13 126.13 0 0 0 4.177-.248c-.238-.173-.487-.356-.746-.53l.725-.441c1.028.647 1.818 1.208 2.37 1.704l-.812.561a12.63 12.63 0 0 0-.768-.69c-.93.054-1.818.108-2.663.15v1.263c0 .56-.335.852-.995.852h-1.018l-.173-.82c.314.033.617.054.899.054.205 0 .313-.108.313-.302v-1.003c-1.287.065-2.478.108-3.56.14l-.217-.841c.282.01.552.021.823.021.78-.162 1.59-.42 2.446-.766l-2.468.087-.151-.712c.368 0 .617-.033.768-.097a12.58 12.58 0 0 0 1.44-.637c.021-.086.054-.173.075-.248H7.574c.075-.41.14-.81.205-1.208h-.703V6.02h.779c.043-.312.076-.614.097-.916a6.4 6.4 0 0 1-.422.366L7 4.834c.595-.442 1.115-1.047 1.548-1.823l.844.183c-.098.173-.195.345-.292.507h3.181v.712h-3.68zm0 2.168l-.13.766h1.656a7.341 7.341 0 0 0-1.147-.41l.227-.356h-.606zm1.558.766h.671a9.43 9.43 0 0 0 .13-.766h-1.71c.422.12.8.249 1.147.4l-.238.366zm.844-1.219l.033-.766H8.742c-.021.26-.054.518-.086.766h1.504a6.009 6.009 0 0 0-1.017-.399l.249-.356c.39.108.757.26 1.093.432l-.206.323h.725zm2.587-1.337a3.23 3.23 0 0 0 .941 1.424c.347-.41.617-.885.79-1.424h-1.731zm.335 1.985a4.244 4.244 0 0 1-.876-1.316 7.07 7.07 0 0 1-.52.582l-.54-.647c.562-.583 1.049-1.381 1.46-2.395l.877.194c-.108.28-.227.54-.346.788h2.813v.809h-.627c-.195.776-.52 1.413-.953 1.93.498.324 1.093.594 1.786.82l-.465.81c-.78-.28-1.429-.615-1.948-1.004-.542.432-1.202.745-1.96.95l-.475-.745c.714-.172 1.298-.431 1.774-.776zm-.173 4.347c1.082.259 2.078.583 2.976.97l-.519.81a16.903 16.903 0 0 0-2.965-1.025l.508-.755zm-3.798.043l.54.615c-.8.453-1.785.83-2.943 1.133l-.379-.799c1.126-.237 2.056-.56 2.782-.949z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            default: // en\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84v12.322c0 1.008.805 1.826 1.797 1.826h20.406c.992 0 1.797-.818 1.797-1.826V1.839C24 .831 23.195.013 22.203.013z' fill='#0D47A1' />\n                            <path d='M23.975 1.537A1.806 1.806 0 0 0 22.203.013h-.468l-7.666 5.102V.013H9.931v5.102L2.265.013h-.468C.906.013.167.673.025 1.537l6.552 4.361H0v4.204h6.577l-6.552 4.36a1.806 1.806 0 0 0 1.772 1.525h.468l7.666-5.102v5.102h4.138v-5.102l7.666 5.102h.468c.891 0 1.63-.66 1.772-1.524l-6.552-4.361H24V5.898h-6.577l6.552-4.36z' fill='#FFF' />\n                            <path d='M13.241.013V6.74H24v2.52H13.241v6.726H10.76V9.26H0V6.74h10.759V.013h2.482zM1.162 15.87a1.8 1.8 0 0 1-.73-.52l7.956-5.247h1.52L1.162 15.87zm15.075-5.767l7.527 4.963a1.82 1.82 0 0 1-.576.623l-8.471-5.586h1.52zM.19 1.022C.316.767.5.545.725.374l8.378 5.525h-1.52L.19 1.023zm15.399 4.876h-1.52L22.824.125a1.8 1.8 0 0 1 .735.517l-7.97 5.256z' fill='#F44336' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='24' height='16' viewBox='0 0 24 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconCountry}\n        </svg>\n\n    );\n};\n\nIconCountryFlag.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconCountryFlag };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconFlag = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n        <g fillRule='nonzero' fill='none'>\n            <path d='M-6-4h32v32H-6z' />\n            <path className='color1-fill' d='M2 2h18a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2v5a1 1 0 0 1-2 0V1a1 1 0 1 1 2 0v1zm6 2v4h4V4H8zm4 4v4h4V8h-4zm4-4v4h4V4h-4zm0 8v4h4v-4h-4zm-8 0v4h4v-4H8zM4 8v4h4V8H4z' fill='#7F8397' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconFlag };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinimize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#000' fillOpacity='0.8' fillRule='nonzero' d='M0 7h16v2H0z' />\n    </svg>\n);\n\nIconMinimize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMinimize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='14' viewBox='0 0 16 14'>\n        <g fill='none' fillRule='evenodd'>\n            <path fill='#000' fillOpacity='0.16' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2z' />\n            <path fill='#FFF' fillRule='nonzero' d='M1 8.128l2.804 1.557A2.5 2.5 0 0 0 5.018 10h5.964a2.5 2.5 0 0 0 1.214-.315L15 8.128V12.5a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5V8.128zm0-1.144V3.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v3.484L11.71 8.81a1.5 1.5 0 0 1-.728.189H5.018a1.5 1.5 0 0 1-.728-.189L1 6.984zM6.5 8h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0 0 1z' />\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { CSSTransition }     from 'react-transition-group';\nimport ContractLink          from 'Modules/Contract/Containers/contract-link.jsx';\nimport { localize }          from '_common/localize';\nimport ContractTypeCell      from './contract-type-cell.jsx';\nimport ProgressSlider        from './ProgressSlider';\nimport ResultDetails         from './result-details.jsx';\nimport ResultOverlay         from './result-overlay.jsx';\nimport { getTimePercentage } from './helpers';\nimport Money                 from '../money.jsx';\nimport Button                from '../../Form/button.jsx';\n\n// TODO: Find a way to simplify props, maybe we can pass some of props as object from portfolio_store and parse it with helpers\nconst PositionsDrawerCard = ({\n    active_position,\n    barrier,\n    className,\n    chart_config,\n    currency,\n    duration,\n    duration_unit,\n    entry_spot,\n    expiry_time,\n    id,\n    id_sell,\n    indicative,\n    is_sell_requested,\n    is_valid_to_sell,\n    profit_loss,\n    purchase,\n    purchase_time,\n    onClickSell,\n    onClickRemove,\n    openContract,\n    result,\n    sell_time,\n    server_time,\n    status,\n    tick_count,\n    type,\n    underlying_code,\n    underlying_name,\n}) => {\n    const percentage = getTimePercentage(server_time, purchase_time, expiry_time);\n    return (\n        <div className={classNames(\n            'positions-drawer-card__wrapper', {\n                'positions-drawer-card__wrapper--active': (parseInt(active_position) === id),\n            },\n            className)}\n        >\n            <ResultOverlay\n                id={id}\n                onClickRemove={onClickRemove}\n                onClick={openContract}\n                chart_config={chart_config}\n                result={result}\n            />\n            <ContractLink\n                className={classNames(\n                    'positions-drawer-card', {\n                        'positions-drawer-card--active': (parseInt(active_position) === id),\n                        'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                        'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                    }\n                )}\n                chart_config={chart_config}\n            >\n                <React.Fragment>\n                    <div className={classNames(\n                        'positions-drawer-card__grid',\n                        'positions-drawer-card__grid-underlying-trade'\n                    )}\n                    >\n                        <div className='positions-drawer-card__underlying-name'>\n                            <div\n                                className={classNames(\n                                    'icons-underlying',\n                                    `icons-underlying__ic-${underlying_code || 'unknown'}`\n                                )}\n                            />\n                            <span className='positions-drawer-card__symbol'>{underlying_name}</span>\n                        </div>\n                        <div className='positions-drawer-card__type'>\n                            <ContractTypeCell type={type} />\n                        </div>\n                    </div>\n                    <ProgressSlider\n                        remaining_time={expiry_time}\n                        percentage={percentage}\n                        ticks_count={tick_count}\n                        has_result={!!(result)}\n                    />\n                    <div className={classNames(\n                        'positions-drawer-card__grid',\n                        'positions-drawer-card__grid-profit-payout'\n                    )}\n                    >\n                        <div className={classNames(\n                            'positions-drawer-card__profit-loss',\n                            'positions-drawer-card__profit-loss-label',\n                        )}\n                        >\n                            {result ? localize('P/L:') : localize('Potential P/L:')}\n                        </div>\n                        <div className={classNames(\n                            'positions-drawer-card__indicative',\n                            'positions-drawer-card__indicative-label',\n                        )}\n                        >\n                            {localize('Potential Payout:')}\n                        </div>\n                        <div className={classNames(\n                            'positions-drawer-card__profit-loss', {\n                                'positions-drawer-card__profit-loss--negative': (profit_loss < 0),\n                                'positions-drawer-card__profit-loss--positive': (profit_loss > 0),\n                            })}\n                        >\n                            <Money amount={Math.abs(profit_loss)} currency={currency} />\n                        </div>\n                        <div className={`positions-drawer-card__indicative positions-drawer-card__indicative--${status}`}>\n                            <Money amount={indicative} currency={currency} />\n                        </div>\n                    </div>\n                    <div className='positions-drawer-card__purchase-price'>\n                        <span className='positions-drawer-card__purchase-label'>\n                            {localize('Purchase price')}\n                        </span>\n                        <Money amount={purchase} currency={currency} />\n                    </div>\n                </React.Fragment>\n            </ContractLink>\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        className={classNames(\n                            'btn--primary',\n                            'btn--primary--orange',\n                            'btn--sell', {\n                                'btn--loading': is_sell_requested,\n                            })}\n                        is_disabled={!is_valid_to_sell || is_sell_requested}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n            <ResultDetails\n                barrier={barrier}\n                contract_end_time={sell_time}\n                contract_start_time={purchase_time}\n                duration={duration}\n                duration_unit={duration_unit}\n                entry_spot={entry_spot}\n                tick_count={tick_count}\n                has_result={!!(result)}\n                id_sell={id_sell}\n            />\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    barrier      : PropTypes.number,\n    className    : PropTypes.string,\n    currency     : PropTypes.string,\n    duration     : PropTypes.number,\n    duration_unit: PropTypes.string,\n    entry_spot   : PropTypes.number,\n    exit_spot    : PropTypes.number,\n    expiry_time  : PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id               : PropTypes.number,\n    id_sell          : PropTypes.number,\n    indicative       : PropTypes.number,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.bool,\n    ]),\n    onClickRemove: PropTypes.func,\n    onClickSell  : PropTypes.func,\n    openContract : PropTypes.func,\n    profit_loss  : PropTypes.number,\n    purchase     : PropTypes.number,\n    purchase_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    result   : PropTypes.string,\n    sell_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    server_time    : PropTypes.object,\n    status         : PropTypes.string,\n    tick_count     : PropTypes.number,\n    type           : PropTypes.string,\n    underlying_code: PropTypes.string,\n    underlying_name: PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nconst ContractLink = ({\n    chart_config,\n    children,\n    className,\n    openContract,\n}) => (\n    <a\n        className={className}\n        href='javascript:;'\n        onClick={() => openContract(chart_config)}\n    >\n        {children}\n    </a>\n);\n\nContractLink.propTypes = {\n    chart_config: PropTypes.object,\n    children    : PropTypes.node,\n    className   : PropTypes.string,\n    contract_id : PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onMount: PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        openContract: modules.contract.onLoadContract,\n    }),\n)(ContractLink);\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='contract-type__type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='category-type' />\n        </div>\n        <span className='contract-type__type-label'>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' className='color1-fill' fill='#2A3052'fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path className='color1-fill' fill='#2A3052'd='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('trade-type-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './positions-progress-slider.jsx';\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    has_result,\n    ticks_count,\n    current_tick,\n    percentage,\n    remaining_time,\n}) => {\n    if (!percentage && !ticks_count || has_result || !remaining_time) return <div className='progress-slider--completed' />;\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {/* TODO: enable ticks slider once it is completed */}\n            {(ticks_count) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={remaining_time} />\n                    </span>\n                    {/* Calculate line width based on percentage of time left */}\n                    <div className='progress-slider__track'>\n                        <div\n                            className={classNames('progress-slider__line', {\n                                'progress-slider__line--green' : (percentage >= 50),\n                                'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                'progress-slider__line--red'   : (percentage < 20),\n                            })}\n                            style={{ width: `${percentage}%` }}\n                        />\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className     : PropTypes.string,\n    current_tick  : PropTypes.number,\n    has_result    : PropTypes.bool,\n    percentage    : PropTypes.number,\n    remaining_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default ProgressSlider;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst ProgressTicks = ({ current_tick, ticks_count }) => {\n    const arr_ticks = [...Array(ticks_count).keys()];\n    // TODO: temporary infinite/indeterminate loader\n    if (!current_tick) return <div className='progress-slider__infinite-loader'><div className='progress-slider__infinite-loader--indeterminate' /></div>;\n    return (\n        // TODO: Update and show once design for ticks progress bar is finalized\n        <div style={{ display: 'none' }}>\n            <span className='progress-slider__ticks-caption'>\n                {localize('Tick [_1]', current_tick)}\n            </span>\n            <div className='progress-slider__track--ticks'>\n                <div className='progress-slider__ticks'>\n                    {arr_ticks.map(idx =>\n                        <span\n                            key={idx}\n                            className={classNames('ticks__step', {\n                                'ticks__step--active': (idx + 1) === parseInt(current_tick),\n                                'ticks__step--marked': (idx + 1) < parseInt(current_tick),\n                            })}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconArrow }     from 'Assets/Common';\nimport { localize }      from '_common/localize';\nimport {\n    epochToMoment,\n    toGMTFormat }        from 'Utils/Date';\nimport ResultDetailsItem from './result-details-item.jsx';\n\nclass ResultDetails extends React.PureComponent {\n    state = {\n        is_open: false,\n    };\n\n    toggleDetails = () => {\n        this.setState({ is_open: !this.state.is_open });\n    }\n\n    render() {\n        const {\n            barrier,\n            contract_end_time,\n            contract_start_time,\n            duration,\n            duration_unit,\n            entry_spot,\n            has_result,\n            id_sell,\n            tick_count,\n        } = this.props;\n        if (!has_result) return null;\n        return (\n            <React.Fragment>\n                <div className='result-details__separator' />\n                <div className={classNames('result-details__wrapper', {\n                    'result-details__wrapper--is-open': this.state.is_open,\n                })}\n                >\n                    <div className='result-details__grid'>\n                        <ResultDetailsItem\n                            label={localize('Reference ID')}\n                            value={id_sell}\n                        />\n                        <ResultDetailsItem\n                            label={localize('Duration')}\n                            value={tick_count ? `${tick_count} ${localize('ticks')}` : `${duration} ${duration_unit}`}\n                        />\n                    </div>\n                    <div className='result-details__grid'>\n                        <ResultDetailsItem\n                            label={localize('Barrier')}\n                            value={barrier ? barrier.toString() : ' - '}\n                        />\n                        <ResultDetailsItem\n                            label={localize('Entry spot')}\n                            value={entry_spot || ' - '}\n                        />\n                    </div>\n                    <div className='result-details__grid'>\n                        <ResultDetailsItem\n                            label={localize('Start time')}\n                            value={toGMTFormat(epochToMoment(contract_start_time))}\n                        />\n                        <ResultDetailsItem\n                            label={localize('End time')}\n                            value={toGMTFormat(epochToMoment(contract_end_time))}\n                        />\n                    </div>\n                </div>\n                <div\n                    className={classNames('result-details__toggle', {\n                        'result-details__toggle--is-open': this.state.is_open,\n                    })}\n                    onClick={this.toggleDetails}\n                >\n                    <IconArrow className='result-details__select-arrow' />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nResultDetails.propTypes = {\n    barrier          : PropTypes.number,\n    contract_end_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    contract_start_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration     : PropTypes.number,\n    duration_unit: PropTypes.string,\n    entry_spot   : PropTypes.number,\n    has_result   : PropTypes.bool,\n    id_sell      : PropTypes.number,\n    tick_count   : PropTypes.number,\n};\n\nexport default ResultDetails;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ResultDetailsItem = ({\n    label,\n    value,\n}) => (\n    <div className='result-details__item'>\n        <span className='result-details__label'>\n            {label}\n        </span>\n        <span className='result-details__value'>\n            {value}\n        </span>\n    </div>\n);\n\nResultDetailsItem.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ResultDetailsItem;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport IconCheck         from 'Images/app_2/portfolio/ic-check.svg';\nimport IconCross         from 'Images/app_2/portfolio/ic-cross.svg';\nimport { localize }      from '_common/localize';\n\nconst ResultOverlay = ({\n    id,\n    chart_config,\n    onClick,\n    onClickRemove,\n    result,\n}) => (\n    <React.Fragment>\n        <CSSTransition\n            in={!!(result)}\n            timeout={250}\n            classNames={{\n                enter    : 'positions-drawer-card__result--enter',\n                enterDone: 'positions-drawer-card__result--enter-done',\n                exit     : 'positions-drawer-card__result--exit',\n            }}\n            unmountOnExit\n        >\n            <div className={classNames('positions-drawer-card__result', {\n                'positions-drawer-card__result--won' : (result === 'won'),\n                'positions-drawer-card__result--lost': (result === 'lost'),\n            })}\n            >\n                <span\n                    className='result__close-btn'\n                    onClick={() => onClickRemove(id)}\n                />\n                <span\n                    className={classNames('result__caption', {\n                        'result__caption--won' : (result === 'won'),\n                        'result__caption--lost': (result === 'lost'),\n                    }\n                    )}\n                    onClick={() => onClick(chart_config)}\n                >\n                    {\n                        (result === 'won') ?\n                            <React.Fragment>\n                                {localize('won')}\n                                <IconCheck className='result__icon' />\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                {localize('lost')}\n                                <IconCross className='result__icon' />\n                            </React.Fragment>\n                    }\n                </span>\n            </div>\n        </CSSTransition>\n    </React.Fragment>\n);\n\nResultOverlay.propTypes = {\n    chart_config : PropTypes.object,\n    id           : PropTypes.number,\n    onClick      : PropTypes.func,\n    onClickRemove: PropTypes.func,\n    result       : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"#4BBFAB\" }),\n      React.createElement(\"path\", { fill: \"#FFF\", fillRule: \"nonzero\", d: \"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" })\n    )\n  );\n});","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"#E31C4B\", fillRule: \"nonzero\" }),\n      React.createElement(\"path\", { stroke: \"#FFF\", strokeLinecap: \"round\", d: \"M10.5 5.5l-5 5m5 0l-5-5\" })\n    )\n  );\n});","export * from './duration-percentage';\n","import moment from 'moment';\n\n// TODO: Refactor and simplify, handle tick duration\nexport const getTimePercentage = (start_time, purchase_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(purchase_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(start_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) {\n        percentage = 1;\n    } else if (percentage > 100) {\n        percentage = 100;\n    }\n\n    return Math.round(percentage);\n};\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport classNames       from 'classnames';\nimport { IconError }    from 'Assets/Common/icon-error.jsx';\nimport { IconInfoBlue } from 'Assets/Common/icon-info-blue.jsx';\nimport { IconWarning }  from 'Assets/Common/icon-warning.jsx';\nimport { IconSuccess }  from 'Assets/Common/icon-success.jsx';\nimport CloseButton      from './close-button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }             from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                { data.type === 'ERROR'   && <IconError className='toast__icon-type' /> }\n                { data.type === 'INFO'    && <IconInfoBlue className='toast__icon-type' /> }\n                { data.type === 'SUCCESS' && <IconSuccess className='toast__icon-type' /> }\n                { data.type === 'WARNING' && <IconWarning className='toast__icon-type' /> }\n            </div>\n            <div className='toast__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({\n    children, is_contract_mode,\n    is_positions_drawer_on,\n}) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-positions-drawer': is_positions_drawer_on,\n            'app-contents--contract-mode'        : is_contract_mode,\n        })}\n    >\n        {/* Calculate height of user screen and offset height of header and footer */}\n        <Scrollbars\n            autoHide\n            style={{ height: 'calc(100vh - 83px)' }}\n        >\n            {children}\n        </Scrollbars>\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_positions_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ modules, ui }) => ({\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_language_dialog_visible,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_settings_dialog_on,\n    network_status,\n    togglePositionsDrawer,\n    toggleSettingsDialog,\n}) => (\n    <React.Fragment>\n        <div className='footer__links footer__links--left'>\n            {\n                is_logged_in &&\n                <TogglePositions\n                    is_positions_drawer_on={is_positions_drawer_on}\n                    togglePositionsDrawer={togglePositionsDrawer}\n                />\n            }\n        </div>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer__links'>\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_language_visible={is_language_dialog_visible}\n                is_settings_visible={is_settings_dialog_on}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePositionsDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        network_status            : common.network_status,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network-status.jsx';\nexport * from './toggle-fullscreen.jsx';\nexport * from './toggle-positions.jsx';\nexport * from './toggle-settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport classNames        from 'classnames';\n\nconst IconPositions = ({ className }) => {\n    const IconType = (\n        <g fill='none' fillRule='evenodd'>\n            <path className='color1-fill color3-fill' fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2zM1 8.128V12.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V8.128l-2.804 1.557a2.5 2.5 0 0 1-1.214.315H5.018a2.5 2.5 0 0 1-1.214-.315L1 8.128zm0-1.144L4.29 8.81A1.5 1.5 0 0 0 5.018 9h5.964a1.5 1.5 0 0 0 .728-.189L15 6.984V3.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v3.484zM6.5 8a.5.5 0 0 1 0-1h3a.5.5 0 0 1 0 1h-3z' />\n        </g>\n    );\n\n    return (\n        <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n            {IconType}\n        </svg>\n    );\n};\n\nIconPositions.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPositions };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPositions } from 'Assets/Footer';\n\nconst TogglePositions = ({\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames('ic-positions', 'footer__link', {\n        'ic-positions--active': is_positions_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n        >\n            <IconPositions className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings-dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer__icon ic-settings__icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames={{\n                    enter    : 'settings-dialog--enter',\n                    enterDone: 'settings-dialog--enter-done',\n                    exit     : 'settings-dialog--exit',\n                }}\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings ic-settings--active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'settings-dialog__container--show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog__container', {\n            'settings-dialog__container--hide': this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-dialog__header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' classNameHeader='settings-dialog__tab-header' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs-item.jsx';\nexport * from './tabs-wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs-wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', `tab-container--${this.props.alignment}`);\n        const tab_header_class = (icon_name) => classNames(\n            this.props.classNameHeader,\n            'tab__header',\n            { 'tab__icon': icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment      : PropTypes.string,\n    classNameHeader: PropTypes.string,\n    list           : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings-chart.jsx';\nexport GeneralSettings  from './settings-general.jsx';\nexport LanguageSettings from './settings-language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings-control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='settings-dialog__tab-content'>\n        <div className='settings-dialog__chart-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconCountryFlag } from 'Assets/Common';\nimport { connect }         from 'Stores/connect';\nimport SettingsControl     from '../../Components/Elements/SettingsDialog/settings-control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='settings-dialog__tab-content'>\n        <div className='settings-dialog__general-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <IconCountryFlag\n                    className={'settings-dialog__language-flag'}\n                    type={(curr_language || 'EN').toLowerCase()}\n                />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language-dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport {\n    IconBack,\n    IconCountryFlag }  from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('settings-dialog__language-dialog-container', {\n        'settings-dialog__language-dialog-container--show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='settings-dialog__language-header' onClick={hide}>\n                <IconBack className='settings-dialog__arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='settings-dialog__language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='settings-dialog__language-row'>\n                            <a className='settings-dialog__language-link' href={getURL(key)} >\n                                <IconCountryFlag\n                                    className={'settings-dialog__language-row-flag settings-dialog__language-flag'}\n                                    type={key.replace(/(\\s|_)/, '-').toLowerCase()}\n                                />\n                                <span className='settings-dialog__language-name'>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { withRouter }  from 'react-router';\nimport { formatMoney } from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    DepositButton,\n    InstallPWAButton,\n    LoginButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    UpgradeButton }    from 'App/Components/Layout/Header';\nimport header_links    from 'App/Constants/header-links';\nimport { connect }     from 'Stores/connect';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    is_virtual,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks\n                        is_logged_in={is_logged_in}\n                        items={header_links}\n                    />\n                </div>\n                <div className='header__menu-right'>\n                    <div className='acc-info__container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                className='acc-info__button'\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    is_virtual={is_virtual}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                                { !!(can_upgrade_to && is_virtual) &&\n                                <UpgradeButton className='acc-info__button' />\n                                }\n                                { !(is_virtual) &&\n                                <DepositButton className='acc-info__button' />\n                                }\n                            </React.Fragment>\n                            :\n                            <LoginButton className='acc-info__button' />\n                        }\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    can_upgrade_to           : PropTypes.string,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool,\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    is_virtual               : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func,\n    pwa_prompt_event         : PropTypes.object, // TODO: add click handler\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        can_upgrade_to           : client.can_upgrade_to,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        is_virtual               : client.is_virtual,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account-info.jsx';\nexport * from './deposit-button.jsx';\nexport * from './install-pwa-button.jsx';\nexport * from './login-button.jsx';\nexport * from './upgrade-button.jsx';\nexport * from './menu-links.jsx';\nexport * from './toggle-menu-drawer.jsx';\nexport * from './toggle-notifications-drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    is_virtual,\n    onClickUpgrade,\n    toggleDialog,\n}) => (\n    <div className='acc-info__wrapper'>\n        <div\n            className={classNames('acc-info', {\n                'acc-info--show'      : is_dialog_on,\n                'acc-info--is-virtual': is_virtual,\n            })}\n            onClick={toggleDialog}\n        >\n            <p\n                className='acc-info__id'\n                title={loginid}\n            >\n                {loginid}&nbsp;\n            </p>\n            {\n                typeof balance !== 'undefined' &&\n                <p className='acc-info__balance'>\n                    <span\n                        className={classNames('symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })}\n                    />\n                    {balance}\n                </p>\n            }\n            <IconArrow className='acc-info__select-arrow' is_bold={true} />\n        </div>\n        <CSSTransition\n            in={is_dialog_on}\n            timeout={200}\n            classNames={{\n                enter    : 'acc-switcher__wrapper--enter',\n                enterDone: 'acc-switcher__wrapper--enter-done',\n                exit     : 'acc-switcher__wrapper--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='acc-switcher__wrapper'>\n                <AccountSwitcher\n                    is_visible={is_dialog_on}\n                    toggle={toggleDialog}\n                    is_upgrade_enabled={is_upgrade_enabled}\n                    onClickUpgrade={onClickUpgrade}\n                />\n            </div>\n        </CSSTransition>\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_virtual        : PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account-switcher.jsx';\n","import classNames               from 'classnames';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport { isEmptyObject }        from '_common/utility';\nimport { IconAccountsCurrency } from 'Assets/Header/AccountsCurrency';\nimport { IconLogout }           from 'Assets/Header/Drawer';\nimport { requestLogout }        from 'Services/index';\nimport { connect }              from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggle();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        requestLogout();\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n        // TODO: Once we allow other real accounts (apart from CR), assign correct title and group accounts into list with correct account title/types\n        // e.g - Real, Financial, Gaming, Investment\n        const real_accounts = this.props.account_list.filter(acc => !acc.is_virtual);\n        const vrt_account   = this.props.account_list.find(acc => acc.is_virtual);\n\n        const main_account_title = real_accounts.length > 1 ? localize('Real accounts') : localize('Real account');\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef}>\n                {\n                    // Make sure this block is not rendered if there are no real accounts\n                    !!(this.props.account_list.length && real_accounts.length) &&\n                    <div className='acc-switcher__list-group'>\n                        <span className='acc-switcher__list-title'>\n                            {main_account_title}\n                        </span>\n                        <div className='acc-switcher__accounts'>\n                            {\n                                real_accounts.map((account) => (\n                                    <div\n                                        key={account.loginid}\n                                        className={classNames('acc-switcher__account', {\n                                            'acc-switcher__account--selected': (account.loginid === this.props.account_loginid),\n                                        })}\n                                        onClick={this.doSwitch.bind(this, account.loginid)}\n                                    >\n                                        <span className={'acc-switcher__id'}>\n                                            <IconAccountsCurrency\n                                                className={`acc-switcher__id-icon acc-switcher__id-icon--${account.icon}`}\n                                                type={account.icon}\n                                            />\n                                            {account.loginid}\n                                        </span>\n                                    </div>\n                                ))\n                            }\n                        </div>\n\n                        {   // TODO: Add link to account opening page for upgrade or multi account page for new account.\n                            // Update text below for handling types of account to create :- e.g - Investment\n                            !!(this.props.is_upgrade_enabled && this.props.upgrade_info.can_open_multi) &&\n                            <div className='acc-switcher__new-account'>\n                                <span className='acc-switcher__new-account-title'>{localize('Add new account')}</span>\n                            </div>\n                        }\n                    </div>\n                }\n                {\n                    !isEmptyObject(vrt_account) &&\n                    <div className='acc-switcher__list--virtual'>\n                        <span className='acc-switcher__list-title'>\n                            {localize('Virtual account')}\n                        </span>\n                        <div className='acc-switcher__accounts'>\n                            <div\n                                className={classNames('acc-switcher__account', {\n                                    'acc-switcher__account--selected': (this.props.virtual_loginid === this.props.account_loginid),\n                                })}\n                                onClick={this.doSwitch.bind(this, this.props.virtual_loginid)}\n                            >\n                                <span className={classNames('acc-switcher__id', 'acc-switcher__id--virtual')}>\n                                    {this.props.virtual_loginid}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { !!(this.props.is_upgrade_enabled && this.props.is_virtual) &&\n                <div className='acc-switcher__new-account'>\n                    <span className='acc-switcher__new-account-title'>{localize('Upgrade to Real Account')}</span>\n                </div>\n                }\n                <div className='acc-switcher__logout' onClick={this.handleLogout}>\n                    <span className='acc-switcher__logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='acc-switcher__logout-icon drawer__icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list          : PropTypes.array,\n    account_loginid       : PropTypes.string,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_upgrade_enabled    : PropTypes.bool,\n    is_virtual            : PropTypes.bool,\n    is_visible            : PropTypes.bool,\n    onClickUpgrade        : PropTypes.func,\n    toggle                : PropTypes.func,\n    togglePositionsDrawer : PropTypes.func,\n    upgrade_info          : PropTypes.object,\n    virtual_loginid       : PropTypes.string,\n};\n\nconst account_switcher = connect(\n    ({ client, ui }) => ({\n        account_list          : client.account_list,\n        account_loginid       : client.loginid,\n        is_logged_in          : client.is_logged_in,\n        is_virtual            : client.is_virtual,\n        switchAccount         : client.switchAccount,\n        upgrade_info          : client.upgrade_info,\n        virtual_loginid       : client.virtual_account_loginid,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","export * from './icon_accounts_currency.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconAccountsCurrency = ({ type, className }) => {\n    let IconCurrency;\n    if (type) {\n        switch (type) {\n            case 'aud':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#FFF'>\n                            <path d='M6.853 15.319l.674-.84-1.04.188-.362-1.008-.393 1.008-1.062-.188.675.821-.701.821 1.069-.168.36.988.393-.987 1.09.194zM14.819 16.06l.382-.475-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.606-.095.204.56.222-.56.618.111zM14.819 5.542l.382-.477-.59.107-.205-.57-.222.57-.603-.107.383.466-.397.465.606-.095.204.56.222-.56.618.11zM17.291 8.263l.382-.476-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11zM12.68 9.473l.382-.476-.59.107-.204-.572-.223.572-.602-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11z' />\n                        </g>\n                        <g fill='#283991'>\n                            <path d='M2.099 3.87c-.157.202-.307.41-.448.623h1.07L2.1 3.87zM7.26 9.993h.962l-.963-.962zM4.068 1.947c-.23.169-.45.348-.664.536l.664.663v-1.2zM3.105 9.993h.963V9.03zM9.993 0c-.948 0-1.864.135-2.734.382v2.764L9.993.412V0zM9.993 9.072V7.684H8.606zM.412 9.993l2.31-2.309H.272A10.004 10.004 0 0 0 0 9.994h.412zM8.605 4.493h1.388V3.105z' />\n                        </g>\n                        <g fill='#FFF'>\n                            <path d='M9.993 9.363v-.291L8.606 7.684h1.387v-.496H7.818zM2.722 4.493H1.65c-.107.162-.209.328-.307.497H3.45l-1.25-1.25a9.019 9.019 0 0 0-.1.13l.623.623zM4.068 9.03v.963h.497v-1.69l-1.69 1.69h.23zM7.26.382c-.168.047-.334.099-.497.155v3.336l3.23-3.23v-.23L7.26 3.146V.382zM4.05 7.684l.018-.017.48-.48H.401c-.048.165-.091.33-.13.497h2.45l-2.31 2.31h1.33l2.309-2.31z' />\n                            <path d='M.412 9.993l2.31-2.309-2.31 2.31zM9.993 4.99v-.497H8.605l1.388-1.388v-1.33L6.78 4.99z' />\n                            <path d='M9.993 3.105L8.605 4.493l1.388-1.388zM4.068 3.146l-.664-.663c-.235.207-.461.425-.676.653l1.34 1.34.014.015.483.482V1.605c-.169.11-.335.222-.497.342v1.2zM7.26 9.03l.962.963H9.49L6.763 7.266v2.727h.496z' />\n                        </g>\n                        <path d='M4.068 4.476l.034.034-.034-.034z' fill='#D32030' />\n                        <path d='M8.314 7.684l-.496-.496h2.175V4.99H6.78l-.016.017V4.99h.016l3.214-3.214V.643l-3.23 3.23V.537a9.957 9.957 0 0 0-2.198 1.068v3.368l.017.017h-.017v-.017l-.483-.482.003.002h-.017v-.017l-1.34-1.34c-.184.195-.36.396-.528.605L3.449 4.99H1.344a9.918 9.918 0 0 0-.942 2.198h4.145l.018-.018v.018h-.018l-.479.48v.017h-.017L1.74 9.993h1.134l1.69-1.69v1.69h2.198V7.266L9.49 9.993h.375c.043-.044.087-.089.129-.135v-.495l-1.68-1.679z' fill='#F44336' />\n                        <path fill='#D32030' d='M6.763 3.873l3.23-3.23zM4.092 7.709v-.042l-.041.042zM4.589 7.17l-.042.042h.042zM6.763 5.03l.04-.04h-.04zM4.068 4.517h.04l-.006-.007-.034-.034zM4.606 5.013l-.041-.04v.04z' />\n                    </g>\n                );\n                break;\n            case 'bch':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#8DC351' cx='10' cy='10' r='10' />\n                        <path d='M13.254 6.584c-.485-1.233-1.7-1.344-3.117-1.069l-.505-1.758-1.07.307.492 1.712c-.281.08-.568.169-.852.256L7.708 4.31l-1.07.306.504 1.758c-.23.071-.456.141-.678.205l-.002-.006-1.476.423.328 1.144s.786-.243.777-.224c.433-.124.646.087.75.292l.575 2.003a.951.951 0 0 1 .115-.025l-.113.032.804 2.807c.02.142.002.382-.3.47.017.008-.779.222-.779.222l.155 1.34 1.392-.4c.26-.074.516-.142.766-.213l.51 1.778 1.07-.306-.505-1.76c.287-.075.573-.155.858-.237l.501 1.752 1.07-.307-.508-1.775c1.77-.62 2.899-1.434 2.57-3.169-.263-1.396-1.077-1.82-2.169-1.772.53-.494.758-1.161.401-2.063zm-.406 4.231c.381 1.33-1.937 1.83-2.662 2.04l-.676-2.357c.725-.208 2.94-1.069 3.338.318v-.001zm-1.451-3.181c.346 1.21-1.592 1.612-2.196 1.785l-.613-2.137c.604-.173 2.447-.909 2.809.352z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'btc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#F7931A' cx='10' cy='10' r='10' />\n                        <path d='M14.493 8.762c.196-1.31-.802-2.014-2.165-2.484l.442-1.775-1.08-.269-.431 1.729c-.284-.072-.575-.138-.866-.204l.434-1.74-1.08-.269-.442 1.774c-.235-.053-.466-.106-.69-.162l.001-.006-1.49-.372-.287 1.154s.802.184.785.195c.437.11.516.399.503.629l-.504 2.022a.96.96 0 0 1 .113.035l-.115-.028-.706 2.833c-.054.132-.19.332-.496.256.012.016-.785-.196-.785-.196l-.536 1.237 1.406.35c.262.066.518.135.77.199l-.447 1.795 1.08.269.442-1.775c.295.08.581.153.861.223l-.441 1.767 1.08.27.447-1.792c1.842.349 3.227.208 3.81-1.458.47-1.341-.023-2.116-.992-2.62.706-.163 1.237-.627 1.38-1.587zm-2.469 3.462c-.333 1.342-2.592.616-3.325.434l.594-2.378c.733.183 3.08.545 2.731 1.944zm.335-3.48c-.305 1.22-2.185.6-2.794.447l.537-2.156c.61.152 2.574.435 2.257 1.708z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'dai':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle stroke='#F7B14A' strokeWidth='.625' cx='10' cy='10' r='9.688' />\n                        <path fill='#FFCC80' d='M3.75 10H10v6.25z' />\n                        <path fill='#FFB74D' d='M10 3.75v8.125L3.75 10z' />\n                        <path fill='#FFF' d='M5.625 10L10 5.625v2.5L8.125 10z' />\n                        <path fill='#F7C57B' d='M16.25 10H10v6.25z' />\n                        <path fill='#F7B14A' d='M10 3.75v8.125L16.25 10z' />\n                        <path fill='#FFF' d='M14.375 10L10 5.625v2.5L11.875 10z' />\n                    </g>\n                );\n                break;\n            case 'eth' :\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#EBF0F1' cx='10' cy='10' r='10' />\n                        <g fill='#12100B'>\n                            <path fillOpacity='.8' d='M10.311 2.5v10.353l4.686-2.715z' />\n                            <path fillOpacity='.45' d='M10.311 2.5l-4.686 7.638 4.686 2.718z' />\n                            <path fillOpacity='.8' d='M10.311 13.73v3.767L15 11.01z' />\n                            <path fillOpacity='.45' d='M10.311 17.497v-3.768L5.625 11.01z' />\n                            <path fillOpacity='.6' d='M10.311 12.858l4.686-2.72-4.686-2.093zM5.625 10.137l4.686 2.721V8.045z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'eur':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#F8D12E'>\n                            <path d='M9.976 1.733l.244.75h.789l-.639.464.244.75-.638-.464-.638.464.244-.75-.639-.464h.79zM9.976 15.894l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM13.862 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM16.514 5.604l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM16.577 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.639-.464h.79zM3.534 5.604l.244.75h.788l-.638.464.244.75-.638-.463-.638.463.243-.75-.638-.464h.79zM17.129 8.757l.243.75h.79l-.639.463.244.75-.638-.463-.639.464.244-.75-.638-.464h.789zM2.931 8.757l.244.75h.789l-.639.463.244.75-.638-.463-.638.464.244-.75-.638-.464h.788zM3.448 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.638-.464h.789zM13.977 14.942l.243.75h.79l-.639.464.244.75-.638-.464-.639.464.244-.75-.638-.464h.79zM6.215 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM5.928 14.894l.243.75h.79l-.639.464.244.75-.638-.464-.638.464.243-.75-.638-.464h.789z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'gbp':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <g fill='#283991'>\n                            <path d='M2.067 3.912a9.964 9.964 0 0 0-1.723 3.48h5.203l-3.48-3.48zM19.656 7.391a9.964 9.964 0 0 0-1.723-3.48l-3.48 3.48h5.203zM.344 12.609a9.965 9.965 0 0 0 1.723 3.48l3.48-3.48H.344zM16.088 2.067a9.964 9.964 0 0 0-3.48-1.723v5.203l3.48-3.48zM3.912 17.933a9.964 9.964 0 0 0 3.48 1.723v-5.203l-3.48 3.48zM7.391.344a9.965 9.965 0 0 0-3.48 1.723l3.48 3.48V.344zM12.609 19.656a9.965 9.965 0 0 0 3.48-1.723l-3.48-3.48v5.203zM14.453 12.609l3.48 3.48a9.964 9.964 0 0 0 1.723-3.48h-5.203z' />\n                        </g>\n                        <g fill='#F44336'>\n                            <path d='M19.915 8.696h-8.61V.085a10.1 10.1 0 0 0-2.61 0v8.61H.086a10.1 10.1 0 0 0 0 2.61h8.61v8.61a10.099 10.099 0 0 0 2.61 0v-8.61h8.61a10.099 10.099 0 0 0 0-2.61z' />\n                            <path d='M12.609 12.609l4.462 4.462c.205-.205.401-.42.588-.642l-3.82-3.82h-1.23zM7.391 12.609L2.93 17.07c.205.205.42.401.642.588l3.82-3.82v-1.23zM7.394 7.391L2.932 2.93c-.206.205-.401.42-.588.642l3.82 3.82h1.23zM12.609 7.391L17.07 2.93c-.205-.205-.42-.401-.642-.588l-3.82 3.82v1.23z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'ltc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#BFBBBB' cx='10' cy='10' r='10' />\n                        <path fill='#FFF' d='M6.517 12.009l-.892.346.43-1.724.902-.363L8.258 5h3.206l-.95 3.873.882-.357-.425 1.718-.892.357-.53 2.177h4.826L13.829 15H5.783z' />\n                    </g>\n                );\n                break;\n            case 'usd':\n                IconCurrency = (\n                    <g fill='none' fillRule='evenodd'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <path d='M12.18 1.833h3.583A9.951 9.951 0 0 0 10.578.018h-.308c.906.114 1.323.783 1.91 1.815zm.926 3.628h5.799a9.976 9.976 0 0 0-1.186-1.814h-5.066c.179.564.33 1.173.453 1.814zm6.839 3.629a9.913 9.913 0 0 0-.331-1.814h-6.19c.062.594.103 1.202.123 1.814h6.398zm-.345 3.629a9.885 9.885 0 0 0 .341-1.814h-6.24c-.022.612-.064 1.22-.127 1.814h6.025zm-6.789 3.629h4.865a9.985 9.985 0 0 0 1.203-1.815h-5.61a15.76 15.76 0 0 1-.458 1.815zm-2.818 3.627a9.845 9.845 0 0 0 5.698-1.812h-3.616c-.642 1.122-1.066 1.812-2.082 1.812z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M4.223 1.833h8.288C11.924.8 11.176.132 10.27.018h-.861a9.95 9.95 0 0 0-5.186 1.815zM2.268 3.647A9.983 9.983 0 0 0 1.082 5.46H13.73a15.962 15.962 0 0 0-.453-1.814H2.267zM.041 9.09h14.077c-.02-.612-.062-1.22-.124-1.814H.373A9.9 9.9 0 0 0 .04 9.09zm.346 3.629H13.99a25.53 25.53 0 0 0 .127-1.814H.046a9.87 9.87 0 0 0 .341 1.814zm.721 1.814a9.97 9.97 0 0 0 1.202 1.815h10.952c.18-.564.334-1.173.458-1.815H1.108zm8.462 5.433l.061.002c.12.004.24.007.362.007 1.016 0 1.845-.69 2.487-1.813H4.295a9.843 9.843 0 0 0 5.275 1.804z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M9.787.005A9.99 9.99 0 0 0 .043 9.093h9.744V.005z' fill='#283991' fillRule='nonzero' />\n                        <path fill='#EFEFEF' fillRule='nonzero' d='M2 5.65l.152.468h.493l-.399.289.152.468L2 6.585l-.4.29.153-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.399.289.152.468L2 8.238l-.4.29.153-.468-.399-.29h.493zM3.656 3.17l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.468-.399-.29h.494zm0 1.653l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.469-.399-.289h.494zm0 1.653l.152.468h.493l-.399.29.153.467-.399-.289-.399.29.152-.469-.399-.289h.494zM.742 7.701L.59 7.233l.398-.289H.496L.484 6.91a9.53 9.53 0 0 0-.148.507l.007-.005.399.29zM1.6 5.222l.4-.29.398.29-.152-.468.399-.29h-.493l-.153-.467-.152.468h-.182a9.409 9.409 0 0 0-.099.154l.187.135-.152.468zm2.056-2.769l.399.29-.153-.468.4-.29h-.286a9.92 9.92 0 0 0-.7.573l-.06.185.4-.29zm1.258-.537l.398-.29.4.29-.153-.468.399-.289h-.493l-.021-.063a9.895 9.895 0 0 0-.494.268l.116.084-.152.468zm.398.428l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm1.657-5.786l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.469-.399-.289h.493zm0 1.653l.152.468h.493l-.398.29.152.467-.4-.289-.398.29.152-.469-.399-.289h.493zM8.625.691l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.289h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494z' />\n                    </g>\n                );\n                break;\n            case 'ust':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M10 0c5.523 0 10 4.477 10 10s-4.478 10-10 10S0 15.524 0 10 4.477 0 10 0' fill='#53AE94' />\n                        <path d='M11.234 8.668V7.18h3.402V4.913H5.373V7.18h3.402v1.486c-2.765.127-4.844.675-4.844 1.331 0 .656 2.08 1.204 4.844 1.331v4.765h2.46v-4.765c2.76-.127 4.835-.675 4.835-1.33s-2.075-1.203-4.835-1.33m0 2.256c-.07.004-.426.025-1.22.025-.635 0-1.081-.018-1.239-.026v.002c-2.443-.108-4.266-.534-4.266-1.043 0-.509 1.824-.934 4.266-1.042v1.661c.16.011.618.038 1.25.038.758 0 1.14-.032 1.21-.038V8.84c2.437.109 4.257.534 4.257 1.042 0 .507-1.82.933-4.258 1.041' fill='#FFF' />\n                    </g>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'>\n            {IconCurrency}\n        </svg>\n\n    );\n};\n\nIconAccountsCurrency.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconAccountsCurrency };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path\n            className='color1-fill'\n            fill='#000'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M14.293 8.5H8.5a.5.5 0 0 1 0-1h5.793l-1.647-1.646a.5.5 0 1 1 .708-.708l2.5 2.5a.5.5 0 0 1 0 .708l-2.5 2.5a.5.5 0 1 1-.708-.708L14.293 8.5zM11 10.962a.5.5 0 0 1 1 0v1.692C12 13.4 11.38 14 10.625 14h-5.25C4.619 14 4 13.401 4 12.654V3.346C4 2.6 4.62 2 5.375 2h5.25C11.381 2 12 2.599 12 3.346v1.692a.5.5 0 0 1-1 0V3.346C11 3.16 10.836 3 10.625 3h-5.25C5.165 3 5 3.159 5 3.346v9.308c0 .187.164.346.375.346h5.25c.21 0 .375-.159.375-.346v-1.692z'\n        />\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst DepositButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Deposit')}\n        // TODO: Redirect to Deposit page in Cashier\n        // onClick={redirectToCashierDeposit}\n    />\n);\n\nDepositButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { DepositButton };\n","import classNames   from 'classnames';\nimport React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    className,\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className={classNames(className, 'btn--primary btn--primary--orange')}\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    className   : PropTypes.string,\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        <div className='header__navbar-icons header__navbar-icons--binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    (item.login_only && (item.login_only !== is_logged_in)) ?\n                        null\n                        :\n                        <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                            <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}</span>\n                        </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        is_logged_in: PropTypes.bool,\n        link_to     : PropTypes.string,\n        text        : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form-layout.jsx';\nimport Digits               from '../../Contract/Containers/digits.jsx';\nimport InfoBox              from '../../Contract/Containers/info-box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_last_digit_stats = ['match_diff', 'even_odd', 'over_under'].includes(this.props.contract_type)\n            && !this.props.is_contract_mode;\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                Digits={<Digits is_trade_page />}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                                start_epoch={this.props.start_epoch}\n                                end_epoch={this.props.end_epoch}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id || this.props.is_contract_mode}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    contract_type   : PropTypes.string,\n    end_epoch       : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    start_epoch     : PropTypes.number,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        start_epoch      : modules.contract.chart_config.start_epoch,\n        end_epoch        : modules.contract.chart_config.end_epoch,\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        contract_type    : modules.trade.contract_type,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen-large.jsx';\nimport ScreenSmall  from './screen-small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--blur': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import classNames           from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract-type-dialog.jsx';\nimport ContractTypeList      from './contract-type-list.jsx';\nimport TradeTypeInfoDialog   from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem     from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open     : false,\n            is_info_dialog_open: false,\n            item               : {},\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(navigationList[nextIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[0]);\n        }\n    };\n\n    handlePrevClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(navigationList[prevIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({ is_info_dialog_open: false, is_dialog_open: false });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getNavigationList = () => {\n        const navigationList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && navigationList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return navigationList;\n    };\n\n    render() {\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={'contract-type-widget'}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': this.state.is_dialog_open,\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <IconTradeCategory category={this.props.value} className='contract-type-widget__icon-wrapper' />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                        handleInfoClick={this.handleInfoClick}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={this.props.is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={this.state.is_info_dialog_open}\n                    title={this.state.item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_mobile={this.props.is_mobile}\n                        item={this.state.item}\n                        navigationList={this.getNavigationList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category, className }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)}>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category : PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    list           : MobxPropTypes.objectOrObservableObject,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconInfoOutline }            from 'Assets/Common';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`contract-type-item ${value === contract.value ? 'contract-type-item--selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <IconTradeCategory category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <IconInfoOutline />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { Scrollbars }       from 'tt-react-custom-scrollbars';\nimport { IconBack }         from 'Assets/Common/icon-back.jsx';\nimport { IconChevronLeft }  from 'Assets/Common/icon-chevron-left.jsx';\nimport { IconChevronRight } from 'Assets/Common/icon-chevron-right.jsx';\nimport { TradeCategories }  from 'Assets/Trading/Categories/trade-categories.jsx';\nimport Button               from 'App/Components/Form/button.jsx';\nimport { localize }         from '_common/localize';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_mobile,\n    item,\n    navigationList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <IconBack />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__gif'>\n            gif explanation\n        </div>\n        <div className='trade-type-info-dialog__content'>\n            <Scrollbars\n                autoHide\n                style={{ height: '100%' }}\n            >\n                <TradeCategories category={item.value} />\n            </Scrollbars>\n        </div>\n        <div>\n            <Button className='trade-type-info-dialog__choose-button' text={localize('Choose')} onClick={() => onSubmitButtonClick(item)} />\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(navigationList)} >\n                <IconChevronLeft />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                {\n                    navigationList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className={classNames('trade-type-info-navigation__circle-button', {\n                                    'trade-type-info-navigation__circle-button--active': contract.value === item.value,\n                                })}\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(navigationList)} >\n                <IconChevronRight />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    navigationList       : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n\nconst TradeCategories = ({ category }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>\n                            { localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }\n                        </p>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to the barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.') }</p>\n                        <p>{ localize('If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to either the Low barrier or the High barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period') }</p>\n                        <p>{ localize('If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.') }</p>\n                        <p>{ localize('If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).') }</p>\n                        <p>{ localize('If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.') }</p>\n                        <p>{ localize('If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Touches\", you win the payout if the market touches the barrier at any time during the contract period.') }</p>\n                        <p>{ localize('If you select \"Does Not Touch\", you win the payout if the market never touches the barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('Asian options settle by comparing the last tick with the average spot over the period.') }</p>\n                        <p>{ localize('If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.') }</p>\n                        <p>{ localize('If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.') }</p>\n                        <p>{ localize('If the last tick is equal to the average of the ticks, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <p>\n                        not found\n                    </p>\n                );\n                break;\n        }\n    }\n    return (\n        <div>\n            {TradeTypeTemplate}\n        </div>\n    );\n};\n\nTradeCategories.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { TradeCategories };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm-element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm-element.jsx';\n\nclass PopConfirm extends React.PureComponent {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    })\n                ))}\n                {popconfirm_element}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    is_visible,\n    proposal_info,\n}) => (\n    <React.Fragment>\n        {(proposal_info.has_error || !proposal_info.id) ?\n            <div\n                className={classNames({\n                    'trade-container__error': proposal_info.has_error,\n                })}\n            >\n                {proposal_info.message && <span className='trade-container__error-info'>{proposal_info.message}</span>}\n            </div>\n            :\n            <div className='trade-container__price'>\n                <div className='trade-container__price-info'>\n                    <div className='trade-container__price-info-basis'>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                    <div className='trade-container__price-info-value'><Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} /></div>\n                    {is_visible &&\n                    <div className='trade-container__price-info-movement'>\n                        {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                    </div>\n                    }\n                </div>\n                <span>\n                    <Tooltip alignment='left' className='trade-container__price-tooltip' classNameIcon='trade-container__price-tooltip-i' icon='info' message={proposal_info.message} />\n                </span>\n            </div>\n        }\n    </React.Fragment>\n);\n\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    is_visible   : PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message-box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon-close.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n    if (!has_error) return null;\n    return (\n        <div className='message-box'>\n            <div className='message-box__close-btn' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {ErrorComponent}\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","export * from './error-balance.jsx';\nexport * from './error-general.jsx';\nexport * from './error-login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='message-box__login'>\n        <span className='message-box__info message-box__login-info'>\n            {localize('You have an insufficient amount of balance.')}\n        </span>\n        <Button\n            className='btn--secondary btn--secondary--orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='message-box__result'>\n        <span className='message-box__info'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='message-box__login'>\n        <span className='message-box__info message-box__login-info'>\n            {localize('Please log in to purchase the contract')}\n        </span>\n        <Button\n            className='btn--secondary btn--secondary--orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p className='message-box__login-prompt'>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a className='message-box__login-link' href='javascript:;'>\n            <span className='message-box__info message-box__login-info'>\n                {localize('Create one now')}\n            </span>\n        </a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase-lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon-lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-container__lock'>\n        <div>\n            <IconLock className='purchase-container__lock-icon' />\n        </div>\n        <h4 className='purchase-container__lock-header'>{localize('Purchase Locked')}</h4>\n        <Button\n            className='purchase-container__lock-button btn--secondary btn--secondary--orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='purchase-container__lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect className='color1-stroke' width='9' height='7' x='.5' y='6.5' stroke='none' rx='1' />\n            <circle className='color1-fill' cx='5' cy='10' r='1' fill='none' />\n            <path className='color1-stroke' stroke='none' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\n// import StartDate from 'Modules/Trading/Components/Form/TradeParams/start-date.jsx';\n\nexport const form_components = [\n    // { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport ButtonToggleMenu          from 'App/Components/Form/button-toggle-menu.jsx';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/InputField';\nimport AllowEquals               from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_allow_equal,\n    is_equal_checked,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames({ 'three-columns': !is_single_currency });\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <div className={amount_container_class}>\n                <ButtonToggleMenu\n                    buttons_arr={basis_list}\n                    className='dropdown--no-margin'\n                    name='basis'\n                    onChange={onChange}\n                    value={basis}\n                />\n                {!is_single_currency &&\n                <Dropdown\n                    className={classNames('no-margin', { 'trade-container__currency-options': !is_single_currency })}\n                    classNameDisplay='trade-container__currency-options--display'\n                    has_symbol\n                    is_alignment_left\n                    is_nativepicker={false}\n                    list={currencies_list}\n                    name='currency'\n                    value={currency}\n                    onChange={onChange}\n                />\n                }\n                <InputField\n                    className={classNames('trade-container__amount', { 'trade-container__amount--has-currency-options': !is_single_currency })}\n                    classNameInlinePrefix='trade-container__currency'\n                    classNameInput='trade-container__input'\n                    currency={currency}\n                    error_messages={validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    id='amount'\n                    inline_prefix={is_single_currency ? currency : null}\n                    is_autocomplete_disabled\n                    is_float\n                    is_incrementable\n                    is_nativepicker={is_nativepicker}\n                    is_negative_disabled\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    type='tel'\n                    value={amount}\n                />\n            </div>\n            <AllowEquals\n                checked={is_equal_checked}\n                is_allow_equal={is_allow_equal}\n                onChange={onChange}\n            />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis           : PropTypes.string,\n    basis_list      : MobxPropTypes.arrayOrObservableArray,\n    currencies_list : MobxPropTypes.observableObject,\n    currency        : PropTypes.string,\n    is_allow_equal  : PropTypes.bool,\n    is_equal_checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', this.props.classNameDisplay, {\n                        'dropdown__display--clicked'   : this.state.is_list_visible,\n                        'dropdown__display--has-symbol': this.props.has_symbol,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    {this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className={`symbols dropdown__display-symbol symbols--${(this.props.value || '').toLowerCase()}`} />\n                    }\n                    {!this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                    }\n                </div>\n                {\n                    !is_single_option && <IconArrow className={classNames('dropdown__select-arrow', {\n                        'dropdown__select-arrow--left': this.props.is_alignment_left,\n                    })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        handleSelect={this.handleSelect}\n                                        has_symbol={this.props.has_symbol}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                handleSelect={this.handleSelect}\n                                                has_symbol={this.props.has_symbol}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    classNameDisplay : PropTypes.string,\n    has_symbol       : PropTypes.bool,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Tooltip             from 'App/Components/Elements/tooltip.jsx';\nimport { getCurrencyName } from '_common/base/currency_base';\n\nconst Items = ({\n    handleSelect,\n    has_symbol,\n    items,\n    name,\n    value,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={classNames('list__item', {\n                    'list__item--selected': value === item.value,\n                })}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                {!!has_symbol && item.has_tooltip &&\n                <Tooltip alignment='top' className='list__item-tooltip' message={getCurrencyName(item.value)}>\n                    <i><span className={`symbols list__item-tooltip-symbols symbols--${(item.text || '').toLowerCase()}`} /></i>\n                </Tooltip>\n                }\n                {!!has_symbol && !item.has_tooltip &&\n                <span className={`list__item-text symbols symbols--${(item.text || '').toLowerCase()}`} />\n                }\n                {!has_symbol && <span className='list__item-text'>{item.text}</span>}\n            </div>\n        </React.Fragment>\n    ))\n);\n\nItems.propTypes = {\n    handleSelect: PropTypes.func,\n    has_symbol  : PropTypes.bool,\n    name        : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { isCryptocurrency }      from '_common/base/currency_base';\nimport IncrementButtons          from './increment-buttons.jsx';\nimport Input                     from './input.jsx';\nimport Tooltip                   from '../../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    classNameInlinePrefix,\n    classNameInput,\n    classNamePrefix,\n    currency,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_negative_disabled,\n    is_read_only = false,\n    is_signed = false,\n    is_unit_at_right = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    unit,\n    value,\n}) => {\n    const has_error       = error_messages && !!error_messages.length;\n    let has_valid_length  = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (unit) {\n            e.target.value = e.target.value.replace(unit, '').trim();\n        }\n\n        if (e.target.value === value && type !== 'checkbox') {\n            return;\n        }\n\n        if (type === 'number' || type === 'tel') {\n            const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n            const signed_regex = is_signed ? '^([+\\-\\.0-9])' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if (((is_number) || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation || type === 'tel'\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const getDecimals = (val) => {\n        const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n        return array_value && array_value.length > 1 ? array_value[1].length : 0;\n    };\n\n    const incrementValue = () => {\n        if (max_is_disabled) return;\n        let increment_value;\n\n        const decimal_places = value ? getDecimals(value) : 0;\n        const is_crypto      = !!currency && isCryptocurrency(currency);\n\n        if (is_crypto || (!currency && is_float)) {\n            const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n            increment_value = parseFloat(new_value).toFixed(decimal_places);\n        } else {\n            increment_value = parseFloat((+value) + 1).toFixed(decimal_places);\n        }\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const calculateDecrementedValue = () => {\n        let decrement_value;\n\n        const decimal_places = value ? getDecimals(value) : 0;\n        const is_crypto      = !!currency && isCryptocurrency(currency);\n\n        if (is_crypto || (!currency && is_float)) {\n            const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n            decrement_value = parseFloat(new_value).toFixed(decimal_places);\n        } else {\n            decrement_value = parseFloat((+value) - 1).toFixed(decimal_places);\n        }\n        return decrement_value;\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n        const decrement_value = calculateDecrementedValue();\n        if (is_negative_disabled && decrement_value < 0) return;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    let display_value = value;\n\n    if (unit) {\n        display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n    }\n\n    const is_increment_input = is_incrementable && (type === 'number' || type === 'tel');\n\n    const input =\n        <Input\n            changeValue={changeValue}\n            checked={checked}\n            className={classNames(is_increment_input ? 'input-wrapper__input' : '', inline_prefix ? 'input--has-inline-prefix' : '', 'input', { 'input--error': has_error }, classNameInput)}\n            classNameInlinePrefix={classNameInlinePrefix}\n            data_tip={data_tip}\n            data_value={data_value}\n            display_value={display_value}\n            fractional_digits={fractional_digits}\n            has_error={has_error}\n            id={id}\n            inline_prefix={inline_prefix}\n            is_autocomplete_disabled={is_autocomplete_disabled}\n            is_disabled={is_disabled}\n            is_incrementable={is_increment_input}\n            is_read_only={is_read_only}\n            max_length={max_length}\n            name={name}\n            onClick={onClick}\n            onKeyPressed={onKeyPressed}\n            placeholder={placeholder}\n            required={required}\n            type={type}\n        />;\n\n    const increment_buttons =\n        <div className='input-wrapper'>\n            <IncrementButtons\n                max_is_disabled={max_is_disabled}\n                incrementValue={incrementValue}\n                min_is_disabled={min_is_disabled || (is_negative_disabled && calculateDecrementedValue() < 0)}\n                decrementValue={decrementValue}\n            />\n        </div>;\n\n    const input_tooltip =\n        <Tooltip className={classNames('', { 'with-label': label })} alignment='left' message={has_error ? error_messages[0] : null }>\n            {!!label &&\n            <label htmlFor={name} className='input-field__label'>{label}</label>\n            }\n            {!!helper &&\n            <span className='input-field__helper'>{helper}</span>\n            }\n            {is_increment_input &&\n                increment_buttons\n            }\n            {input}\n        </Tooltip>;\n\n    return (\n        <React.Fragment>\n            {!!prefix &&\n                <div className={classNamePrefix}>\n                    <span className={classNames(`${classNamePrefix}--symbol`, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                </div>\n            }\n            <div\n                className={classNames('input-field', className)}\n            >\n                {input_tooltip}\n            </div>\n        </React.Fragment>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className               : PropTypes.string,\n    classNameInlinePrefix   : PropTypes.string,\n    classNameInput          : PropTypes.string,\n    classNamePrefix         : PropTypes.string,\n    currency                : PropTypes.string,\n    error_messages          : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits       : PropTypes.number,\n    helper                  : PropTypes.string,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_negative_disabled    : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Button                    from '../button.jsx';\nimport { IconMinus, IconPlus }   from '../../../../Assets/Common';\n\nconst IncrementButtons = ({\n    decrementValue,\n    incrementValue,\n    max_is_disabled,\n    min_is_disabled,\n}) => (\n    <React.Fragment>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--increment'}\n            is_disabled={max_is_disabled}\n            onClick={incrementValue}\n            tabIndex='-1'\n        >\n            <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n        </Button>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--decrement'}\n            is_disabled={min_is_disabled}\n            onClick={decrementValue}\n            tabIndex='-1'\n        >\n            <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n        </Button>\n    </React.Fragment>\n);\n\nIncrementButtons.propTypes = {\n    decrementValue : PropTypes.func,\n    incrementValue : PropTypes.func,\n    max_is_disabled: PropTypes.bool,\n    min_is_disabled: PropTypes.bool,\n};\n\nexport default IncrementButtons;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Input = ({\n    changeValue,\n    checked,\n    className,\n    classNameInlinePrefix,\n    data_value,\n    data_tip,\n    display_value,\n    fractional_digits,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_incrementable,\n    is_read_only,\n    max_length,\n    name,\n    onClick,\n    onKeyPressed,\n    placeholder,\n    required,\n    type,\n}) => (\n    <React.Fragment>\n        {!!inline_prefix &&\n        <div className={classNameInlinePrefix}>\n            <span className={classNames(classNameInlinePrefix ? `${classNameInlinePrefix}--symbol` : '', 'symbols', `symbols--${inline_prefix.toLowerCase()}`)} />\n        </div>\n        }\n        <input\n            autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n            checked={checked ? 'checked' : ''}\n            className={classNames(className)}\n            data-for={`error_tooltip_${name}`}\n            data-tip={data_tip}\n            data-value={data_value}\n            disabled={is_disabled}\n            id={id}\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onChange={changeValue}\n            onClick={onClick}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={display_value || ''}\n        />\n    </React.Fragment>\n);\n\nInput.propTypes = {\n    changeValue: PropTypes.func,\n    checked    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    data_tip             : PropTypes.string,\n    data_value           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    display_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    fractional_digits       : PropTypes.number,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onClick                 : PropTypes.func,\n    onKeyPressed            : PropTypes.func,\n    placeholder             : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Input;\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from '_common/localize';\nimport Tooltip        from 'App/Components/Elements/tooltip.jsx';\nimport InputField     from 'App/Components/Form/InputField';\n\nconst AllowEquals = ({\n    is_allow_equal,\n    checked,\n    onChange,\n}) => (\n    !!is_allow_equal &&\n        <div className='allow-equals'>\n            <InputField\n                className='allow-equals__input-field'\n                classNameInput='allow-equals__input trade-container__input'\n                id='allow_equals'\n                name='contract_type'\n                onChange={onChange}\n                value='is_equal'\n                type='checkbox'\n                checked={checked}\n            />\n            <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n            <Tooltip\n                alignment='left'\n                className='allow-equals__tooltip'\n                classNameIcon='allow-equals__tooltip-info'\n                icon='info'\n                message={localize('Win payout if exit spot is also equal to entry spot.')}\n            />\n        </div>\n);\n\nAllowEquals.propTypes = {\n    checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_allow_equal: PropTypes.bool,\n    onChange      : PropTypes.func,\n};\n\nexport default AllowEquals;\n","import classNames     from 'classnames';\nimport { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    IconBarrierUp,\n    IconBarrierDown } from 'Assets/Trading/Barriers';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport InputField     from 'App/Components/Form/InputField';\n\nimport { localize }   from '_common/localize';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n    \n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <IconBarrierUp className='trade-container__barriers--up' />\n                        <IconBarrierDown className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","export * from './icon-barrier-up.jsx';\nexport * from './icon-barrier-down.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierUp = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M8.5 4.207V12.5a.5.5 0 1 1-1 0V4.207L4.854 6.854a.5.5 0 1 1-.708-.708l3.5-3.5a.5.5 0 0 1 .708 0l3.5 3.5a.5.5 0 1 1-.708.708L8.5 4.207z'\n        />\n    </svg>\n);\n\nIconBarrierUp.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierUp };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierDown = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M7.5 11.793V3.5a.5.5 0 0 1 1 0v8.293l2.646-2.647a.5.5 0 1 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 11.793z'\n        />\n    </svg>\n);\n\nIconBarrierDown.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierDown };\n","export default from './duration-wrapper.jsx';\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport Duration                 from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : new_duration_value,\n        });\n    }\n\n    componentDidMount() {\n        const current_unit = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration = this.props.getDurationFromUnit(this.props.duration_unit);\n\n        if (this.props.duration_unit !== current_unit) {\n            this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: this.props.duration_unit });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${current_unit}`, value: this.props.duration });\n        }\n    }\n\n    componentWillReact() {\n        const simple_is_missing_duration_unit = !this.props.is_advanced_duration && this.props.simple_duration_unit === 'd' && this.props.duration_units_list.length === 4;\n        const current_duration_unit           = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration                = this.props.getDurationFromUnit(this.props.duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_not_type_duration     = !this.props.is_advanced_duration && this.props.expiry_type !== 'duration';\n        const advanced_has_wrong_expiry       = this.props.is_advanced_duration\n            && this.props.expiry_type !== this.props.advanced_expiry_type && this.props.duration_units_list.length > 1;\n\n        // intercept changes to current contracts duration_units_list - if they are missing change duration_unit and value in trade_store and ui_store\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n            return;\n        }\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (advanced_has_wrong_expiry) {\n            this.props.onChange({ target: { name: 'expiry_type', value: this.props.advanced_expiry_type } });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${this.props.duration_unit}`, value: this.props.duration });\n        }\n    }\n\n    render() {\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_d: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_h: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_m: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_s      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(DurationWrapper);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from '_common/localize';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    validation_errors,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        onChangeUiStore({ name: duration_name, value });\n        onChange({ target: { name, value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    let max_value, min_value;\n    if (duration_min_max[contract_expiry_type]) {\n        max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n    }\n\n    const props = {\n        shared_input: {\n            max_value,\n            min_value,\n            onChange: changeDurationValue,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n            error_messages  : validation_errors.duration || [],\n        },\n    };\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    ticks={10}\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_t      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick-steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    return (\n        <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n            <label className='range-slider__label' htmlFor='range'>\n                <input\n                    id='range'\n                    className='input trade-container__input range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='range-slider__ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '1.6rem' : '1rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span className='range-slider__caption--first'>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span className='range-slider__caption--last'>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active': (idx + 1) === parseInt(value),\n                        'range-slider__ticks-step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { IconArrow }       from 'Assets/Common';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <IconArrow className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                            // validation_errors={validation_errors.expiry_date} TODO: add validation_errors for expiry date\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default AdvancedDuration;\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\n\nconst TradingDatePicker = ({\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const moment_contract_start_date_time =\n        setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (expiry_type === 'duration') {\n        min_date_expiry.add(1, 'day');\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={validation_errors.duration || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={expiry_date}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n    })\n)(TradingDatePicker);\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }             from 'Assets/Common';\nimport InputField           from 'App/Components/Form/InputField';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from '_common/localize';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        this.setState({\n            holidays,\n            weekends,\n        });\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <IconClear\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from '_common/localize';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","export * from './calendar-days.jsx';\nexport * from './calendar-months.jsx';\nexport * from './calendar-years.jsx';\nexport * from './calendar-decades.jsx';\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { padLeft }      from '_common/string_util';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr } from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    subDays,\n    subMonths,\n    toMoment }          from 'Utils/Date';\nimport { localize }     from '_common/localize';\nimport CommonPropTypes  from './types';\nimport Tooltip          from '../../tooltip.jsx';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date)\n            || moment_date.isAfter(addDays(moment_start_date, 1)))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Tooltip\n                        alignment='top'\n                        className='calendar__cell-tooltip'\n                        classNameIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport CommonPropTypes   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\nimport { localize }          from '_common/localize';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport { month_headers }    from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date         : PropTypes.string,\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","export default from './trading-time-picker.jsx';\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime  = setTime(moment_expiry_date.clone(), market_open_times[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n    \n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","export default from './time-picker.jsx';\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../InputField';\nimport { IconClock }     from '../../../../Assets/Common/icon-clock.jsx';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={selected_time}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <IconClock className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h);\n                            const start_time_reset_minute = start_time_moment.clone().minute(0);\n                            const is_hour_enabled = to_compare_moment.isBetween(\n                                start_time_reset_minute,\n                                end_time_moment);\n                            const is_minute_enabled = to_compare_moment.isBetween(\n                                start_time_moment,\n                                end_time_moment,\n                                'minute');\n                            const is_enabled = is_hour_enabled && is_minute_enabled;\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute(Math.round(time.minute() / interval) * interval);\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    let value = selected_time.isBefore(market_open_time)\n        ? market_open_time.isBefore(server_time)\n            ? server_time\n            : market_open_time\n        : selected_time;\n\n    value = getClosestTime(value, 5);\n    return value.format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit: PropTypes.func,\n    duration_t        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n};\n\nexport default SimpleDuration;\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile-widget.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-container'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full-screen-dialog.jsx';\nimport TradeParams      from '../../Containers/trade-params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","export LastDigitPrediction from './last-digit-prediction.jsx';\n","import { observer }       from 'mobx-react';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport DigitDisplay       from './digit-display.jsx';\nimport LastDigitParticles from './last-digit-particles.jsx';\nimport LastDigitPointer   from './last-digit-pointer.jsx';\n\nconst display_array = Array.from(Array(10).keys()); // digits array [0 - 9]\nclass LastDigitPrediction extends React.Component {\n    state = {};\n\n    componentDidMount() {\n        this.node.querySelectorAll('.digits__digit').forEach((el, idx) => {\n            // get offsetLeft of each Digits\n            this.setState({\n                [idx]: el.offsetLeft,\n            });\n        });\n    }\n\n    getBarrier = (num) => {\n        const  { barrier, contract_type } = this.props;\n\n        const barrier_map = {\n            DIGITMATCH: (val) => val === barrier,\n            DIGITDIFF : (val) => val !== barrier,\n            DIGITOVER : (val) => val > barrier,\n            DIGITUNDER: (val) => val < barrier,\n            DIGITODD  : (val) => val % 2,\n            DIGITEVEN : (val) => !(val % 2),\n        };\n\n        return barrier_map[contract_type](num) ? num : null;\n    };\n\n    render() {\n        const { digits_info, is_ended, is_trade_page, status } = this.props;\n        const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n        const latest_digit = digits_array.slice(-1)[0] || {};\n\n        // 'won' or 'lost' status exists after contract expiry\n        const is_won  = is_ended && status === 'won';\n        // need to explicitly have is_lost condition here\n        // because negating is_won would always be true,\n        // but we only need is_lost condition only once we have the 'won' or 'lost' status\n        const is_lost = is_ended && status === 'lost';\n\n        const position = this.state[latest_digit.digit];\n\n        return (\n            <div\n                ref={node => this.node = node}\n                className='digits'\n            >\n                { display_array.map((idx) => (\n                    <DigitDisplay\n                        barrier={this.getBarrier(idx)}\n                        is_lost={is_lost}\n                        is_trade_page={is_trade_page}\n                        is_won={is_won}\n                        key={idx}\n                        latest_digit={latest_digit}\n                        value={idx}\n                    />\n                ))}\n                { latest_digit.digit >= 0 &&\n                    <LastDigitPointer\n                        is_lost={is_lost}\n                        is_won={is_won}\n                        position={position}\n                    />\n                }\n                <LastDigitParticles\n                    is_won={is_won}\n                    position={position}\n                />\n            </div>\n        );\n    }\n}\n\nLastDigitPrediction.propTypes = {\n    barrier      : PropTypes.number,\n    contract_type: PropTypes.string,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n    status       : PropTypes.string,\n};\n\nexport default observer(LastDigitPrediction);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Digit        from './digit.jsx';\nimport DigitSpot    from './digit-spot.jsx';\n\nconst DigitDisplay = ({\n    barrier,\n    is_lost,\n    is_trade_page,\n    is_won,\n    latest_digit,\n    value,\n}) => {\n    const { digit, spot } = latest_digit;\n    const is_latest       = value === digit;\n    const is_selected     = value === barrier;\n\n    return (\n        <div\n            className={classNames('digits__digit', {\n                'digits__digit--win' : is_won && is_latest,\n                'digits__digit--loss': is_lost && is_latest,\n            })}\n        >\n            { is_latest && spot &&\n                <DigitSpot\n                    current_spot={spot}\n                    is_lost={is_lost}\n                    is_won={is_won}\n                />\n            }\n            <Digit\n                is_latest={is_latest}\n                is_lost={is_lost}\n                is_trade_page={is_trade_page}\n                is_selected={is_selected}\n                is_won={is_won}\n                value={value}\n            />\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    barrier      : PropTypes.number,\n    is_lost      : PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won       : PropTypes.bool,\n    latest_digit : PropTypes.object,\n    value        : PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Digit = ({\n    is_latest,\n    is_lost,\n    is_selected,\n    is_trade_page,\n    is_won,\n    value,\n}) => (\n    <span\n        className={classNames('digits__digit-value', {\n            'digits__digit-value--latest'  : is_latest,\n            'digits__digit-value--selected': is_selected,\n            'digits__digit-value--blink'   : is_won && is_latest && is_trade_page,\n            'digits__digit-value--win'     : is_won && is_latest,\n            'digits__digit-value--loss'    : is_lost && is_latest,\n        })}\n    >\n        {value}\n    </span>\n);\n\nDigit.propTypes = {\n    is_latest    : PropTypes.bool,\n    is_lost      : PropTypes.bool,\n    is_selected  : PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won       : PropTypes.bool,\n    value        : PropTypes.number,\n};\n\nexport default Digit;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst DigitSpot = ({\n    current_spot,\n    is_lost,\n    is_won,\n}) => (\n    <div className='digits__digit-spot'>\n        <span className='digits__digit-spot-value'>\n            {current_spot.slice(0, -1)}\n        </span>\n        <span\n            className={classNames('digits__digit-spot-last', {\n                'digits__digit-spot-last--win' : is_won,\n                'digits__digit-spot-last--loss': is_lost,\n            })}\n        >\n            {current_spot.slice(-1)}\n        </span>\n    </div>\n);\n\nDigitSpot.propTypes = {\n    current_spot: PropTypes.string,\n    is_lost     : PropTypes.bool,\n    is_won      : PropTypes.bool,\n};\n\nexport default DigitSpot;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst LastDigitParticles = ({\n    is_won,\n    position,\n}) => (\n    <div\n        className={classNames('digits__particles', {\n            'digits__particles--explode': is_won,\n        })}\n        style={{ marginLeft: position }}\n    >\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n    </div>\n);\n\nLastDigitParticles.propTypes = {\n    is_won  : PropTypes.bool,\n    position: PropTypes.number,\n};\n\nexport default LastDigitParticles;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst LastDigitPointer = ({\n    is_lost,\n    is_won,\n    position,\n}) => (\n    <span\n        className='digits__pointer'\n        style={{ marginLeft: position }}\n    >\n        <IconPriceMove\n            className={classNames('digits__icon', {\n                'digits__icon--win' : is_won,\n                'digits__icon--loss': is_lost,\n            })}\n            classNamePath='digits__icon-color'\n            type='profit'\n        />\n    </span>\n);\n\nLastDigitPointer.propTypes = {\n    is_lost : PropTypes.bool,\n    is_won  : PropTypes.bool,\n    position: PropTypes.number,\n};\n\nexport default LastDigitPointer;\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxExpired  from './info-box-expired.jsx';\nexport InfoBoxGeneral  from './info-box-general.jsx';\nexport InfoBoxLongcode from './info-box-longcode.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport SellInfo     from '../Sell/sell-info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining-time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract-sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell-button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='btn--secondary btn--secondary--green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { IconFlag } from 'Assets/Common';\n\nconst InfoBoxLongcode = ({\n    contract_info,\n}) => (\n    <div className='info-box-longcode'>\n        <IconFlag className='info-box-longcode-icon' />\n        <span className='info-box-longcode-text'>{contract_info.longcode}</span>\n    </div>\n);\n\nInfoBoxLongcode.propTypes = {\n    longcode: PropTypes.string,\n};\n\nexport default observer(InfoBoxLongcode);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport IconContractClose from '../../../Assets/Contract/icon-contract-close.jsx';\n\nconst ChartCloseBtn = ({\n    is_contract_mode,\n    onClose,\n}) => {\n    if (!is_contract_mode) return null;\n    return (\n        <div\n            className='chart-close-btn'\n            onClick={onClose}\n        >\n            <IconContractClose\n                className='ic-chart-close'\n            />\n        </div>\n    );\n};\n\nChartCloseBtn.propTypes = {\n    is_contract_mode: PropTypes.bool,\n    onClose         : PropTypes.func,\n};\n\nexport default ChartCloseBtn;\n","import classNames from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconContractClose = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='32' height='32' viewBox='0 0 32 32'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n        <path className={classNamePath || 'color1-fill'}  fill='#7F8397' fillRule='nonzero' d='M16 14.586l-4.293-4.293a1 1 0 0 0-1.414 1.414L14.586 16l-4.293 4.293a1 1 0 0 0 1.414 1.414L16 17.414l4.293 4.293a1 1 0 0 0 1.414-1.414L17.414 16l4.293-4.293a1 1 0 0 0-1.414-1.414L16 14.586zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z' />\n    </svg>\n\n);\n\nIconContractClose.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport default IconContractClose;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport UILoader           from 'App/Components/Elements/ui-loader.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='login-prompt__icon-svg disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu-drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='header__menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer-item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('drawer__parent-item', {\n            'drawer__parent-item--show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer__items', {\n            'drawer__items--show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer__item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <SwitchButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('header__navbar-icons', `header__navbar-icons--${icon_class}`);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_positions_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePositionsDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer__items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer__icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer__icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer__icon' />}\n                    link_to={routes.statement}\n                />\n                <hr className='hr' />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer__footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer__icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_positions_drawer_on) {\n                        togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePositionsDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { EmptyNotification } from './empty-notification.jsx';\nimport { DrawerItem }        from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <EmptyNotification />\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    list: PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport { IconBell } from 'Assets/Header/NavBar';\n\nconst EmptyNotification = () => (\n    <div className='drawer__no-notifications-container'>\n        <div className='drawer__no-notifications'>\n            <div className='drawer__bell'>\n                <IconBell className='drawer__bell-icon' />\n            </div>\n            <div>\n                <h4 className='drawer__no-notifications-header'>{localize('No Notifications')}</h4>\n                <span className='drawer__no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n            </div>\n        </div>\n    </div>\n);\n\nexport { EmptyNotification };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    // IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='header__icon' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    // {\n    //     icon      : <IconStatement className='header__icon' />,\n    //     text      : localize('Reports'),\n    //     link_to   : routes.statement,\n    //     login_only: true,\n    // },\n];\n\nexport default header_links;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconError } from 'Assets/Common/icon-error.jsx';\nimport { localize }  from '_common/localize';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error__container'>\n            <IconError type={type} />\n            <p className='error__message'>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","export default from './denial-of-service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\nimport Button     from 'App/Components/Form/button.jsx';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='full-page-modal__dialog'>\n                    <h1 className='full-page-modal__header'>{title}</h1>\n                    <p className='full-page-modal__content'>{children}</p>\n                    <div className='full-page-modal__footer'>\n                        <Button\n                            className={classNames('full-page-modal__button', 'btn--secondary btn--secondary--orange')}\n                            has_effect\n                            text={cancel_button_text}\n                            onClick={onCancel}\n                        />\n                        <Button\n                            className={classNames('full-page-modal__button', 'btn--primary btn--primary--orange')}\n                            has_effect\n                            text={confirm_button_text}\n                            onClick={onConfirm}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register-service-worker';\nexport { unregister } from './register-service-worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}