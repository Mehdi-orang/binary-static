{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Stores/base-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui-loader.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/Services/ws-methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Assets/Common/icon-clock.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-error.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-blue.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Form/button-toggle-menu.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/Constants/date-time.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Containers/remaining-time.jsx","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-marker-helpers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query-string.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/allow-equals.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon-back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-outline.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-question.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-red-dot.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-success.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-warning.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/VerticalTabs/vertical-tab-content-container.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/VerticalTabs/vertical-tab-headers.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Media/index.js","webpack:///./src/javascript/app_2/App/Components/Form/Checkbox/index.js","webpack:///./src/javascript/app_2/App/Components/Form/Radio/radio.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Constants/routes-config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract-type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm-element.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-price-move.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade-params.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route-with-sub-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty-portfolio-message.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/digits.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info-box.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon-flag.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network-monitor.js","webpack:///./src/javascript/app_2/Services/socket-general.js","webpack:///./src/javascript/app_2/Services/outdated-browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client-store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative-validation-rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common-store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-spot-label.jsx","webpack:///./src/javascript/app_2/Utils/Date/date-time.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-tick-markers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade-store.js","webpack:///./src/javascript/app_2/Utils/URL/url-helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract-type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui-store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base-name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar-today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-country-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minimize.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-plus.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-link.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/contract-type-cell.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon-trade-types.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-details.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-details-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./src/images/app_2/portfolio/ic-check.svg","webpack:///./src/images/app_2/portfolio/ic-cross.svg","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/helpers/duration-percentage.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close-button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast-message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app-contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server-time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network-status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-positions.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/VerticalTabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/VerticalTabs/vertical-tab.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-chart.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill-template.js","webpack:///./src/javascript/app_2/App/Components/Elements/Media/media-description.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Media/media-heading.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Media/media-icon.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Media/media-item.jsx","webpack:///./src/javascript/app_2/App/Components/Form/Checkbox/checkbox.jsx","webpack:///./src/javascript/app_2/App/Components/Form/Radio/index.js","webpack:///./src/javascript/app_2/App/Components/Form/Radio/radio-group.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language-dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-purchase.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-theme.jsx","webpack:///./src/images/app_2/settings/img-theme-dark.svg","webpack:///./src/images/app_2/settings/img-theme-light.svg","webpack:///./src/javascript/app_2/Assets/Settings/index.js","webpack:///./src/javascript/app_2/Assets/Settings/icon-charts.jsx","webpack:///./src/javascript/app_2/Assets/Settings/icon-close.jsx","webpack:///./src/javascript/app_2/Assets/Settings/icon-language.jsx","webpack:///./src/javascript/app_2/Assets/Settings/icon-purchase.jsx","webpack:///./src/javascript/app_2/Assets/Settings/icon-theme.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account-info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/index.js","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/icon_accounts_currency.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon-logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/deposit-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install-pwa-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/upgrade-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu-links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Routes/binary-link.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form-layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon-trade-categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/trade-categories.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message-box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase-lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/items.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/native-select.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/App/Components/Form/InputField/input-field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/increment-buttons.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/input.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-up.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-down.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/helpers.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/dialog.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/end-time.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number-selector.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile-widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-prediction.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit-display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit-spot.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-particles.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-pointer.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract-error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-expired.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-button.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-longcode.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/chart-close-btn.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon-contract-close.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button-link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login-prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app-config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/switch-button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle-drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-notifications-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/empty-notification.jsx","webpack:///./src/javascript/app_2/App/Constants/header-links.js","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-component.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial-of-service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register-service-worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_dateTime","forEach","_iconArrow","_iconBack","_iconCalendarToday","_iconCalendar","_iconChevronDoubleLeft","_iconChevronDoubleRight","_iconChevronLeft","_iconChevronRight","_iconCountryFlag","_iconClear","_iconClock","_iconClose","_iconError","_iconExclamation","_iconInfoBlue","_iconInfoOutline","_iconFlag","_iconMinimize","_iconMinus","_iconPlus","_iconQuestion","_iconRedDot","_iconSuccess","_iconWarning","Button","_ref$className","className","classNameSpan","has_effect","id","is_disabled","onClick","tabIndex","text","wrapperClassName","classes","_classnames2","default","effect","button","_react2","disabled","wrapper","node","string","bool","func","_logout","BinarySocketGeneral","WS","_localize","_fillTemplate","Localize","str","replacers","localized","localize","test","Fragment","fillTemplate","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_Services","_Date","_barrier","_duration","_startDate","_contract","ContractType","available_contract_types","available_categories","contract_types","trading_times","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","forward_starting_dates","find","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","isTimeValid","split","_ref2","_slicedToArray","toMoment","ServerTime","getTradingTimes","_ref3","trading_times_response","submarkets","symbols","symbol","underlying","abrupt","sent","markets","echo_req","open","times","close","_x2","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","clone","add","isSameOrBefore","getExpiryTime","expiry_time","market_close_times","start_time","end_time","market_close_time","end_moment","expiry_sessions","minDate","diff","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getContractCategories","contract_types_list","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","toLowerCase","oneOfType","number","_iconBell","_iconCashier","_iconHamburger","_iconPortfolio","_iconStatement","_iconTrade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","domain","RegExp","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","Tooltip","state","show_tooltip_balloon_icon","onMouseEnter","setState","onMouseLeave","_props","alignment","classNameIcon","has_error","icon","message","icon_class","tooltip--error","data-tooltip","data-tooltip-pos","IconInfoOutline","IconInfoBlue","tooltip__balloon-icon--show","IconQuestion","IconRedDot","getChartConfig","contract_info","start","date_start","end","date_expiry","granularity","calculateGranularity","chart_type","end_epoch","start_epoch","hour_to_granularity_map","duration","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","exit_tick","getEndSpotTime","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","Fieldset","header","is_center","fieldset_header_class","fieldset_info_class","array","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","unit","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","some","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","classNameBlock","loading_class","block_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","payout","theme","is_dark_mode_on","positions_drawer","is_positions_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","pushDataLayer","CommonPropTypes","calendar_date","isPeriodDisabled","selected_date","updateSelected","_drawerHeader","_drawerItem","_drawerItems","_drawer","_drawerToggle","_toggleDrawer","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","getContractTypeDisplay","ASIANU","ASIAND","CALL","CALLE","PUT","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYMISS","EXPIRYRANGE","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","_iconTradeTypes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","contract_id","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","is_forced","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeProposalOpenContractOnBuy","buy_request","addSubscriptionFromRequest","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","exit","spot","digit","IconClock","_ref$height","height","_ref$width","width","xmlns","fillRule","stroke","strokeLinecap","strokeLinejoin","IconError","transform","x","y","rx","_iconMaximize","_iconPositions","_iconSettings","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","IconClose","any","ButtonToggleMenu","buttons_arr","onChange","menu","val","idx","button-menu__button--active","_button2","selected_value","changeValue","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","week_headers_abbr","getDaysOfTheWeek","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","getDecade","moment_date","year","getCentury","_reactRouter","normalizePath","path","findRouteByPath","routes_config","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","_connect","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_ui","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","_digits","_logic","_markers","createMarkerConfig","marker_type","content_config","_extend2","MARKER_TYPES_CONFIG","marker_config","getSpotCount","spot_count","createMarkerExpiry","end_spot_time","LINE_END","createMarkerPurchaseTime","purchase_time","LINE_PURCHASE","createMarkerStartTime","LINE_START","createMarkerSpotEntry","SPOT_ENTRY","component_props","SPOT_MIDDLE","spot_value","spot_epoch","createMarkerSpotExit","align_label","SPOT_EXIT","createMarkerSpotMiddle","tick","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpotLabel","MarkerSpot","line_style","label","spot_className","chart-spot__spot--won","chart-spot__spot--lost","oneOf","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","is_equal","proposal_properties_alternative_names","is_digit","removable_proposal_properties","hasCallPutEqual","contract_type_list","hasDurationForCallPutEqual","contract_duration_list","rise_fall_equal","isRiseFallEqual","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconBack","IconChevronLeft","classNamePath","IconChevronRight","IconSuccess","IconWarning","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","VerticalTabContentContainer","PureComponent","selected","items","TabContent","VerticalTabHeaders","IconComponent","vertical-tab__header--active","vertical-tab__header__icon--active","_mediaDescription","_mediaHeading","_mediaIcon","Radio","clickHandler","radio-group__circle--selected","_iconLogout","_react","_reactRouterDom","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","routesConfig","route_default","component","Redirect","to","icon_component","IconPortfolio","exact","IconStatement","Trade","Contract","is_mobile","_contractTypeWidget2","_iconTradeCategories","_PopConfirm","_Types","Purchase","is_contract_mode","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","resetPurchase","togglePurchaseLock","purchase_info","proposal_info","info","is_purchase_error","purchase_button","stake","IconTradeType","returns","_money2","_fieldset2","_MessageBox2","_PurchaseLock2","_uiLoader2","_contractInfo2","has_increased","is_visible","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","_classNames","onConfirm","wrapperRef","popconfirm_class","IconExclamation","IconPriceMove","IconType","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","ui_store","renderCards","MobxPropTypes","arrayOrObservableArray","_login","_appConfig","Route","render","_loginPrompt2","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","handleClickOutside","contains","is_open","toggle","drawer_bg_class","drawer--show","drawer_class","CSSTransition","in","classNames","enter","enterDone","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","_LastDigitPrediction","Digits","display_status","is_trade_page","is_ended","LastDigitPrediction","_InfoBox","InfoBox","onClickNewTrade","removeError","sell_info","box_class","ended","Contents","InfoBoxLongcode","_contractError2","error_message","onClickClose","_chartCloseBtn2","removeSellError","onCloseContract","IconFlag","color","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","upgrade_info","getBasicUpgradeInfo","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarativeValidationRules","input","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCrypto","isCryptocurrency","has_tooltip","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chartBarriers","_chartMarkers","_chartTickMarkers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","createChartBarrier","createChartMarkers","handleDigits","forgetProposalOpenContract","is_sell_requested","destroyChartTickMarkers","removeBarriers","removeMarkers","tick_count","createChartTickMarkers","extendObservable","handleSell","proposal_response","sold_for","transaction_id","getDetailsExpiry","getDetailsInfo","createBarriers","not_draggable","updateBarrierShade","_chartMarkerHelpers","marker_creators","markers","createMarker","_marker_creators","handleHoverToggle","show_label","has_hover_toggle","marker_spot","_markerSpot2","defaultProps","epochToMoment","epoch","isValid","isUTC","is_number","formatted_date","Date","setTime","moment_obj","convertToUnix","toGMTFormat","formatDate","date_format","daysFromTodayTo","startOf","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","addDays","num_of_days","addMonths","num_of_months","addYears","num_of_years","subDays","subMonths","subYears","date_1","date_2","getStartOfMonth","tick_marker_handler","tickMarker","getInstance","addSpotsFromHistory","addLines","destroyInstance","makeTickArr","price_arr","times_arr","arr","arrs","curr","zip","instance","tickMarkerHandler","_objectWithoutProperties","ticks_history_req","ticks_history","ticks_added_to_chart","addMarkerFromContract","markerConfigFn","labelTopOrBottom","prev_tick","isContractTick","addTickToChart","is_entry","isEntryTick","is_exit","isExitTick","is_middle","isMiddleTick","addMarkerFromTick","onTicksHistory","_data$history","prices","_ref4","_toArray","addTicks","fn","fnForEach","getContractId","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","is_sold_before_start","txt_start_time","txt_entry_spot","end_spot","indicative_price","is_user_sold","_formatResponse","positions","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","populateResultDetails","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","profit_loss","underlying_code","underlying_name","display_name","getPositionIndexById","unshift","clearTable","initializePortfolio","findIndex","purchase","portfolio_pos","active_positions","portfolioHandler","transactionHandler","contract_response","id_sell","transaction_ids","getDurationTime","getDurationUnitText","getDurationPeriod","parseFloat","details","longcode","getDurationUnitValue","obj_duration","duration_ms","asMilliseconds","unit_map","_chartBarrierStore","_chartMarkerStore","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_queryString","_allowEquals","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validationRules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","query","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor35","changeDurationValidationRules","onAllowEqualsChange","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_over","processPurchase","onMount","openPositionsDrawer","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","obj_old_values","prev_currency","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","getQueryString","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","getProposalInfo","setChartBarrier","query_params","duration_options","_ref5","_callee4","_context4","refresh","prepareTradeStore","_x4","runInAction","_callee6","_context6","_this9","query_string","URL","search","URLSearchParams","encodeURI","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","start_moment_clone","_value$split","_value$split2","_proposal_response$ec","Duration","StartDate","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeStartDate","onChangeExpiry","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","market_open_times","createProposalRequestForContract","ask_price","display_value","contract_basis","obj_contract_basis","toFixed","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","getDurationFromUnit","handleResize","autorun","screen_width","innerWidth","is_blurred","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_baseName2","_header2","_errorBoundary2","_appContents2","_routes2","_PositionsDrawer2","_toastMessage2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","_ttReactCustomScrollbars","PositionsDrawer","onUnmount","active_contract_id","is_empty","onClickSell","onClickRemove","openContract","toggleDrawer","body_content","_emptyPortfolioMessage2","_positionsDrawerCard2","active_position","positions-drawer--open","positions-drawer--contract-mode","IconMinimize","Scrollbars","style","autoHide","removePositionById","onLoadContract","togglePositionsDrawer","IconArrow","_ref$is_bold","is_bold","fillOpacity","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconCountryFlag","IconCountry","xlinkHref","mask","strokeOpacity","IconClear","IconMinus","IconPlus","IconBell","IconCashier","IconHamburger","IconTrade","PositionsDrawerCard","percentage","getTimePercentage","positions-drawer-card__wrapper--active","_resultOverlay2","_contractLink2","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--red","_contractTypeCell2","_ProgressSlider2","ticks_count","has_result","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","btn--loading","_resultDetails2","contract_end_time","contract_start_time","ContractLink","ContractTypeCell","ProgressSlider","current_tick","_positionsProgressTicks2","_remainingTime2","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","ProgressTicks","arr_ticks","ticks__step--active","ticks__step--marked","ResultDetails","toggleDetails","result-details__wrapper--is-open","_resultDetailsItem2","result-details__toggle--is-open","ResultDetailsItem","ResultOverlay","positions-drawer-card__result--won","positions-drawer-card__result--lost","result__caption--won","result__caption--lost","_icCheck2","_icCross2","styles","_durationPercentage","duration_from_purchase","round","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","_closeButton2","shape","CloseButton","ToastMessage","toast","_ToastMessage2","arrayOf","AppContents","app-contents--show-positions-drawer","app-contents--contract-mode","app-contents--is-blurred","ProptTypes","withRouter","_Footer","Footer","hideBlur","is_dark_mode","is_language_dialog_visible","showBlur","toggleSettingsDialog","TogglePositions","NetworkStatus","_serverTime2","ToggleFullScreen","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","gmt_time","_networkStatus","_toggleFullscreen","_togglePositions","_toggleSettings","_tooltip2","tooltip","network-status__circle--offline","class","network-status__circle--online","network-status__circle--blinker","onFullScreen","is_full_screen","fullscreen_map","element","toggleFullScreen","stopPropagation","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","IconMaximize","IconPositions","IconSettings","toggle_positions_class","ic-positions--active","_settingsDialog","toggle_settings_class","ic-settings--active","SettingsDialog","toggleDialog","_SettingsDialog","_Settings","footer_settings_btn","wrapper_ref","setWrapperRef","settings_content","IconTheme","ThemeSelectSettings","IconLanguage","LanguageSettings","IconCharts","ChartSettings","IconPurchase","PurchaseSettings","modal_root","removeChild","settings_dialog_container_class","settings-dialog__container--hide","ReactDOM","createPortal","_VerticalTabs2","classNameHeader","_verticalTabContentContainer","_verticalTabHeaders","VerticalTab","changeSelected","_Media","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_Media2","MediaHeading","_localize3","MediaDescription","MediaIcon","_Radio2","onToggle","_Checkbox2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","cloneElement","last","Checkbox","checkbox__box--active","_radio","RadioGroup","_localize2","is_settings_on","_languageDialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","settings-dialog__language-dialog-container--show","settings-dialog__language-link--active","settings-dialog__language-name--active","is_purchase_confirmed","togglePurchaseConfirmation","toggleDarkMode","_imgThemeDark2","theme-select-settings__option__icon--active","_imgThemeLight2","xmlnsXlink","x1","y1","x2","y2","stopColor","stopOpacity","_iconCharts","_iconLanguage","_iconPurchase","_iconTheme","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","UpgradeButton","DepositButton","LoginButton","_accountInfo","_depositButton","_installPwaButton","_loginButton","_upgradeButton","_menuLinks","_toggleMenuDrawer","_toggleNotificationsDrawer","_AccountSwitcher","acc-info--show","acc-info--is-virtual","AccountSwitcher","_accountSwitcher","_AccountsCurrency","_Drawer","accounts_toggle_btn","handleLogout","account_loginid","real_accounts","vrt_account","main_account_title","acc-switcher__account--selected","doSwitch","IconAccountsCurrency","virtual_loginid","IconLogout","account_switcher","virtual_account_loginid","_icon_accounts_currency","IconCurrency","prompt","userChoice","choice_result","outcome","login_only","active_class","_routesConfig2","NavLink","activeClassName","SmartChart","form_wrapper_class","should_show_last_digit_stats","Suspense","fallback","_digits2","_infoBox2","onSymbolChange","updateChartType","updateGranularity","_test2","_formLayout2","is_contract_visible","Test","setVisibility","stateVisibility","container","fontSize","lineHeight","zIndex","background","padding","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","entries","v","FormLayout","_screenSmall2","_screenLarge2","ScreenLarge","sidebar__items--blur","_contractType2","_tradeParams2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","onSubmitButtonClick","handleInfoVisibility","handleInfoClick","handleNavigationClick","handleNextClick","navigationList","navigationLength","nextIndex","list_item","handlePrevClick","prevIndex","is_dialog_open","is_info_dialog_open","onWidgetClick","onBackButtonClick","getDisplayText","_this$props","findInArray","getNavigationList","contract-type-widget__display--clicked","IconTradeCategory","category","_contractTypeDialog2","_contractTypeList2","_tradeTypeInfoDialog2","_tradeTypeInfoItem2","IconCategory","ContractTypeDialog","_fullScreenDialog2","ContractTypeList","_contractTypeItem2","objectOrObservableObject","ContractTypeItem","TradeTypeInfoDialog","_tradeCategories","TradeTypeInfoItem","TradeCategories","trade-type-info-navigation__circle-button--active","TradeTypeTemplate","_popconfirm","_popconfirmElement","handleClose","handleOpen","popconfirm_element","Children","child","_iconPriceMove","ContractInfo","trade-container__error","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_errorBalance","_errorGeneral","_errorLogin","_iconLock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","_InputField2","classNameInlinePrefix","classNameInput","error_messages","fractional_digits","inline_prefix","is_autocomplete_disabled","is_float","is_incrementable","is_negative_disabled","max_length","_buttonToggleMenu2","_DropDown2","trade-container__currency-options-dropdown","classNameDisplay","has_symbol","is_alignment_left","_allowEquals2","observableObject","Dropdown","list_ref","createRef","curr_index","getItemFromValue","is_list_visible","onKeyPressed","is_single_option","getValueFromIndex","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","_nativeSelect2","left_alignment_style","list_width","isArrayLike","dropdown--left","dropdown--show","dropdown--disabled","dropdown__display--clicked","dropdown__display--has-symbol","onKeyDown","dropdown__select-arrow--left","onEntered","offsetWidth","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","renderThumbHorizontal","_items2","Items","list__item--selected","getCurrencyName","NativeSelect","isArray","InputField","checked","classNamePrefix","data_tip","data_value","helper","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","_ref$is_unit_at_right","is_unit_at_right","max_value","min_value","placeholder","prefix","required","has_valid_length","max_is_disabled","min_is_disabled","getDecimals","array_value","incrementValue","increment_value","decimal_places","new_value","pow","calculateDecrementedValue","decrement_value","decrementValue","is_increment_input","_input2","signed_regex","is_not_completed_number","has_zero_at_end","is_scientific_notation","input--error","increment_buttons","_incrementButtons2","input_tooltip","with-label","htmlFor","IncrementButtons","Input","autoComplete","data-for","data-tip","data-value","maxLength","navigator","userAgent","cursor","selectionStart","selectionEnd","readOnly","AllowEquals","has_callputequal_duration","has_callputequal","_Barriers","barrier_title","input_class","IconBarrierUp","IconBarrierDown","_iconBarrierUp","_iconBarrierDown","DurationWrapper","hasDurationUnit","duration_list","is_advanced_duration","du","new_duration_unit","new_duration_value","onChangeUiStore","onChangeMultiple","current_unit","advanced_duration_unit","simple_duration_unit","current_duration","simple_is_missing_duration_unit","current_duration_unit","has_missing_duration_unit","simple_is_not_type_duration","advanced_has_wrong_expiry","advanced_expiry_type","setDurationUnit","_duration2","duration_d","duration_h","duration_m","duration_s","duration_t","expiry_list","has_end_time","expiry","pop","duration_unit_text","changeDurationUnit","duration_value","shared_input","duration_name","number_input","has_toggle","_RangeSlider2","_advancedDuration2","number_input_props","shared_input_props","_simpleDuration2","_durationToggle2","new_trade_store_values","RangeSlider","first_tick","range-slider__error","steps","_tickSteps2","TickSteps","range-slider__ticks-step--active","range-slider__ticks-step--marked","DurationToggle","icon_className","advanced-simple-toggle__icon--active","AdvancedDuration","is_24_hours_contract","has_intraday_duration_unit","isSame","endtime_container_class","has-time","_DatePicker2","_TimePicker2","TradingDatePicker","max_date_duration","min_date_expiry","has_today_btn","moment_contract_start_date_time","max_daily_duration","daily","disable_year_selector","disable_trading_events","has_range_selection","min_date","max_date","DatePicker","date_value","holidays","is_datepicker_visible","is_clear_btn_visible","weekends","onClickOutside","mainNode","updateDatePickerValue","is_clearable","onSelectCalendar","onChangeInput","formatted_value","clearDatePickerInput","calendar","resetCalendar","new_date_value","new_date","current_date","_this$props2","renderInputField","_this$props3","initial_value","onChangeCalendarMonth","getTradingEvents","trading_events","events","dates","descrip","nativeEvent","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","_Calendar2","onSelect","duration_date","Calendar","_initialiseProps","calendar_view","hovered_date","_state","default_message","is_minimum","_calendarHeader2","navigateTo","switchView","_calendarBody2","onMouseOver","_calendarFooter2","setToday","view","start_of_month","getAttribute","updateSelectedDate","_props2","dataset","is_before","is_after","month","decade","_props3","default_date","_props4","now","_props5","start_of_period","endOf","_panels","CalendarBody","calendar_body","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendarDays","_calendarMonths","_calendarYears","_calendarDecades","days","moment_today","moment_cur_date","daysInMonth","moment_month_start","moment_month_end","moment_selected","padLeft","start_of_next_month","moment_start_date","moment_hovered","is_active","is_today","has_events","is_closes_early","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","getDays","moment_selected_date","data-month","_helper","_getDecade$split","_getDecade$split2","start_of_decade","end_of_decade","years","is_other_decade","data-year","decades","min_year","_decade$split","_decade$split2","is_other_century","data-decade","CalendarFooter","CalendarHeader","disable_month_selector","is_date_view","is_month_view","is_year_view","is_decade_view","century","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","_calendarButton2","calendar__nav--disabled","is_hidden","calendar__btn--disabled","CalendarButton","_endTime","TradingTimePicker","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","getBoundaries","selected_time","getSelectedTime","TimePicker","toggleDropDown","handleChange","arg","saveRef","nodeName","target_element","prefix_class","_dialog2","preClass","Dialog","start_time_moment","end_time_moment","milliseconds","to_compare_moment","_selected_time$split","_selected_time$split2","selectOption","current_value","prev_value","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","start_time_reset_minute","is_hour_enabled","is_minute_enabled","is_enabled","mm","getClosestTime","interval","market_open_time","SimpleDuration","has_label","filtered_arr","filterMinutesAndTicks","arr_five","_numberSelector2","arr_arr_numbers","selected_number","NumberSelector","arr_numbers","number-selector__selection--selected","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobileWidget2","MobileWidget","handleDialogClose","handleWidgetClick","display_array","from","getBarrier","num","querySelectorAll","offsetLeft","latest_digit","is_won","is_lost","_digitDisplay2","_lastDigitPointer2","_lastDigitParticles2","DigitDisplay","is_latest","is_selected","digits__digit--win","digits__digit--loss","_digitSpot2","_digit2","Digit","digits__digit-value--latest","digits__digit-value--selected","digits__digit-value--blink","digits__digit-value--win","digits__digit-value--loss","DigitSpot","digits__digit-spot-last--win","digits__digit-spot-last--loss","LastDigitParticles","digits__particles--explode","marginLeft","LastDigitPointer","digits__icon--win","digits__icon--loss","ContractError","_ref$message","InfoBoxExpired","InfoBoxGeneral","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","profit_percentage","percentage_text","_sellInfo2","_iconFlag2","SellInfo","is_started","_contractSell2","ContractSell","_sellButton2","SellButton","sell_message","validation_error","ChartCloseBtn","_iconContractClose2","IconContractClose","Link","Switch","_routeWithSubRoutes2","LoginPrompt","onSignup","3_2","website_name","ToggleDrawer","_menuDrawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer__parent-item--show","drawer_items_class","drawer__items--show","DrawerToggle","to_toggle","_switchButton2","toggled","SwitchButton","toggle_style","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","ToggleNotificationsDrawer","Notifications","_notifications","_emptyNotification","EmptyNotification","Routes","_Errors2","_Routes2","msg","onCancel","DenialOfServiceModal","_fullPageModal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"648c6bce383a88c7d36a\",\"account_password\":\"dfc1d05c42c6e0bbfdd0\",\"api_toke\":\"348bceb43238c9da4311\",\"authorized_application\":\"775d13e59d14db6542a3\",\"cashier_password\":\"5b98fd4df55f6a9c9c12\",\"contract\":\"71bccdd6e09ba9ae903a\",\"financial_assessment\":\"cae21e50124fee222df4\",\"limits\":\"27977134d30c6b35d748\",\"login_history\":\"f86c8b00fe54fc8738ff\",\"personal_details\":\"d66a2266abf4ca269797\",\"portfolio\":\"bb2a37e4fa244c988497\",\"self_exclusion\":\"f7459158251424403d36\",\"settings\":\"0e5eeb71cb3fbc24c527\",\"statement\":\"d9f575961ce149cc2f62\",\"vendors~smart_chart\":\"61b5796e83bdca22ef3b\",\"smart_chart\":\"846ce726ebc97380a072\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([269,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date-time';\n","export * from './icon-arrow.jsx';\nexport * from './icon-back.jsx';\nexport * from './icon-calendar-today.jsx';\nexport * from './icon-calendar.jsx';\nexport * from './icon-chevron-double-left.jsx';\nexport * from './icon-chevron-double-right.jsx';\nexport * from './icon-chevron-left.jsx';\nexport * from './icon-chevron-right.jsx';\nexport * from './icon-country-flag.jsx';\nexport * from './icon-clear.jsx';\nexport * from './icon-clock.jsx';\nexport * from './icon-close.jsx';\nexport * from './icon-error.jsx';\nexport * from './icon-exclamation.jsx';\nexport * from './icon-info-blue.jsx';\nexport * from './icon-info-outline.jsx';\nexport * from './icon-flag.jsx';\nexport * from './icon-minimize.jsx';\nexport * from './icon-minus.jsx';\nexport * from './icon-plus.jsx';\nexport * from './icon-question.jsx';\nexport * from './icon-red-dot.jsx';\nexport * from './icon-success.jsx';\nexport * from './icon-warning.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            <span className={classNames('btn__text', classNameSpan)}>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill-template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","export * from './icon-bell.jsx';\nexport * from './icon-cashier.jsx';\nexport * from './icon-hamburger.jsx';\nexport * from './icon-portfolio.jsx';\nexport * from './icon-statement.jsx';\nexport * from './icon-trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconInfoBlue }    from 'Assets/Common/icon-info-blue.jsx';\nimport { IconInfoOutline } from 'Assets/Common/icon-info-outline.jsx';\nimport { IconQuestion }    from 'Assets/Common/icon-question.jsx';\nimport { IconRedDot }      from 'Assets/Common/icon-red-dot.jsx';\n\nclass Tooltip extends React.Component {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            has_error,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip', { 'tooltip--error': has_error })}\n                data-tooltip={message}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <IconInfoOutline\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <IconInfoBlue\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <IconQuestion className={icon_class} />}\n                {icon === 'dot'      && <IconRedDot className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    has_error    : PropTypes.bool,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","export default from './input-field.jsx';\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const loading_class = classNames('block-ui__loading', className);\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.string,\n    updateSelected  : PropTypes.func,\n};\n","export * from './drawer-header.jsx';\nexport * from './drawer-item.jsx';\nexport * from './drawer-items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer-toggle.jsx';\nexport * from './toggle-drawer.jsx';\n","export BinaryLink         from './binary-link.jsx';\nexport ButtonLink         from './button-link.jsx';\nexport default            from './binary-routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export * from './icon-trade-types.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeProposalOpenContractOnBuy = (buy_request) =>\n        SubscriptionManager.addSubscriptionFromRequest(\n            'proposal_open_contract',\n            { ...buy_request, subscribe: 1 },\n            { proposal_open_contract: 1, subscribe: 1 },\n            ['contract_id'],\n        );\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeProposalOpenContractOnBuy,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info.current_spot, spot_time);\n\n    const is_expired = contract_info.is_expired;\n    const exit = (exit_time in digits_info) || !is_expired ? {} :\n        createDigitInfo(contract_info.exit_tick, exit_time);\n\n    return {\n        ...entry,\n        ...current,\n        ...exit,\n    };\n};\n\nconst createDigitInfo = (spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            spot,\n        },\n    };\n};\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconClock = ({\n    className,\n    onClick,\n    height = '16',\n    width = '16',\n}) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 16 16'\n        width={width}\n        height={height}\n        className={className}\n        onClick={onClick}\n    >\n        <g fill='none' fillRule='nonzero' stroke='#5C5C5C'>\n            <circle cx='8' cy='8' r='7.5' />\n            <path strokeLinecap='round' strokeLinejoin='round' d='M8 3.5v5h3.5' />\n        </g>\n    </svg>\n);\n\nIconClock.propTypes = {\n    className: PropTypes.string,\n    height   : PropTypes.string,\n    onClick  : PropTypes.func,\n    width    : PropTypes.string,\n};\n\nexport { IconClock };\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport { IconError };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconInfoBlue = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#2196F3' />\n            <g fill='#FFF' transform='translate(6.5 4)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <rect width='2' height='5' x='.5' y='3' rx='1' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconInfoBlue.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoBlue };\n","export * from './icon-maximize.jsx';\nexport * from './icon-positions.jsx';\nexport * from './icon-settings.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Button     from './button.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={val.text}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return <div className='button-menu'>{menu}</div>;\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","export default from './range-slider.jsx';\n","import { localize } from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","import extend                  from 'extend';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport {\n    getEndSpotTime,\n    isUserSold }               from 'Stores/Modules/Contract/Helpers/logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n\nconst getSpotCount = (contract_info, spot_count) =>\n    isDigitContract(contract_info.contract_type) ? spot_count + 1 : spot_count;\n\n// -------------------- Lines --------------------\nexport const createMarkerExpiry = (contract_info) => {\n    const end_spot_time = getEndSpotTime(contract_info);\n\n    if (contract_info.status === 'open' || !end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        end_spot_time,\n    );\n};\n\nexport const createMarkerPurchaseTime = (contract_info) => {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n};\n\nexport const createMarkerStartTime = (contract_info) => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = (contract_info) => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type      = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props  = {};\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n        const spot_count = 1;\n\n        component_props = {\n            spot_value: contract_info.entry_tick,\n            spot_epoch: contract_info.entry_tick_time,\n            spot_count,\n        };\n    }\n\n    return createMarkerConfig(\n        marker_type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        component_props,\n    );\n};\n\nexport const createMarkerSpotExit = (contract_info, idx, align_label) => {\n    if (!contract_info.exit_tick_time || isUserSold(contract_info)) return false;\n    const spot_count = getSpotCount(contract_info, idx);\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        contract_info.exit_tick_time,\n        contract_info.exit_tick,\n        {\n            spot_value: `${contract_info.exit_tick}`,\n            spot_epoch: `${contract_info.exit_tick_time}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n            spot_count,\n            align_label,\n        },\n    );\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, idx, align_label) => {\n    const spot_count = getSpotCount(contract_info, idx);\n\n    const marker_config = createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_MIDDLE.type,\n        tick.time,\n        tick.price,\n        {\n            spot_value: `${tick.price}`,\n            spot_epoch: `${tick.time}`,\n            spot_count,\n            align_label,\n        },\n    );\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    return marker_config;\n};\n","import { localize }    from '_common/localize';\nimport MarkerLine      from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpotLabel from 'Modules/SmartChart/Components/Markers/marker-spot-label.jsx';\nimport MarkerSpot      from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpotLabel,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n    SPOT_ENTRY: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type          : 'LINE_END',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'dash',  label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type          : 'LINE_PURCHASE',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type          : 'LINE_START',\n        marker_config : MARKER_CONTENT_TYPES.LINE,\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type          : 'SPOT_ENTRY',\n        marker_config : MARKER_CONTENT_TYPES.SPOT_ENTRY,\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_EXIT: {\n        type          : 'SPOT_EXIT',\n        marker_config : MARKER_CONTENT_TYPES.SPOT,\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type          : 'SPOT_MIDDLE',\n        marker_config : MARKER_CONTENT_TYPES.SPOT,\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React        from 'react';\n\nconst MarkerSpot = ({\n    className,\n    spot_count,\n    status,\n}) => (\n    <div\n        className={classNames('chart-spot', className, {\n            'chart-spot__spot--won' : status === 'won',\n            'chart-spot__spot--lost': status === 'lost',\n        })}\n    >{spot_count}\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    className : PropTypes.string,\n    spot_count: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\n\nexport default observer(MarkerSpot);\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list\n    .filter(barrier => barrier !== undefined && barrier !== null)\n    .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","import ContractType from '../Helpers/contract-type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type, is_equal } = store;\n\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n        ...(is_equal                          ? ['is_equal'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","import { getPropertyValue } from '_common/utility';\nimport ContractType         from './contract-type';\n\nexport const hasCallPutEqual = (contract_type_list) => {\n    if (!contract_type_list) return false;\n\n    return getPropertyValue(contract_type_list, 'Up/Down')\n        .some(contract => contract.value === 'rise_fall_equal');\n};\n\nexport const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {})\n        .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n\n    const contract_duration_list = contract_list\n        .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    return hasCallPutEqual(contract_type_list) ? contract_duration_list\n        .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n        .some(duration => duration.value === duration_unit) : false;\n};\n\nexport const isRiseFallEqual = (contract_type) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3.613 8.5l3.26 3.668a.5.5 0 1 1-.747.664l-4-4.5a.5.5 0 0 1 0-.664l4-4.5a.5.5 0 0 1 .748.664L3.614 7.5H13.5a.5.5 0 1 1 0 1H3.613z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconInfoOutline = ({ className, onMouseEnter, onMouseLeave }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        height='16'\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        viewBox='0 0 16 16'\n        width='16'\n        xmlns='http://www.w3.org/2000/svg'\n    >\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.16)' fillRule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM8 6a.75.75 0 1 0 0-1.5A.75.75 0 0 0 8 6zm0 1a.5.5 0 0 0-.5.5v4a.5.5 0 1 0 1 0v-4A.5.5 0 0 0 8 7z' />\n    </svg>\n);\n\nIconInfoOutline.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoOutline };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconQuestion = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='#FFF' fillRule='evenodd'>\n            <path d='M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm0-1A7 7 0 1 0 8 1a7 7 0 0 0 0 14z' fillRule='nonzero' />\n            <path d='M7.39 9.518c.007-.373.052-.668.134-.885.082-.216.25-.456.503-.72l.646-.636c.276-.298.415-.618.415-.96 0-.33-.09-.588-.272-.774-.18-.187-.444-.28-.789-.28-.335 0-.605.084-.809.254a.842.842 0 0 0-.306.682H6c.007-.508.196-.918.57-1.23.373-.313.859-.469 1.457-.469.622 0 1.106.16 1.453.478.347.318.52.755.52 1.31 0 .55-.266 1.091-.799 1.625l-.538.508c-.24.255-.36.62-.36 1.097h-.912zm-.039 1.492a.5.5 0 0 1 .136-.355c.09-.096.224-.144.402-.144.178 0 .312.048.404.144a.493.493 0 0 1 .139.355.477.477 0 0 1-.139.351c-.092.093-.226.139-.404.139-.178 0-.312-.046-.402-.139a.481.481 0 0 1-.136-.35z' />\n        </g>\n    </svg>\n);\n\nIconQuestion.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuestion };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconRedDot = ({ className }) => (\n    <svg className={className} width='4' height='4' xmlns='http://www.w3.org/2000/svg'>\n        <circle cx='1163' cy='626' r='2' transform='translate(-1161 -624)' fill='#E31C4B' fillRule='nonzero' />\n    </svg>\n);\n\nIconRedDot.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconRedDot };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconSuccess = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4CAF50' />\n            <path fill='#FFF' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconSuccess.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSuccess };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconWarning = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V4a1 1 0 0 1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconWarning.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconWarning };\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React from 'react';\n\nclass VerticalTabContentContainer extends React.PureComponent {\n    render() {\n        const selected   = this.props.items.find(item => item.label === this.props.selected.label);\n        const TabContent = selected.value;\n\n        return (\n            <div className='vertical-tab__content'>\n                <TabContent\n                    key={selected.label}\n                    className='item-id'\n                />\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabContentContainer };\n","import classNames from 'classnames';\nimport React      from 'react';\n\nclass VerticalTabHeaders extends React.PureComponent {\n    render() {\n        return (\n            <div className='vertical-tab__tab'>\n                {this.props.items.map(item => {\n                    const IconComponent = item.icon;\n                    return (\n                        <div\n                            className={\n                                classNames('vertical-tab__header', {\n                                    'vertical-tab__header--active': this.props.selected.label === item.label,\n                                })\n                            }\n                            key={item.label}\n                            onClick={() => this.props.onChange(item)}\n                        >\n                            <IconComponent className={classNames('vertical-tab__header__icon', {\n                                'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                            })}\n                            />\n                            <a\n                                key={item.label}\n                                className='vertical-tab__header__link'\n                            >\n                                {item.label}\n                            </a>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabHeaders };\n","export *       from './media-description.jsx';\nexport *       from './media-heading.jsx';\nexport *       from './media-icon.jsx';\nexport default from './media-item.jsx';\n","export default from './checkbox.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nclass Radio extends React.PureComponent {\n    clickHandler = () => {\n        if (!this.props.selected) {\n            this.props.onClick(this.props.value);\n        }\n    };\n\n    render() {\n        const { selected, children } = this.props;\n\n        return (\n            <div className='radio-group__item' onClick={this.clickHandler}>\n                <div className={classNames('radio-group__circle', {\n                    'radio-group__circle--selected': selected,\n                })}\n                />\n                <div className='radio-group__label'>{children}</div>\n            </div>\n        );\n    }\n}\n\nRadio.propTypes = {\n    children: PropTypes.node,\n    onClick : PropTypes.func,\n    selected: PropTypes.bool,\n    value   : PropTypes.bool,\n};\n\nexport { Radio };\n","export * from './icon-logout.jsx';\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account-password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api-token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized-applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier-password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial-assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login-history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal-details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self-exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon-trade-categories.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport UILoader          from 'App/Components/Elements/ui-loader.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract-info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    currency,\n    is_contract_mode,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    resetPurchase,\n    togglePurchaseLock,\n    purchase_info,\n    proposal_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_contract_mode || is_disabled}\n                id={`purchase_${type}`}\n                className='btn--primary btn-purchase'\n                has_effect\n                onClick={() => {\n                    onClickPurchase(info.id, info.stake, type);\n                }}\n            >\n                <React.Fragment>\n                    <div className='btn-purchase__effect-main' />\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__content'>\n                        <div className='btn-purchase__trade-type'>\n                            <IconTradeType type={type.toLowerCase()} className='btn-purchase__trade-type-icon' />\n                            <span className='btn-purchase__trade-type-text'>{localize('[_1]', trade_types[type])}</span>\n                        </div>\n                    </div>\n                    <div className='btn-purchase__info'>\n                        <div className='btn-purchase__return'>{is_disabled ? '---,-' : info.returns}</div>\n                        <div className='btn-purchase__profit'>\n                            {is_disabled ? '--,--' : <Money amount={info.profit} currency={currency} className='btn-purchase__currency' />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Button>\n        );\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {is_purchase_error &&\n                <MessageBox\n                    purchase_info={purchase_info}\n                    onClick={resetPurchase}\n                    currency={currency}\n                />\n                }\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                <React.Fragment>\n                    {(!is_purchase_enabled && idx === 0) &&\n                    <UILoader classNameBlock='purchase-container__loading' />\n                    }\n                    <ContractInfo\n                        currency={currency}\n                        proposal_info={info}\n                        has_increased={info.has_increased}\n                        is_visible={!is_contract_mode}\n                    />\n                    <div className='btn-purchase__shadow-wrapper'>\n                        {\n                            is_purchase_confirm_on ?\n                                <PopConfirm\n                                    alignment='left'\n                                    cancel_text={localize('Cancel')}\n                                    confirm_text={localize('Purchase')}\n                                    message={localize('Are you sure you want to purchase this contract?')}\n                                >\n                                    {purchase_button}\n                                </PopConfirm>\n                                :\n                                purchase_button\n                        }\n                    </div>\n                </React.Fragment>\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_contract_mode          : PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_contract_mode          : modules.smart_chart.is_contract_mode,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', `popconfirm--${alignment}`, {\n        [`popconfirm--${alignment}--open`]: is_visible,\n        'popconfirm--open'                : is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm__title'>\n                <IconExclamation className='popconfirm__icon_exclamation' />\n                <h4 className='popconfirm__header'>{message}</h4>\n            </div>\n            <div className='popconfirm__button-wrapper'>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onClose}\n                >\n                    <span className='popconfirm__button-text'>{cancel_text}</span>\n                </div>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onConfirm}\n                >\n                    <span className='popconfirm__button-text'>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className, classNamePath }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className={classNamePath || undefined} fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className={classNamePath || undefined} fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path className={classNamePath || undefined} fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                        this.props.ui_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules, ui }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n        ui_store       : ui,\n    })\n)(TradeParams);\n","export default from './dropdown.jsx';\n","export default from './trading-date-picker.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer__header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='drawer__icons drawer__icons-btn-close' onClick={closeBtn}>\n                        <IconClose className='drawer__icons-icon-close' />\n                    </div>\n                    <div className='drawer__notifications'>\n                        <h4 className='drawer__notifications-header'>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='drawer__icons drawer__icons-btn-close' onClick={closeBtn}>\n                        <IconClose className='drawer__icons-icon-close' />\n                    </div>\n                    <div className='drawer__icons drawer__brand-logo'>\n                        <div className='drawer__image' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer__item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' className='drawer__item-link' onClick={custom_action}>\n                        <span className='drawer__item-link-text'>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink className='drawer__item-link' to={link_to}>\n                        <span className='drawer__item-link-text'>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer-header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer__bg', {\n            'drawer--show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', { [`drawer--${alignment}`]: alignment });\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames={{\n                    enter    : 'drawer__container--enter',\n                    enterDone: 'drawer__container--enter-done',\n                    exit     : 'drawer__container--exit',\n                }}\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","export default from './error-component.jsx';\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            <IconPortfolio className='portfolio-empty__icon' />\n            <span className='portfolio-empty__text'>{localize('No running contract')}</span>\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","export default from './date-picker.jsx';\n","import PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { connect }             from 'Stores/connect';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }             from 'Stores/Modules/Contract/Helpers/logic';\nimport { LastDigitPrediction } from '../Components/LastDigitPrediction';\n\nconst Digits = ({\n    contract_info,\n    digits_info,\n    display_status,\n    is_trade_page,\n}) => {\n    const { barrier, contract_type } = contract_info;\n    const is_digit = isDigitContract(contract_type);\n    const is_ended = isEnded(contract_info);\n\n    return (\n        <React.Fragment>\n            { contract_type && is_digit &&\n                <LastDigitPrediction\n                    barrier={+barrier}\n                    contract_type={contract_type}\n                    digits_info={digits_info}\n                    is_ended={is_ended}\n                    is_trade_page={is_trade_page}\n                    status={display_status}\n                />\n            }\n        </React.Fragment>\n    );\n};\n\nDigits.propTypes = {\n    contract_info : PropTypes.object,\n    digits_info   : PropTypes.object,\n    display_status: PropTypes.string,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        digits_info   : modules.contract.digits_info,\n        display_status: modules.contract.display_status,\n    })\n)(Digits);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract-error.jsx';\nimport { InfoBoxLongcode } from '../Components/InfoBox';\nimport ChartCloseBtn       from '../../SmartChart/Components/chart-close-btn.jsx';\n\nconst InfoBox = ({\n    is_contract_mode,\n    contract_info,\n    onClickNewTrade,\n    onClose,\n    removeError,\n    sell_info,\n}) => {\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    const Contents = InfoBoxLongcode;\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        <CSSTransition\n            in={is_contract_mode}\n            timeout={250}\n            classNames={{\n                enter    : 'info-box-container--enter',\n                enterDone: 'info-box-container--enter-done',\n                exit     : 'info-box-containert--exit',\n            }}\n            unmountOnExit\n        >\n            <React.Fragment>\n                <div className='info-box-container'>\n                    { contract_info.contract_type &&\n                        <div className={box_class}>\n                            <Contents\n                                contract_info={contract_info}\n                                is_ended={is_ended}\n                                sell_info={sell_info}\n                            />\n                        </div>\n                    }\n                    <ContractError\n                        message={sell_info.error_message}\n                        onClickClose={removeError}\n                    />\n                    <ChartCloseBtn\n                        is_contract_mode={is_contract_mode}\n                        onClose={(e) => {\n                            onClose();\n                            onClickNewTrade(e);\n                        }}\n                    />\n                </div>\n            </React.Fragment>\n        </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info   : PropTypes.object,\n    is_contract_mode: PropTypes.bool,\n    is_trade_page   : PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onClose         : PropTypes.func,\n    removeError     : PropTypes.func,\n    sell_info       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info   : modules.contract.contract_info,\n        removeError     : modules.contract.removeSellError,\n        sell_info       : modules.contract.sell_info,\n        onClickNewTrade : modules.trade.onClickNewTrade,\n        onClose         : modules.contract.onCloseContract,\n        is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg className='chart-spot__icon' xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 210,\n\t\"./ja.js\": 210\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 477;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance, true);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base-store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid  = LocalStore.get('active_loginid');\n        this.accounts = LocalStore.getObject(storage_key);\n        this.switched = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract-store';\nimport PortfolioStore  from './Portfolio/portfolio-store';\nimport SmartChartStore from './SmartChart/smart-chart-store';\nimport StatementStore  from './Statement/statement-store';\nimport TradeStore      from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                  from 'mobx';\nimport { isEmptyObject }          from '_common/utility';\nimport { localize }               from '_common/localize';\nimport { WS }                     from 'Services';\nimport { createChartBarrier }     from './Helpers/chart-barriers';\nimport { createChartMarkers }     from './Helpers/chart-markers';\nimport {\n    createChartTickMarkers,\n    destroyChartTickMarkers }    from './Helpers/chart-tick-markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base-store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onLoadContract(contract_info) {\n        if (contract_info === this.contract_id || !contract_info) return;\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        this.root_store.modules.trade.symbol = contract_info.underlying;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.contract_info = contract_info;\n        this.contract_id   = +contract_info.contract_id;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        this.smart_chart.setContractMode(true);\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        this.smart_chart.setContractMode(false);\n        return new Promise((resolve) => resolve(this.onCloseContract()));\n    }\n\n    @action.bound\n    onCloseContract() {\n        this.forgetProposalOpenContract();\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n        this.chart_config      = {};\n\n        destroyChartTickMarkers();\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.onCloseContract();\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            this.contract_id   = null;\n            this.smart_chart.setContractMode(false);\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n\n        createChartBarrier(this.smart_chart, this.contract_info);\n\n        if (this.contract_info.tick_count && this.contract_info.exit_tick_time) { // TODO: remove this.contract_info.exit_tick_time when ongoing contracts are implemented\n            createChartTickMarkers(this.smart_chart, this.contract_info);\n        } else {\n            createChartMarkers(this.smart_chart, this.contract_info);\n        }\n\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import {\n    createMarkerExpiry,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime }     from './chart-marker-helpers';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerExpiry,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n        <div className='chart-marker-line__label'>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import { observer }  from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { addComma }  from '_common/base/currency_base';\nimport { toMoment }  from 'Utils/Date';\nimport { IconClock } from 'Assets/Common/icon-clock.jsx';\nimport MarkerSpot    from './marker-spot.jsx';\n\nclass MarkerSpotLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_label: !this.props.has_hover_toggle,\n        };\n    }\n\n    handleHoverToggle = () => {\n        this.setState((state) =>  ({ show_label: !state.show_label }));\n    }\n\n    render() {\n        let marker_spot =\n            <MarkerSpot\n                className={this.props.spot_className}\n                spot_count={this.props.spot_count}\n                status={this.props.status}\n            />;\n\n        if (this.props.has_hover_toggle) {\n            marker_spot =\n                <div className='marker-hover-container' onMouseEnter={this.handleHoverToggle} onMouseLeave={this.handleHoverToggle}>\n                    { marker_spot }\n                </div>;\n        }\n\n        return (\n            <div className={'chart-spot-label'}>\n                {this.state.show_label &&\n                    <div className='chart-spot-label__info-container'>\n                        <div className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${this.props.align_label}`}>\n                            <div className='chart-spot-label__time-container'>\n                                <IconClock height='10' width='10' className='chart-spot-label__time-icon' />\n                                <p className='chart-spot-label__time'>{toMoment(+this.props.spot_epoch).format('HH:mm:ss')}</p>\n                            </div>\n                            <div className='chart-spot-label__value-container'>\n                                <p>{addComma(this.props.spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { marker_spot }\n            </div>);\n    }\n}\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label     : PropTypes.oneOf(['top', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    spot_className  : PropTypes.string,\n    spot_count      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_epoch      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_value      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status          : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const is_number      = typeof value === 'number';\n    // need to explicitly convert date string to a JS Date object then pass that into Moment\n    // to get rid of the warning: Deprecation warning: moment construction falls back to js Date\n    const formatted_date = moment(new Date(value)).format('YYYY-MM-DD');\n    return is_number ? epochToMoment(value) : moment.utc(formatted_date);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n","import { WS }                  from 'Services';\nimport {\n    createMarkerExpiry,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerSpotMiddle,\n    createMarkerStartTime    } from './chart-marker-helpers';\n\nexport const createChartTickMarkers = (SmartChartStore, contract_info) => {\n    const tick_marker_handler = tickMarker.getInstance(SmartChartStore, contract_info);\n\n    if (contract_info.exit_tick_time) {\n        tick_marker_handler.addSpotsFromHistory();\n        tick_marker_handler.addLines();\n    } else {\n        // TODO: implement middle tick markers for ongoing contracts\n        // tick_marker_handler.addMarkerSpotsFromStream();\n    }\n};\n\nexport const destroyChartTickMarkers = () => {\n    tickMarker.destroyInstance();\n};\n\nconst zip = (arr, ...arrs) => arr.map((val, idx) => arrs.reduce((a, curr) => [...a, curr[idx]], [val]));\n\nconst makeTickArr = (price_arr, times_arr) =>\n    zip(price_arr, times_arr).reduce((acc, tick) => [...acc, { price: tick[0], time: tick[1] }], []);\n\nconst fnForEach = (fn) => ([...args]) => args.forEach(fn);\n\nconst tickMarker = (function () {\n    let instance;\n\n    const tickMarkerHandler = (SmartChartStore, { ...contract_info }) => {\n        const ticks_history_req = {\n            ticks_history: contract_info.underlying,\n            start        : contract_info.entry_tick_time,\n            end          : contract_info.exit_tick_time,\n            count        : (contract_info.tick_count + 1), // add 1 to prevent for 1-tick contracts from returning 5000 ticks\n        };\n        const ticks_added_to_chart = [];\n\n        const addMarkerFromContract = (markerConfigFn, tick, idx) => {\n            const align_label = labelTopOrBottom(tick, idx);\n            const marker_config = markerConfigFn(contract_info, idx, align_label);\n\n            if (marker_config) SmartChartStore.createMarker(marker_config);\n        };\n\n        const labelTopOrBottom = (tick, idx) => {\n            let align_label = 'top';\n            if (tick && tick.price) {\n                if (idx > 0 && ticks_added_to_chart.length) {\n                    const prev_tick = ticks_added_to_chart[idx - 1];\n\n                    if (+tick.price < +prev_tick.price) align_label = 'bottom';\n                    if (+tick.price === +prev_tick.price) align_label = prev_tick.align_label;\n                }\n                ticks_added_to_chart.push({ ...tick, align_label });\n            }\n            return align_label;\n        };\n\n        const addMarkerFromTick = (markerConfigFn, tick, idx) => {\n            const align_label = labelTopOrBottom(tick, idx);\n            const marker_config = markerConfigFn(contract_info, tick, idx, align_label);\n\n            if (marker_config) SmartChartStore.createMarker(marker_config);\n        };\n\n        const isContractTick = tick =>\n            +tick.time >= +contract_info.entry_tick_time && +tick.time <= +contract_info.exit_tick_time;\n\n        const isMiddleTick = tick =>\n            +tick.time > contract_info.entry_tick_time && tick.time < contract_info.exit_tick_time;\n\n        const isEntryTick = tick => +tick.time === +contract_info.entry_tick_time;\n\n        const isExitTick = tick => +tick.time === +contract_info.exit_tick_time;\n\n        const addTickToChart = (tick, idx) => {\n            const is_entry  = idx === 0 && isEntryTick(tick);\n            const is_exit   = isExitTick(tick);\n            const is_middle = isMiddleTick(tick);\n\n            if (is_entry) addMarkerFromContract(createMarkerSpotEntry, tick, idx);\n            if (is_exit) addMarkerFromContract(createMarkerSpotExit, tick, idx);\n            if (is_middle) addMarkerFromTick(createMarkerSpotMiddle, tick, idx);\n        };\n\n        const addTicks = ([ ...ticks_arr ]) => {\n            const contract_ticks = ticks_arr\n                .sort((a, b) => +a.time - +b.time)\n                .filter(isContractTick);\n\n            contract_ticks.forEach(addTickToChart);\n        };\n\n        const onTicksHistory = (data) => {\n            const { prices, times } = data.history;\n            const ticks = makeTickArr(prices, times);\n\n            addTicks(ticks);\n        };\n\n        return {\n            addSpotsFromHistory: () =>\n                WS.sendRequest({ ...ticks_history_req }).then(onTicksHistory),\n            addLines: () => {\n                fnForEach(addMarkerFromContract)([createMarkerExpiry, createMarkerPurchaseTime, createMarkerStartTime]);\n            },\n            getContractId: () => contract_info.contract_id,\n        };\n    };\n\n    return {\n        getInstance: (SmartChartStore, contract_info) => {\n            if (!instance || instance.getContractId() !== contract_info.contract_id) {\n                instance = tickMarkerHandler(SmartChartStore, contract_info);\n            }\n            return instance;\n        },\n        destroyInstance: () => {\n            // TODO: forget tick history stream for ongoing contracts here\n            if (instance) instance = null;\n        },\n    };\n})();\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const formatMoney = (currency, amount) => <Money amount={amount} currency={currency} />;\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport {\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText }          from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndSpotTime,\n    isUserSold,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            WS.subscribeProposalOpenContract(contract_id, this.populateResultDetails, false);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        portfolio_position.purchase_time = (proposal.is_forward_starting === 1) ?\n            proposal.date_start\n            :\n            proposal.purchase_time;\n\n        portfolio_position.bid_price        = proposal.bid_price;\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.underlying_code  = proposal.underlying;\n        portfolio_position.underlying_name  = proposal.display_name;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.tick_count       = proposal.tick_count;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n        portfolio_position.chart_config     = proposal;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        const bid_price = this.positions[i].bid_price;\n        this.positions[i].is_sell_requested = false;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        // Toast messages are temporary UI for prompting user of sold contracts\n        if (response.error) {\n            // If unable to sell due to error, give error via toast message if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n            this.root_store.ui.addToastMessage({\n                message: response.error.message,\n                type   : 'error',\n            });\n        } else if (!response.error && response.sell) {\n            const i = this.getPositionIndexById(response.sell.contract_id);\n            this.positions[i].is_sell_requested = false;\n            // update contract store sell info after sell\n            this.root_store.modules.contract.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addToastMessage({\n                message: `Contract was sold for ${response.sell.sold_for}.`,\n                type   : 'info',\n            });\n        }\n    }\n\n    @action.bound\n    populateResultDetails = (response) => {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n        const sell_time = isUserSold(contract_response) ?\n            +contract_response.date_expiry\n            :\n            getEndSpotTime(contract_response);\n\n        this.positions[i].id_sell          = +contract_response.transaction_ids.sell;\n        this.positions[i].barrier          = +contract_response.barrier;\n        this.positions[i].duration         = getDurationTime(contract_response);\n        this.positions[i].duration_unit    = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].entry_spot       = +contract_response.entry_spot;\n        this.positions[i].sell_time        = sell_time;\n        this.positions[i].result           = getDisplayStatus(contract_response);\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const is_contract_mode = this.root_store.modules.smart_chart.is_contract_mode;\n        let i = this.getPositionIndexById(contract_id);\n        // check if position to be removed is out of range from the maximum amount rendered in drawer\n        if (this.positions.length > 4) i += 1;\n        this.positions.splice(i, 1);\n        // check if chart is in contract_mode before removing contract details from chart\n        if (is_contract_mode) {\n            this.root_store.modules.contract.onCloseContract();\n            this.root_store.modules.trade.requestProposal();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        details        : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        expiry_time    : portfolio_pos.expiry_time,\n        id             : portfolio_pos.contract_id,\n        indicative     : 0,\n        payout,\n        purchase,\n        reference      : +portfolio_pos.transaction_id,\n        type           : portfolio_pos.contract_type,\n        underlying_code: portfolio_pos.symbol,\n    };\n};\n","import { localize }   from '_common/localize';\nimport {\n    epochToMoment,\n    getDiffDuration } from 'Utils/Date';\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n\n    if (duration_ms >= 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60 * 24));\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        return Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / (1000));\n    }\n    return Math.floor(duration_ms / (1000));\n};\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        s: { name: localize('seconds') },\n        m: { name: localize('minutes') },\n        h: { name: localize('hours') },\n        d: { name: localize('days') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            return unit_map.d.name;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            return unit_map.h.name;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            return unit_map.m.name;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n\nexport const getDurationPeriod = (contract_info) => (\n    getDiffDuration(\n        epochToMoment(contract_info.purchase_time || contract_info.date_start),\n        epochToMoment(contract_info.date_expiry)\n    )\n);\n\nexport const getDurationTime = (contract_info) => (\n    contract_info.tick_count ?\n        contract_info.tick_count\n        :\n        getDurationUnitValue(getDurationPeriod(contract_info))\n);\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nconst store_name = 'smart_chart_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties, store_name });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative       = /^[+-]/.test(high);\n        }\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format-response';\nimport BaseStore                        from '../../base-store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n        WS.forgetAll('proposal');\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url-helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query-string';\nimport getValidationRules                from './Constants/validation-rules';\nimport { isRiseFallEqual }               from './Helpers/allow-equals';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract-type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_equal                   = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount     = 10;\n    @observable basis      = '';\n    @observable basis_list = [];\n    @observable currency   = '';\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Query string\n    query = '';\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            store_name,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            },\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal', 'ticks_history');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        this.currency           = this.root_store.client.currency;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        // Checks for is_equal in query string and update the contract_type to rise_fall or rise_fall_equal\n        const { contract_type, is_equal } = query_string_values;\n        if (isRiseFallEqual(contract_type)) {\n            URLHelper.setQueryParam({ 'contract_type': parseInt(is_equal) ? 'rise_fall_equal' : 'rise_fall' });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    // toggle smartcharts to contract mode\n                    const contract_id = getPropertyValue(response, ['buy', 'contract_id']);\n                    if (contract_id) {\n                        this.root_store.modules.contract.onMount(contract_id);\n                        this.root_store.ui.openPositionsDrawer();\n                    }\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n                this.is_purchase_enabled = true;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        e.preventDefault();\n        WS.forgetAll('proposal').then(this.requestProposal());\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false, obj_old_values = {}) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        WS.forgetAll('proposal');\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values))\n        ) {\n            const prev_currency = obj_old_values &&\n            !isEmptyObject(obj_old_values) &&\n            obj_old_values.currency ? obj_old_values.currency : this.currency;\n            if (isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency)) {\n                obj_new_values.amount = is_changed_by_user && obj_new_values.amount ?\n                    obj_new_values.amount : getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n            this.query = URLHelper.getQueryString();\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.processNewValuesAsync(\n                { currency: this.root_store.client.currency },\n                { currency: this.currency }\n            );\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal', 'ticks_history');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        [...query_params].forEach(value => {\n            // by default, URL encoding replaces '+' with white-spaces\n            // but for barrier, we want to keep '+' sign. so, we need to encode white-spaces\n            // and then replace %20 to '+'.\n            query_params.set(value[0], encodeURI(value[1]).replace(/%20/g, '+'));\n        });\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.keys().length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n\n    /**\n     * Gets the query string\n     *\n     * @param {String|null} url\n     */\n    static getQueryString(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        return query_string;\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) =>\n    WS.subscribeProposalOpenContractOnBuy({ buy: proposal_id, price });\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['stake', 'payout'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['stake', 'payout'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['stake', 'payout'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['stake', 'payout'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['stake', 'payout'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query-string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base-store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    @observable is_blurred = false;\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    showBlur() {\n        this.is_blurred = true;\n    }\n\n    @action.bound\n    hideBlur() {\n        this.is_blurred = false;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    openPositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base-name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport PositionsDrawer             from './Components/Elements/PositionsDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast-message.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <React.Fragment>\n                <div className='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PositionsDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer className='footer'>\n                    <Footer />\n                </footer>\n            </React.Fragment>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './positions-drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { CSSTransition }              from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconMinimize }               from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            active_contract_id,\n            active_positions,\n            error,\n            currency,\n            is_contract_mode,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            openContract,\n            toggleDrawer,\n            server_time,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            // Show only 4 most recent open contracts\n            body_content = active_positions.slice(0, 4).map((portfolio_position) => (\n                <CSSTransition\n                    key={portfolio_position.id}\n                    in={!!(portfolio_position.underlying_code)}\n                    timeout={150}\n                    classNames={{\n                        enter    : 'positions-drawer-card__wrapper--enter',\n                        enterDone: 'positions-drawer-card__wrapper--enter-done',\n                        exit     : 'positions-drawer-card__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <PositionsDrawerCard\n                        active_position={active_contract_id}\n                        onClickSell={onClickSell}\n                        onClickRemove={onClickRemove}\n                        openContract={openContract}\n                        server_time={server_time}\n                        key={portfolio_position.id}\n                        currency={currency}\n                        {...portfolio_position}\n                    />\n                </CSSTransition>\n            ));\n        }\n\n        return (\n            <div className={classNames(\n                'positions-drawer', {\n                    'positions-drawer--open'         : is_positions_drawer_on,\n                    'positions-drawer--contract-mode': is_contract_mode,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconMinimize />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n                {/* TODO: Re-enable reports button positions drawer footer once implemented */}\n                {/* <div className='positions-drawer__footer'> */}\n                {/* <a className='btn btn--link btn--alternate' href='javascript:;'> */}\n                {/* <span className='btn__text'> */}\n                {/* {localize('Go to Reports')} */}\n                {/* </span> */}\n                {/* </a> */}\n                {/* </div> */}\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_contract_mode      : PropTypes.bool,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    openContract          : PropTypes.func,\n    server_time           : PropTypes.object,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, modules, client, ui }) => ({\n        server_time           : common.server_time,\n        currency              : client.currency,\n        active_contract_id    : modules.contract.contract_id,\n        active_positions      : modules.portfolio.active_positions,\n        error                 : modules.portfolio.error,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        is_empty              : modules.portfolio.is_empty,\n        is_loading            : modules.portfolio.is_loading,\n        onClickSell           : modules.portfolio.onClickSell,\n        onClickRemove         : modules.portfolio.removePositionById,\n        openContract          : modules.contract.onLoadContract,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        toggleDrawer          : ui.togglePositionsDrawer,\n    })\n)(PositionsDrawer);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className, classNamePath, is_bold = false }) => (\n    is_bold ?\n        <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                className={classNames(classNamePath, 'color1-fill')}\n                fill='#000'\n                fillOpacity='.8'\n                fillRule='evenodd'\n                d='M8 9.586l5.293-5.293a1 1 0 0 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 1.414-1.414L8 9.586z'\n            />\n        </svg>\n        :\n        <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                className={classNames(classNamePath, 'color1-fill')}\n                fill='rgba(0, 0, 0, 0.8)'\n                fillRule='nonzero'\n                d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z'\n            />\n        </svg>\n);\n\nIconArrow.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconArrow };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, classNamePath, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path className={classNamePath || 'color1-fill'} fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    onClick      : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={classNames('inline-icon', className)}\n        onClick={onClick}\n    >\n        <path className='color1-fill' fill='#000' fillOpacity='.8' fillRule='nonzero' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCountryFlag = ({ type, className }) => {\n    let IconCountry;\n    if (type) {\n        switch (type) {\n            case 'de':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#333' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#FFCD00' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#F10000' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'es':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#DD172C' mask='url(#b)' d='M0 0h24v4H0zm0 12h24v4H0z' />\n                            <path fill='#FFD133' mask='url(#b)' d='M0 4h24v8H0z' />\n                            <g mask='url(#b)'>\n                                <path fill='#FFEDB1' d='M5.333 7.333h1.334V8H5.333z' />\n                                <path d='M4.054 7.3l.167 2.007a1.138 1.138 0 0 0 1.112 1.026c.566 0 1.065-.461 1.112-1.026L6.613 7.3c.014-.174-.105-.3-.288-.3H4.341c-.176 0-.301.133-.287.3z' stroke='#A41517' strokeWidth='.667' />\n                                <path fill='#A41517' d='M4 8h2.667v.667H6L5.333 10l-.666-1.333H4zM2 6h1.333v4.667H2zm5.333 0h1.333v4.667H7.333zM4 5.333c0-.368.306-.666.673-.666h1.32c.372 0 .674.296.674.666v.33A.33.33 0 0 1 6.34 6H4.327A.327.327 0 0 1 4 5.664v-.33z' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'fr':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#001F9B' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF002D' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'id':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#E12237' mask='url(#b)' d='M0 0h24v8H0z' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 8h24v8H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'it':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#1BB65D' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#E43D4C' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'pl':\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M0 14.16c0 1.01.805 1.827 1.797 1.827h20.406c.992 0 1.797-.818 1.797-1.826V8H0v6.16z' fill='#F44336' />\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84V8h24V1.84C24 .83 23.195.012 22.203.012z' fill='#FFF' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n            case 'pt':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#128415' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF2936' mask='url(#b)' d='M8 0h16v16H8z' />\n                            <circle stroke='#FAF94F' mask='url(#b)' cx='8' cy='8' r='3.5' />\n                            <g mask='url(#b)'>\n                                <path d='M6.5 6.341c0-.188.145-.341.333-.341h2.334c.184 0 .333.152.333.341v2.327C9.5 9.404 8.907 10 8.175 10h-.35C7.093 10 6.5 9.41 6.5 8.668V6.341z' fill='#FFF' />\n                                <path d='M8 8.92c.414 0 .75-1.086.75-1.5a.75.75 0 1 0-1.5 0c0 .414.336 1.5.75 1.5z' fill='#1D50B5' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'ru':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#FFF' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#E53B35' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#0C47B7' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'th':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#F12532' xlinkHref='#a' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 3h24v10H0z' />\n                            <path fill='#322B6C' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'vi':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#EA403F' xlinkHref='#a' />\n                            <path fill='#FFFE4E' mask='url(#b)' d='M12 10.45l-2.939 2.095 1.084-3.442-2.9-2.148 3.609-.033L12 3.5l1.146 3.422 3.61.033-2.901 2.148 1.084 3.442z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_cn':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M7.742 7.186h1.04V13h-1.04V7.186zm7.453 5.77h-.952l-.255-.927.996.032c.244 0 .366-.161.366-.474V6.883h-4.11v-.938h5.15v5.922c0 .723-.399 1.09-1.196 1.09zM9.968 7.64h4.175v4.207H9.968V7.639zm3.2 3.355v-.863h-2.203v.863h2.203zM10.965 9.31h2.203v-.842h-2.203v.842zM9.082 5.503c.576.496 1.019.938 1.329 1.327l-.775.517c-.333-.41-.776-.863-1.33-1.38l.776-.464zm-.3-.874a7.406 7.406 0 0 1-.896 1.23L7 5.298C7.664 4.586 8.13 3.82 8.417 3l1.02.216c-.067.183-.145.356-.211.518h2.746v.895h-1.461c.232.324.42.636.564.917l-.93.334a9.512 9.512 0 0 0-.73-1.251h-.632zm4.707 0a6.6 6.6 0 0 1-.686 1.068l-.886-.561c.543-.658.93-1.37 1.152-2.125l1.007.216c-.066.172-.121.345-.177.507H17v.895h-1.661c.21.291.387.572.531.83l-.93.335a9.04 9.04 0 0 0-.697-1.165h-.754z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_tw':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M8.602 4.413c-.13.151-.26.302-.38.432h3.605c0 .431-.011.83-.033 1.175h.617v.648h-.67l-.098.68h.444v.528h-.563c-.022.065-.033.119-.054.173l.314.237c-.585.291-1.18.54-1.786.744a165.06 165.06 0 0 1 2.23-.075c.454-.227.908-.475 1.374-.734l.725.475a18.267 18.267 0 0 1-4.091 1.683 126.13 126.13 0 0 0 4.177-.248c-.238-.173-.487-.356-.746-.53l.725-.441c1.028.647 1.818 1.208 2.37 1.704l-.812.561a12.63 12.63 0 0 0-.768-.69c-.93.054-1.818.108-2.663.15v1.263c0 .56-.335.852-.995.852h-1.018l-.173-.82c.314.033.617.054.899.054.205 0 .313-.108.313-.302v-1.003c-1.287.065-2.478.108-3.56.14l-.217-.841c.282.01.552.021.823.021.78-.162 1.59-.42 2.446-.766l-2.468.087-.151-.712c.368 0 .617-.033.768-.097a12.58 12.58 0 0 0 1.44-.637c.021-.086.054-.173.075-.248H7.574c.075-.41.14-.81.205-1.208h-.703V6.02h.779c.043-.312.076-.614.097-.916a6.4 6.4 0 0 1-.422.366L7 4.834c.595-.442 1.115-1.047 1.548-1.823l.844.183c-.098.173-.195.345-.292.507h3.181v.712h-3.68zm0 2.168l-.13.766h1.656a7.341 7.341 0 0 0-1.147-.41l.227-.356h-.606zm1.558.766h.671a9.43 9.43 0 0 0 .13-.766h-1.71c.422.12.8.249 1.147.4l-.238.366zm.844-1.219l.033-.766H8.742c-.021.26-.054.518-.086.766h1.504a6.009 6.009 0 0 0-1.017-.399l.249-.356c.39.108.757.26 1.093.432l-.206.323h.725zm2.587-1.337a3.23 3.23 0 0 0 .941 1.424c.347-.41.617-.885.79-1.424h-1.731zm.335 1.985a4.244 4.244 0 0 1-.876-1.316 7.07 7.07 0 0 1-.52.582l-.54-.647c.562-.583 1.049-1.381 1.46-2.395l.877.194c-.108.28-.227.54-.346.788h2.813v.809h-.627c-.195.776-.52 1.413-.953 1.93.498.324 1.093.594 1.786.82l-.465.81c-.78-.28-1.429-.615-1.948-1.004-.542.432-1.202.745-1.96.95l-.475-.745c.714-.172 1.298-.431 1.774-.776zm-.173 4.347c1.082.259 2.078.583 2.976.97l-.519.81a16.903 16.903 0 0 0-2.965-1.025l.508-.755zm-3.798.043l.54.615c-.8.453-1.785.83-2.943 1.133l-.379-.799c1.126-.237 2.056-.56 2.782-.949z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            default: // en\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84v12.322c0 1.008.805 1.826 1.797 1.826h20.406c.992 0 1.797-.818 1.797-1.826V1.839C24 .831 23.195.013 22.203.013z' fill='#0D47A1' />\n                            <path d='M23.975 1.537A1.806 1.806 0 0 0 22.203.013h-.468l-7.666 5.102V.013H9.931v5.102L2.265.013h-.468C.906.013.167.673.025 1.537l6.552 4.361H0v4.204h6.577l-6.552 4.36a1.806 1.806 0 0 0 1.772 1.525h.468l7.666-5.102v5.102h4.138v-5.102l7.666 5.102h.468c.891 0 1.63-.66 1.772-1.524l-6.552-4.361H24V5.898h-6.577l6.552-4.36z' fill='#FFF' />\n                            <path d='M13.241.013V6.74H24v2.52H13.241v6.726H10.76V9.26H0V6.74h10.759V.013h2.482zM1.162 15.87a1.8 1.8 0 0 1-.73-.52l7.956-5.247h1.52L1.162 15.87zm15.075-5.767l7.527 4.963a1.82 1.82 0 0 1-.576.623l-8.471-5.586h1.52zM.19 1.022C.316.767.5.545.725.374l8.378 5.525h-1.52L.19 1.023zm15.399 4.876h-1.52L22.824.125a1.8 1.8 0 0 1 .735.517l-7.97 5.256z' fill='#F44336' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='24' height='16' viewBox='0 0 24 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconCountry}\n        </svg>\n\n    );\n};\n\nIconCountryFlag.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconCountryFlag };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconFlag = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n        <g fillRule='nonzero' fill='none'>\n            <path d='M-6-4h32v32H-6z' />\n            <path className='color1-fill' d='M2 2h18a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2v5a1 1 0 0 1-2 0V1a1 1 0 1 1 2 0v1zm6 2v4h4V4H8zm4 4v4h4V8h-4zm4-4v4h4V4h-4zm0 8v4h4v-4h-4zm-8 0v4h4v-4H8zM4 8v4h4V8H4z' fill='#7F8397' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconFlag };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinimize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#000' fillOpacity='0.8' fillRule='nonzero' d='M0 7h16v2H0z' />\n    </svg>\n);\n\nIconMinimize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMinimize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='14' viewBox='0 0 16 14'>\n        <g fill='none' fillRule='evenodd'>\n            <path fill='#000' fillOpacity='0.16' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2z' />\n            <path fill='#FFF' fillRule='nonzero' d='M1 8.128l2.804 1.557A2.5 2.5 0 0 0 5.018 10h5.964a2.5 2.5 0 0 0 1.214-.315L15 8.128V12.5a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5V8.128zm0-1.144V3.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v3.484L11.71 8.81a1.5 1.5 0 0 1-.728.189H5.018a1.5 1.5 0 0 1-.728-.189L1 6.984zM6.5 8h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0 0 1z' />\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { CSSTransition }     from 'react-transition-group';\nimport ContractLink          from 'Modules/Contract/Containers/contract-link.jsx';\nimport { localize }          from '_common/localize';\nimport ContractTypeCell      from './contract-type-cell.jsx';\nimport ProgressSlider        from './ProgressSlider';\nimport ResultDetails         from './result-details.jsx';\nimport ResultOverlay         from './result-overlay.jsx';\nimport { getTimePercentage } from './helpers';\nimport Money                 from '../money.jsx';\nimport Button                from '../../Form/button.jsx';\n\n// TODO: Find a way to simplify props, maybe we can pass some of props as object from portfolio_store and parse it with helpers\nconst PositionsDrawerCard = ({\n    active_position,\n    barrier,\n    className,\n    chart_config,\n    currency,\n    duration,\n    duration_unit,\n    entry_spot,\n    expiry_time,\n    id,\n    id_sell,\n    indicative,\n    is_sell_requested,\n    is_valid_to_sell,\n    profit_loss,\n    purchase,\n    purchase_time,\n    onClickSell,\n    onClickRemove,\n    openContract,\n    result,\n    sell_time,\n    server_time,\n    status,\n    tick_count,\n    type,\n    underlying_code,\n    underlying_name,\n}) => {\n    const percentage = getTimePercentage(server_time, purchase_time, expiry_time);\n    return (\n        <div className={classNames(\n            'positions-drawer-card__wrapper', {\n                'positions-drawer-card__wrapper--active': (parseInt(active_position) === id),\n            },\n            className)}\n        >\n            <ResultOverlay\n                id={id}\n                onClickRemove={onClickRemove}\n                onClick={openContract}\n                chart_config={chart_config}\n                result={result}\n            />\n            <ContractLink\n                className={classNames(\n                    'positions-drawer-card', {\n                        'positions-drawer-card--active': (parseInt(active_position) === id),\n                        'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                        'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                    }\n                )}\n                chart_config={chart_config}\n            >\n                <React.Fragment>\n                    <div className={classNames(\n                        'positions-drawer-card__grid',\n                        'positions-drawer-card__grid-underlying-trade'\n                    )}\n                    >\n                        <div className='positions-drawer-card__underlying-name'>\n                            <div\n                                className={classNames(\n                                    'icons-underlying',\n                                    `icons-underlying__ic-${underlying_code || 'unknown'}`\n                                )}\n                            />\n                            <span className='positions-drawer-card__symbol'>{underlying_name}</span>\n                        </div>\n                        <div className='positions-drawer-card__type'>\n                            <ContractTypeCell type={type} />\n                        </div>\n                    </div>\n                    <ProgressSlider\n                        remaining_time={expiry_time}\n                        percentage={percentage}\n                        ticks_count={tick_count}\n                        has_result={!!(result)}\n                    />\n                    <div className={classNames(\n                        'positions-drawer-card__grid',\n                        'positions-drawer-card__grid-profit-payout'\n                    )}\n                    >\n                        <div className={classNames(\n                            'positions-drawer-card__profit-loss',\n                            'positions-drawer-card__profit-loss-label',\n                        )}\n                        >\n                            {result ? localize('P/L:') : localize('Potential P/L:')}\n                        </div>\n                        <div className={classNames(\n                            'positions-drawer-card__indicative',\n                            'positions-drawer-card__indicative-label',\n                        )}\n                        >\n                            {localize('Potential Payout:')}\n                        </div>\n                        <div className={classNames(\n                            'positions-drawer-card__profit-loss', {\n                                'positions-drawer-card__profit-loss--negative': (profit_loss < 0),\n                                'positions-drawer-card__profit-loss--positive': (profit_loss > 0),\n                            })}\n                        >\n                            <Money amount={Math.abs(profit_loss)} currency={currency} />\n                        </div>\n                        <div className={`positions-drawer-card__indicative positions-drawer-card__indicative--${status}`}>\n                            <Money amount={indicative} currency={currency} />\n                        </div>\n                    </div>\n                    <div className='positions-drawer-card__purchase-price'>\n                        <span className='positions-drawer-card__purchase-label'>\n                            {localize('Purchase price')}\n                        </span>\n                        <Money amount={purchase} currency={currency} />\n                    </div>\n                </React.Fragment>\n            </ContractLink>\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        className={classNames(\n                            'btn--primary',\n                            'btn--primary--orange',\n                            'btn--sell', {\n                                'btn--loading': is_sell_requested,\n                            })}\n                        is_disabled={!is_valid_to_sell || is_sell_requested}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n            <ResultDetails\n                barrier={barrier}\n                contract_end_time={sell_time}\n                contract_start_time={purchase_time}\n                duration={duration}\n                duration_unit={duration_unit}\n                entry_spot={entry_spot}\n                tick_count={tick_count}\n                has_result={!!(result)}\n                id_sell={id_sell}\n            />\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    barrier      : PropTypes.number,\n    className    : PropTypes.string,\n    currency     : PropTypes.string,\n    duration     : PropTypes.number,\n    duration_unit: PropTypes.string,\n    entry_spot   : PropTypes.number,\n    exit_spot    : PropTypes.number,\n    expiry_time  : PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id               : PropTypes.number,\n    id_sell          : PropTypes.number,\n    indicative       : PropTypes.number,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.bool,\n    ]),\n    onClickRemove: PropTypes.func,\n    onClickSell  : PropTypes.func,\n    openContract : PropTypes.func,\n    profit_loss  : PropTypes.number,\n    purchase     : PropTypes.number,\n    purchase_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    result   : PropTypes.string,\n    sell_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    server_time    : PropTypes.object,\n    status         : PropTypes.string,\n    tick_count     : PropTypes.number,\n    type           : PropTypes.string,\n    underlying_code: PropTypes.string,\n    underlying_name: PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nconst ContractLink = ({\n    chart_config,\n    children,\n    className,\n    openContract,\n}) => (\n    <a\n        className={className}\n        href='javascript:;'\n        onClick={() => openContract(chart_config)}\n    >\n        {children}\n    </a>\n);\n\nContractLink.propTypes = {\n    chart_config: PropTypes.object,\n    children    : PropTypes.node,\n    className   : PropTypes.string,\n    contract_id : PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onMount: PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        openContract: modules.contract.onLoadContract,\n    }),\n)(ContractLink);\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='contract-type__type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='category-type' />\n        </div>\n        <span className='contract-type__type-label'>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' className='color1-fill' fill='#2A3052'fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path className='color1-fill' fill='#2A3052'd='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('trade-type-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './positions-progress-slider.jsx';\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    has_result,\n    ticks_count,\n    current_tick,\n    percentage,\n    remaining_time,\n}) => {\n    if (!percentage && !ticks_count || has_result || !remaining_time) return <div className='progress-slider--completed' />;\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {/* TODO: enable ticks slider once it is completed */}\n            {(ticks_count) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={remaining_time} />\n                    </span>\n                    {/* Calculate line width based on percentage of time left */}\n                    <div className='progress-slider__track'>\n                        <div\n                            className={classNames('progress-slider__line', {\n                                'progress-slider__line--green' : (percentage >= 50),\n                                'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                'progress-slider__line--red'   : (percentage < 20),\n                            })}\n                            style={{ width: `${percentage}%` }}\n                        />\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className     : PropTypes.string,\n    current_tick  : PropTypes.number,\n    has_result    : PropTypes.bool,\n    percentage    : PropTypes.number,\n    remaining_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default ProgressSlider;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst ProgressTicks = ({ current_tick, ticks_count }) => {\n    const arr_ticks = [...Array(ticks_count).keys()];\n    // TODO: temporary infinite/indeterminate loader\n    if (!current_tick) return <div className='progress-slider__infinite-loader'><div className='progress-slider__infinite-loader--indeterminate' /></div>;\n    return (\n        // TODO: Update and show once design for ticks progress bar is finalized\n        <div style={{ display: 'none' }}>\n            <span className='progress-slider__ticks-caption'>\n                {localize('Tick [_1]', current_tick)}\n            </span>\n            <div className='progress-slider__track--ticks'>\n                <div className='progress-slider__ticks'>\n                    {arr_ticks.map(idx =>\n                        <span\n                            key={idx}\n                            className={classNames('ticks__step', {\n                                'ticks__step--active': (idx + 1) === parseInt(current_tick),\n                                'ticks__step--marked': (idx + 1) < parseInt(current_tick),\n                            })}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconArrow }     from 'Assets/Common';\nimport { localize }      from '_common/localize';\nimport {\n    epochToMoment,\n    toGMTFormat }        from 'Utils/Date';\nimport ResultDetailsItem from './result-details-item.jsx';\n\nclass ResultDetails extends React.PureComponent {\n    state = {\n        is_open: false,\n    };\n\n    toggleDetails = () => {\n        this.setState({ is_open: !this.state.is_open });\n    }\n\n    render() {\n        const {\n            barrier,\n            contract_end_time,\n            contract_start_time,\n            duration,\n            duration_unit,\n            entry_spot,\n            has_result,\n            id_sell,\n            tick_count,\n        } = this.props;\n        if (!has_result) return null;\n        return (\n            <React.Fragment>\n                <div className='result-details__separator' />\n                <div className={classNames('result-details__wrapper', {\n                    'result-details__wrapper--is-open': this.state.is_open,\n                })}\n                >\n                    <div className='result-details__grid'>\n                        <ResultDetailsItem\n                            label={localize('Reference ID')}\n                            value={id_sell}\n                        />\n                        <ResultDetailsItem\n                            label={localize('Duration')}\n                            value={tick_count ? `${tick_count} ${localize('ticks')}` : `${duration} ${duration_unit}`}\n                        />\n                    </div>\n                    <div className='result-details__grid'>\n                        <ResultDetailsItem\n                            label={localize('Barrier')}\n                            value={barrier ? barrier.toString() : ' - '}\n                        />\n                        <ResultDetailsItem\n                            label={localize('Entry spot')}\n                            value={entry_spot || ' - '}\n                        />\n                    </div>\n                    <div className='result-details__grid'>\n                        <ResultDetailsItem\n                            label={localize('Start time')}\n                            value={toGMTFormat(epochToMoment(contract_start_time))}\n                        />\n                        <ResultDetailsItem\n                            label={localize('End time')}\n                            value={toGMTFormat(epochToMoment(contract_end_time))}\n                        />\n                    </div>\n                </div>\n                <div\n                    className={classNames('result-details__toggle', {\n                        'result-details__toggle--is-open': this.state.is_open,\n                    })}\n                    onClick={this.toggleDetails}\n                >\n                    <IconArrow className='result-details__select-arrow' />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nResultDetails.propTypes = {\n    barrier          : PropTypes.number,\n    contract_end_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    contract_start_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration     : PropTypes.number,\n    duration_unit: PropTypes.string,\n    entry_spot   : PropTypes.number,\n    has_result   : PropTypes.bool,\n    id_sell      : PropTypes.number,\n    tick_count   : PropTypes.number,\n};\n\nexport default ResultDetails;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ResultDetailsItem = ({\n    label,\n    value,\n}) => (\n    <div className='result-details__item'>\n        <span className='result-details__label'>\n            {label}\n        </span>\n        <span className='result-details__value'>\n            {value}\n        </span>\n    </div>\n);\n\nResultDetailsItem.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ResultDetailsItem;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport IconCheck         from 'Images/app_2/portfolio/ic-check.svg';\nimport IconCross         from 'Images/app_2/portfolio/ic-cross.svg';\nimport { localize }      from '_common/localize';\n\nconst ResultOverlay = ({\n    id,\n    chart_config,\n    onClick,\n    onClickRemove,\n    result,\n}) => (\n    <React.Fragment>\n        <CSSTransition\n            in={!!(result)}\n            timeout={250}\n            classNames={{\n                enter    : 'positions-drawer-card__result--enter',\n                enterDone: 'positions-drawer-card__result--enter-done',\n                exit     : 'positions-drawer-card__result--exit',\n            }}\n            unmountOnExit\n        >\n            <div className={classNames('positions-drawer-card__result', {\n                'positions-drawer-card__result--won' : (result === 'won'),\n                'positions-drawer-card__result--lost': (result === 'lost'),\n            })}\n            >\n                <span\n                    className='result__close-btn'\n                    onClick={() => onClickRemove(id)}\n                />\n                <span\n                    className={classNames('result__caption', {\n                        'result__caption--won' : (result === 'won'),\n                        'result__caption--lost': (result === 'lost'),\n                    }\n                    )}\n                    onClick={() => onClick(chart_config)}\n                >\n                    {\n                        (result === 'won') ?\n                            <React.Fragment>\n                                {localize('won')}\n                                <IconCheck className='result__icon' />\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                {localize('lost')}\n                                <IconCross className='result__icon' />\n                            </React.Fragment>\n                    }\n                </span>\n            </div>\n        </CSSTransition>\n    </React.Fragment>\n);\n\nResultOverlay.propTypes = {\n    chart_config : PropTypes.object,\n    id           : PropTypes.number,\n    onClick      : PropTypes.func,\n    onClickRemove: PropTypes.func,\n    result       : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"#4BBFAB\" }),\n      React.createElement(\"path\", { fill: \"#FFF\", fillRule: \"nonzero\", d: \"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" })\n    )\n  );\n});","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"#E31C4B\", fillRule: \"nonzero\" }),\n      React.createElement(\"path\", { stroke: \"#FFF\", strokeLinecap: \"round\", d: \"M10.5 5.5l-5 5m5 0l-5-5\" })\n    )\n  );\n});","export * from './duration-percentage';\n","import moment from 'moment';\n\n// TODO: Refactor and simplify, handle tick duration\nexport const getTimePercentage = (start_time, purchase_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(purchase_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(start_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) {\n        percentage = 1;\n    } else if (percentage > 100) {\n        percentage = 100;\n    }\n\n    return Math.round(percentage);\n};\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport classNames       from 'classnames';\nimport { IconError }    from 'Assets/Common/icon-error.jsx';\nimport { IconInfoBlue } from 'Assets/Common/icon-info-blue.jsx';\nimport { IconWarning }  from 'Assets/Common/icon-warning.jsx';\nimport { IconSuccess }  from 'Assets/Common/icon-success.jsx';\nimport CloseButton      from './close-button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }             from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                { data.type === 'ERROR'   && <IconError className='toast__icon-type' /> }\n                { data.type === 'INFO'    && <IconInfoBlue className='toast__icon-type' /> }\n                { data.type === 'SUCCESS' && <IconSuccess className='toast__icon-type' /> }\n                { data.type === 'WARNING' && <IconWarning className='toast__icon-type' /> }\n            </div>\n            <div className='toast__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({\n    children, is_contract_mode,\n    is_positions_drawer_on,\n    is_blurred,\n}) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-positions-drawer': is_positions_drawer_on,\n            'app-contents--contract-mode'        : is_contract_mode,\n            'app-contents--is-blurred'           : is_blurred,\n        })}\n    >\n        {/* Calculate height of user screen and offset height of header and footer */}\n        <Scrollbars\n            autoHide\n            style={{ height: 'calc(100vh - 83px)' }}\n        >\n            {children}\n        </Scrollbars>\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_positions_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ modules, ui }) => ({\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        is_blurred            : ui.is_blurred,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    hideBlur,\n    is_dark_mode,\n    is_language_dialog_visible,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_settings_dialog_on,\n    network_status,\n    showBlur,\n    togglePositionsDrawer,\n    toggleSettingsDialog,\n}) => (\n    <React.Fragment>\n        <div className='footer__links footer__links--left'>\n            {\n                is_logged_in &&\n                <TogglePositions\n                    is_positions_drawer_on={is_positions_drawer_on}\n                    togglePositionsDrawer={togglePositionsDrawer}\n                />\n            }\n        </div>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer__links'>\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_dark_mode={is_dark_mode}\n                is_language_visible={is_language_dialog_visible}\n                is_settings_visible={is_settings_dialog_on}\n                toggleSettings={toggleSettingsDialog}\n                showBlur={showBlur}\n                hideBlur={hideBlur}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePositionsDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        hideBlur                  : ui.hideBlur,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_logged_in              : client.is_logged_in,\n        network_status            : common.network_status,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        showBlur                  : ui.showBlur,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network-status.jsx';\nexport * from './toggle-fullscreen.jsx';\nexport * from './toggle-positions.jsx';\nexport * from './toggle-settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport classNames        from 'classnames';\n\nconst IconPositions = ({ className }) => {\n    const IconType = (\n        <g fill='none' fillRule='evenodd'>\n            <path className='color1-fill color3-fill' fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2zM1 8.128V12.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V8.128l-2.804 1.557a2.5 2.5 0 0 1-1.214.315H5.018a2.5 2.5 0 0 1-1.214-.315L1 8.128zm0-1.144L4.29 8.81A1.5 1.5 0 0 0 5.018 9h5.964a1.5 1.5 0 0 0 .728-.189L15 6.984V3.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v3.484zM6.5 8a.5.5 0 0 1 0-1h3a.5.5 0 0 1 0 1h-3z' />\n        </g>\n    );\n\n    return (\n        <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n            {IconType}\n        </svg>\n    );\n};\n\nIconPositions.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPositions };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPositions } from 'Assets/Footer';\n\nconst TogglePositions = ({\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames('ic-positions', 'footer__link', {\n        'ic-positions--active': is_positions_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n        >\n            <IconPositions className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { CSSTransition }  from 'react-transition-group';\nimport { SettingsDialog } from 'App/Components/Elements/SettingsDialog/settings-dialog.jsx';\nimport { IconSettings }   from 'Assets/Footer';\n\nconst ToggleSettings = ({\n    hideBlur,\n    is_dark_mode,\n    is_language_visible,\n    is_settings_visible,\n    showBlur,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer__icon ic-settings__icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames={{\n                    enter    : 'settings-dialog--enter',\n                    enterDone: 'settings-dialog--enter-done',\n                    exit     : 'settings-dialog--exit',\n                }}\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                    is_dark_mode={is_dark_mode}\n                    showBlur={showBlur}\n                    hideBlur={hideBlur}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    hideBlur           : PropTypes.func,\n    is_dark_mode       : PropTypes.bool,\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    showBlur           : PropTypes.func,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport ReactDOM           from 'react-dom';\nimport { localize }       from '_common/localize';\nimport VerticalTab        from 'App/Components/Elements/VerticalTabs';\nimport {\n    ChartSettings,\n    LanguageSettings,\n    ThemeSelectSettings,\n    PurchaseSettings,\n}                         from 'App/Containers/SettingsDialog';\nimport {\n    IconCharts,\n    IconClose,\n    IconLanguage,\n    IconPurchase,\n    IconTheme,\n}                         from 'Assets/Settings';\n\nclass SettingsDialog extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n        this.state = {\n            modal_root: document.getElementById('modal_root'),\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.el.classList.add('settings-dialog');\n        this.props.showBlur();\n        this.state.modal_root.appendChild(this.el);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        this.state.modal_root.removeChild(this.el);\n        this.props.hideBlur();\n    }\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings ic-settings--active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    render() {\n        const settings_dialog_container_class = classNames('settings-dialog__container', {\n            'settings-dialog__container--hide': this.props.is_language_dialog_visible,\n        });\n        return ReactDOM.createPortal(\n            <div ref={this.setWrapperRef} className={settings_dialog_container_class}>\n                <div className='dialog-header'>\n                    <h3 className='dialog-header__sidebar'>{localize('Platform settings')}</h3>\n                    <div className='dialog-header__main'>\n                        <div className='dialog-header__close' onClick={this.props.toggleDialog}>\n                            <IconClose />\n                        </div>\n                    </div>\n                </div>\n                <VerticalTab\n                    alignment='center'\n                    classNameHeader='settings-dialog__tab-header'\n                    list={this.settings_content()}\n                />\n            </div>,\n            this.el\n        );\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    settings_content = () => [\n        {\n            icon : IconTheme,\n            label: localize('Themes'),\n            value: ThemeSelectSettings,\n        }, {\n            icon : IconLanguage,\n            label: localize('Language'),\n            value: LanguageSettings,\n        }, {\n            icon : IconCharts,\n            label: localize('Charts'),\n            value: ChartSettings,\n        }, {\n            icon : IconPurchase,\n            label: localize('Purchase Section'),\n            value: PurchaseSettings,\n        },\n    ]\n}\n\nSettingsDialog.propTypes = {\n    hideBlur                  : PropTypes.func,\n    is_dark_mode              : PropTypes.bool,\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    showBlur                  : PropTypes.func,\n    toggleDialog              : PropTypes.func,\n};\n\nexport { SettingsDialog };\n","export default from './vertical-tab.jsx';\nexport *       from './vertical-tab-content-container.jsx';\nexport *       from './vertical-tab-headers.jsx';\n","import PropTypes                       from 'prop-types';\nimport React                           from 'react';\nimport { VerticalTabContentContainer } from './vertical-tab-content-container.jsx';\nimport { VerticalTabHeaders }          from './vertical-tab-headers.jsx';\n\nclass VerticalTab extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: props.list[0],\n        };\n    }\n\n    changeSelected = (e) => {\n        this.setState({\n            selected: e,\n        });\n    };\n\n    render() {\n        return (\n            <div className='vertical-tab'>\n                <VerticalTabHeaders\n                    items={this.props.list}\n                    onChange={this.changeSelected}\n                    selected={this.state.selected}\n                />\n                <VerticalTabContentContainer\n                    items={this.props.list}\n                    selected={this.state.selected}\n                />\n            </div>\n        );\n    }\n}\n\nVerticalTab.propTypes = {\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            icon : PropTypes.func,\n            label: PropTypes.string,\n            value: PropTypes.func,\n        })\n    ).isRequired,\n};\n\nexport default VerticalTab;\n","export ChartSettings       from './settings-chart.jsx';\nexport LanguageSettings    from './settings-language.jsx';\nexport PurchaseSettings    from './settings-purchase.jsx';\nexport ThemeSelectSettings from './settings-theme.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport Localize        from 'App/Components/Elements/localize.jsx';\nimport MediaItem, {\n    MediaHeading,\n    MediaIcon,\n    MediaDescription,\n}                      from 'App/Components/Elements/Media';\nimport Checkbox        from 'App/Components/Form/Checkbox';\nimport RadioGroup      from 'App/Components/Form/Radio';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='settings-chart'>\n        <MediaItem>\n            <MediaHeading>\n                <Localize str='Chart Control Position' />\n            </MediaHeading>\n            <MediaDescription>\n                <MediaIcon />\n                <div className='media__form'>\n                    <p><Localize str='Chart control position' /></p>\n                    <RadioGroup\n                        items={[\n                            {\n                                label: 'Bottom',  // localization will be handled in RadioGroup\n                                value: true,\n                            },\n                            {\n                                label: 'Left',\n                                value: false,\n                            },\n                        ]}\n                        selected={is_layout_default}\n                        onToggle={toggleLayout}\n                    />\n                </div>\n            </MediaDescription>\n        </MediaItem>\n        <MediaItem>\n            <MediaHeading>\n                <Localize str='Asset Information' />\n            </MediaHeading>\n            <MediaDescription>\n                <MediaIcon />\n                <div className='media__form'>\n                    <Checkbox\n                        value={is_asset_visible}\n                        label={localize('Visible Asset')}\n                        onClick={toggleAsset}\n                    />\n                </div>\n            </MediaDescription>\n        </MediaItem>\n        <MediaItem>\n            <MediaHeading>\n                <Localize str='Scale Countdown' />\n            </MediaHeading>\n            <MediaDescription>\n                <MediaIcon />\n                <div className='media__form'>\n                    <Checkbox\n                        value={is_countdown_visible}\n                        label={localize('Visible Countdown')}\n                        onClick={toggleCountdown}\n                    />\n                </div>\n            </MediaDescription>\n        </MediaItem>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(({ ui }) => (\n    {\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    }\n))(ChartSettings);\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import React from 'react';\n\nconst MediaDescription = (props) => (\n    <div className='media__description'>\n        {props.children}\n    </div>\n);\n\nexport { MediaDescription };\n","import React from 'react';\n\nconst MediaHeading = (props)  => (\n    <div className='media__heading'>\n        {props.children}\n    </div>\n);\n\nexport { MediaHeading };\n","import React from 'react';\n\nconst MediaIcon = () => (\n    <div className='media__icon' />\n);\n\nexport { MediaIcon };\n","import React from 'react';\n\nconst MediaItem = (props) => (\n    <div className='media'>\n        {props.children}\n    </div>\n);\n\nexport default MediaItem;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nclass Checkbox extends React.PureComponent {\n    onClick = () => {\n        this.props.onClick(!this.props.value);\n    };\n\n    render() {\n        const { value, label } = this.props;\n        return (\n            <div\n                className='checkbox'\n                onClick={this.onClick}\n            >\n                <div className={classNames('checkbox__box', {\n                    'checkbox__box--active': value,\n                })}\n                />\n                <div className='checkbox__label'>{label}</div>\n            </div>\n        );\n    }\n}\n\nCheckbox.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.bool,\n};\n\nexport default Checkbox;\n","export *        from './radio.jsx';\nexport default  from './radio-group.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Localize  from 'App/Components/Elements/localize.jsx';\nimport { Radio } from './radio.jsx';\n\nclass RadioGroup extends React.PureComponent {\n    render() {\n        const { selected, items } = this.props;\n        return (\n            <div className='radio-group'>\n                {items.map(item => (\n                    <Radio\n                        key={item.label}\n                        value={item.value}\n                        selected={selected === item.value}\n                        onClick={this.props.onToggle}\n                    >\n                        {item.label && <Localize str={item.label} />}\n                    </Radio>\n                ))}\n            </div>\n        );\n    }\n}\n\nRadioGroup.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            value: PropTypes.bool.isRequired,\n        })\n    ),\n    onToggle: PropTypes.func,\n    selected: PropTypes.bool,\n};\n\nexport default RadioGroup;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language-dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Localize            from 'App/Components/Elements/localize.jsx';\nimport { IconCountryFlag } from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL,\n    currentLanguage,\n}                          from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('settings-dialog__language-dialog-container', {\n        'settings-dialog__language-dialog-container--show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='settings-dialog__language-header' onClick={hide}>\n                <span>\n                    <Localize str='Select language' />\n                </span>\n            </div>\n            <div className='settings-dialog__language-container'>\n                {Object.keys(getAllowedLanguages())\n                    .map(key => (\n                        <a\n                            key={key}\n                            className={classNames('settings-dialog__language-link', {\n                                'settings-dialog__language-link--active': key === currentLanguage,\n                            })}\n                            href={getURL(key)}\n                        >\n                            <IconCountryFlag\n                                className={'settings-dialog__language-link-flag settings-dialog__language-flag'}\n                                type={key.replace(/(\\s|_)/, '-').toLowerCase()}\n                            />\n                            <span\n                                className={classNames('settings-dialog__language-name', {\n                                    'settings-dialog__language-name--active': key === currentLanguage,\n                                })}\n                            >\n                                {getAllowedLanguages()[key]}\n                            </span>\n                        </a>\n                    ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { localize }           from '_common/localize';\nimport MediaItem, {\n    MediaDescription,\n    MediaHeading,\n    MediaIcon,\n}                             from 'App/Components/Elements/Media';\nimport Localize               from 'App/Components/Elements/localize.jsx';\nimport Checkbox               from 'App/Components/Form/Checkbox';\nimport { connect }            from 'Stores/connect';\n\nconst PurchaseSettings = ({\n    is_purchase_confirmed,\n    is_purchase_locked,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='settings-dialog__purchase'>\n        <MediaItem>\n            <MediaHeading>\n                <Localize str='Purchase confirmation' />\n            </MediaHeading>\n            <MediaDescription>\n                <MediaIcon />\n                <div className='media__form'>\n                    <Checkbox\n                        value={is_purchase_confirmed}\n                        label={localize('Purchase confirmation')}\n                        onClick={togglePurchaseConfirmation}\n                    />\n                </div>\n            </MediaDescription>\n        </MediaItem>\n        <MediaItem>\n            <MediaHeading>\n                <Localize str='Purchase Lock' />\n            </MediaHeading>\n            <MediaDescription>\n                <MediaIcon />\n                <div className='media__form'>\n                    <Checkbox\n                        value={is_purchase_locked}\n                        label={localize('Purchase Lock')}\n                        onClick={togglePurchaseLock}\n                    />\n                </div>\n            </MediaDescription>\n        </MediaItem>\n    </div>\n);\n\nPurchaseSettings.propTypes = {\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(({ ui }) => (\n    {\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }\n))(PurchaseSettings);\n","import classNames    from 'classnames';\nimport React         from 'react';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport DarkModeIcon  from 'Images/app_2/settings/img-theme-dark.svg';\nimport LightModeIcon from 'Images/app_2/settings/img-theme-light.svg';\nimport { connect }   from 'Stores/connect';\n\nconst ThemeSelectSettings = ({ is_dark_mode, toggleDarkMode }) => {\n    const darkOnClick = () => {\n        if (!is_dark_mode) {\n            toggleDarkMode();\n        }\n    };\n\n    const lightOnClick = () => {\n        if (is_dark_mode) {\n            toggleDarkMode();\n        }\n    };\n    return (\n        <React.Fragment>\n            <div className='theme-select-settings'>\n                <h4 className='theme-select-settings__title'>\n                    <Localize str='Select theme' />\n                </h4>\n                <div className='theme-select-settings__content'>\n                    <div className='theme-select-settings__option'>\n                        <DarkModeIcon\n                            className={classNames('theme-select-settings__option__icon', {\n                                'theme-select-settings__option__icon--active': is_dark_mode,\n                            })}\n                            onClick={darkOnClick}\n                        />\n                        <p className='theme-select-settings__option__title'><Localize str='Dark mode' /></p>\n                    </div>\n                    <div className='theme-select-settings__option'>\n                        <LightModeIcon\n                            className={classNames('theme-select-settings__option__icon', {\n                                'theme-select-settings__option__icon--active': !is_dark_mode,\n                            })}\n                            onClick={lightOnClick}\n                        />\n                        <p className='theme-select-settings__option__title'><Localize str='Light mode' /></p>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default connect(({ ui }) => (\n    {\n        is_dark_mode  : ui.is_dark_mode_on,\n        toggleDarkMode: ui.toggleDarkMode,\n    }\n))(ThemeSelectSettings);\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ width: \"236\", height: \"180\", xmlnsXlink: \"http://www.w3.org/1999/xlink\" }, props),\n    React.createElement(\n      \"defs\",\n      null,\n      React.createElement(\"path\", { id: \"a\", d: \"M0 0h236v180H0z\" }),\n      React.createElement(\n        \"linearGradient\",\n        { x1: \"50%\", y1: \"147.77%\", x2: \"50%\", y2: \"10.76%\", id: \"c\" },\n        React.createElement(\"stop\", { stopColor: \"#101320\", stopOpacity: \"0\", offset: \"0%\" }),\n        React.createElement(\"stop\", { stopColor: \"#FFF\", stopOpacity: \".16\", offset: \"100%\" })\n      )\n    ),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\n        \"mask\",\n        { id: \"b\", fill: \"#fff\" },\n        React.createElement(\"use\", { xlinkHref: \"#a\" })\n      ),\n      React.createElement(\"use\", { fill: \"#101320\", xlinkHref: \"#a\" }),\n      React.createElement(\"path\", { d: \"M155.5 123H61v57h-1v-57H0v-1h60V32H0v-1h60V0h1v31h94.5V0h1v31H236v1h-79.5v90H236v1h-79.5v57h-1v-57zm0-1V32H61v90h94.5z\", fill: \"#191C31\", fillRule: \"nonzero\", mask: \"url(#b)\" }),\n      React.createElement(\n        \"g\",\n        { mask: \"url(#b)\" },\n        React.createElement(\"path\", { fill: \"url(#c)\", d: \"M156 81l-6.5 6.5-5 32-3-15-2-75-2-15-16-14-9 15-14 14h-11l-5 15-2-30-3 30h-4l-5 30-2-15-12-15-2-14-23 14-4 15-3-29-9 44H0V165h156z\", transform: \"translate(0 15)\" }),\n        React.createElement(\"path\", { d: \"M149 102.42a.5.5 0 0 1 .15-.27l6.5-6.5a.5.5 0 1 1 .7.7l-6.38 6.39-4.98 31.84c-.08.55-.87.57-.98.02L141 119.5l-2-74.94-1.97-14.82-15.4-13.48-8.7 14.49-.08.1-14 14a.5.5 0 0 1-.35.14H87.86l-4.89 14.66c-.17.52-.93.42-.97-.13l-1.6-24L78 59.54a.5.5 0 0 1-.5.45h-3.58L69 89.58c-.1.57-.91.56-.99-.01L66.02 74.7 54.11 59.81a.5.5 0 0 1-.1-.24l-1.9-13.25-22.18 13.5-3.95 14.8c-.14.55-.92.48-.98-.07L22.34 48.8 13.99 89.6a.5.5 0 0 1-.49.4H0v-1h13.1L22 45.4c.11-.56.93-.52.99.05l2.72 26.3 3.3-12.38a.5.5 0 0 1 .22-.3l23-14a.5.5 0 0 1 .75.36l1.98 13.86L66.9 74.2a.5.5 0 0 1 .1.24l1.57 11.7L73 59.42a.5.5 0 0 1 .49-.42h3.55L80 29.45c.06-.61.96-.6 1 .02l1.83 27.46 4.2-12.59a.5.5 0 0 1 .47-.34h10.8l13.8-13.81 8.97-14.95a.5.5 0 0 1 .76-.12l16 14a.5.5 0 0 1 .17.31l2 15.06 1.99 74.91 2.45 12.25 4.57-29.23z\", fill: \"#FFF\", fillRule: \"nonzero\" })\n      ),\n      React.createElement(\n        \"g\",\n        { mask: \"url(#b)\", fill: \"#F93\", fillRule: \"nonzero\" },\n        React.createElement(\n          \"g\",\n          { transform: \"translate(153 84)\" },\n          React.createElement(\"path\", { d: \"M52 0h31v24H52L42 12z\" }),\n          React.createElement(\"path\", { d: \"M38 11.5h6v1h-6zm-8 0h4v1h-4zm-8 0h4v1h-4zm-8 0h4v1h-4zm-10 0h6v1H4z\" }),\n          React.createElement(\"circle\", { cx: \"3\", cy: \"12\", r: \"3\" })\n        )\n      )\n    )\n  );\n});","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ width: \"236\", height: \"180\", xmlnsXlink: \"http://www.w3.org/1999/xlink\" }, props),\n    React.createElement(\n      \"defs\",\n      null,\n      React.createElement(\"path\", { id: \"a\", d: \"M0 0h236v180H0z\" }),\n      React.createElement(\n        \"linearGradient\",\n        { x1: \"50%\", y1: \"126.02%\", x2: \"50%\", y2: \"32.91%\", id: \"c\" },\n        React.createElement(\"stop\", { stopColor: \"#FFF\", stopOpacity: \"0\", offset: \"0%\" }),\n        React.createElement(\"stop\", { stopColor: \"#999CAC\", stopOpacity: \".16\", offset: \"100%\" })\n      )\n    ),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\n        \"mask\",\n        { id: \"b\", fill: \"#fff\" },\n        React.createElement(\"use\", { xlinkHref: \"#a\" })\n      ),\n      React.createElement(\"use\", { fill: \"#FFF\", xlinkHref: \"#a\" }),\n      React.createElement(\"path\", { d: \"M155.5 123H61v57h-1v-57H0v-1h60V32H0v-1h60V0h1v31h94.5V0h1v31H236v1h-79.5v90H236v1h-79.5v57h-1v-57zm0-1V32H61v90h94.5z\", fill: \"#F4F4F6\", fillRule: \"nonzero\", mask: \"url(#b)\" }),\n      React.createElement(\n        \"g\",\n        { mask: \"url(#b)\" },\n        React.createElement(\"path\", { fill: \"url(#c)\", d: \"M156 81l-6.5 6.5-5 32-3-15-2-75-2-15-16-14-9 15-14 14h-11l-5 15-2-30-3 30h-4l-5 30-2-15-12-15-2-14-23 14-4 15-3-29-9 44H0V165h156z\", transform: \"translate(0 15)\" }),\n        React.createElement(\"path\", { d: \"M149 102.42a.5.5 0 0 1 .15-.27l6.5-6.5a.5.5 0 1 1 .7.7l-6.38 6.39-4.98 31.84c-.08.55-.87.57-.98.02L141 119.5l-2-74.94-1.97-14.82-15.4-13.48-8.7 14.49-.08.1-14 14a.5.5 0 0 1-.35.14H87.86l-4.89 14.66c-.17.52-.93.42-.97-.13l-1.6-24L78 59.54a.5.5 0 0 1-.5.45h-3.58L69 89.58c-.1.57-.91.56-.99-.01L66.02 74.7 54.11 59.81a.5.5 0 0 1-.1-.24l-1.9-13.25-22.18 13.5-3.95 14.8c-.14.55-.92.48-.98-.07L22.34 48.8 13.99 89.6a.5.5 0 0 1-.49.4H0v-1h13.1L22 45.4c.11-.56.93-.52.99.05l2.72 26.3 3.3-12.38a.5.5 0 0 1 .22-.3l23-14a.5.5 0 0 1 .75.36l1.98 13.86L66.9 74.2a.5.5 0 0 1 .1.24l1.57 11.7L73 59.42a.5.5 0 0 1 .49-.42h3.55L80 29.45c.06-.61.96-.6 1 .02l1.83 27.46 4.2-12.59a.5.5 0 0 1 .47-.34h10.8l13.8-13.81 8.97-14.95a.5.5 0 0 1 .76-.12l16 14a.5.5 0 0 1 .17.31l2 15.06 1.99 74.91 2.45 12.25 4.57-29.23z\", fill: \"#999CAC\", fillRule: \"nonzero\" })\n      ),\n      React.createElement(\n        \"g\",\n        { mask: \"url(#b)\", fill: \"#F93\", fillRule: \"nonzero\" },\n        React.createElement(\n          \"g\",\n          { transform: \"translate(153 84)\" },\n          React.createElement(\"path\", { d: \"M52 0h31v24H52L42 12z\" }),\n          React.createElement(\"path\", { d: \"M38 11.5h6v1h-6zm-8 0h4v1h-4zm-8 0h4v1h-4zm-8 0h4v1h-4zm-10 0h6v1H4z\" }),\n          React.createElement(\"circle\", { cx: \"3\", cy: \"12\", r: \"3\" })\n        )\n      )\n    )\n  );\n});","export * from './icon-charts.jsx';\nexport * from './icon-close.jsx';\nexport * from './icon-language.jsx';\nexport * from './icon-purchase.jsx';\nexport * from './icon-theme.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCharts = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path\n                fill='#000'\n                fillOpacity='0.8'\n                className='color1-fill'\n                d='M2 14h14v1H2v1H1v-1H0v-1h1V0h1v14zm1.724-.83l-.895-.446L5.321 7.74 9.266 10.7l3.262-8.698 2.604 7.814-.948.316-1.712-5.134L9.734 12.3 5.679 9.26l-1.955 3.91z'\n            />\n        </g>\n    </svg>\n);\n\nIconCharts.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCharts };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n    >\n        <path\n            className='color1-fill'\n            fillOpacity='0.8'\n            d='M8 6.587l4.293-4.294a1 1 0 0 1 1.414 1.414L9.414 8.002l4.293 4.294a1 1 0 0 1-1.414 1.414L8 9.416 3.707 13.71a1 1 0 1 1-1.414-1.414l4.293-4.294-4.293-4.295a1 1 0 1 1 1.414-1.414L8 6.587z'\n        />\n    </svg>\n\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLanguage = ({ className }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n    >\n        <g fill='none' fillRule='evenodd'>\n            <path\n                className='color1-fill'\n                fill='#000'\n                fillOpacity='0.8'\n                d='M8 15.794l-2.75-3.407H0V0h16v12.387h-5.25L8 15.794zm-7-4.44h4.75L8 14.143l2.25-2.787H15V1.032H1v10.323zM11 9.29H3V8.258h8V9.29zm2-2.58H3V5.677h10V6.71zm0-2.581H3V3.097h10v1.032z'\n            />\n        </g>\n    </svg>\n);\n\nIconLanguage.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLanguage };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPurchase = ({ className }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n    >\n        <g fill='none' fillRule='evenodd'>\n            <path\n                className='color1-fill'\n                fill='#000'\n                fillOpacity='0.8'\n                d='M9 9l-1-.001V11H7V9H5.503V5.501a.501.501 0 1 0-1.003 0V10l.003 1.89L6 14.36V15h4v-.651l1-1.5V10.5a1.5 1.5 0 0 0-1-1.415V11H9V9zM3.5 5.5a1.501 1.501 0 0 1 3.003 0V8H9.5a2.5 2.5 0 0 1 2.5 2.5v2.651l-1 1.5V16H5v-1.36l-1.497-2.471V11L3.5 5.501zM1 6h2v1H0V0h16v7H7V6h8V1H1v5z'\n            />\n        </g>\n    </svg>\n);\n\nIconPurchase.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPurchase };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTheme = ({ className }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n    >\n        <g fill='none' fillRule='evenodd'>\n            <path\n                fill='#000'\n                className='color1-fill'\n                fillOpacity='0.8'\n                d='M8 15A7 7 0 0 0 8 1v14zm0 1a7.982 7.982 0 0 1-6.1-2.823A8 8 0 1 1 8 16z'\n            />\n        </g>\n    </svg>\n);\n\nIconTheme.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTheme };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { withRouter }  from 'react-router';\nimport { formatMoney } from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    DepositButton,\n    InstallPWAButton,\n    LoginButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    UpgradeButton }    from 'App/Components/Layout/Header';\nimport header_links    from 'App/Constants/header-links';\nimport { connect }     from 'Stores/connect';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    is_virtual,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks\n                        is_logged_in={is_logged_in}\n                        items={header_links}\n                    />\n                </div>\n                <div className='header__menu-right'>\n                    <div className='acc-info__container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                className='acc-info__button'\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    is_virtual={is_virtual}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                                { !!(can_upgrade_to && is_virtual) &&\n                                <UpgradeButton className='acc-info__button' />\n                                }\n                                { !(is_virtual) &&\n                                <DepositButton className='acc-info__button' />\n                                }\n                            </React.Fragment>\n                            :\n                            <LoginButton className='acc-info__button' />\n                        }\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    can_upgrade_to           : PropTypes.string,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool,\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    is_virtual               : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func,\n    pwa_prompt_event         : PropTypes.object, // TODO: add click handler\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        can_upgrade_to           : client.can_upgrade_to,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        is_virtual               : client.is_virtual,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account-info.jsx';\nexport * from './deposit-button.jsx';\nexport * from './install-pwa-button.jsx';\nexport * from './login-button.jsx';\nexport * from './upgrade-button.jsx';\nexport * from './menu-links.jsx';\nexport * from './toggle-menu-drawer.jsx';\nexport * from './toggle-notifications-drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    is_virtual,\n    onClickUpgrade,\n    toggleDialog,\n}) => (\n    <div className='acc-info__wrapper'>\n        <div\n            className={classNames('acc-info', {\n                'acc-info--show'      : is_dialog_on,\n                'acc-info--is-virtual': is_virtual,\n            })}\n            onClick={toggleDialog}\n        >\n            <p\n                className='acc-info__id'\n                title={loginid}\n            >\n                {loginid}&nbsp;\n            </p>\n            {\n                typeof balance !== 'undefined' &&\n                <p className='acc-info__balance'>\n                    <span\n                        className={classNames('symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })}\n                    />\n                    {balance}\n                </p>\n            }\n            <IconArrow className='acc-info__select-arrow' is_bold={true} />\n        </div>\n        <CSSTransition\n            in={is_dialog_on}\n            timeout={200}\n            classNames={{\n                enter    : 'acc-switcher__wrapper--enter',\n                enterDone: 'acc-switcher__wrapper--enter-done',\n                exit     : 'acc-switcher__wrapper--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='acc-switcher__wrapper'>\n                <AccountSwitcher\n                    is_visible={is_dialog_on}\n                    toggle={toggleDialog}\n                    is_upgrade_enabled={is_upgrade_enabled}\n                    onClickUpgrade={onClickUpgrade}\n                />\n            </div>\n        </CSSTransition>\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_virtual        : PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account-switcher.jsx';\n","import classNames               from 'classnames';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport { isEmptyObject }        from '_common/utility';\nimport { IconAccountsCurrency } from 'Assets/Header/AccountsCurrency';\nimport { IconLogout }           from 'Assets/Header/Drawer';\nimport { requestLogout }        from 'Services/index';\nimport { connect }              from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggle();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        requestLogout();\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n        // TODO: Once we allow other real accounts (apart from CR), assign correct title and group accounts into list with correct account title/types\n        // e.g - Real, Financial, Gaming, Investment\n        const real_accounts = this.props.account_list.filter(acc => !acc.is_virtual);\n        const vrt_account   = this.props.account_list.find(acc => acc.is_virtual);\n\n        const main_account_title = real_accounts.length > 1 ? localize('Real accounts') : localize('Real account');\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef}>\n                {\n                    // Make sure this block is not rendered if there are no real accounts\n                    !!(this.props.account_list.length && real_accounts.length) &&\n                    <div className='acc-switcher__list-group'>\n                        <span className='acc-switcher__list-title'>\n                            {main_account_title}\n                        </span>\n                        <div className='acc-switcher__accounts'>\n                            {\n                                real_accounts.map((account) => (\n                                    <div\n                                        key={account.loginid}\n                                        className={classNames('acc-switcher__account', {\n                                            'acc-switcher__account--selected': (account.loginid === this.props.account_loginid),\n                                        })}\n                                        onClick={this.doSwitch.bind(this, account.loginid)}\n                                    >\n                                        <span className={'acc-switcher__id'}>\n                                            <IconAccountsCurrency\n                                                className={`acc-switcher__id-icon acc-switcher__id-icon--${account.icon}`}\n                                                type={account.icon}\n                                            />\n                                            {account.loginid}\n                                        </span>\n                                    </div>\n                                ))\n                            }\n                        </div>\n\n                        {   // TODO: Add link to account opening page for upgrade or multi account page for new account.\n                            // Update text below for handling types of account to create :- e.g - Investment\n                            !!(this.props.is_upgrade_enabled && this.props.upgrade_info.can_open_multi) &&\n                            <div className='acc-switcher__new-account'>\n                                <span className='acc-switcher__new-account-title'>{localize('Add new account')}</span>\n                            </div>\n                        }\n                    </div>\n                }\n                {\n                    !isEmptyObject(vrt_account) &&\n                    <div className='acc-switcher__list--virtual'>\n                        <span className='acc-switcher__list-title'>\n                            {localize('Virtual account')}\n                        </span>\n                        <div className='acc-switcher__accounts'>\n                            <div\n                                className={classNames('acc-switcher__account', {\n                                    'acc-switcher__account--selected': (this.props.virtual_loginid === this.props.account_loginid),\n                                })}\n                                onClick={this.doSwitch.bind(this, this.props.virtual_loginid)}\n                            >\n                                <span className={classNames('acc-switcher__id', 'acc-switcher__id--virtual')}>\n                                    {this.props.virtual_loginid}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { !!(this.props.is_upgrade_enabled && this.props.is_virtual) &&\n                <div className='acc-switcher__new-account'>\n                    <span className='acc-switcher__new-account-title'>{localize('Upgrade to Real Account')}</span>\n                </div>\n                }\n                <div className='acc-switcher__logout' onClick={this.handleLogout}>\n                    <span className='acc-switcher__logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='acc-switcher__logout-icon drawer__icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list          : PropTypes.array,\n    account_loginid       : PropTypes.string,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_upgrade_enabled    : PropTypes.bool,\n    is_virtual            : PropTypes.bool,\n    is_visible            : PropTypes.bool,\n    onClickUpgrade        : PropTypes.func,\n    toggle                : PropTypes.func,\n    togglePositionsDrawer : PropTypes.func,\n    upgrade_info          : PropTypes.object,\n    virtual_loginid       : PropTypes.string,\n};\n\nconst account_switcher = connect(\n    ({ client, ui }) => ({\n        account_list          : client.account_list,\n        account_loginid       : client.loginid,\n        is_logged_in          : client.is_logged_in,\n        is_virtual            : client.is_virtual,\n        switchAccount         : client.switchAccount,\n        upgrade_info          : client.upgrade_info,\n        virtual_loginid       : client.virtual_account_loginid,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","export * from './icon_accounts_currency.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconAccountsCurrency = ({ type, className }) => {\n    let IconCurrency;\n    if (type) {\n        switch (type) {\n            case 'aud':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#FFF'>\n                            <path d='M6.853 15.319l.674-.84-1.04.188-.362-1.008-.393 1.008-1.062-.188.675.821-.701.821 1.069-.168.36.988.393-.987 1.09.194zM14.819 16.06l.382-.475-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.606-.095.204.56.222-.56.618.111zM14.819 5.542l.382-.477-.59.107-.205-.57-.222.57-.603-.107.383.466-.397.465.606-.095.204.56.222-.56.618.11zM17.291 8.263l.382-.476-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11zM12.68 9.473l.382-.476-.59.107-.204-.572-.223.572-.602-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11z' />\n                        </g>\n                        <g fill='#283991'>\n                            <path d='M2.099 3.87c-.157.202-.307.41-.448.623h1.07L2.1 3.87zM7.26 9.993h.962l-.963-.962zM4.068 1.947c-.23.169-.45.348-.664.536l.664.663v-1.2zM3.105 9.993h.963V9.03zM9.993 0c-.948 0-1.864.135-2.734.382v2.764L9.993.412V0zM9.993 9.072V7.684H8.606zM.412 9.993l2.31-2.309H.272A10.004 10.004 0 0 0 0 9.994h.412zM8.605 4.493h1.388V3.105z' />\n                        </g>\n                        <g fill='#FFF'>\n                            <path d='M9.993 9.363v-.291L8.606 7.684h1.387v-.496H7.818zM2.722 4.493H1.65c-.107.162-.209.328-.307.497H3.45l-1.25-1.25a9.019 9.019 0 0 0-.1.13l.623.623zM4.068 9.03v.963h.497v-1.69l-1.69 1.69h.23zM7.26.382c-.168.047-.334.099-.497.155v3.336l3.23-3.23v-.23L7.26 3.146V.382zM4.05 7.684l.018-.017.48-.48H.401c-.048.165-.091.33-.13.497h2.45l-2.31 2.31h1.33l2.309-2.31z' />\n                            <path d='M.412 9.993l2.31-2.309-2.31 2.31zM9.993 4.99v-.497H8.605l1.388-1.388v-1.33L6.78 4.99z' />\n                            <path d='M9.993 3.105L8.605 4.493l1.388-1.388zM4.068 3.146l-.664-.663c-.235.207-.461.425-.676.653l1.34 1.34.014.015.483.482V1.605c-.169.11-.335.222-.497.342v1.2zM7.26 9.03l.962.963H9.49L6.763 7.266v2.727h.496z' />\n                        </g>\n                        <path d='M4.068 4.476l.034.034-.034-.034z' fill='#D32030' />\n                        <path d='M8.314 7.684l-.496-.496h2.175V4.99H6.78l-.016.017V4.99h.016l3.214-3.214V.643l-3.23 3.23V.537a9.957 9.957 0 0 0-2.198 1.068v3.368l.017.017h-.017v-.017l-.483-.482.003.002h-.017v-.017l-1.34-1.34c-.184.195-.36.396-.528.605L3.449 4.99H1.344a9.918 9.918 0 0 0-.942 2.198h4.145l.018-.018v.018h-.018l-.479.48v.017h-.017L1.74 9.993h1.134l1.69-1.69v1.69h2.198V7.266L9.49 9.993h.375c.043-.044.087-.089.129-.135v-.495l-1.68-1.679z' fill='#F44336' />\n                        <path fill='#D32030' d='M6.763 3.873l3.23-3.23zM4.092 7.709v-.042l-.041.042zM4.589 7.17l-.042.042h.042zM6.763 5.03l.04-.04h-.04zM4.068 4.517h.04l-.006-.007-.034-.034zM4.606 5.013l-.041-.04v.04z' />\n                    </g>\n                );\n                break;\n            case 'bch':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#8DC351' cx='10' cy='10' r='10' />\n                        <path d='M13.254 6.584c-.485-1.233-1.7-1.344-3.117-1.069l-.505-1.758-1.07.307.492 1.712c-.281.08-.568.169-.852.256L7.708 4.31l-1.07.306.504 1.758c-.23.071-.456.141-.678.205l-.002-.006-1.476.423.328 1.144s.786-.243.777-.224c.433-.124.646.087.75.292l.575 2.003a.951.951 0 0 1 .115-.025l-.113.032.804 2.807c.02.142.002.382-.3.47.017.008-.779.222-.779.222l.155 1.34 1.392-.4c.26-.074.516-.142.766-.213l.51 1.778 1.07-.306-.505-1.76c.287-.075.573-.155.858-.237l.501 1.752 1.07-.307-.508-1.775c1.77-.62 2.899-1.434 2.57-3.169-.263-1.396-1.077-1.82-2.169-1.772.53-.494.758-1.161.401-2.063zm-.406 4.231c.381 1.33-1.937 1.83-2.662 2.04l-.676-2.357c.725-.208 2.94-1.069 3.338.318v-.001zm-1.451-3.181c.346 1.21-1.592 1.612-2.196 1.785l-.613-2.137c.604-.173 2.447-.909 2.809.352z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'btc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#F7931A' cx='10' cy='10' r='10' />\n                        <path d='M14.493 8.762c.196-1.31-.802-2.014-2.165-2.484l.442-1.775-1.08-.269-.431 1.729c-.284-.072-.575-.138-.866-.204l.434-1.74-1.08-.269-.442 1.774c-.235-.053-.466-.106-.69-.162l.001-.006-1.49-.372-.287 1.154s.802.184.785.195c.437.11.516.399.503.629l-.504 2.022a.96.96 0 0 1 .113.035l-.115-.028-.706 2.833c-.054.132-.19.332-.496.256.012.016-.785-.196-.785-.196l-.536 1.237 1.406.35c.262.066.518.135.77.199l-.447 1.795 1.08.269.442-1.775c.295.08.581.153.861.223l-.441 1.767 1.08.27.447-1.792c1.842.349 3.227.208 3.81-1.458.47-1.341-.023-2.116-.992-2.62.706-.163 1.237-.627 1.38-1.587zm-2.469 3.462c-.333 1.342-2.592.616-3.325.434l.594-2.378c.733.183 3.08.545 2.731 1.944zm.335-3.48c-.305 1.22-2.185.6-2.794.447l.537-2.156c.61.152 2.574.435 2.257 1.708z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'dai':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle stroke='#F7B14A' strokeWidth='.625' cx='10' cy='10' r='9.688' />\n                        <path fill='#FFCC80' d='M3.75 10H10v6.25z' />\n                        <path fill='#FFB74D' d='M10 3.75v8.125L3.75 10z' />\n                        <path fill='#FFF' d='M5.625 10L10 5.625v2.5L8.125 10z' />\n                        <path fill='#F7C57B' d='M16.25 10H10v6.25z' />\n                        <path fill='#F7B14A' d='M10 3.75v8.125L16.25 10z' />\n                        <path fill='#FFF' d='M14.375 10L10 5.625v2.5L11.875 10z' />\n                    </g>\n                );\n                break;\n            case 'eth' :\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#EBF0F1' cx='10' cy='10' r='10' />\n                        <g fill='#12100B'>\n                            <path fillOpacity='.8' d='M10.311 2.5v10.353l4.686-2.715z' />\n                            <path fillOpacity='.45' d='M10.311 2.5l-4.686 7.638 4.686 2.718z' />\n                            <path fillOpacity='.8' d='M10.311 13.73v3.767L15 11.01z' />\n                            <path fillOpacity='.45' d='M10.311 17.497v-3.768L5.625 11.01z' />\n                            <path fillOpacity='.6' d='M10.311 12.858l4.686-2.72-4.686-2.093zM5.625 10.137l4.686 2.721V8.045z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'eur':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#F8D12E'>\n                            <path d='M9.976 1.733l.244.75h.789l-.639.464.244.75-.638-.464-.638.464.244-.75-.639-.464h.79zM9.976 15.894l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM13.862 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM16.514 5.604l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM16.577 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.639-.464h.79zM3.534 5.604l.244.75h.788l-.638.464.244.75-.638-.463-.638.463.243-.75-.638-.464h.79zM17.129 8.757l.243.75h.79l-.639.463.244.75-.638-.463-.639.464.244-.75-.638-.464h.789zM2.931 8.757l.244.75h.789l-.639.463.244.75-.638-.463-.638.464.244-.75-.638-.464h.788zM3.448 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.638-.464h.789zM13.977 14.942l.243.75h.79l-.639.464.244.75-.638-.464-.639.464.244-.75-.638-.464h.79zM6.215 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM5.928 14.894l.243.75h.79l-.639.464.244.75-.638-.464-.638.464.243-.75-.638-.464h.789z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'gbp':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <g fill='#283991'>\n                            <path d='M2.067 3.912a9.964 9.964 0 0 0-1.723 3.48h5.203l-3.48-3.48zM19.656 7.391a9.964 9.964 0 0 0-1.723-3.48l-3.48 3.48h5.203zM.344 12.609a9.965 9.965 0 0 0 1.723 3.48l3.48-3.48H.344zM16.088 2.067a9.964 9.964 0 0 0-3.48-1.723v5.203l3.48-3.48zM3.912 17.933a9.964 9.964 0 0 0 3.48 1.723v-5.203l-3.48 3.48zM7.391.344a9.965 9.965 0 0 0-3.48 1.723l3.48 3.48V.344zM12.609 19.656a9.965 9.965 0 0 0 3.48-1.723l-3.48-3.48v5.203zM14.453 12.609l3.48 3.48a9.964 9.964 0 0 0 1.723-3.48h-5.203z' />\n                        </g>\n                        <g fill='#F44336'>\n                            <path d='M19.915 8.696h-8.61V.085a10.1 10.1 0 0 0-2.61 0v8.61H.086a10.1 10.1 0 0 0 0 2.61h8.61v8.61a10.099 10.099 0 0 0 2.61 0v-8.61h8.61a10.099 10.099 0 0 0 0-2.61z' />\n                            <path d='M12.609 12.609l4.462 4.462c.205-.205.401-.42.588-.642l-3.82-3.82h-1.23zM7.391 12.609L2.93 17.07c.205.205.42.401.642.588l3.82-3.82v-1.23zM7.394 7.391L2.932 2.93c-.206.205-.401.42-.588.642l3.82 3.82h1.23zM12.609 7.391L17.07 2.93c-.205-.205-.42-.401-.642-.588l-3.82 3.82v1.23z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'ltc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#BFBBBB' cx='10' cy='10' r='10' />\n                        <path fill='#FFF' d='M6.517 12.009l-.892.346.43-1.724.902-.363L8.258 5h3.206l-.95 3.873.882-.357-.425 1.718-.892.357-.53 2.177h4.826L13.829 15H5.783z' />\n                    </g>\n                );\n                break;\n            case 'usd':\n                IconCurrency = (\n                    <g fill='none' fillRule='evenodd'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <path d='M12.18 1.833h3.583A9.951 9.951 0 0 0 10.578.018h-.308c.906.114 1.323.783 1.91 1.815zm.926 3.628h5.799a9.976 9.976 0 0 0-1.186-1.814h-5.066c.179.564.33 1.173.453 1.814zm6.839 3.629a9.913 9.913 0 0 0-.331-1.814h-6.19c.062.594.103 1.202.123 1.814h6.398zm-.345 3.629a9.885 9.885 0 0 0 .341-1.814h-6.24c-.022.612-.064 1.22-.127 1.814h6.025zm-6.789 3.629h4.865a9.985 9.985 0 0 0 1.203-1.815h-5.61a15.76 15.76 0 0 1-.458 1.815zm-2.818 3.627a9.845 9.845 0 0 0 5.698-1.812h-3.616c-.642 1.122-1.066 1.812-2.082 1.812z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M4.223 1.833h8.288C11.924.8 11.176.132 10.27.018h-.861a9.95 9.95 0 0 0-5.186 1.815zM2.268 3.647A9.983 9.983 0 0 0 1.082 5.46H13.73a15.962 15.962 0 0 0-.453-1.814H2.267zM.041 9.09h14.077c-.02-.612-.062-1.22-.124-1.814H.373A9.9 9.9 0 0 0 .04 9.09zm.346 3.629H13.99a25.53 25.53 0 0 0 .127-1.814H.046a9.87 9.87 0 0 0 .341 1.814zm.721 1.814a9.97 9.97 0 0 0 1.202 1.815h10.952c.18-.564.334-1.173.458-1.815H1.108zm8.462 5.433l.061.002c.12.004.24.007.362.007 1.016 0 1.845-.69 2.487-1.813H4.295a9.843 9.843 0 0 0 5.275 1.804z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M9.787.005A9.99 9.99 0 0 0 .043 9.093h9.744V.005z' fill='#283991' fillRule='nonzero' />\n                        <path fill='#EFEFEF' fillRule='nonzero' d='M2 5.65l.152.468h.493l-.399.289.152.468L2 6.585l-.4.29.153-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.399.289.152.468L2 8.238l-.4.29.153-.468-.399-.29h.493zM3.656 3.17l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.468-.399-.29h.494zm0 1.653l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.469-.399-.289h.494zm0 1.653l.152.468h.493l-.399.29.153.467-.399-.289-.399.29.152-.469-.399-.289h.494zM.742 7.701L.59 7.233l.398-.289H.496L.484 6.91a9.53 9.53 0 0 0-.148.507l.007-.005.399.29zM1.6 5.222l.4-.29.398.29-.152-.468.399-.29h-.493l-.153-.467-.152.468h-.182a9.409 9.409 0 0 0-.099.154l.187.135-.152.468zm2.056-2.769l.399.29-.153-.468.4-.29h-.286a9.92 9.92 0 0 0-.7.573l-.06.185.4-.29zm1.258-.537l.398-.29.4.29-.153-.468.399-.289h-.493l-.021-.063a9.895 9.895 0 0 0-.494.268l.116.084-.152.468zm.398.428l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm1.657-5.786l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.469-.399-.289h.493zm0 1.653l.152.468h.493l-.398.29.152.467-.4-.289-.398.29.152-.469-.399-.289h.493zM8.625.691l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.289h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494z' />\n                    </g>\n                );\n                break;\n            case 'ust':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M10 0c5.523 0 10 4.477 10 10s-4.478 10-10 10S0 15.524 0 10 4.477 0 10 0' fill='#53AE94' />\n                        <path d='M11.234 8.668V7.18h3.402V4.913H5.373V7.18h3.402v1.486c-2.765.127-4.844.675-4.844 1.331 0 .656 2.08 1.204 4.844 1.331v4.765h2.46v-4.765c2.76-.127 4.835-.675 4.835-1.33s-2.075-1.203-4.835-1.33m0 2.256c-.07.004-.426.025-1.22.025-.635 0-1.081-.018-1.239-.026v.002c-2.443-.108-4.266-.534-4.266-1.043 0-.509 1.824-.934 4.266-1.042v1.661c.16.011.618.038 1.25.038.758 0 1.14-.032 1.21-.038V8.84c2.437.109 4.257.534 4.257 1.042 0 .507-1.82.933-4.258 1.041' fill='#FFF' />\n                    </g>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'>\n            {IconCurrency}\n        </svg>\n\n    );\n};\n\nIconAccountsCurrency.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconAccountsCurrency };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path\n            className='color1-fill'\n            fill='#000'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M14.293 8.5H8.5a.5.5 0 0 1 0-1h5.793l-1.647-1.646a.5.5 0 1 1 .708-.708l2.5 2.5a.5.5 0 0 1 0 .708l-2.5 2.5a.5.5 0 1 1-.708-.708L14.293 8.5zM11 10.962a.5.5 0 0 1 1 0v1.692C12 13.4 11.38 14 10.625 14h-5.25C4.619 14 4 13.401 4 12.654V3.346C4 2.6 4.62 2 5.375 2h5.25C11.381 2 12 2.599 12 3.346v1.692a.5.5 0 0 1-1 0V3.346C11 3.16 10.836 3 10.625 3h-5.25C5.165 3 5 3.159 5 3.346v9.308c0 .187.164.346.375.346h5.25c.21 0 .375-.159.375-.346v-1.692z'\n        />\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst DepositButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Deposit')}\n        // TODO: Redirect to Deposit page in Cashier\n        // onClick={redirectToCashierDeposit}\n    />\n);\n\nDepositButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { DepositButton };\n","import classNames   from 'classnames';\nimport React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    className,\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className={classNames(className, 'btn--primary btn--primary--orange')}\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    className   : PropTypes.string,\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        <div className='header__navbar-icons header__navbar-icons--binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    (item.login_only && (item.login_only !== is_logged_in)) ?\n                        null\n                        :\n                        <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                            <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}</span>\n                        </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        is_logged_in: PropTypes.bool,\n        link_to     : PropTypes.string,\n        text        : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form-layout.jsx';\nimport Digits               from '../../Contract/Containers/digits.jsx';\nimport InfoBox              from '../../Contract/Containers/info-box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_last_digit_stats = ['match_diff', 'even_odd', 'over_under'].includes(this.props.contract_type)\n            && !this.props.is_contract_mode;\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                Digits={<Digits is_trade_page />}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                                start_epoch={this.props.start_epoch}\n                                end_epoch={this.props.end_epoch}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id || this.props.is_contract_mode}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    contract_type   : PropTypes.string,\n    end_epoch       : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    start_epoch     : PropTypes.number,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        start_epoch      : modules.contract.chart_config.start_epoch,\n        end_epoch        : modules.contract.chart_config.end_epoch,\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        contract_type    : modules.trade.contract_type,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen-large.jsx';\nimport ScreenSmall  from './screen-small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--blur': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import classNames           from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract-type-dialog.jsx';\nimport ContractTypeList      from './contract-type-list.jsx';\nimport TradeTypeInfoDialog   from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem     from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open     : false,\n            is_info_dialog_open: false,\n            item               : {},\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(navigationList[nextIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[0]);\n        }\n    };\n\n    handlePrevClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(navigationList[prevIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({ is_info_dialog_open: false, is_dialog_open: false });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getNavigationList = () => {\n        const navigationList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && navigationList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return navigationList;\n    };\n\n    render() {\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={'contract-type-widget'}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': this.state.is_dialog_open,\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <IconTradeCategory category={this.props.value} className='contract-type-widget__icon-wrapper' />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                        handleInfoClick={this.handleInfoClick}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={this.props.is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={this.state.is_info_dialog_open}\n                    title={this.state.item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_mobile={this.props.is_mobile}\n                        item={this.state.item}\n                        navigationList={this.getNavigationList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category, className }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)}>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category : PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    list           : MobxPropTypes.objectOrObservableObject,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconInfoOutline }            from 'Assets/Common';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`contract-type-item ${value === contract.value ? 'contract-type-item--selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <IconTradeCategory category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <IconInfoOutline />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { Scrollbars }       from 'tt-react-custom-scrollbars';\nimport { IconBack }         from 'Assets/Common/icon-back.jsx';\nimport { IconChevronLeft }  from 'Assets/Common/icon-chevron-left.jsx';\nimport { IconChevronRight } from 'Assets/Common/icon-chevron-right.jsx';\nimport { TradeCategories }  from 'Assets/Trading/Categories/trade-categories.jsx';\nimport Button               from 'App/Components/Form/button.jsx';\nimport { localize }         from '_common/localize';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_mobile,\n    item,\n    navigationList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <IconBack />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__gif'>\n            gif explanation\n        </div>\n        <div className='trade-type-info-dialog__content'>\n            <Scrollbars\n                autoHide\n                style={{ height: '100%' }}\n            >\n                <TradeCategories category={item.value} />\n            </Scrollbars>\n        </div>\n        <div>\n            <Button className='trade-type-info-dialog__choose-button' text={localize('Choose')} onClick={() => onSubmitButtonClick(item)} />\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(navigationList)} >\n                <IconChevronLeft />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                {\n                    navigationList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className={classNames('trade-type-info-navigation__circle-button', {\n                                    'trade-type-info-navigation__circle-button--active': contract.value === item.value,\n                                })}\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(navigationList)} >\n                <IconChevronRight />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    navigationList       : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n\nconst TradeCategories = ({ category }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>\n                            { localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }\n                        </p>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to the barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.') }</p>\n                        <p>{ localize('If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to either the Low barrier or the High barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period') }</p>\n                        <p>{ localize('If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.') }</p>\n                        <p>{ localize('If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).') }</p>\n                        <p>{ localize('If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.') }</p>\n                        <p>{ localize('If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Touches\", you win the payout if the market touches the barrier at any time during the contract period.') }</p>\n                        <p>{ localize('If you select \"Does Not Touch\", you win the payout if the market never touches the barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('Asian options settle by comparing the last tick with the average spot over the period.') }</p>\n                        <p>{ localize('If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.') }</p>\n                        <p>{ localize('If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.') }</p>\n                        <p>{ localize('If the last tick is equal to the average of the ticks, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <p>\n                        not found\n                    </p>\n                );\n                break;\n        }\n    }\n    return (\n        <div>\n            {TradeTypeTemplate}\n        </div>\n    );\n};\n\nTradeCategories.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { TradeCategories };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm-element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm-element.jsx';\n\nclass PopConfirm extends React.PureComponent {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    })\n                ))}\n                {popconfirm_element}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    is_visible,\n    proposal_info,\n}) => (\n    <React.Fragment>\n        {(proposal_info.has_error || !proposal_info.id) ?\n            <div\n                className={classNames({\n                    'trade-container__error': proposal_info.has_error,\n                })}\n            >\n                {proposal_info.message && <span className='trade-container__error-info'>{proposal_info.message}</span>}\n            </div>\n            :\n            <div className='trade-container__price'>\n                <div className='trade-container__price-info'>\n                    <div className='trade-container__price-info-basis'>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                    <div className='trade-container__price-info-value'><Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} /></div>\n                    {is_visible &&\n                    <div className='trade-container__price-info-movement'>\n                        {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                    </div>\n                    }\n                </div>\n                <span>\n                    <Tooltip alignment='left' className='trade-container__price-tooltip' classNameIcon='trade-container__price-tooltip-i' icon='info' message={proposal_info.message} />\n                </span>\n            </div>\n        }\n    </React.Fragment>\n);\n\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    is_visible   : PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message-box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon-close.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n    if (!has_error) return null;\n    return (\n        <div className='message-box'>\n            <div className='message-box__close-btn' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {ErrorComponent}\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","export * from './error-balance.jsx';\nexport * from './error-general.jsx';\nexport * from './error-login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='message-box__login'>\n        <span className='message-box__info message-box__login-info'>\n            {localize('You have an insufficient amount of balance.')}\n        </span>\n        <Button\n            className='btn--secondary btn--secondary--orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='message-box__result'>\n        <span className='message-box__info'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='message-box__login'>\n        <span className='message-box__info message-box__login-info'>\n            {localize('Please log in to purchase the contract')}\n        </span>\n        <Button\n            className='btn--secondary btn--secondary--orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p className='message-box__login-prompt'>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a className='message-box__login-link' href='javascript:;'>\n            <span className='message-box__info message-box__login-info'>\n                {localize('Create one now')}\n            </span>\n        </a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase-lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon-lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-container__lock'>\n        <div>\n            <IconLock className='purchase-container__lock-icon' />\n        </div>\n        <h4 className='purchase-container__lock-header'>{localize('Purchase Locked')}</h4>\n        <Button\n            className='purchase-container__lock-button btn--secondary btn--secondary--orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='purchase-container__lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect className='color1-stroke' width='9' height='7' x='.5' y='6.5' stroke='none' rx='1' />\n            <circle className='color1-fill' cx='5' cy='10' r='1' fill='none' />\n            <path className='color1-stroke' stroke='none' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\n// import StartDate from 'Modules/Trading/Components/Form/TradeParams/start-date.jsx';\n\nexport const form_components = [\n    // { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport ButtonToggleMenu          from 'App/Components/Form/button-toggle-menu.jsx';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/InputField';\nimport AllowEquals               from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    currencies_list,\n    currency,\n    duration_unit,\n    expiry_type,\n    is_equal,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n\n    const input =\n        <InputField\n            className='trade-container__amount'\n            classNameInlinePrefix='trade-container__currency'\n            classNameInput='trade-container__input'\n            currency={currency}\n            error_messages={validation_errors.amount}\n            fractional_digits={getDecimalPlaces(currency)}\n            id='amount'\n            inline_prefix={is_single_currency ? currency : null}\n            is_autocomplete_disabled\n            is_float\n            is_incrementable\n            is_nativepicker={is_nativepicker}\n            is_negative_disabled\n            max_length={10}\n            name='amount'\n            onChange={onChange}\n            type='tel'\n            value={amount}\n        />;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <ButtonToggleMenu\n                buttons_arr={basis_list}\n                className='dropdown--no-margin'\n                name='basis'\n                onChange={onChange}\n                value={basis}\n            />\n            {!is_single_currency ?\n                <div className='trade-container__currency-options'>\n                    <Dropdown\n                        className={classNames({ 'trade-container__currency-options-dropdown': !is_single_currency })}\n                        classNameDisplay='trade-container__currency-options--display'\n                        has_symbol\n                        is_alignment_left\n                        is_nativepicker={false}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                    {input}\n                </div>\n                :\n                input\n\n            }\n            <AllowEquals\n                contract_start_type={contract_start_type}\n                contract_type={contract_type}\n                contract_types_list={contract_types_list}\n                duration_unit={duration_unit}\n                expiry_type={expiry_type}\n                onChange={onChange}\n                value={parseInt(is_equal)}\n            />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis              : PropTypes.string,\n    basis_list         : MobxPropTypes.arrayOrObservableArray,\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: MobxPropTypes.observableObject,\n    currencies_list    : MobxPropTypes.observableObject,\n    currency           : PropTypes.string,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', this.props.classNameDisplay, {\n                        'dropdown__display--clicked'   : this.state.is_list_visible,\n                        'dropdown__display--has-symbol': this.props.has_symbol,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    {this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className={`symbols dropdown__display-symbol symbols--${(this.props.value || '').toLowerCase()}`} />\n                    }\n                    {!this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                    }\n                </div>\n                {\n                    !is_single_option && <IconArrow className={classNames('dropdown__select-arrow', {\n                        'dropdown__select-arrow--left': this.props.is_alignment_left,\n                    })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        handleSelect={this.handleSelect}\n                                        has_symbol={this.props.has_symbol}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                handleSelect={this.handleSelect}\n                                                has_symbol={this.props.has_symbol}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    classNameDisplay : PropTypes.string,\n    has_symbol       : PropTypes.bool,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Tooltip             from 'App/Components/Elements/tooltip.jsx';\nimport { getCurrencyName } from '_common/base/currency_base';\n\nconst Items = ({\n    handleSelect,\n    has_symbol,\n    items,\n    name,\n    value,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={classNames('list__item', {\n                    'list__item--selected': value === item.value,\n                })}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                {!!has_symbol && item.has_tooltip &&\n                <Tooltip alignment='top' className='list__item-tooltip' message={getCurrencyName(item.value)}>\n                    <i><span className={`symbols list__item-tooltip-symbols symbols--${(item.text || '').toLowerCase()}`} /></i>\n                </Tooltip>\n                }\n                {!!has_symbol && !item.has_tooltip &&\n                <span className={`list__item-text symbols symbols--${(item.text || '').toLowerCase()}`} />\n                }\n                {!has_symbol && <span className='list__item-text'>{item.text}</span>}\n            </div>\n        </React.Fragment>\n    ))\n);\n\nItems.propTypes = {\n    handleSelect: PropTypes.func,\n    has_symbol  : PropTypes.bool,\n    name        : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { isCryptocurrency }      from '_common/base/currency_base';\nimport IncrementButtons          from './increment-buttons.jsx';\nimport Input                     from './input.jsx';\nimport Tooltip                   from '../../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    classNameInlinePrefix,\n    classNameInput,\n    classNamePrefix,\n    currency,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_negative_disabled,\n    is_read_only = false,\n    is_signed = false,\n    is_unit_at_right = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    unit,\n    value,\n}) => {\n    const has_error       = error_messages && !!error_messages.length;\n    let has_valid_length  = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e, callback) => {\n        if (unit) {\n            e.target.value = e.target.value.replace(unit, '').trim();\n        }\n\n        if (e.target.value === value && type !== 'checkbox') {\n            return;\n        }\n\n        if (type === 'number' || type === 'tel') {\n            const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n            const signed_regex = is_signed ? '^([+\\-\\.0-9])' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if (((is_number) || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation || type === 'tel'\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n        if (callback) {\n            callback(e);\n        }\n    };\n\n    const getDecimals = (val) => {\n        const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n        return array_value && array_value.length > 1 ? array_value[1].length : 0;\n    };\n\n    const incrementValue = () => {\n        if (max_is_disabled) return;\n        let increment_value;\n\n        const decimal_places = value ? getDecimals(value) : 0;\n        const is_crypto      = !!currency && isCryptocurrency(currency);\n\n        if (is_crypto || (!currency && is_float)) {\n            const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n            increment_value = parseFloat(new_value).toFixed(decimal_places);\n        } else {\n            increment_value = parseFloat((+value) + 1).toFixed(decimal_places);\n        }\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const calculateDecrementedValue = () => {\n        let decrement_value;\n\n        const decimal_places = value ? getDecimals(value) : 0;\n        const is_crypto      = !!currency && isCryptocurrency(currency);\n\n        if (is_crypto || (!currency && is_float)) {\n            const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n            decrement_value = parseFloat(new_value).toFixed(decimal_places);\n        } else {\n            decrement_value = parseFloat((+value) - 1).toFixed(decimal_places);\n        }\n        return decrement_value;\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n        const decrement_value = calculateDecrementedValue();\n        if (is_negative_disabled && decrement_value < 0) return;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    let display_value = value;\n\n    if (unit) {\n        display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n    }\n\n    const is_increment_input = is_incrementable && (type === 'number' || type === 'tel');\n\n    const input =\n        <Input\n            changeValue={changeValue}\n            checked={checked}\n            className={classNames(is_increment_input ? 'input-wrapper__input' : '', inline_prefix ? 'input--has-inline-prefix' : '', 'input', { 'input--error': has_error }, classNameInput)}\n            classNameInlinePrefix={classNameInlinePrefix}\n            data_tip={data_tip}\n            data_value={data_value}\n            display_value={display_value}\n            fractional_digits={fractional_digits}\n            has_error={has_error}\n            id={id}\n            inline_prefix={inline_prefix}\n            is_autocomplete_disabled={is_autocomplete_disabled}\n            is_disabled={is_disabled}\n            is_incrementable={is_increment_input}\n            is_read_only={is_read_only}\n            max_length={max_length}\n            name={name}\n            onClick={onClick}\n            onKeyPressed={onKeyPressed}\n            placeholder={placeholder}\n            required={required}\n            type={type}\n        />;\n\n    const increment_buttons =\n        <IncrementButtons\n            max_is_disabled={max_is_disabled}\n            incrementValue={incrementValue}\n            min_is_disabled={min_is_disabled || (is_negative_disabled && calculateDecrementedValue() < 0)}\n            decrementValue={decrementValue}\n        />;\n\n    const input_tooltip =\n        <Tooltip className={classNames('', { 'with-label': label })} alignment='left' message={has_error ? error_messages[0] : null } has_error={has_error}>\n            {!!label &&\n            <label htmlFor={name} className='input-field__label'>{label}</label>\n            }\n            {!!helper &&\n            <span className='input-field__helper'>{helper}</span>\n            }\n            {is_increment_input ?\n                <div className='input-wrapper'>\n                    {increment_buttons}\n                    {input}\n                </div>\n                :\n                input\n            }\n        </Tooltip>;\n\n    return (\n        <React.Fragment>\n            {!!prefix &&\n                <div className={classNamePrefix}>\n                    <span className={classNames(`${classNamePrefix}--symbol`, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                </div>\n            }\n            <div\n                className={classNames('input-field', className)}\n            >\n                {input_tooltip}\n            </div>\n        </React.Fragment>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className               : PropTypes.string,\n    classNameInlinePrefix   : PropTypes.string,\n    classNameInput          : PropTypes.string,\n    classNamePrefix         : PropTypes.string,\n    currency                : PropTypes.string,\n    error_messages          : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits       : PropTypes.number,\n    helper                  : PropTypes.string,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_negative_disabled    : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Button                    from '../button.jsx';\nimport { IconMinus, IconPlus }   from '../../../../Assets/Common';\n\nconst IncrementButtons = ({\n    decrementValue,\n    incrementValue,\n    max_is_disabled,\n    min_is_disabled,\n}) => (\n    <React.Fragment>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--increment'}\n            is_disabled={max_is_disabled}\n            onClick={incrementValue}\n            tabIndex='-1'\n        >\n            <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n        </Button>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--decrement'}\n            is_disabled={min_is_disabled}\n            onClick={decrementValue}\n            tabIndex='-1'\n        >\n            <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n        </Button>\n    </React.Fragment>\n);\n\nIncrementButtons.propTypes = {\n    decrementValue : PropTypes.func,\n    incrementValue : PropTypes.func,\n    max_is_disabled: PropTypes.bool,\n    min_is_disabled: PropTypes.bool,\n};\n\nexport default IncrementButtons;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Input = ({\n    changeValue,\n    checked,\n    className,\n    classNameInlinePrefix,\n    data_value,\n    data_tip,\n    display_value,\n    fractional_digits,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_incrementable,\n    is_read_only,\n    max_length,\n    name,\n    onClick,\n    onKeyPressed,\n    placeholder,\n    required,\n    type,\n}) => {\n    const onChange = (e) => {\n        /**\n         * fix for Safari\n         * we have to keep track of the current cursor position, update the value in store,\n         * then reset the cursor position to the current cursor position\n         */\n        // TODO: find better ways to target browsers\n        if (navigator.userAgent.indexOf('Safari') !== -1 && type !== 'checkbox') {\n            const cursor = e.target.selectionStart;\n            changeValue(e, (evt) => {\n                evt.target.selectionEnd = cursor; // reset the cursor position in callback\n            });\n        } else {\n            changeValue(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {!!inline_prefix &&\n            <div className={classNameInlinePrefix}>\n                <span className={classNames(classNameInlinePrefix ? `${classNameInlinePrefix}--symbol` : '', 'symbols', `symbols--${inline_prefix.toLowerCase()}`)} />\n            </div>\n            }\n            <input\n                autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n                checked={checked}\n                className={classNames(className)}\n                data-for={`error_tooltip_${name}`}\n                data-tip={data_tip}\n                data-value={data_value}\n                disabled={is_disabled}\n                id={id}\n                maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n                name={name}\n                onChange={onChange}\n                onClick={onClick}\n                onKeyDown={is_incrementable ? onKeyPressed : undefined}\n                placeholder={placeholder || undefined}\n                readOnly={is_read_only}\n                required={required || undefined}\n                type={type === 'number' ? 'text' : type}\n                value={display_value || ''}\n            />\n        </React.Fragment>\n    );\n};\n\nInput.propTypes = {\n    changeValue: PropTypes.func,\n    checked    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    data_tip             : PropTypes.string,\n    data_value           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    display_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    fractional_digits       : PropTypes.number,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onClick                 : PropTypes.func,\n    onKeyPressed            : PropTypes.func,\n    placeholder             : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Input;\n","import React                    from 'react';\nimport PropTypes                from 'prop-types';\nimport { localize }             from '_common/localize';\nimport Tooltip                  from 'App/Components/Elements/tooltip.jsx';\nimport InputField               from 'App/Components/Form/InputField';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual }           from 'Stores/Modules/Trading/Helpers/allow-equals';\n\nconst AllowEquals = ({\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    duration_unit,\n    expiry_type,\n    onChange,\n    value,\n}) => {\n    const has_callputequal_duration = hasDurationForCallPutEqual(contract_types_list,\n        duration_unit, contract_start_type);\n    const has_callputequal          = hasCallPutEqual(contract_types_list);\n\n    const has_allow_equals = isRiseFallEqual(contract_type) &&\n            ((has_callputequal_duration || expiry_type === 'endtime') && has_callputequal);\n\n    const changeValue = (e) => {\n        const { name, checked } = e.target;\n        onChange({ target: { name, value: Number(checked) } });\n    };\n\n    return (\n        has_allow_equals &&\n            <div className='allow-equals'>\n                <InputField\n                    className='allow-equals__input-field'\n                    classNameInput='allow-equals__input trade-container__input'\n                    checked={value}\n                    id='allow_equals'\n                    name='is_equal'\n                    onChange={changeValue}\n                    type='checkbox'\n                    value={value}\n                />\n                <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n                <Tooltip\n                    alignment='left'\n                    className='allow-equals__tooltip'\n                    classNameIcon='allow-equals__tooltip-info'\n                    icon='info'\n                    message={localize('Win payout if exit spot is also equal to entry spot.')}\n                />\n            </div>\n    );\n};\n\nAllowEquals.propTypes = {\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    onChange           : PropTypes.func,\n    value              : PropTypes.number,\n};\n\nexport default AllowEquals;\n","import classNames     from 'classnames';\nimport { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    IconBarrierUp,\n    IconBarrierDown } from 'Assets/Trading/Barriers';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport InputField     from 'App/Components/Form/InputField';\n\nimport { localize }   from '_common/localize';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n    \n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <IconBarrierUp className='trade-container__barriers--up' />\n                        <IconBarrierDown className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","export * from './icon-barrier-up.jsx';\nexport * from './icon-barrier-down.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierUp = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M8.5 4.207V12.5a.5.5 0 1 1-1 0V4.207L4.854 6.854a.5.5 0 1 1-.708-.708l3.5-3.5a.5.5 0 0 1 .708 0l3.5 3.5a.5.5 0 1 1-.708.708L8.5 4.207z'\n        />\n    </svg>\n);\n\nIconBarrierUp.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierUp };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierDown = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M7.5 11.793V3.5a.5.5 0 0 1 1 0v8.293l2.646-2.647a.5.5 0 1 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 11.793z'\n        />\n    </svg>\n);\n\nIconBarrierDown.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierDown };\n","export default from './duration-wrapper.jsx';\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport Duration                 from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : new_duration_value,\n        });\n    }\n\n    componentDidMount() {\n        const current_unit = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration = this.props.getDurationFromUnit(this.props.duration_unit);\n\n        if (this.props.duration_unit !== current_unit) {\n            this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: this.props.duration_unit });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${current_unit}`, value: this.props.duration });\n        }\n    }\n\n    componentWillReact() {\n        const simple_is_missing_duration_unit = !this.props.is_advanced_duration && this.props.simple_duration_unit === 'd' && this.props.duration_units_list.length === 4;\n        const current_duration_unit           = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration                = this.props.getDurationFromUnit(this.props.duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_not_type_duration     = !this.props.is_advanced_duration && this.props.expiry_type !== 'duration';\n        const advanced_has_wrong_expiry       = this.props.is_advanced_duration\n            && this.props.expiry_type !== this.props.advanced_expiry_type && this.props.duration_units_list.length > 1;\n\n        // intercept changes to current contracts duration_units_list - if they are missing change duration_unit and value in trade_store and ui_store\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n            return;\n        }\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (advanced_has_wrong_expiry) {\n            this.props.onChange({ target: { name: 'expiry_type', value: this.props.advanced_expiry_type } });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${this.props.duration_unit}`, value: this.props.duration });\n        }\n    }\n\n    render() {\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_d: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_h: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_m: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_s      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(DurationWrapper);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from '_common/localize';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    validation_errors,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        onChangeUiStore({ name: duration_name, value });\n        onChange({ target: { name, value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    let max_value, min_value;\n    if (duration_min_max[contract_expiry_type]) {\n        max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n    }\n\n    const props = {\n        shared_input: {\n            max_value,\n            min_value,\n            onChange: changeDurationValue,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n            error_messages  : validation_errors.duration || [],\n        },\n    };\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    ticks={10}\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_t      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick-steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    return (\n        <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n            <label className='range-slider__label' htmlFor='range'>\n                <input\n                    id='range'\n                    className='input trade-container__input range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='range-slider__ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '1.6rem' : '1rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span className='range-slider__caption--first'>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span className='range-slider__caption--last'>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active': (idx + 1) === parseInt(value),\n                        'range-slider__ticks-step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { IconArrow }       from 'Assets/Common';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <IconArrow className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                            // validation_errors={validation_errors.expiry_date} TODO: add validation_errors for expiry date\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default AdvancedDuration;\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\n\nconst TradingDatePicker = ({\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const moment_contract_start_date_time =\n        setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (expiry_type === 'duration') {\n        min_date_expiry.add(1, 'day');\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={validation_errors.duration || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={expiry_date}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n    })\n)(TradingDatePicker);\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }             from 'Assets/Common';\nimport InputField           from 'App/Components/Form/InputField';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from '_common/localize';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        this.setState({\n            holidays,\n            weekends,\n        });\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <IconClear\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from '_common/localize';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","export * from './calendar-days.jsx';\nexport * from './calendar-months.jsx';\nexport * from './calendar-years.jsx';\nexport * from './calendar-decades.jsx';\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { padLeft }      from '_common/string_util';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr } from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    subDays,\n    subMonths,\n    toMoment }          from 'Utils/Date';\nimport { localize }     from '_common/localize';\nimport CommonPropTypes  from './types';\nimport Tooltip          from '../../tooltip.jsx';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date)\n            || moment_date.isAfter(addDays(moment_start_date, 1)))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Tooltip\n                        alignment='top'\n                        className='calendar__cell-tooltip'\n                        classNameIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport CommonPropTypes   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\nimport { localize }          from '_common/localize';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport { month_headers }    from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date         : PropTypes.string,\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","export default from './trading-time-picker.jsx';\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime  = setTime(moment_expiry_date.clone(), market_open_times[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n    \n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","export default from './time-picker.jsx';\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../InputField';\nimport { IconClock }     from '../../../../Assets/Common/icon-clock.jsx';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={selected_time}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <IconClock className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h);\n                            const start_time_reset_minute = start_time_moment.clone().minute(0);\n                            const is_hour_enabled = to_compare_moment.isBetween(\n                                start_time_reset_minute,\n                                end_time_moment);\n                            const is_minute_enabled = to_compare_moment.isBetween(\n                                start_time_moment,\n                                end_time_moment,\n                                'minute');\n                            const is_enabled = is_hour_enabled && is_minute_enabled;\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute(Math.round(time.minute() / interval) * interval);\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    let value = selected_time.isBefore(market_open_time)\n        ? market_open_time.isBefore(server_time)\n            ? server_time\n            : market_open_time\n        : selected_time;\n\n    value = getClosestTime(value, 5);\n    return value.format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit: PropTypes.func,\n    duration_t        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n};\n\nexport default SimpleDuration;\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile-widget.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-container'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full-screen-dialog.jsx';\nimport TradeParams      from '../../Containers/trade-params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","export LastDigitPrediction from './last-digit-prediction.jsx';\n","import { observer }       from 'mobx-react';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport DigitDisplay       from './digit-display.jsx';\nimport LastDigitParticles from './last-digit-particles.jsx';\nimport LastDigitPointer   from './last-digit-pointer.jsx';\n\nconst display_array = Array.from(Array(10).keys()); // digits array [0 - 9]\nclass LastDigitPrediction extends React.Component {\n    state = {};\n\n    componentDidMount() {\n        this.node.querySelectorAll('.digits__digit').forEach((el, idx) => {\n            // get offsetLeft of each Digits\n            this.setState({\n                [idx]: el.offsetLeft,\n            });\n        });\n    }\n\n    getBarrier = (num) => {\n        const  { barrier, contract_type } = this.props;\n\n        const barrier_map = {\n            DIGITMATCH: (val) => val === barrier,\n            DIGITDIFF : (val) => val !== barrier,\n            DIGITOVER : (val) => val > barrier,\n            DIGITUNDER: (val) => val < barrier,\n            DIGITODD  : (val) => val % 2,\n            DIGITEVEN : (val) => !(val % 2),\n        };\n\n        return barrier_map[contract_type](num) ? num : null;\n    };\n\n    render() {\n        const { digits_info, is_ended, is_trade_page, status } = this.props;\n        const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n        const latest_digit = digits_array.slice(-1)[0] || {};\n\n        // 'won' or 'lost' status exists after contract expiry\n        const is_won  = is_ended && status === 'won';\n        // need to explicitly have is_lost condition here\n        // because negating is_won would always be true,\n        // but we only need is_lost condition only once we have the 'won' or 'lost' status\n        const is_lost = is_ended && status === 'lost';\n\n        const position = this.state[latest_digit.digit];\n\n        return (\n            <div\n                ref={node => this.node = node}\n                className='digits'\n            >\n                { display_array.map((idx) => (\n                    <DigitDisplay\n                        barrier={this.getBarrier(idx)}\n                        is_lost={is_lost}\n                        is_trade_page={is_trade_page}\n                        is_won={is_won}\n                        key={idx}\n                        latest_digit={latest_digit}\n                        value={idx}\n                    />\n                ))}\n                { latest_digit.digit >= 0 &&\n                    <LastDigitPointer\n                        is_lost={is_lost}\n                        is_won={is_won}\n                        position={position}\n                    />\n                }\n                <LastDigitParticles\n                    is_won={is_won}\n                    position={position}\n                />\n            </div>\n        );\n    }\n}\n\nLastDigitPrediction.propTypes = {\n    barrier      : PropTypes.number,\n    contract_type: PropTypes.string,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n    status       : PropTypes.string,\n};\n\nexport default observer(LastDigitPrediction);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Digit        from './digit.jsx';\nimport DigitSpot    from './digit-spot.jsx';\n\nconst DigitDisplay = ({\n    barrier,\n    is_lost,\n    is_trade_page,\n    is_won,\n    latest_digit,\n    value,\n}) => {\n    const { digit, spot } = latest_digit;\n    const is_latest       = value === digit;\n    const is_selected     = value === barrier;\n\n    return (\n        <div\n            className={classNames('digits__digit', {\n                'digits__digit--win' : is_won && is_latest,\n                'digits__digit--loss': is_lost && is_latest,\n            })}\n        >\n            { is_latest && spot &&\n                <DigitSpot\n                    current_spot={spot}\n                    is_lost={is_lost}\n                    is_won={is_won}\n                />\n            }\n            <Digit\n                is_latest={is_latest}\n                is_lost={is_lost}\n                is_trade_page={is_trade_page}\n                is_selected={is_selected}\n                is_won={is_won}\n                value={value}\n            />\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    barrier      : PropTypes.number,\n    is_lost      : PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won       : PropTypes.bool,\n    latest_digit : PropTypes.object,\n    value        : PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Digit = ({\n    is_latest,\n    is_lost,\n    is_selected,\n    is_trade_page,\n    is_won,\n    value,\n}) => (\n    <span\n        className={classNames('digits__digit-value', {\n            'digits__digit-value--latest'  : is_latest,\n            'digits__digit-value--selected': is_selected,\n            'digits__digit-value--blink'   : is_won && is_latest && is_trade_page,\n            'digits__digit-value--win'     : is_won && is_latest,\n            'digits__digit-value--loss'    : is_lost && is_latest,\n        })}\n    >\n        {value}\n    </span>\n);\n\nDigit.propTypes = {\n    is_latest    : PropTypes.bool,\n    is_lost      : PropTypes.bool,\n    is_selected  : PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won       : PropTypes.bool,\n    value        : PropTypes.number,\n};\n\nexport default Digit;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst DigitSpot = ({\n    current_spot,\n    is_lost,\n    is_won,\n}) => (\n    <div className='digits__digit-spot'>\n        <span className='digits__digit-spot-value'>\n            {current_spot.slice(0, -1)}\n        </span>\n        <span\n            className={classNames('digits__digit-spot-last', {\n                'digits__digit-spot-last--win' : is_won,\n                'digits__digit-spot-last--loss': is_lost,\n            })}\n        >\n            {current_spot.slice(-1)}\n        </span>\n    </div>\n);\n\nDigitSpot.propTypes = {\n    current_spot: PropTypes.string,\n    is_lost     : PropTypes.bool,\n    is_won      : PropTypes.bool,\n};\n\nexport default DigitSpot;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst LastDigitParticles = ({\n    is_won,\n    position,\n}) => (\n    <div\n        className={classNames('digits__particles', {\n            'digits__particles--explode': is_won,\n        })}\n        style={{ marginLeft: position }}\n    >\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n    </div>\n);\n\nLastDigitParticles.propTypes = {\n    is_won  : PropTypes.bool,\n    position: PropTypes.number,\n};\n\nexport default LastDigitParticles;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst LastDigitPointer = ({\n    is_lost,\n    is_won,\n    position,\n}) => (\n    <span\n        className='digits__pointer'\n        style={{ marginLeft: position }}\n    >\n        <IconPriceMove\n            className={classNames('digits__icon', {\n                'digits__icon--win' : is_won,\n                'digits__icon--loss': is_lost,\n            })}\n            classNamePath='digits__icon-color'\n            type='profit'\n        />\n    </span>\n);\n\nLastDigitPointer.propTypes = {\n    is_lost : PropTypes.bool,\n    is_won  : PropTypes.bool,\n    position: PropTypes.number,\n};\n\nexport default LastDigitPointer;\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxExpired  from './info-box-expired.jsx';\nexport InfoBoxGeneral  from './info-box-general.jsx';\nexport InfoBoxLongcode from './info-box-longcode.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport SellInfo     from '../Sell/sell-info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining-time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract-sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell-button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='btn--secondary btn--secondary--green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { IconFlag } from 'Assets/Common';\n\nconst InfoBoxLongcode = ({\n    contract_info,\n}) => (\n    <div className='info-box-longcode'>\n        <IconFlag className='info-box-longcode-icon' />\n        <span className='info-box-longcode-text'>{contract_info.longcode}</span>\n    </div>\n);\n\nInfoBoxLongcode.propTypes = {\n    longcode: PropTypes.string,\n};\n\nexport default observer(InfoBoxLongcode);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport IconContractClose from '../../../Assets/Contract/icon-contract-close.jsx';\n\nconst ChartCloseBtn = ({\n    is_contract_mode,\n    onClose,\n}) => {\n    if (!is_contract_mode) return null;\n    return (\n        <div\n            className='chart-close-btn'\n            onClick={onClose}\n        >\n            <IconContractClose\n                className='ic-chart-close'\n            />\n        </div>\n    );\n};\n\nChartCloseBtn.propTypes = {\n    is_contract_mode: PropTypes.bool,\n    onClose         : PropTypes.func,\n};\n\nexport default ChartCloseBtn;\n","import classNames from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconContractClose = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='32' height='32' viewBox='0 0 32 32'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n        <path className={classNamePath || 'color1-fill'}  fill='#7F8397' fillRule='nonzero' d='M16 14.586l-4.293-4.293a1 1 0 0 0-1.414 1.414L14.586 16l-4.293 4.293a1 1 0 0 0 1.414 1.414L16 17.414l4.293 4.293a1 1 0 0 0 1.414-1.414L17.414 16l4.293-4.293a1 1 0 0 0-1.414-1.414L16 14.586zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z' />\n    </svg>\n\n);\n\nIconContractClose.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport default IconContractClose;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport UILoader           from 'App/Components/Elements/ui-loader.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='login-prompt__icon-svg disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu-drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='header__menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer-item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('drawer__parent-item', {\n            'drawer__parent-item--show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer__items', {\n            'drawer__items--show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer__item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <SwitchButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst SwitchButton = ({ style, toggled }) => {\n    const toggle_style = style || 'switch-button';\n    const icon_class = classNames(toggle_style, {\n        [`${toggle_style}--toggled`]: toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nSwitchButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default SwitchButton;\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('header__navbar-icons', `header__navbar-icons--${icon_class}`);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_positions_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePositionsDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer__items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer__icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer__icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer__icon' />}\n                    link_to={routes.statement}\n                />\n                <hr className='hr' />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer__footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer__icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_positions_drawer_on) {\n                        togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePositionsDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { EmptyNotification } from './empty-notification.jsx';\nimport { DrawerItem }        from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <EmptyNotification />\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    list: PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport { IconBell } from 'Assets/Header/NavBar';\n\nconst EmptyNotification = () => (\n    <div className='drawer__no-notifications-container'>\n        <div className='drawer__no-notifications'>\n            <div className='drawer__bell'>\n                <IconBell className='drawer__bell-icon' />\n            </div>\n            <div>\n                <h4 className='drawer__no-notifications-header'>{localize('No Notifications')}</h4>\n                <span className='drawer__no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n            </div>\n        </div>\n    </div>\n);\n\nexport { EmptyNotification };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    // IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='header__icon' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    // {\n    //     icon      : <IconStatement className='header__icon' />,\n    //     text      : localize('Reports'),\n    //     link_to   : routes.statement,\n    //     login_only: true,\n    // },\n];\n\nexport default header_links;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconError } from 'Assets/Common/icon-error.jsx';\nimport { localize }  from '_common/localize';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error__container'>\n            <IconError type={type} />\n            <p className='error__message'>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","export default from './denial-of-service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\nimport Button     from 'App/Components/Form/button.jsx';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='full-page-modal__dialog'>\n                    <h1 className='full-page-modal__header'>{title}</h1>\n                    <p className='full-page-modal__content'>{children}</p>\n                    <div className='full-page-modal__footer'>\n                        <Button\n                            className={classNames('full-page-modal__button', 'btn--secondary btn--secondary--orange')}\n                            has_effect\n                            text={cancel_button_text}\n                            onClick={onCancel}\n                        />\n                        <Button\n                            className={classNames('full-page-modal__button', 'btn--primary btn--primary--orange')}\n                            has_effect\n                            text={confirm_button_text}\n                            onClick={onConfirm}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register-service-worker';\nexport { unregister } from './register-service-worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}