{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker_input.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_panel.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_logout","forEach","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_close","_icon_exclamation","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","Button","_ref$className","className","has_effect","id","is_disabled","onClick","text","wrapperClassName","classes","button","_react2","default","disabled","wrapper","string","bool","func","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_date_time","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_localize","_Services","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","_time$split","split","_time$split2","_slicedToArray","moment","utc","isNaN","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","symbol","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getExpiryDate","expiry_date","moment_start","moment_expiry","isBefore","isAfter","clone","add","getExpiryTime","start_time","expiry_time","_moment2","end_moment","end_time","isSameOrBefore","is_end_of_day","is_end_of_session","getSessions","option","getStartTime","getContractCategories","contract_types_list","Fieldset","header","icon","onMouseEnter","onMouseLeave","tooltip","field_left_class","_classnames2","_tooltip2","alignment","message","array","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","loading_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","Tooltip","icon_name","icon_class","data-tooltip","data-tooltip-pos","node","_fill_template","Localize","str","replacers","localized","fillTemplate","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","duration","payout","theme","is_dark_mode_on","portfolio_drawer","is_portfolio_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","unit","max","duration_maps","u","sort","b","from_unit","to_unit","parseInt","duration_string","match","getExpiryType","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","CalendarPanelTypes","calendar_date","calendar_view","date_format","isPeriodDisabled","max_date","min_date","selected_date","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","some","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","ASIANU","ASIAND","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","_icon_trade_types","InputField","error_messages","fractional_digits","helper","is_float","_ref$is_signed","is_signed","label","max_length","onChange","placeholder","prefix","required","has_error","has_valid_length","input","data-for","data-tip","maxLength","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","htmlFor","MobxPropTypes","arrayOrObservableArray","_icon_maximize","_icon_quick_portfolio","_icon_settings","_ui","_connect","_Date","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_ref2","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","open","close","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","non_proposal_query_string_variable","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconClose","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","_PopConfirm","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","_button2","stake","is_purchase_error","echo_req","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","contract_title","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","renderCards","_ref3","CalendarButton","is_hidden","TimePickerDropdown","selectOption","_this$props$value$spl","_this$props$value$spl2","prev_hour","prev_minute","is_type_selected","setState","last_updated_type","stopPropagation","resetValues","state","is_hour_selected","is_minute_selected","prevProps","prevState","_state","toggle","_props","preClass","start_moment_clone","_value$split","_value$split2","is_clearable","saveHourRef","is_enabled","saveMinuteRef","mm","TimePicker","toggleDropDown","is_open","handleChange","arg","saveRef","nodeName","wrapper_ref","target_element","handleClickOutside","contains","_props2","is_align_right","padding","prefix_class","readOnly","value_split","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_money2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","_toggle_button2","toggled","ToggleButton","toggle_style","_icon_logout","InkBar","inkbar_style","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","_Types","ContractTypeCell","IconTradeType","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","ServerTime","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","valueOf","landing_company_name","updateAccountList","account_list","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","upgrade_info","getBasicUpgradeInfo","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCryptocurrency","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","currentLanguage","getAllowedLanguages","exclude_languages","getAll","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","toMoment","epoch","convertToUnix","moment_obj","setTime","formatDate","daysFromTodayTo","diff","asDays","seconds","formatted_str","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","underlying","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","subtract","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","time_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor31","changeDurationValidationRules","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","getProposalInfo","setChartBarrier","query_params","duration_options","_ref5","_callee4","_context4","refresh","prepareTradeStore","abrupt","_x3","runInAction","_callee6","_context6","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","set_query_string","getQueryParams","_x","_x2","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","_proposal_response$ec","Duration","StartDate","getMethodsList","fnc","extendOrReplace","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_date","obj_expiry_time","obj_duration_min_max","ask_price","returns","toFixed","display_value","new_req","createProposalRequestForContract","current_req","isDeepEqual","type_of_contract","obj_expiry","isSame","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_theme_wrapper2","_header2","_error_boundary2","_app_contents2","_routes2","_PortfolioDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","PortfolioDrawer","toggleDrawer","body_content","_empty_portfolio_message2","_portfolio_drawer_card2","portfolio-drawer--open","_simplebarReact2","togglePortfolioDrawer","IconArrow","IconBack","transform","IconBell","stroke","IconCashier","rx","IconHamburger","strokeLinecap","IconTrade","PortfolioDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","SmartChart","form_wrapper_class","Suspense","fallback","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","setWrapperRef","is_dialog_open","getDisplayText","_this$props","findInArray","getStyles","container_classes","tabIndex","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","ContractTypeItem","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","ContractInfo","icon_type","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_DropDown2","_input_field2","observableObject","Dropdown","onKeyPressed","getItemFromValue","getValueFromIndex","curr_index","is_list_visible","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","onKeyDown","isArrayLike","Items","highlightedIdx","items","expiry_list","now_date","min_date_duration","max_date_duration","min_date_expiry","min_day","max_day","start_date_time","moment_now","new_min_day","new_max_day","moment_today","startOf","is_same_day","date_time","_start_time$split","_start_time$split2","moment_start_date_time","duration_unit_text","datepicker_footer","has_end_time","expiry","pop","endtime_container_class","has-time","_DatePicker2","is_read_only","has_today_btn","_time_picker2","DatePicker","is_datepicker_visible","is_close_btn_visible","onClickOutside","mainNode","updateDatePickerValue","onSelectCalendar","isValid","onChangeInput","clearDatePickerInput","calendar","resetCalendar","new_date","current_date","_this$props2","nativeEvent","defaultValue","_date_picker_input2","class_name","_Calendar2","onSelect","defaultProps","Calendar","DatePickerInput","_initialiseProps","_calendar_header2","navigators","calendarViews","_calendar_panel2","panelSelectors","_calendar_footer2","setToday","nextMonth","navigateTo","previousMonth","nextYear","previousYear","nextDecade","previousDecade","nextCentury","previousCentury","updateSelectedDate","month","updateSelected","year","decade","is_add","_props3","moment_date","dataset","is_before","is_after","formatted_date","_props4","default_date","_props5","now","_props6","start_of_period","endOf","CalendarFooter","_calendar_button2","role","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","CalendarPanel","_panels","calendar_panel","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","week_headers","days","dates","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","first_day","last_day","moment_min_date","moment_max_date","moment_selected","padLeft","moment_start_date","is_active","is_today","today","data-date","getDays","selected_month","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","data-month","selected_year","current_year","years","data-year","decades","min_year","max_year","range","_range$split","_range$split2","start_year","end_year","data-decade","last_digit_numbers","current_date_config","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","msg","_localize3","_icon_error2","shape","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","last","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","SellInfo","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","_close_button2","CloseButton","ToastMessage","toast","_ToastMessage2","arrayOf","AppContents","app-contents--show-portfolio-drawer","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","NetworkStatus","_server_time2","TogglePortfolio","ToggleFullScreen","ToggleSettings","is_settings_visible","is_language_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_portfolio","_toggle_settings","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconQuickPortfolio","IconSettings","toggle_portfolio_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","LoginButton","ToggleNotificationsDrawer","account_title","_account_info","_install_pwa_button","_login_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","_localize2","AccountSwitcher","_account_switcher","_upgrade_button","_Drawer","accounts_toggle_btn","doSwitch","UpgradeButton","IconLogout","account_switcher","prompt","userChoice","choice_result","outcome","_InkBar2","_inkbar","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","offsetWidth","active_el","Switch","_route_with_sub_routes2","LoginPrompt","onSignup","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","Notifications","_notifications","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","_Routes2","virtual_account_loginid","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"101c068b5ee36d38bdc1\",\"account_password\":\"449937d73eed8903ea65\",\"api_toke\":\"2ff326d47213a01fcf17\",\"authorized_application\":\"3588d5e2ccf2984a5cef\",\"cashier_password\":\"828328e67369556c7ca8\",\"contract\":\"f0fd9c9f8d0cbac6ae76\",\"financial_assessment\":\"f385ea58f7a356d7054d\",\"limits\":\"ae2345903bf414051d41\",\"login_history\":\"6b92e844ba1640e37304\",\"personal_details\":\"c8fa7ae3edc76910a548\",\"portfolio\":\"570dbf794e2b668852b4\",\"self_exclusion\":\"e4af408062e6caca9c88\",\"settings\":\"e509112b31feba7b23ef\",\"statement\":\"92e1e6559934c6a0d541\",\"vendors~smart_chart\":\"9d5c53ecacca2828062b\",\"smart_chart\":\"d54ec39a3b2fbc1219eb\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([279,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties));\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n\n}\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","export * from './date_time';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import moment                    from 'moment';\nimport { localize }              from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }           from '_common/utility';\nimport { WS }                    from 'Services';\nimport { buildBarriersConfig }   from './barrier';\nimport { buildDurationConfig }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }         from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }          from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = time.split(':');\n        return moment.utc(isNaN(date) ? date : +date * 1000).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: getValidTime(sessions, buildMoment(start_date, start_time)),\n    });\n\n    const getExpiryDate = (expiry_date, start_date) => {\n        const moment_start  = moment.utc(start_date ? start_date * 1000 : undefined);\n        const moment_expiry = moment.utc(expiry_date || undefined);\n        // forward starting contracts should only show today and tomorrow as expiry date\n        const is_invalid = moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n        return {\n            expiry_date: (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD'),\n        };\n    };\n\n    // has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is after start time\n    const getExpiryTime = (sessions, start_date, start_time, expiry_date, expiry_time) => {\n        const start_moment = start_date ? buildMoment(start_date, start_time) : moment().utc();\n        const end_moment   = buildMoment(expiry_date, expiry_time);\n\n        let end_time = expiry_time;\n        if (sessions && !isSessionAvailable(sessions, end_moment)) {\n            end_time = getValidTime(sessions, end_moment, start_moment);\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n            const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n            end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n        }\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getExpiryDate,\n        getExpiryTime,\n        getSessions,\n        getStartTime,\n        getStartType,\n\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const field_left_class = classNames('field-info left', { icon }, icon);\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className='fieldset-header'>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && moment.utc(expiry_date).isAfter(moment(server_time).utc(), 'day');\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n","export default from './dropdown.jsx';\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","export * from './icon_trade_types.jsx';\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    className,\n    error_messages,\n    fractional_digits,\n    helper,\n    is_disabled,\n    is_float,\n    is_signed = false,\n    label,\n    max_length,\n    name,\n    onChange,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const input =\n        <input\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-tip\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onChange={changeValue}\n            placeholder={placeholder || undefined}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value}\n        />;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                { input }\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.string,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import moment from 'moment';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: moment.unix(option.open).utc(), close: moment.unix(option.close).utc() };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : moment.unix(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = moment.utc(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = moment.utc(),\n    start_moment           = moment.utc(),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, undefined, should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(should_only_check_hour ? session.open.clone().minute(0) : session.open, session.close, null, '[]')))\n);\n","// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'last_digit',\n    'start_date',\n    'symbol',\n];\n\nexport const non_proposal_query_string_variable = [\n    'contract_start_type',\n    'expiry_type',\n];\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from '_common/localize';\nimport { isEmptyObject }          from '_common/utility';\nimport { PopConfirm }             from 'App/Components/Elements/PopConfirm';\nimport UILoader                   from 'App/Components/Elements/ui_loader.jsx';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Fieldset                   from 'App/Components/Form/fieldset.jsx';\nimport { connect }                from 'Stores/connect';\nimport ContractInfo               from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox                 from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock               from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    barrier_count,\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green'\n                has_effect\n                text={localize('Purchase')}\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            />\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            barrier_count={barrier_count}\n                            contract_title={trade_types[type]}\n                            contract_type={type}\n                            currency={currency}\n                            proposal_info={info}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    barrier_count             : PropTypes.number,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        barrier_count             : modules.trade.barrier_count,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nexport default function CalendarButton({ children, className, is_hidden, label, onClick }) {\n    return (\n        <React.Fragment>\n            { !is_hidden &&\n                <span\n                    type='button'\n                    className={className}\n                    onClick={onClick}\n                >\n                    {label}\n                    {children}\n                </span>\n            }\n        </React.Fragment>\n    );\n}\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n","import {\n    observer,\n    PropTypes as MobxPropTypes }      from 'mobx-react';\nimport moment                         from 'moment';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { localize }                   from '_common/localize';\nimport { isSessionAvailable }         from 'Stores/Modules/Trading/Helpers/start_date';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = moment(start_date * 1000 || undefined).utc();\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <input\n                                    ref={this.saveRef}\n                                    type='text'\n                                    readOnly\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.number,\n    value          : PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.number,\n    toggle      : PropTypes.func,\n    value       : PropTypes.string,\n    value_split : PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","export * from './icon_logout.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <IconPortfolio className='portfolio-empty__icon' />\n        <span className='portfolio-empty__text'>{localize('No open positions.')}</span>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n\n// TODO Remove the below comments\n/**\n * The below lines are not necessary anymore since we are using `defer` in script tags.\n * It tells the browser to download the scripts without blocking the HTML parsing and\n * execute them after parsing is completely finished in the order they appear in the HTML.\n * Please let me know if you think we need to listen to this two events; otherwise, I will remove them totally in the next PR.\n */\n\n// document.addEventListener('DOMContentLoaded', initApp);\n// window.addEventListener('pageshow', (e) => { // Safari doesn't fire load event when using back button\n//     if (e.persisted) {\n//         initApp();\n//     }\n// });\n","var map = {\n\t\"./ja\": 218,\n\t\"./ja.js\": 218\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 487;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base_store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            id !== this.loginid &&\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid      = LocalStore.get('active_loginid');\n        this.accounts     = LocalStore.getObject(storage_key);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.switched     = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }                                                                                                                                                 from './Helpers/chart_barriers';\nimport { createChartMarkers }                                                                                                                                                 from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const toMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nconst setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time.split(':');\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => moment(date || undefined, date_format).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = moment(date).utc().diff(moment().utc(), 'days');\n    return (!date || diff < 0) ? '' : diff + 1;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format_response';\nimport BaseStore                        from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject }                      from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    non_proposal_query_string_variable } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '09:40';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = '12:30';\n    @observable sessions         = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...non_proposal_query_string_variable,\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type = response.echo_req.contract_type;\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${param_object.toString()}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, query_string);\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall  : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low   : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch      : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end        : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay       : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian      : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd   : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call    : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put     : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low: { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize } from '_common/localize';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom', { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract_type';\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n\n    getMethodsList(store, new_state).forEach((fnc) => {\n        extendOrReplace(snapshot, fnc(snapshot));\n    });\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    Duration.onChangeExpiry,\n    StartDate.onChangeStartDate,\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = (store) => {\n    const { contract_type, start_date, duration_unit, expiry_time } = store;\n    let { start_time, expiry_date } = store;\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_date = ContractType.getExpiryDate(expiry_date, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    const obj_expiry_time = ContractType.getExpiryTime(sessions, start_date, start_time, expiry_date, expiry_time);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n    };\n};\n","import moment                                                                   from 'moment';\nimport { getDecimalPlaces }                                                     from '_common/base/currency_base';\nimport { isDeepEqual }                                                          from '_common/utility';\nimport { convertToUnix }                                                        from 'Utils/Date';\nimport { proposal_properties_alternative_names, removable_proposal_properties } from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response) => {\n    const proposal = response.proposal || {};\n    const profit   = (proposal.payout - proposal.ask_price) || 0;\n    const returns  = profit * 100 / (proposal.ask_price || 1);\n\n    return {\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake    : proposal.display_value,\n        payout   : proposal.payout,\n        id       : proposal.id || '',\n        message  : proposal.longcode || response.error.message,\n        has_error: !!response.error,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = moment.utc(store.expiry_date);\n        const start_date  = moment.unix(store.start_date || (store.root_store.common.server_time / 1000)).utc();\n        const is_same_day = expiry_date.isSame(start_date, 'day');\n        const expiry_time = is_same_day ? store.expiry_time : '23:59:59';\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport SimpleBar                      from 'simplebar-react';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                <div className='portfolio-drawer__header'>\n                    <span className='portfolio-drawer__icon-main ic-portfolio' />\n                    <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                    <div\n                        className='portfolio-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconClose />\n                    </div>\n                </div>\n                <div className='portfolio-drawer__body'>\n                    <SimpleBar style={{ height: '100%' }}>\n                        {body_content}\n                    </SimpleBar>\n                </div>\n            </div>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='8' width='10' height='1' rx='.5' />\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82l-2.137-1.71z' fillRule='nonzero' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' fillRule='nonzero' />\n                    </g>\n\n                );\n                break;\n            case 'call':\n                IconType = (\n                    <g fill='#2A3052'>\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82 3.812 8.11z' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' />\n                    </g>\n\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 6.75h-4v-1.5h4L4.5 4H6l1.5 2L6 8H4.5l1-1.25zM10.5 11.75h4v-1.5h-4l1-1.25H10l-1.5 2 1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M2.698 9.5H.218v-.537L1.36 7.762c.281-.32.422-.576.422-.764 0-.153-.033-.27-.1-.35-.067-.08-.163-.12-.29-.12a.362.362 0 0 0-.306.16.657.657 0 0 0-.117.4H.144A1.167 1.167 0 0 1 .762 6.05c.193-.104.41-.156.65-.156.383 0 .68.089.887.266.207.178.31.432.31.764 0 .14-.025.277-.077.41a1.793 1.793 0 0 1-.243.417 6.12 6.12 0 0 1-.531.584l-.46.53h1.4V9.5zM9.107 8.194h.47v.825h-.47V10h-1.07v-.98H6.252l-.064-.655 1.85-2.977v-.01h1.07v2.816zm-1.9 0h.83V6.772l-.066.108-.765 1.314zM15.205 5.894v.647h-.037c-.308 0-.56.074-.758.221a.933.933 0 0 0-.365.614.962.962 0 0 1 .703-.273c.308 0 .553.112.735.336.182.225.273.52.273.884 0 .226-.053.434-.16.623a1.141 1.141 0 0 1-.446.443c-.192.107-.404.16-.636.16-.253 0-.478-.058-.677-.172a1.183 1.183 0 0 1-.463-.492 1.62 1.62 0 0 1-.171-.738v-.33c0-.365.078-.695.235-.987.157-.292.381-.52.673-.687.291-.166.614-.249.97-.249h.124zm-.743 1.838a.47.47 0 0 0-.437.262v.246c0 .45.156.674.467.674.125 0 .23-.056.313-.168a.687.687 0 0 0 .126-.423.674.674 0 0 0-.128-.426.41.41 0 0 0-.34-.165z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 8.75H2v-1.5h3.5L4.5 6H6l1.5 2L6 10H4.5l1-1.25zM10.5 8.75H14v-1.5h-3.5l1-1.25H10L8.5 8l1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M2.041 9.5h-.825V6.873l-.81.237v-.625l1.56-.54h.075zM7.26 7.242h.505c.4 0 .6-.196.6-.587a.508.508 0 0 0-.143-.373c-.096-.096-.23-.145-.403-.145a.58.58 0 0 0-.37.124.378.378 0 0 0-.157.308h-1.07c0-.243.068-.46.203-.65.136-.191.323-.34.564-.446.24-.107.504-.16.792-.16.514 0 .918.117 1.212.352.294.234.441.557.441.968 0 .198-.06.386-.182.563a1.3 1.3 0 0 1-.532.43c.245.089.438.224.578.405.14.18.21.404.21.67 0 .414-.16.744-.477.991-.317.248-.734.371-1.25.371a2.05 2.05 0 0 1-.843-.172 1.32 1.32 0 0 1-.589-.48 1.246 1.246 0 0 1-.2-.696h1.076c0 .141.057.264.171.368a.605.605 0 0 0 .423.155.634.634 0 0 0 .45-.157.525.525 0 0 0 .168-.401c0-.233-.058-.398-.174-.495-.116-.098-.277-.146-.482-.146H7.26v-.797zM13.266 7.762l.217-1.817h2.078v.64h-1.409l-.08.706a.973.973 0 0 1 .23-.09c.096-.027.189-.04.28-.04.353 0 .625.105.814.314.19.209.285.502.285.88 0 .228-.051.434-.153.619a1.049 1.049 0 0 1-.428.426c-.184.1-.402.149-.652.149-.223 0-.432-.046-.628-.138a1.126 1.126 0 0 1-.459-.379.92.92 0 0 1-.163-.543h.825c.008.13.05.234.124.31a.395.395 0 0 0 .296.115c.277 0 .415-.205.415-.615 0-.38-.17-.569-.508-.569-.192 0-.335.062-.43.186l-.654-.154z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g transform='matrix(1 0 0 -1 0 16)' fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='#2A3052' fillRule='nonzero'>\n                        <path d='M9.839 9.87a.5.5 0 0 0 .707 0l2.019-2.019a.5.5 0 1 0-.707-.707l-1.666 1.665-3.794-3.793a.5.5 0 0 0-.707 0l-.454.454-.823-.824a.5.5 0 1 0-.707.708L4.884 6.53a.5.5 0 0 0 .707 0l.454-.454L9.839 9.87z' />\n                        <path d='M12.428 8.79a.5.5 0 1 0 1 0V6.667a.5.5 0 0 0-.5-.5h-2.12a.5.5 0 1 0 0 1h1.62v1.621zM3 11.7h10.5a.5.5 0 1 0 0-1H3a.5.5 0 1 0 0 1z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='stroke-white' d='M3 4h10.5' stroke='#2A3052' strokeLinecap='round' />\n                        <path d='M11.074 5.454a.5.5 0 0 0-.707-.708L5.924 9.191a.5.5 0 0 0 .041.744l.953.762-1.272 1.272a.5.5 0 0 0 .707.707l1.666-1.667a.5.5 0 0 0-.04-.744l-.953-.762 4.048-4.05z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M11.263 4.556l.034 3.944H10.282V6.26l-.676-.76H7.34v-.944z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='6.5' width='10' height='1' rx='.5' />\n                        <path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' fillRule='nonzero' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'put':\n                IconType = (\n                    <g fill='#2A3052'><path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconArrow }         from 'Assets/Common';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <IconArrow className='select-arrow' />\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst ContractInfo = ({\n    barrier_count,\n    contract_title,\n    contract_type,\n    currency,\n    proposal_info,\n}) => {\n    const icon_type = `${contract_type}${/^(call|put)$/i.test(contract_type) && barrier_count > 0 ? '_barrier' : ''}`.toLowerCase();\n\n    return (\n        <div className='box'>\n            <div className='left-column'>\n                <div className='type-wrapper'>\n                    <IconTradeType type={icon_type} className='type' />\n                </div>\n                <h4 className='trade-type'>{contract_title}</h4>\n            </div>\n            {(proposal_info.has_error || !proposal_info.id) ?\n                <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                    <span>{proposal_info.message}</span>\n                </div>\n                :\n                <div className='purchase-info-wrapper'>\n                    <span className='purchase-tooltip'>\n                        <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                    </span>\n                    <div className='info-wrapper'>\n                        <div>{localize('Stake')}:</div>\n                        <div><Money amount={proposal_info.stake} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Payout')}:</div>\n                        <div><Money amount={proposal_info.payout} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Net Profit')}:</div>\n                        <div><Money amount={proposal_info.profit} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Return')}:</div>\n                        <div>{proposal_info.returns}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    barrier_count : PropTypes.number,\n    contract_title: PropTypes.string,\n    contract_type : PropTypes.string,\n    currency      : PropTypes.string,\n    proposal_info : PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { localize }              from '_common/localize';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input_field.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !is_single_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages = {validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport SimpleBar         from 'simplebar-react';\nimport { IconArrow }     from 'Assets/Common';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex,\n}  from './helpers';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n            curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    onKeyPressed = (event) => {\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    tabIndex='0'\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            <SimpleBar style={{ 'height': '100%' }}>\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list-label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </SimpleBar>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''} ${highlightedIdx === idx ? 'highlighted' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport moment                   from 'moment';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Datepicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport { convertDurationUnit }  from 'Stores/Modules/Trading/Helpers/duration';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst expiry_list = [\n    { text: localize('Duration'), value: 'duration' },\n];\n\nlet now_date,\n    min_date_duration,\n    max_date_duration,\n    min_date_expiry,\n    min_day,\n    max_day,\n    start_date_time;\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n}) => {\n    if (duration_min_max[contract_expiry_type]) {\n        const moment_now  = moment(server_time);\n        const new_min_day = convertDurationUnit(duration_min_max[contract_expiry_type].min, 's', 'd');\n        const new_max_day = convertDurationUnit(duration_min_max[contract_expiry_type].max, 's', 'd');\n        if (!now_date || moment_now.date() !== now_date.date() || (duration_unit === 'd' && (min_day !== new_min_day || max_day !== new_max_day))) {\n            if (duration_unit === 'd') {\n                min_day = new_min_day;\n                max_day = new_max_day;\n            }\n\n            const moment_today = moment_now.clone().startOf('day');\n\n            now_date          = moment_now.clone();\n            min_date_duration = moment_today.clone().add(min_day || 1, 'd');\n            max_date_duration = moment_today.clone().add(max_day || 365, 'd');\n            min_date_expiry   = moment_today.clone();\n        }\n    }\n\n    const moment_expiry = moment.utc(expiry_date);\n    const is_same_day   = moment_expiry.isSame(moment(start_date * 1000 || undefined).utc(), 'day');\n    if (is_same_day) {\n        const date_time = moment.utc(start_date * 1000 || undefined);\n        if (start_date) {\n            const [ hour, minute ] = start_time.split(':');\n            date_time.hour(hour).minute(minute).second(0).add(5, 'minutes');\n        }\n        // only update start time every five minutes, since time picker shows five minute durations\n        const moment_start_date_time = moment.unix(start_date_time);\n        if (!start_date_time || moment_start_date_time.isAfter(date_time) || moment_start_date_time.clone().add(5, 'minutes').isBefore(date_time) ||\n            (moment_start_date_time.minutes() !== date_time.minutes() && date_time.minutes() % 5 === 0)) {\n            start_date_time = date_time.unix();\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n    const datepicker_footer = min_day > 1 ?\n        localize('The minimum duration is [_1] days', [min_day]) :\n        localize('The minimum duration is [_1] day',  [min_day]);\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_same_day,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        {duration_unit === 'd' && !is_nativepicker ?\n                            <Datepicker\n                                name='duration'\n                                min_date={min_date_duration}\n                                max_date={max_date_duration}\n                                mode='duration'\n                                onChange={onChange}\n                                value={duration || min_day}\n                                is_read_only\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                footer={datepicker_footer}\n                            /> :\n                            <InputField\n                                type='number'\n                                name='duration'\n                                value={duration}\n                                onChange={onChange}\n                                is_nativepicker={is_nativepicker}\n                                error_messages = {validation_errors.duration || []}\n                            />\n                        }\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <Datepicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable={false}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {is_same_day &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                value={expiry_time}\n                                placeholder='12:00'\n                                start_date={start_date_time}\n                                sessions={sessions}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time    : PropTypes.string,\n    expiry_type    : PropTypes.string,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    server_time    : PropTypes.object,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import classNames      from 'classnames';\nimport moment          from 'moment';\nimport React           from 'react';\nimport { IconArrow }   from 'Assets/Common';\nimport {\n    formatDate,\n    daysFromTodayTo }  from 'Utils/Date';\nimport DatePickerInput from './date_picker_input.jsx';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.PureComponent {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_close_btn_visible : false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { value, mode } = this.props;\n        this.updateDatePickerValue(value, mode);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_close_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_close_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!moment.utc(value).isValid) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value), 'duration');\n        } else {\n            this.updateDatePickerValue(value);\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value, this.props.mode);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: '' }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value, mode) => {\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const { date_format, start_date } = this.props;\n        const new_date = (mode === 'duration') ? moment.utc().add(value, 'days').format(date_format) : value;\n        if (this.calendar && (moment.utc(new_date, date_format).isValid() || !new_date)) {\n            if (!new_date) {\n                const current_date = moment.utc(start_date).format(date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker-display'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker-native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker-native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                <div\n                    className='datepicker-display-wrapper'\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                >\n                    <DatePickerInput\n                        class_name='datepicker-display'\n                        mode={this.props.mode}\n                        name={this.props.name}\n                        placeholder={this.props.placeholder}\n                        onClick={this.handleVisibility}\n                        is_read_only={true}\n                        value={this.state.value}\n                    />\n                    <span\n                        className={classNames('picker-calendar-icon', {\n                            show: !this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.handleVisibility}\n                    />\n                    <span\n                        className={classNames('close-circle-icon', {\n                            show: this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.clearDatePickerInput}\n                    />\n                </div>\n                <div\n                    className={classNames('datepicker-calendar', {\n                        show: this.state.is_datepicker_visible,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    >\n                        <DatePickerInput\n                            class_name='calendar-input'\n                            mode={this.props.mode}\n                            name={this.props.name}\n                            onChange={this.onChangeInput}\n                            placeholder={this.props.placeholder}\n                            is_read_only={'is_read_only' in this.props ? this.props.is_read_only : false}\n                            value={this.state.value}\n                        />\n                    </Calendar>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...DatePickerInput.propTypes,\n    ...Calendar.propTypes,\n};\n\nexport default DatePicker;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nexport default function DatePickerInput(props) {\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            className={props.class_name}\n            readOnly={props.is_read_only}\n            placeholder={props.placeholder\n                || (props.mode === 'duration' ? localize('Select a duration') : localize('Select date'))}\n            onChange={props.onChange}\n            onClick={props.onClick}\n            value={props.value}\n        />\n    );\n}\n\nDatePickerInput.propTypes = {\n    class_name  : PropTypes.string,\n    id          : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    is_read_only: PropTypes.bool,\n    mode        : PropTypes.string,\n    name        : PropTypes.string,\n    onChange    : PropTypes.func,\n    onClick     : PropTypes.func,\n    placeholder : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number, // duration\n        PropTypes.string, // date\n    ]),\n};\n","export default from './calendar.jsx';\n","import moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\nimport CalendarPanel  from './calendar_panel.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = moment.utc(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    // navigates to next or previous's month/year/decade/century\n    navigators = {\n        nextMonth      : () => { this.navigateTo(1,   'months', true); },\n        previousMonth  : () => { this.navigateTo(1,   'months', false); },\n        nextYear       : () => { this.navigateTo(1,   'years',  true); },\n        previousYear   : () => { this.navigateTo(1,   'years',  false); },\n        nextDecade     : () => { this.navigateTo(10,  'years',  true); },\n        previousDecade : () => { this.navigateTo(10,  'years',  false); },\n        nextCentury    : () => { this.navigateTo(100, 'years',  true); },\n        previousCentury: () => { this.navigateTo(100, 'years',  false); },\n    };\n\n    // selects a day, a month, a year, or a decade\n    panelSelectors = {\n        date  : (e, is_disabled) => { this.updateSelectedDate(e, is_disabled); },\n        month : (e) => { this.updateSelected(e, 'month'); },\n        year  : (e) => { this.updateSelected(e, 'year'); },\n        decade: (e) => { this.updateSelected(e, 'decade'); },\n    };\n\n    // sets Calendar active view\n    calendarViews = {\n        date  : () => { this.setState({ calendar_view: 'date'   }); },\n        month : () => { this.setState({ calendar_view: 'month'  }); },\n        year  : () => { this.setState({ calendar_view: 'year'   }); },\n        decade: () => { this.setState({ calendar_view: 'decade' }); },\n    };\n\n    navigateTo = (value, unit, is_add) => {\n        const { date_format, max_date, min_date } = this.props;\n\n        let new_date = moment.utc(this.state.calendar_date, date_format)[is_add ? 'add' : 'subtract'](value, unit).format(date_format);\n\n        if (unit === 'months' && this.isPeriodDisabled(new_date, 'month')) return;\n\n        if (unit === 'years'  && this.isPeriodDisabled(new_date, 'years')) {\n            new_date = is_add ? max_date : min_date;\n        }\n\n        this.setState({ calendar_date: moment.utc(new_date, date_format).format(date_format) }); // formatted date\n    };\n\n    updateSelectedDate = (e, is_disabled) => {\n        if (is_disabled) {\n            return;\n        }\n\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = moment.utc(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(moment.utc(min_date));\n        const is_after    = moment_date.isAfter(moment.utc(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = moment.utc(this.state.calendar_date, this.props.date_format)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = moment.utc(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = moment().utc().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = moment.utc(date).startOf(unit);\n        const end_of_period   = moment.utc(date).endOf(unit);\n        return end_of_period.isBefore(moment.utc(min_date))\n            || start_of_period.isAfter(moment.utc(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, max_date, min_date, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    onClick={this.navigators}\n                    onSelect={this.calendarViews}\n                    calendar_view={calendar_view}\n                />\n                <CalendarPanel\n                    calendar_date={calendar_date}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    max_date={max_date}\n                    min_date={min_date}\n                    start_date={start_date}\n                    onClick={this.panelSelectors}\n                    selected_date={selected_date}\n                    calendar_view={calendar_view}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    onClick={this.setToday}\n                    has_today_btn={has_today_btn}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : moment(0).utc().format('YYYY-MM-DD'),              // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : moment().utc().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarFooter({ footer, has_today_btn, onClick }) {\n    return (\n        <div className='calendar-footer'>\n            { footer && <span className='calendar-footer-extra'>{footer}</span> }\n            { has_today_btn &&\n                <CalendarButton className='calendar-footer-btn'>\n                    <a role='button' onClick={onClick}>{localize('Today')}</a>\n                </CalendarButton>\n            }\n        </div>\n    );\n}\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n","import classNames     from 'classnames';\nimport moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarHeader({ calendar_date, isPeriodDisabled, onClick, onSelect, calendar_view }) {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = moment.utc(calendar_date);\n\n    return (\n        <div className='calendar-header'>\n            <CalendarButton\n                className={classNames('calendar-prev-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    (is_date_view || is_month_view) && onClick.previousYear())\n                    || (is_year_view   && onClick.previousDecade())\n                    || (is_decade_view && onClick.previousCentury()\n                    )\n                }\n            />\n            <CalendarButton\n                className={classNames('calendar-prev-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.previousMonth}\n            />\n\n            <div className='calendar-select'>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar-select-month-btn'\n                        is_hidden={!is_date_view}\n                        label={moment_date.format('MMM')}\n                        onClick={onSelect.month}\n                    />\n                }\n                <CalendarButton\n                    className='calendar-select-year-btn'\n                    onClick={() => ((is_date_view || is_month_view) ? onSelect.year() : onSelect.decade())}\n                >\n                    { (is_date_view || is_month_view) && moment_date.year() }\n                    { is_year_view   && `${moment_date.clone().subtract(1, 'years').year()}-${moment_date.clone().add(10, 'years').year()}`  }\n                    { is_decade_view && `${moment_date.clone().subtract(10, 'years').year()}-${moment_date.clone().add(109, 'years').year()}` }\n                </CalendarButton>\n            </div>\n\n            <CalendarButton\n                className={classNames('calendar-next-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.nextMonth}\n            />\n            <CalendarButton\n                className={classNames('calendar-next-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    ((is_date_view || is_month_view) && onClick.nextYear())\n                    || (is_year_view   && onClick.nextDecade())\n                    || (is_decade_view && onClick.nextCentury())\n                )}\n            />\n        </div>\n    );\n}\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    onClick         : PropTypes.object,\n    onSelect        : PropTypes.object,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nexport default function CalendarPanel(props) {\n    const calendar_panel = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <div className='calendar-panel'>\n            { calendar_panel[props.calendar_view] }\n        </div>\n    );\n}\n\nCalendarPanel.propTypes = {\n    calendar_view: PropTypes.string,\n};\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { padLeft }        from '_common/string_util';\nimport CalendarPanelTypes from './types';\n\nconst getDays = ({ calendar_date, date_format, max_date, min_date, start_date, onClick, selected_date }) => {\n    const dates = [];\n    const days  = [];\n    const moment_today       = moment().utc().startOf('day');\n    const moment_cur_date    = moment.utc(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const first_day          = moment_month_start.day();\n    const last_day           = moment_month_end.day();\n    const moment_min_date    = moment.utc(min_date);\n    const moment_max_date    = moment.utc(max_date);\n    const moment_selected    = moment.utc(selected_date);\n\n    for (let i = first_day; i > 0; i--) {\n        dates.push(moment_month_start.clone().subtract(i, 'day').format(date_format));\n    }\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    for (let i = 1; i <= 6 - last_day; i++) {\n        dates.push(moment_month_end.clone().add(i, 'day').format(date_format));\n    }\n\n    const moment_start_date = moment.unix(start_date).utc().startOf('day');\n    dates.map((date) => {\n        const moment_date = moment.utc(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = moment_date.isBefore(moment_min_date) || moment_date.isAfter(moment_max_date) ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) || moment_date.isAfter(moment_start_date.clone().add(1, 'day'))));\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar-date', {\n                    active  : is_active && !is_disabled,\n                    today   : is_today,\n                    disabled: is_disabled,\n                })}\n                onClick={(e) => { onClick.date(e, is_disabled); }}\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst week_headers = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar-date-panel'>\n            {week_headers.map((item, idx) => (<span key={idx} className='calendar-date-header'>{item}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { localize }       from '_common/localize';\nimport CalendarPanelTypes from './types';\n\nconst getMonthHeaders = () => ({\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n});\n\nexport const CalendarMonths = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const moment_date    = moment.utc(calendar_date);\n    const selected_month = moment.utc(selected_date).month();\n    const month_headers  = getMonthHeaders();\n\n    return (\n        <div className='calendar-month-panel'>\n            {Object.keys(month_headers).map((month, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-month', {\n                        active  : idx === selected_month,\n                        disabled: isPeriodDisabled(moment_date.month(month), 'month'),\n                    })}\n                    onClick={onClick.month}\n                    data-month={idx}\n                >\n                    {month_headers[month]}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarYears = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n    const current_year  = moment_date.year();\n    const years         = [];\n    for (let year = current_year - 1; year < current_year + 11; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar-year-panel'>\n            {years.map((year, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-year', {\n                        disabled: isPeriodDisabled(moment_date.year(year), 'year'),\n                        active  : year === selected_year,\n                    })}\n                    onClick={onClick.year}\n                    data-year={year}\n                >\n                    {year}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarDecades = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n\n    const decades = [];\n    let min_year  = moment_date.year() - 10;\n    for (let i = 0; i < 12; i++) {\n        const max_year = min_year + 9;\n        const range    = `${min_year}-${max_year}`;\n        decades.push(range);\n        min_year = max_year + 1;\n    }\n\n    return (\n        <div className='calendar-decade-panel'>\n            {decades.map((range, idx) => {\n                const [start_year, end_year] = range.split('-');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar-decade', {\n                            disabled: isPeriodDisabled(moment_date.year(start_year), 'year') && isPeriodDisabled(moment_date.year(end_year), 'year'),\n                            active  : start_year === selected_year,\n                        })}\n                        onClick={onClick.decade}\n                        data-decade={range}\n                    >\n                        {range}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Dropdown     from 'App/Components/Form/DropDown';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\n\nconst last_digit_numbers = [...Array(10).keys()].map(number => ({\n    text : number,\n    value: number,\n}));\n\nconst LastDigit = ({\n    is_minimized,\n    is_nativepicker,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            icon='digits'\n        >\n            <Dropdown\n                list={last_digit_numbers}\n                value={+last_digit}\n                name='last_digit'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    last_digit     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {!is_today &&\n                <React.Fragment>\n                    <TimePicker\n                        onChange={onChange}\n                        is_align_right\n                        name='start_time'\n                        value={start_time}\n                        placeholder='12:00'\n                        start_date={start_date}\n                        sessions={sessions}\n                        is_clearable={false}\n                        is_nativepicker={is_nativepicker}\n                    />\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized    : PropTypes.bool,\n    is_nativepicker : PropTypes.bool,\n    onChange        : PropTypes.func,\n    sessions        : MobxPropTypes.arrayOrObservableArray,\n    start_date      : PropTypes.number,\n    start_dates_list: MobxPropTypes.arrayOrObservableArray,\n    start_time      : PropTypes.string,\n};\n\nexport default observer(StartDate);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\nimport Localize     from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from 'App/Components/Layout/Header';\nimport header_links             from 'App/Constants/header_links';\nimport { connect }              from 'Stores/connect';\n\nconst Header = ({\n    account_type,\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    account_type={account_type}\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    account_type             : PropTypes.string,\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        account_type             : client.account_title,\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport Localize            from 'App/Components/Elements/localize.jsx';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n    account_type,\n}) => (\n    <div className='acc-balance'>\n        <div className='acc-switcher-container'>\n            <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                <p className='acc-balance-type'>\n                    <Localize str={`${account_type} Account`} />\n                </p>\n                <p className='acc-balance-id'>{loginid}</p>\n                <IconArrow className='select-arrow' />\n            </div>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={400}\n                classNames='acc-switcher-wrapper'\n                unmountOnExit\n            >\n                <div className='acc-switcher-wrapper'>\n                    <AccountSwitcher\n                        is_visible={is_dialog_on}\n                        toggle={toggleDialog}\n                        is_upgrade_enabled={is_upgrade_enabled}\n                        onClickUpgrade={onClickUpgrade}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n        {typeof balance !== 'undefined' &&\n        <p className='acc-balance-amount'>\n            <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n            {balance}\n        </p>\n        }\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { UpgradeButton } from 'App/Components/Elements/AccountSwitcher/upgrade_button.jsx';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services/index';\nimport { connect }       from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.props.account_list.length > 0) &&\n                this.props.account_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={this.doSwitch.bind(this, account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list      : PropTypes.array,\n    is_logged_in      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nconst account_switcher = connect(\n    ({ client }) => ({\n        account_list : client.account_list,\n        is_logged_in : client.is_logged_in,\n        switchAccount: client.switchAccount,\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes_config';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_portfolio_drawer_on) {\n                        togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}