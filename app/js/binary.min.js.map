{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_plus.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_calendar_today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_double_left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_double_right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_price_move.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow_equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range_slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick_steps.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number_selector.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_date_time","forEach","_logout","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_calendar_today","_icon_calendar","_icon_chevron_double_left","_icon_chevron_double_right","_icon_chevron_left","_icon_chevron_right","_icon_clear","_icon_close","_icon_exclamation","_icon_minus","_icon_plus","Button","_ref$className","className","has_effect","id","is_disabled","onClick","text","wrapperClassName","classes","button","_react2","default","disabled","wrapper","string","bool","func","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_Date","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","trading_times","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","isTimeValid","split","_ref2","_slicedToArray","toMoment","ServerTime","getTradingTimes","_ref3","trading_times_response","submarkets","symbols","symbol","underlying","abrupt","sent","markets","echo_req","times","close","_x2","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","clone","add","isSameOrBefore","getExpiryTime","expiry_time","market_close_times","start_time","end_time","market_close_time","end_moment","expiry_sessions","open","minDate","diff","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getContractCategories","contract_types_list","Tooltip","message","alignment","icon","icon_name","icon_class","_classnames2","data-tooltip","data-tooltip-pos","node","Fieldset","header","is_center","onMouseEnter","onMouseLeave","tooltip","fieldset_class","field_left_class","_tooltip2","array","InputField","checked","data_tip","data_value","error_messages","fractional_digits","helper","is_float","is_incrementable","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","label","max_length","max_value","min_value","onChange","placeholder","prefix","required","has_error","has_valid_length","max_is_disabled","min_is_disabled","incrementValue","decrementValue","input","data-for","data-value","data-tip","maxLength","onKeyDown","keyCode","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","readOnly","input_increment","_button2","IconPlus","IconMinus","htmlFor","MobxPropTypes","arrayOrObservableArray","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","loading_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","_fill_template","Localize","str","replacers","localized","fillTemplate","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","duration","payout","theme","is_dark_mode_on","portfolio_drawer","is_portfolio_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","unit","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","some","CalendarPanelTypes","calendar_date","calendar_view","date_format","isPeriodDisabled","max_date","min_date","selected_date","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","ASIANU","ASIAND","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","second","unix","session","isBetween","_icon_trade_types","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","week_headers_abbr","getDecade","moment_date","year","getCentury","_icon_maximize","_icon_quick_portfolio","_icon_settings","_ui","_connect","RemainingTime","_ref$end_time","remaining_time","formatDuration","getDiffDuration","isRequired","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconClose","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","_PopConfirm","_Types","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","stake","IconTradeType","returns","_money2","is_purchase_error","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","has_increased","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","renderCards","TimePickerDropdown","selectOption","_this$props$value$spl","_this$props$value$spl2","prev_hour","prev_minute","is_type_selected","setState","last_updated_type","stopPropagation","resetValues","state","is_hour_selected","is_minute_selected","prevProps","prevState","_state","toggle","_props","preClass","start_moment_clone","_value$split","_value$split2","is_clearable","saveHourRef","is_enabled","saveMinuteRef","mm","TimePicker","toggleDropDown","is_open","handleChange","arg","saveRef","nodeName","wrapper_ref","target_element","handleClickOutside","contains","_props2","is_align_right","padding","prefix_class","_input_field2","value_split","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","_toggle_button2","toggled","ToggleButton","toggle_style","_icon_logout","InkBar","inkbar_style","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","ContractTypeCell","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","upgrade_info","getBasicUpgradeInfo","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCryptocurrency","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","epochToMoment","epoch","isValid","isUTC","moment_obj","setTime","convertToUnix","formatDate","daysFromTodayTo","startOf","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","addDays","num_of_days","addMonths","num_of_months","addYears","num_of_years","subDays","subMonths","subYears","date_1","date_2","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor34","changeDurationValidationRules","changeAllowEquals","delay","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_equal_checked","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","getProposalInfo","setChartBarrier","query_params","duration_options","hasCallPutEqual","check_callput_equal_duration","contract_type_list","contract_duration_list","rise_fall_equal","hasDurationForCallPutEqual","is_allow_equal","_ref6","_callee4","_context4","refresh","prepareTradeStore","_x3","runInAction","_callee6","_context6","_this9","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","_proposal_response$ec","Duration","StartDate","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeStartDate","onChangeExpiry","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_type","obj_expiry_date","obj_market_close_times","obj_expiry_time","obj_duration_min_max","createProposalRequestForContract","ask_price","display_value","contract_basis","obj_contract_basis","toFixed","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_theme_wrapper2","_header2","_error_boundary2","_app_contents2","_routes2","_PortfolioDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","_ttReactCustomScrollbars","PortfolioDrawer","toggleDrawer","body_content","_empty_portfolio_message2","_portfolio_drawer_card2","portfolio-drawer--open","Scrollbars","autoHide","togglePortfolioDrawer","IconArrow","IconBack","IconCalendarToday","fillOpacity","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","transform","IconBell","stroke","IconCashier","rx","IconHamburger","strokeLinecap","IconTrade","PortfolioDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","SmartChart","form_wrapper_class","Suspense","fallback","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","setWrapperRef","is_dialog_open","getDisplayText","_this$props","findInArray","getStyles","container_classes","tabIndex","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","ContractTypeItem","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","_icon_price_move","ContractInfo","IconPriceMove","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_DropDown2","_allow_equals2","observableObject","Dropdown","onKeyPressed","getItemFromValue","getValueFromIndex","curr_index","is_list_visible","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","autoHeight","autoHeightMax","isArrayLike","Items","highlightedIdx","items","AllowEquals","expiry_list","is_24_hours_contract","expiry_time_sessions","max_date_duration","min_date_expiry","max_duration","min_duration","max_daily_duration","daily","moment_contract_start_date_time","has_intraday_duration_unit","isSame","expiry_date_time","expiry_date_market_close","is_expired_next_day","duration_unit_text","has_end_time","expiry","pop","endtime_container_class","has-time","_RangeSlider2","_DatePicker2","has_today_btn","disabled_selector","_time_picker2","DatePicker","is_datepicker_visible","is_clear_btn_visible","onClickOutside","mainNode","updateDatePickerValue","onSelectCalendar","onChangeInput","clearDatePickerInput","calendar","resetCalendar","new_date","current_date","_this$props2","renderInputField","_this$props3","nativeEvent","defaultValue","datepicker__icon--is-hidden","datepicker__picker--show","_Calendar2","onSelect","defaultProps","Calendar","_initialiseProps","_calendar_header2","navigateTo","switchView","_calendar_body2","updateSelected","_calendar_footer2","setToday","view","updateSelectedDate","dataset","is_before","is_after","formatted_date","month","decade","_props3","default_date","_props4","now","_props5","start_of_period","endOf","_panels","CalendarBody","calendar_body","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","days","dates","moment_today","moment_cur_date","daysInMonth","moment_month_start","moment_month_end","moment_selected","padLeft","start_of_next_month","moment_start_date","is_active","is_today","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--disabled","calendar__cell--other","data-date","getDays","moment_selected_date","data-month","_helper","_getDecade$split","_getDecade$split2","start_of_decade","end_of_decade","years","is_other_decade","data-year","decades","min_year","_decade$split","_decade$split2","is_other_century","data-decade","CalendarFooter","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","century","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","_calendar_button2","calendar__nav--disabled","is_hidden","calendar__btn--disabled","CalendarButton","RangeSlider","first_tick","is_error","steps","_tick_steps2","TickSteps","arr_ticks","ticks__step--active","ticks__step--marked","arr_five","_number_selector2","arr_arr_numbers","selected_number","NumberSelector","getAttribute","arr_numbers","arrayOf","current_date_config","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","msg","_localize3","_icon_error2","shape","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","last","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","SellInfo","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","_close_button2","CloseButton","ToastMessage","toast","_ToastMessage2","AppContents","app-contents--show-portfolio-drawer","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","NetworkStatus","_server_time2","TogglePortfolio","ToggleFullScreen","ToggleSettings","is_settings_visible","is_language_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_portfolio","_toggle_settings","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconQuickPortfolio","IconSettings","toggle_portfolio_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","LoginButton","ToggleNotificationsDrawer","account_title","_account_info","_install_pwa_button","_login_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","_localize2","AccountSwitcher","_account_switcher","_upgrade_button","_Drawer","accounts_toggle_btn","doSwitch","UpgradeButton","IconLogout","account_switcher","prompt","userChoice","choice_result","outcome","_InkBar2","_inkbar","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","offsetWidth","active_el","Switch","_route_with_sub_routes2","LoginPrompt","onSignup","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","Notifications","_notifications","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","_Routes2","virtual_account_loginid","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"eaebed810bad692cf0f1\",\"account_password\":\"907c21ab6c590d59b120\",\"api_toke\":\"42be307b402dcebfe5bb\",\"authorized_application\":\"bb7205fe7f02bda88999\",\"cashier_password\":\"f04f6848007a1d0878f5\",\"contract\":\"c64dea446ea6d143df14\",\"financial_assessment\":\"c7517c7e5d3baa9f2632\",\"limits\":\"54347b91faca72b38180\",\"login_history\":\"cafc9eb91ff96ef8c07e\",\"personal_details\":\"d6af95faae08344483e4\",\"portfolio\":\"103d1b2990ba63b95ced\",\"self_exclusion\":\"db801e1bdd2cde82b212\",\"settings\":\"a6b94df919f6ece22b09\",\"statement\":\"00d0dcf1d1bb4d3b1f7c\",\"vendors~smart_chart\":\"40f375e5cf306b789d9a\",\"smart_chart\":\"e22c8f179fbbaf0ff411\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([256,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date_time';\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_calendar_today.jsx';\nexport * from './icon_calendar.jsx';\nexport * from './icon_chevron_double_left.jsx';\nexport * from './icon_chevron_double_right.jsx';\nexport * from './icon_chevron_left.jsx';\nexport * from './icon_chevron_right.jsx';\nexport * from './icon_clear.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\nexport * from './icon_minus.jsx';\nexport * from './icon_plus.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                        symbol.times.close;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const fieldset_class   = classNames('fieldset-header', is_center ? 'center-text' : '');\n    const field_left_class = classNames('field-info', { icon }, icon, is_center ? 'center' : 'left');\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_class}>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { IconMinus }             from 'Assets/Common/icon_minus.jsx'; // implicit import here { IconMinus, IconPlus } from 'Assets/Common' breaks compilation\nimport { IconPlus }              from 'Assets/Common/icon_plus.jsx';\nimport Button                    from './button.jsx';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_read_only = false,\n    is_signed = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const incrementValue = () => {\n        if  (max_is_disabled) return;\n\n        const increment_value = (+value) + 1;\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n\n        const decrement_value = (+value) - 1;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    const input =\n        <input\n            checked={checked ? 'checked' : ''}\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-value={data_value}\n            data-tip={data_tip}\n            id={id}\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            onChange={changeValue}\n            onClick={onClick}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value || ''}\n        />;\n\n    const input_increment =\n        <div className='input-wrapper'>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--increment'}\n                is_disabled={max_is_disabled}\n                onClick={incrementValue}\n            >\n                <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n            </Button>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--decrement'}\n                is_disabled={min_is_disabled}\n                onClick={decrementValue}\n            >\n                <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n            </Button>\n            { input }\n        </div>;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                {is_incrementable  &&  type === 'number' ? input_increment : input}\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked          : PropTypes.number,\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.string,\n    id               : PropTypes.string,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_incrementable : PropTypes.bool,\n    is_read_only     : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    onClick          : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = (expiry_type === 'endtime' && toMoment(expiry_date).isAfter(toMoment(server_time), 'day')) ||\n        !hasIntradayDurationUnit(duration_units_list);\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","export * from './icon_trade_types.jsx';\n","export default from './dropdown.jsx';\n","import { localize }       from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ContractType from '../Helpers/contract_type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal_checked',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport UILoader          from 'App/Components/Elements/ui_loader.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green btn-purchase'\n                has_effect\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            >\n                <React.Fragment>\n                    <div className='btn-purchase__effect-main' />\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__content'>\n                        <div className='btn-purchase__trade-type'>\n                            <IconTradeType type={type.toLowerCase()} />\n                            <span>{localize('[_1]', trade_types[type])}</span>\n                        </div>\n                    </div>\n                    <div className='btn-purchase__info'>\n                        <div className='btn-purchase__return'>{is_disabled ? '---,-' : info.returns}</div>\n                        <div className='btn-purchase__profit'>\n                            {is_disabled ? '--,--' : <Money amount={info.profit} currency={currency} />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Button>\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","import {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { localize }              from '_common/localize';\nimport { isSessionAvailable }    from 'Stores/Modules/Trading/Helpers/start_date';\nimport { toMoment }              from 'Utils/Date';\nimport InputField                from './input_field.jsx';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled && this.props.value) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = toMoment(start_date);\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.number,\n    value          : PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.number,\n    toggle      : PropTypes.func,\n    value       : PropTypes.string,\n    value_split : PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","export * from './icon_logout.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <IconPortfolio className='portfolio-empty__icon' />\n        <span className='portfolio-empty__text'>{localize('No open positions.')}</span>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 207,\n\t\"./ja.js\": 207\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 464;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base_store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            id !== this.loginid &&\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid      = LocalStore.get('active_loginid');\n        this.accounts     = LocalStore.getObject(storage_key);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.switched     = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }                                                                                                                                                 from './Helpers/chart_barriers';\nimport { createChartMarkers }                                                                                                                                                 from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const moment_obj = epochToMoment(value);\n    return moment_obj.isValid() ? moment_obj : moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'YYYY-MM-DD').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format_response';\nimport BaseStore                        from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_allow_equal             = false;\n    @observable is_equal_checked           = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => [\n                this.symbol,\n                this.contract_type,\n                this.duration_unit,\n                this.expiry_type,\n                this.duration_units_list,\n                this.contract_types_list,\n            ],\n            () => {\n                this.changeAllowEquals();\n            },\n            { delay: 500 }\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, checked } = e.target;\n        let { value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (value === 'is_equal') {\n            if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type)) {\n                if (checked) {\n                    this.is_equal_checked = 1;\n                    value = 'rise_fall_equal';\n                } else {\n                    this.is_equal_checked = 0;\n                    value = 'rise_fall';\n                }\n            }\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    changeAllowEquals() {\n        const hasCallPutEqual = () => {\n            const up_down_contracts = getPropertyValue(this.contract_types_list, 'Up/Down');\n            return up_down_contracts.some(contract => contract.value === 'rise_fall_equal');\n        };\n        const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n            const contract_list = Object.keys(contract_type_list || {})\n                .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n            \n            const contract_duration_list = contract_list\n                .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n            // Check whether rise fall equal is exists and has the current store duration unit\n            return hasCallPutEqual() ? contract_duration_list\n                .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n                .some(duration => duration.value === duration_unit) : false;\n        };\n        const check_callput_equal_duration = hasDurationForCallPutEqual(this.contract_types_list,\n            this.duration_unit, this.contract_start_type);\n\n        if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type) && (check_callput_equal_duration || this.expiry_type === 'endtime') && hasCallPutEqual()) {\n            this.is_allow_equal = true;\n        } else {\n            this.is_allow_equal = false;\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start_date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract_type';\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n\n    const obj_market_close_times = { market_close_times: await ContractType.getTradingTimes(expiry_date, symbol) };\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_close_times,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                <div className='portfolio-drawer__header'>\n                    <span className='portfolio-drawer__icon-main ic-portfolio' />\n                    <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                    <div\n                        className='portfolio-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconClose />\n                    </div>\n                </div>\n                <div className='portfolio-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: 'calc(100vh - 35px)' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n            </div>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path fill='#5C5C5C' fillRule='evenodd' d='M13.875 2H12v-.438a.562.562 0 1 0-1.125 0V2h-5.75v-.438a.562.562 0 1 0-1.125 0V2H2.125C1.503 2 1 2.503 1 3.125v10.75C1 14.497 1.503 15 2.125 15h11.75c.622 0 1.125-.505 1.125-1.125V3.125C15 2.503 14.497 2 13.875 2zM2.125 3.125H4v.313a.562.562 0 1 0 1.125 0v-.313h5.75v.313a.562.562 0 1 0 1.125 0v-.313h1.875v1.75H2.125v-1.75zm11.75 10.75H2.125V6h11.75v7.875zM4.5 8h1a.5.5 0 1 1 0 1h-1a.5.5 0 1 1 0-1zm3 0h1a.5.5 0 1 1 0 1h-1a.5.5 0 1 1 0-1zm3 0h1a.5.5 0 1 1 0 1h-1a.5.5 0 1 1 0-1zm-6 3.031h1a.5.5 0 1 1 0 1h-1a.5.5 0 1 1 0-1zm3 0h1a.5.5 0 1 1 0 1h-1a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path fill='#2A3052' d='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path fill='#2A3052' d='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path fill='#2A3052' d='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path fill='#2A3052' d='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\nimport Tooltip                        from 'App/Components/Elements/tooltip.jsx';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n            <Tooltip\n                alignment='left'\n                icon='info'\n            />\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon_price_move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    proposal_info,\n}) => (\n    <React.Fragment>\n        {(proposal_info.has_error || !proposal_info.id) ?\n            <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                <span>{proposal_info.message}</span>\n            </div>\n            :\n            <div className='purchase-info-wrapper'>\n                <div className='info-wrapper'>\n                    <div>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                    <div><Money amount={proposal_info.obj_contract_basis.value} currency={currency} /></div>\n                    <div className='icon_price_move_container'>\n                        {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                    </div>\n                </div>\n                <span className='purchase-tooltip'>\n                    <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                </span>\n            </div>\n        }\n    </React.Fragment>\n);\n\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { localize }              from '_common/localize';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input_field.jsx';\nimport AllowEquals               from './allow_equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_allow_equal,\n    is_equal_checked,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !is_single_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages={validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n            <AllowEquals is_allow_equal={is_allow_equal} onChange={onChange} checked={is_equal_checked} />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_allow_equal    : PropTypes.bool,\n    is_equal_checked  : PropTypes.number,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex,\n}  from './helpers';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n            curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    onKeyPressed = (event) => {\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    tabIndex='0'\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list-label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''} ${highlightedIdx === idx ? 'highlighted' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from '_common/localize';\nimport Tooltip        from 'App/Components/Elements/tooltip.jsx';\nimport InputField     from 'App/Components/Form/input_field.jsx';\n\nconst AllowEquals = ({\n    is_allow_equal,\n    checked,\n    onChange,\n}) => (\n    !!is_allow_equal &&\n        <div className='allow-equals'>\n            <InputField\n                id='allow_equals'\n                name='contract_type'\n                onChange={onChange}\n                value='is_equal'\n                type='checkbox'\n                checked={checked}\n            />\n            <label htmlFor='allow_equals'>{localize('Allow equals')}</label>\n            <Tooltip icon='info' message={localize('Win payout if exit spot is also equal to entry spot.')} alignment='left' />\n        </div>\n);\n\nAllowEquals.propTypes = {\n    checked       : PropTypes.number,\n    is_allow_equal: PropTypes.bool,\n    onChange      : PropTypes.func,\n};\n\nexport default AllowEquals;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport DatePicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport RangeSlider              from 'App/Components/Form/RangeSlider';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport {\n    convertDurationLimit,\n    hasIntradayDurationUnit }   from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    minDate,\n    setTime,\n    toMoment }                  from 'Utils/Date';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    market_close_times,\n    validation_errors,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const moment_expiry      = toMoment(expiry_date || server_time);\n    let is_24_hours_contract = false;\n    let expiry_time_sessions = sessions;\n    let max_date_duration,\n        min_date_expiry,\n        max_duration,\n        min_duration;\n\n    if (expiry_type !== 'endtime' && duration_min_max[contract_expiry_type]) {\n        min_duration = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n        max_duration = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n\n    } else if (expiry_type === 'endtime') {\n        const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n        const moment_contract_start_date_time =\n            setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm')));\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n\n        // When the contract start is forwarding or is not forwarding but the expiry date is as same as start date, the contract should be expired within 24 hours\n        is_24_hours_contract = (!!start_date || moment_expiry.isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n\n        if (is_24_hours_contract) {\n            const expiry_date_time         = setTime(moment_expiry.clone(), moment_contract_start_date_time.clone().add(5, 'minute').format('HH:mm'));\n            const expiry_date_market_close = setTime(expiry_date_time.clone(), market_close_times.slice(-1)[0]);\n            const is_expired_next_day      = expiry_date_time.diff(moment_contract_start_date_time, 'day') === 1;\n\n            expiry_time_sessions = [{\n                open : is_expired_next_day ? expiry_date_time.clone().startOf('day') : expiry_date_time.clone(),\n                // when the expiry_date is on the next day of the start_date, the session should be close 5 min before the start_time of the contract.\n                close: is_expired_next_day ? minDate(expiry_date_time.clone().subtract(10, 'minute'), expiry_date_market_close) : expiry_date_market_close.clone(),\n            }];\n\n            min_date_expiry = moment_contract_start_date_time.clone().startOf('day');\n            max_date_duration = moment_contract_start_date_time.clone().add(\n                start_date ? 24 * 3600 : (max_daily_duration), 'second');\n        } else {\n            min_date_expiry = moment_contract_start_date_time.clone().startOf('day');\n            max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n\n            if (!has_intraday_duration_unit) {\n                min_date_expiry.add(1, 'day');\n            }\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {\n                            duration_unit === 't' ?\n                                <RangeSlider\n                                    max_value={max_duration}\n                                    min_value={min_duration}\n                                    name='duration'\n                                    ticks={10}\n                                    value={duration}\n                                    onChange={onChange}\n                                />\n                                :\n                                <InputField\n                                    type='number'\n                                    max_value={max_duration}\n                                    min_value={min_duration}\n                                    name='duration'\n                                    value={duration}\n                                    onChange={onChange}\n                                    is_nativepicker={is_nativepicker}\n                                    is_incrementable={true}\n                                    error_messages = {validation_errors.duration || []}\n                                />\n                        }\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <DatePicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable\n                            is_nativepicker={is_nativepicker}\n                            alignment='left'\n                            disabled_selector={['year']}\n                            // sessions={expiry_date_sessions} TODO: add expiry date sessions. e.g. disable days if market closes on weekend\n                            // validation_errors={validation_errors.expiry_date} TODO: add validation_errors for expiry date\n                        />\n                        {is_24_hours_contract &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                placeholder='12:00'\n                                sessions={expiry_time_sessions}\n                                start_date={moment_expiry.unix()}\n                                value={expiry_time || min_date_expiry.format('HH:mm')}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    expiry_type       : PropTypes.string,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    market_close_times: PropTypes.array,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n    sessions          : MobxPropTypes.arrayOrObservableArray,\n    start_date        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import classNames      from 'classnames';\nimport { observer }    from 'mobx-react';\nimport React           from 'react';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }        from 'Assets/Common';\nimport InputField      from 'App/Components/Form/input_field.jsx';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    isDateValid,\n    toMoment }         from 'Utils/Date';\nimport { localize }    from '_common/localize';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        if (mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value));\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value));\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? addDays(toMoment(), value) : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, validation_errors } = this.props;\n        let { placeholder } = this.props;\n        let type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                placeholder = placeholder || localize('Select a duration');\n                type = 'number';\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n        }\n\n        return (\n            <InputField\n                className='datepicker__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={validation_errors}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={this.state.value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden': this.state.is_clear_btn_visible,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                <IconClear\n                    className={classNames('datepicker__icon datepicker__icon--clear', {\n                        'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                    })}\n                    onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                />\n                <div\n                    className={classNames('datepicker__picker', {\n                        'datepicker__picker--show'                           : this.state.is_datepicker_visible,\n                        [`datepicker__picker--align-${this.props.alignment}`]: this.props.alignment,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n};\n\nexport default observer(DatePicker);\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { toMoment }   from 'Utils/Date';\nimport CalendarBody   from './calendar_body.jsx';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = toMoment(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({ calendar_date: toMoment(new_date).format(this.props.date_format) });\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' data-value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    sessions={this.props.sessions}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    has_today_btn={has_today_btn}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames            from 'classnames';\nimport React                 from 'react';\nimport { padLeft }           from '_common/string_util';\nimport {\n    addDays,\n    addMonths,\n    subDays,\n    subMonths,\n    toMoment }               from 'Utils/Date';\nimport CalendarPanelTypes    from './types';\nimport { week_headers_abbr } from '../constants';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    // sessions, // TODO: check expiry date sessions. e.g. disable days if market closes on weekend\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date = toMoment(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = isPeriodDisabled(moment_date, 'day') ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) ||\n            moment_date.isAfter(addDays(moment_start_date, 1))));\n\n        // show 'disabled' style for dates that is not in the same calendar month,\n        // but the date should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'  : is_active && !is_disabled,\n                    'calendar__cell--today'   : is_today,\n                    'calendar__cell--disabled': is_disabled,\n                    'calendar__cell--other'   : is_other_month,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day') }\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            {Object.keys(week_headers_abbr).map((item, idx) => (<span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\nimport { month_headers }  from '../constants';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\nimport { getDecade }      from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\nimport { getCentury, getDecade }      from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon calendar__icon--today'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar_button.jsx';\nimport { month_headers }    from './constants';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n    disabled_selector,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disabled_selector.some(selector => selector === 'year');\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    navigateTo      : PropTypes.func,\n    switchView      : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","export default from './range_slider.jsx';\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick_steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    const is_error = ((value < min_value) || (value > max_value)) ? 'error' : '';\n\n    return (\n        <div className={classNames('range-slider', className, { 'error': is_error })}>\n            <label htmlFor='range'>\n                <input\n                    id='range'\n                    className='range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '0.8rem' : '0.5rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('ticks__step', {\n                        'ticks__step--active': (idx + 1) === parseInt(value),\n                        'ticks__step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number_selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={`number-selector__selection${selected_number === i ? ' selected' : ''}`}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n    validation_errors,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {(!is_today && start_time) &&\n                <TimePicker\n                    onChange={onChange}\n                    is_align_right\n                    name='start_time'\n                    value={start_time}\n                    placeholder='12:00'\n                    start_date={start_date}\n                    sessions={sessions}\n                    is_clearable={false}\n                    is_nativepicker={is_nativepicker}\n                    validation_errors={validation_errors.start_time}\n                />\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized     : PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    onChange         : PropTypes.func,\n    sessions         : MobxPropTypes.arrayOrObservableArray,\n    start_date       : PropTypes.number,\n    start_dates_list : MobxPropTypes.arrayOrObservableArray,\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(StartDate);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\nimport Localize     from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from 'App/Components/Layout/Header';\nimport header_links             from 'App/Constants/header_links';\nimport { connect }              from 'Stores/connect';\n\nconst Header = ({\n    account_type,\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    account_type={account_type}\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    account_type             : PropTypes.string,\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        account_type             : client.account_title,\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport Localize            from 'App/Components/Elements/localize.jsx';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n    account_type,\n}) => (\n    <div className='acc-balance'>\n        <div className='acc-switcher-container'>\n            <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                <p className='acc-balance-type'>\n                    <Localize str={`${account_type} Account`} />\n                </p>\n                <p className='acc-balance-id'>{loginid}</p>\n                <IconArrow className='select-arrow' />\n            </div>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={400}\n                classNames='acc-switcher-wrapper'\n                unmountOnExit\n            >\n                <div className='acc-switcher-wrapper'>\n                    <AccountSwitcher\n                        is_visible={is_dialog_on}\n                        toggle={toggleDialog}\n                        is_upgrade_enabled={is_upgrade_enabled}\n                        onClickUpgrade={onClickUpgrade}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n        {typeof balance !== 'undefined' &&\n        <p className='acc-balance-amount'>\n            <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n            {balance}\n        </p>\n        }\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { UpgradeButton } from 'App/Components/Elements/AccountSwitcher/upgrade_button.jsx';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services/index';\nimport { connect }       from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.props.account_list.length > 0) &&\n                this.props.account_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={this.doSwitch.bind(this, account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list      : PropTypes.array,\n    is_logged_in      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nconst account_switcher = connect(\n    ({ client }) => ({\n        account_list : client.account_list,\n        is_logged_in : client.is_logged_in,\n        switchAccount: client.switchAccount,\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes_config';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_portfolio_drawer_on) {\n                        togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}