{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Stores/base-store.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./src/javascript/app_2/App/Components/Form/input-field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui-loader.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws-methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon-flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Assets/Common/icon-error.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-blue.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/Constants/date-time.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining-time.jsx","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query-string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon-back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clock.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-outline.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-plus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-question.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-red-dot.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-success.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-warning.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes-config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract-type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm-element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade-params.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button-toggle-menu.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs-wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/switch-button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route-with-sub-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty-portfolio-message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract-type-cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info-box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network-monitor.js","webpack:///./src/javascript/app_2/Services/socket-general.js","webpack:///./src/javascript/app_2/Services/outdated-browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client-store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative-validation-rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common-store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon-entry-spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date-time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade-store.js","webpack:///./src/javascript/app_2/Utils/URL/url-helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract-type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui-store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base-name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar-today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-country-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minimize.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon-trade-types.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-details.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./src/images/app_2/portfolio/ic-check.svg","webpack:///./src/images/app_2/portfolio/ic-cross.svg","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/helpers/duration-percentage.js","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form-layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon-trade-categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/trade-categories.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-price-move.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message-box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase-result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase-lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/items.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/native-select.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-up.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-down.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/helpers.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/dialog.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/end-time.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number-selector.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile-widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon-tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-component.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill-template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract-error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit-display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-button.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-longcode.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close-button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast-message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app-contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server-time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network-status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-positions.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language-dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account-info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/index.js","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/icon_accounts_currency.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon-logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/deposit-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install-pwa-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/upgrade-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu-links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Routes/button-link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login-prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app-config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle-drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-notifications-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/empty-notification.jsx","webpack:///./src/javascript/app_2/App/Constants/header-links.js","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial-of-service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register-service-worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_dateTime","forEach","_iconArrow","_iconBack","_iconCalendarToday","_iconCalendar","_iconChevronDoubleLeft","_iconChevronDoubleRight","_iconChevronLeft","_iconChevronRight","_iconCountryFlag","_iconClear","_iconClock","_iconClose","_iconError","_iconExclamation","_iconInfoBlue","_iconInfoOutline","_iconFlag","_iconMinimize","_iconMinus","_iconPlus","_iconQuestion","_iconRedDot","_iconSuccess","_iconWarning","Button","_ref$className","className","classNameSpan","has_effect","id","is_disabled","onClick","tabIndex","text","wrapperClassName","classes","_classnames2","default","effect","button","_react2","disabled","wrapper","node","string","bool","func","_logout","BinarySocketGeneral","WS","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_iconBell","_iconCashier","_iconHamburger","_iconPortfolio","_iconStatement","_iconTrade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_Date","_barrier","_duration","_startDate","_contract","ContractType","available_contract_types","available_categories","contract_types","trading_times","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","isTimeValid","split","_ref2","_slicedToArray","toMoment","ServerTime","getTradingTimes","_ref3","trading_times_response","submarkets","symbols","symbol","underlying","abrupt","sent","markets","echo_req","open","times","close","_x2","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","clone","add","isSameOrBefore","getExpiryTime","expiry_time","market_close_times","start_time","end_time","market_close_time","end_moment","expiry_sessions","minDate","diff","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getContractCategories","contract_types_list","InputField","checked","classNameInput","classNamePrefix","data_tip","data_value","error_messages","fractional_digits","helper","is_autocomplete_disabled","is_float","is_incrementable","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","_ref$is_unit_at_right","is_unit_at_right","label","max_length","max_value","min_value","onChange","placeholder","prefix","required","unit","has_error","has_valid_length","max_is_disabled","min_is_disabled","incrementValue","decrementValue","display_value","is_increment_input","input","input--error","data-for","data-value","data-tip","maxLength","onKeyDown","keyCode","trim","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","readOnly","autoComplete","input_increment","_button2","IconPlus","IconMinus","_tooltip2","with-label","alignment","message","htmlFor","MobxPropTypes","arrayOrObservableArray","Fieldset","header","is_center","onMouseEnter","onMouseLeave","fieldset_header_class","fieldset_info_class","array","Tooltip","state","show_tooltip_balloon_icon","setState","_props","classNameIcon","icon","icon_class","data-tooltip","data-tooltip-pos","IconInfoOutline","IconInfoBlue","tooltip__balloon-icon--show","IconQuestion","IconRedDot","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","duration","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","some","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","classNameBlock","loading_class","block_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","payout","theme","is_dark_mode_on","positions_drawer","is_positions_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","CommonPropTypes","calendar_date","isPeriodDisabled","selected_date","updateSelected","_fillTemplate","Localize","str","replacers","localized","fillTemplate","_drawerHeader","_drawerItem","_drawerItems","_drawer","_drawerToggle","_toggleDrawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","is_forced","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","IconError","transform","x","y","rx","_iconTradeTypes","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","IconClose","any","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","week_headers_abbr","getDaysOfTheWeek","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","getDecade","moment_date","year","getCentury","_iconMaximize","_iconPositions","_iconSettings","_connect","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_ui","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconBack","IconChevronLeft","classNamePath","IconChevronRight","IconClock","stroke","strokeLinecap","strokeLinejoin","IconSuccess","IconWarning","_reactRouterDom","active_class","to","_objectWithoutProperties","_routesConfig2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","routesConfig","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contractTypeWidget2","_iconTradeCategories","_PopConfirm","_Types","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","stake","IconTradeType","returns","_money2","is_purchase_error","_fieldset2","_PurchaseLock2","_MessageBox2","_uiLoader2","_contractInfo2","has_increased","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","_classNames","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","ui_store","renderCards","ButtonToggleMenu","buttons_arr","menu","val","button-menu__button--active","selected_value","changeValue","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sellInfo2","_iconFlag2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabsItem","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","toggle","_switchButton2","toggled","SwitchButton","toggle_style","_iconLogout","_login","_appConfig","Route","render","_loginPrompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","handleClickOutside","contains","is_open","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","ContractTypeCell","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_detailsHeader2","display_status","_detailsContents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxLongcode","InfoBoxDigit","_contractError2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","upgrade_info","getBasicUpgradeInfo","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarativeValidationRules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","$","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCryptocurrency","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chartBarriers","_chartMarkers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_iconEntrySpot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","epochToMoment","epoch","isValid","isUTC","formatted_date","Date","setTime","moment_obj","convertToUnix","formatDate","date_format","daysFromTodayTo","startOf","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","addDays","num_of_days","addMonths","num_of_months","addYears","num_of_years","subDays","subMonths","subYears","date_1","date_2","getStartOfMonth","_formatResponse","positions","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","populateResultDetails","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","profit_loss","underlying_code","underlying_name","display_name","tick_count","findIndex","is_contract_mode","contract_response","duration_diff","getDurationUnitValue","id_sell","getDurationUnitText","unshift","clearTable","initializePortfolio","purchase","portfolio_pos","active_positions","portfolioHandler","transactionHandler","parseFloat","details","obj_duration","duration_ms","asMilliseconds","unit_map","_chartBarrierStore","_chartMarkerStore","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_queryString","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validationRules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor35","changeDurationValidationRules","changeAllowEquals","delay","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_equal_checked","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","getProposalInfo","setChartBarrier","query_params","duration_options","hasCallPutEqual","contract_type_list","check_callput_equal_duration","contract_duration_list","rise_fall_equal","hasDurationForCallPutEqual","is_allow_equal","_ref6","_callee4","_context4","refresh","prepareTradeStore","_x3","runInAction","_callee6","_context6","_this9","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","start_moment_clone","_value$split","_value$split2","_proposal_response$ec","Duration","StartDate","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeStartDate","onChangeExpiry","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","market_open_times","createProposalRequestForContract","ask_price","contract_basis","obj_contract_basis","toFixed","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","getDurationFromUnit","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_baseName2","_header2","_errorBoundary2","_appContents2","_routes2","_PositionsDrawer2","_toastMessage2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","_ttReactCustomScrollbars","PositionsDrawer","active_contract_id","onClickSell","onClickRemove","toggleDrawer","body_content","_emptyPortfolioMessage2","enter","enterDone","exit","_positionsDrawerCard2","active_position","positions-drawer--open","IconMinimize","Scrollbars","autoHide","removePositionById","togglePositionsDrawer","IconArrow","_ref$is_bold","is_bold","fillOpacity","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconCountryFlag","IconCountry","xlinkHref","mask","strokeOpacity","IconClear","IconBell","IconCashier","IconHamburger","IconTrade","_helpers2","PositionsDrawerCard","percentage","getTimePercentage","_resultOverlay2","_binaryLink2","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--orange","positions-drawer-card--red","_contractTypeCell2","_ProgressSlider2","ticks_count","has_result","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","_resultDetails2","contract_end_time","contract_start_time","IconType","ProgressSlider","current_tick","_positionsProgressTicks2","_remainingTime2","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","ProgressTicks","arr_ticks","ticks__step--active","ticks__step--marked","ResultDetails","toggleDetails","result-details__toggle--is-open","ResultOverlay","positions-drawer-card__result--won","positions-drawer-card__result--lost","result__caption--won","result__caption--lost","_icCheck2","_icCross2","styles","_durationPercentage","duration_from_purchase","round","SmartChart","form_wrapper_class","should_show_last_digit_stats","Suspense","fallback","_infoBox2","onSymbolChange","updateChartType","updateGranularity","_test2","_formLayout2","is_contract_visible","_contractDetails2","Test","setVisibility","stateVisibility","container","fontSize","lineHeight","zIndex","background","padding","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","entries","v","_ref4","FormLayout","_screenSmall2","_screenLarge2","ScreenLarge","sidebar__items--slideout","_contractType2","_tradeParams2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","onSubmitButtonClick","handleInfoVisibility","handleInfoClick","handleNavigationClick","handleNextClick","navigationList","navigationLength","nextIndex","list_item","handlePrevClick","prevIndex","setWrapperRef","wrapper_ref","is_dialog_open","is_info_dialog_open","onWidgetClick","onBackButtonClick","getDisplayText","_this$props","findInArray","getNavigationList","contract-type-widget__display--clicked","IconTradeCategory","category","_contractTypeDialog2","_contractTypeList2","_tradeTypeInfoDialog2","_tradeTypeInfoItem2","IconCategory","ContractTypeDialog","_fullScreenDialog2","element","ContractTypeList","_contractTypeItem2","objectOrObservableObject","ContractTypeItem","TradeTypeInfoDialog","_tradeCategories","TradeTypeInfoItem","TradeCategories","trade-type-info-navigation__circle-button--active","TradeTypeTemplate","_popconfirm","_popconfirmElement","handleClose","handleOpen","popconfirm_element","cloneElement","_iconPriceMove","ContractInfo","trade-container__error","IconPriceMove","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchaseResult2","PurchaseResult","_errorBalance","_errorGeneral","_errorLogin","_iconLock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_DropDown2","is_alignment_left","_inputField2","_allowEquals2","observableObject","Dropdown","list_ref","createRef","curr_index","getItemFromValue","is_list_visible","onKeyPressed","is_single_option","getValueFromIndex","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","_nativeSelect2","left_alignment_style","list_width","isArrayLike","dropdown--left","dropdown--show","dropdown--disabled","dropdown__display--clicked","dropdown__select-arrow--left","onEntered","offsetWidth","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","renderThumbHorizontal","_items2","highlightedIdx","items","Items","list__item--selected","list__item--highlighted","NativeSelect","isArray","AllowEquals","_Barriers","barrier_title","input_class","IconBarrierUp","IconBarrierDown","_iconBarrierUp","_iconBarrierDown","DurationWrapper","hasDurationUnit","duration_list","is_advanced_duration","du","new_duration_unit","new_duration_value","onChangeUiStore","onChangeMultiple","current_unit","advanced_duration_unit","simple_duration_unit","current_duration","simple_is_missing_duration_unit","current_duration_unit","has_missing_duration_unit","simple_is_not_type_duration","advanced_has_wrong_expiry","advanced_expiry_type","setDurationUnit","_duration2","duration_d","duration_h","duration_m","duration_s","duration_t","expiry_list","has_end_time","expiry","pop","duration_unit_text","changeDurationUnit","duration_value","shared_input","duration_name","number_input","has_toggle","_RangeSlider2","_advancedDuration2","number_input_props","shared_input_props","_simpleDuration2","_durationToggle2","new_trade_store_values","RangeSlider","first_tick","range-slider__error","steps","_tickSteps2","TickSteps","range-slider__ticks-step--active","range-slider__ticks-step--marked","DurationToggle","icon_className","advanced-simple-toggle__icon--active","AdvancedDuration","is_24_hours_contract","has_intraday_duration_unit","isSame","endtime_container_class","has-time","_buttonToggleMenu2","_DatePicker2","_TimePicker2","TradingDatePicker","max_date_duration","min_date_expiry","has_today_btn","moment_contract_start_date_time","max_daily_duration","daily","disable_year_selector","disable_trading_events","has_range_selection","min_date","max_date","DatePicker","date_value","holidays","is_datepicker_visible","is_clear_btn_visible","weekends","onClickOutside","mainNode","updateDatePickerValue","is_clearable","onSelectCalendar","onChangeInput","formatted_value","clearDatePickerInput","calendar","resetCalendar","new_value","new_date_value","new_date","current_date","_this$props2","renderInputField","_this$props3","initial_value","onChangeCalendarMonth","getTradingEvents","trading_events","events","dates","descrip","nativeEvent","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","_Calendar2","onSelect","duration_date","defaultProps","Calendar","_initialiseProps","calendar_view","hovered_date","_state","default_message","is_minimum","_calendarHeader2","navigateTo","switchView","_calendarBody2","onMouseOver","_calendarFooter2","setToday","view","start_of_month","getAttribute","updateSelectedDate","_props2","dataset","is_before","is_after","stopPropagation","month","decade","_props3","default_date","_props4","now","_props5","start_of_period","endOf","arrayOf","shape","_panels","CalendarBody","calendar_body","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendarDays","_calendarMonths","_calendarYears","_calendarDecades","days","moment_today","moment_cur_date","daysInMonth","moment_month_start","moment_month_end","moment_selected","padLeft","start_of_next_month","moment_start_date","moment_hovered","is_active","is_today","has_events","is_closes_early","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","getDays","moment_selected_date","data-month","_helper","_getDecade$split","_getDecade$split2","start_of_decade","end_of_decade","years","is_other_decade","data-year","decades","min_year","_decade$split","_decade$split2","is_other_century","data-decade","CalendarFooter","CalendarHeader","disable_month_selector","is_date_view","is_month_view","is_year_view","is_decade_view","century","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","_calendarButton2","calendar__nav--disabled","is_hidden","calendar__btn--disabled","CalendarButton","_endTime","TradingTimePicker","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","getBoundaries","selected_time","getSelectedTime","TimePicker","toggleDropDown","handleChange","arg","saveRef","nodeName","target_element","prefix_class","_dialog2","preClass","Dialog","start_time_moment","end_time_moment","milliseconds","to_compare_moment","_selected_time$split","_selected_time$split2","selectOption","current_value","prev_value","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","is_enabled","mm","getClosestTime","interval","market_open_time","SimpleDuration","has_label","arr","filtered_arr","filterMinutesAndTicks","arr_five","_numberSelector2","arr_arr_numbers","selected_number","NumberSelector","arr_numbers","number-selector__selection--selected","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobileWidget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_detailsGroup2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_iconTick2","won","lost","IconTick","circle_color","tick_color","msg","_localize3","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","last","ContractError","_ref$message","InfoBoxGeneral","digits_array","latest_digit","display_array","last_item","_digitDisplay2","digit_info","digit_number","_infoBoxExpired2","DigitDisplay","_ref$digit_info","digit_class","SellInfo","is_started","_contractSell2","ContractSell","_sellButton2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","_closeButton2","CloseButton","ToastMessage","toast","_ToastMessage2","AppContents","app-contents--show-positions-drawer","app-contents--contract-mode","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","TogglePositions","NetworkStatus","_serverTime2","ToggleFullScreen","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","gmt_time","_networkStatus","_toggleFullscreen","_togglePositions","_toggleSettings","tooltip","network-status__circle--offline","class","network-status__circle--online","network-status__circle--blinker","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","IconMaximize","IconPositions","IconSettings","toggle_positions_class","ic-positions--active","toggle_settings_class","ic-settings--active","_settingsDialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings-dialog__container--show","settings_dialog_container_class","settings-dialog__container--hide","Tabs","classNameHeader","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabsWrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","icon_name","tab__icon","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settingsControl2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_languageDialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","settings-dialog__language-dialog-container--show","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","UpgradeButton","DepositButton","LoginButton","_accountInfo","_depositButton","_installPwaButton","_loginButton","_upgradeButton","_menuLinks","_toggleMenuDrawer","_toggleNotificationsDrawer","_AccountSwitcher","acc-info--show","acc-info--is-virtual","AccountSwitcher","_accountSwitcher","_AccountsCurrency","_Drawer","accounts_toggle_btn","handleLogout","account_loginid","real_accounts","vrt_account","main_account_title","acc-switcher__account--selected","doSwitch","IconAccountsCurrency","virtual_loginid","IconLogout","account_switcher","virtual_account_loginid","_icon_accounts_currency","IconCurrency","prompt","userChoice","choice_result","outcome","Switch","_routeWithSubRoutes2","LoginPrompt","onSignup","_localize2","3_2","website_name","ToggleDrawer","_menuDrawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","ToggleNotificationsDrawer","Notifications","_notifications","_emptyNotification","EmptyNotification","Routes","_Routes2","onCancel","DenialOfServiceModal","_fullPageModal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,aAAA,GAGAZ,KAQA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAA,SAAAhC,GACA,IAAAiC,KAKAC,EAAA3B,EAAAP,GACA,OAAAkC,EAGA,GAAAA,EACAD,EAAAzB,KAAA0B,EAAA,QACK,CAEL,IAAAC,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACAJ,EAAA3B,EAAAP,IAAAqC,EAAAC,KAEAL,EAAAzB,KAAA0B,EAAA,GAAAC,GAGA,IAEAI,EAFAC,EAAAC,SAAAC,qBAAA,WACAC,EAAAF,SAAAG,cAAA,UAGAD,EAAAE,QAAA,QACAF,EAAAG,QAAA,IACArB,EAAAsB,IACAJ,EAAAK,aAAA,QAAAvB,EAAAsB,IAEAJ,EAAAM,IA3DA,SAAAjD,GACA,OAAAyB,EAAAyB,EAAA,KAAyCC,IAAA,MAAAC,iBAAA,mBAAAC,SAAA,WAAAC,uBAAA,yBAAAC,iBAAA,mBAAAC,SAAA,WAAAC,qBAAA,uBAAAC,OAAA,SAAAC,cAAA,gBAAAC,iBAAA,mBAAAC,UAAA,YAAAC,eAAA,iBAAAC,SAAA,WAAAC,UAAA,YAAAC,sBAAA,sBAAAC,YAAA,eAA4elE,OAAA,KAA6BmD,IAAA,uBAAAC,iBAAA,uBAAAC,SAAA,uBAAAC,uBAAA,uBAAAC,iBAAA,uBAAAC,SAAA,uBAAAC,qBAAA,uBAAAC,OAAA,uBAAAC,cAAA,uBAAAC,iBAAA,uBAAAC,UAAA,uBAAAC,eAAA,uBAAAC,SAAA,uBAAAC,UAAA,uBAAAC,sBAAA,uBAAAC,YAAA,wBAAsmBlE,GAAA,MA0DxpCmE,CAAAnE,GAEAuC,EAAA,SAAA6B,GAEAzB,EAAA0B,QAAA1B,EAAA2B,OAAA,KACAC,aAAAzB,GACA,IAAA0B,EAAAjE,EAAAP,GACA,OAAAwE,EAAA,CACA,GAAAA,EAAA,CACA,IAAAC,EAAAL,IAAA,SAAAA,EAAAM,KAAA,UAAAN,EAAAM,MACAC,EAAAP,KAAAQ,QAAAR,EAAAQ,OAAA3B,IACA4B,EAAA,IAAAC,MAAA,iBAAA9E,EAAA,cAAAyE,EAAA,KAAAE,EAAA,KACAE,EAAAH,KAAAD,EACAI,EAAAE,QAAAJ,EACAH,EAAA,GAAAK,GAEAtE,EAAAP,QAAAgF,IAGA,IAAAlC,EAAAmC,WAAA,WACA1C,GAAwBmC,KAAA,UAAAE,OAAAjC,KAClB,MACNA,EAAA0B,QAAA1B,EAAA2B,OAAA/B,EACAC,EAAA0C,YAAAvC,GAGA,OAAAP,QAAA+C,IAAAlD,IAIAR,EAAA2D,EAAAvE,EAGAY,EAAA4D,EAAA1D,EAGAF,EAAA6D,EAAA,SAAAzD,EAAA0D,EAAAC,GACA/D,EAAAgE,EAAA5D,EAAA0D,IACA9E,OAAAiF,eAAA7D,EAAA0D,GAA0CI,YAAA,EAAAC,IAAAJ,KAK1C/D,EAAAoE,EAAA,SAAAhE,GACA,oBAAAiE,eAAAC,aACAtF,OAAAiF,eAAA7D,EAAAiE,OAAAC,aAAwDC,MAAA,WAExDvF,OAAAiF,eAAA7D,EAAA,cAAiDmE,OAAA,KAQjDvE,EAAAwE,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAvE,EAAAuE,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAA3F,OAAA4F,OAAA,MAGA,GAFA5E,EAAAoE,EAAAO,GACA3F,OAAAiF,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAvE,EAAA6D,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIA3E,EAAA+E,EAAA,SAAA1E,GACA,IAAA0D,EAAA1D,KAAAqE,WACA,WAA2B,OAAArE,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAA6D,EAAAE,EAAA,IAAAA,GACAA,GAIA/D,EAAAgE,EAAA,SAAAgB,EAAAC,GAAsD,OAAAjG,OAAAC,UAAAC,eAAAC,KAAA6F,EAAAC,IAGtDjF,EAAAyB,EAAA,WAGAzB,EAAAkF,GAAA,SAAAC,GAA8D,MAApBC,QAAAhC,MAAA+B,GAAoBA,GAE9D,IAAAE,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAtG,KAAA+F,KAAAO,GACAA,EAAAtG,KAAAX,EACAiH,IAAAG,QACA,QAAA7G,EAAA,EAAgBA,EAAA0G,EAAAxG,OAAuBF,IAAAP,EAAAiH,EAAA1G,IACvC,IAAAU,EAAAkG,EAIAhG,EAAAR,MAAA,4CAEAU,iiBCzNAgG,EAAAzF,EAAA,OAIAA,EAAA,QACAA,EAAA,mnBAEA,IAAM0F,GAAuBC,UAAU,EAAMd,KAAK,EAAMe,KAAK,KAEhDC,6IAAqBC,yDAE1B,IAAMC,KAGAC,EAAaC,KAAKC,QAAQC,WAChC,GAAIH,EACA,IAAK,IAAMnB,KAAOmB,EACdD,EAAOlB,GAAOmB,EAAWnB,GAKjC,IAAK,IAAMA,KAAOoB,KAAKG,MAAMC,MACpBX,EAAmBb,KACpBkB,EAAOlB,GAAOoB,KAAKG,MAAMC,MAAMxB,IAIvC,OAAAyB,GACIH,WAAYJ,GACTA,cAIJQ,mBACHJ,WAAYK,UAAUxB,OACtByB,OAAYD,UAAUxB,OACtB0B,OAAYF,UAAUxB,OACtB5F,QAAYoH,UAAUxB,OACtB2B,GAAYH,UAAUxB,WAMjB4B,UAAU,SAACC,EAAYC,GAAb,OAAwB,SAAAC,GAC3C,IAAKD,EACD,OAJqB,SAACA,GAAD,OAAY,SAAAC,GAAA,OAAa,EAAAtB,EAAAuB,QAAOF,EAAP,EAAe,EAAArB,EAAAwB,UAASF,KAI/DG,CAAqBL,EAArBK,CAAiCH,GAG5C,IAAMI,GAAW,EAAA1B,EAAAwB,UAASF,GAEpBK,EAPkD,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,EAAAC,EAAAxB,KAAAmB,GAAA,QAAAM,EAAAC,UAAA9I,OAAA+I,EAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAP,EAAAC,EAAAO,EAAA9B,MAAAqB,EAAAF,EAAAY,WAAAhJ,OAAAiJ,eAAAb,IAAAjI,KAAAK,MAAA8H,GAAArB,MAAAiC,OAAAN,KAAAJ,EAQpDnB,MAAQ,IAAIQ,EARwCW,EAqBpDW,WACIxC,SAAUa,UAAUxB,QAtB4B+C,EAAAP,EAAAD,GAAA,OAAAa,EAAAhB,EAO1BL,GAP0BsB,EAAAjB,IAAAvC,IAAA,SAAAN,MAAA,WAWhD,OAAO+D,UAAMnH,cACTgG,EADGb,KAGIL,KAAKG,OACRC,MAAOJ,KAAKI,QAEhBJ,KAAKG,MAAMT,cAjBiCyB,EAAA,GA0BlDmB,EAAqBxB,EAAUyB,aAC9BzB,EAAUjD,MACTiD,EAAU0B,aAAe1B,EAAU0B,YAAY3E,MAChD,UAGP,OAFAsD,EAAgBoB,YAAhB,SAAuCD,GAEhC,EAAA9C,EAAAuB,QAAOF,EAAP,CAAeM,kGC7E1BpI,OAAA0J,KAAAC,GAAAC,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwE,EAAA9D,2GCAA7F,OAAA0J,KAAAG,GAAAD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0E,EAAAhE,qBACA7F,OAAA0J,KAAAI,GAAAF,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2E,EAAAjE,qBACA7F,OAAA0J,KAAAK,GAAAH,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4E,EAAAlE,qBACA7F,OAAA0J,KAAAM,GAAAJ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6E,EAAAnE,qBACA7F,OAAA0J,KAAAO,GAAAL,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA8E,EAAApE,qBACA7F,OAAA0J,KAAAQ,GAAAN,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+E,EAAArE,qBACA7F,OAAA0J,KAAAS,GAAAP,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAgF,EAAAtE,qBACA7F,OAAA0J,KAAAU,GAAAR,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAiF,EAAAvE,qBACA7F,OAAA0J,KAAAW,GAAAT,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAkF,EAAAxE,qBACA7F,OAAA0J,KAAAY,GAAAV,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAmF,EAAAzE,qBACA7F,OAAA0J,KAAAa,GAAAX,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAoF,EAAA1E,qBACA7F,OAAA0J,KAAAc,GAAAZ,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAqF,EAAA3E,qBACA7F,OAAA0J,KAAAe,GAAAb,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAsF,EAAA5E,qBACA7F,OAAA0J,KAAAgB,GAAAd,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAuF,EAAA7E,qBACA7F,OAAA0J,KAAAiB,GAAAf,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwF,EAAA9E,qBACA7F,OAAA0J,KAAAkB,GAAAhB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAyF,EAAA/E,qBACA7F,OAAA0J,KAAAmB,GAAAjB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0F,EAAAhF,qBACA7F,OAAA0J,KAAAoB,GAAAlB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2F,EAAAjF,qBACA7F,OAAA0J,KAAAqB,GAAAnB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4F,EAAAlF,qBACA7F,OAAA0J,KAAAsB,GAAApB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6F,EAAAnF,qBACA7F,OAAA0J,KAAAuB,GAAArB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA8F,EAAApF,qBACA7F,OAAA0J,KAAAwB,GAAAtB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+F,EAAArF,qBACA7F,OAAA0J,KAAAyB,GAAAvB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAgG,EAAAtF,qBACA7F,OAAA0J,KAAA0B,GAAAxB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAiG,EAAAvF,6FCvBA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMqK,EAAS,SAAA/C,GAWT,IAVF3B,EAUE2B,EAVF3B,SAUE2E,EAAAhD,EATFiD,iBASEhH,IAAA+G,EATU,GASVA,EARFE,EAQElD,EARFkD,cACAC,EAOEnD,EAPFmD,WACAC,EAMEpD,EANFoD,GACAC,EAKErD,EALFqD,YACAC,EAIEtD,EAJFsD,QACAC,EAGEvD,EAHFuD,SACAC,EAEExD,EAFFwD,KACAC,EACEzD,EADFyD,iBAEMC,GAAU,EAAAC,EAAAC,SAAW,OAASC,OAAQV,GAAcF,GACpDa,EACFC,EAAAH,QAAA/J,cAAA,UACIuJ,GAAIA,EACJH,UAAWS,EACXJ,QAASA,QAAWrH,EACpB+H,SAAUX,EACVE,SAAUA,GAAY,KAEtBQ,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAW,YAAaV,IAAiBM,GACzDnF,GAGH4F,EAAWF,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWQ,GAAmBK,GAEpD,OAAOL,EAAmBQ,EAAUH,GAGxCf,EAAOlC,WACHxC,SAAkBa,UAAUgF,KAC5BjB,UAAkB/D,UAAUiF,OAC5BhB,WAAkBjE,UAAUkF,KAC5BhB,GAAkBlE,UAAUiF,OAC5Bd,YAAkBnE,UAAUkF,KAC5Bd,QAAkBpE,UAAUmF,KAC5Bb,KAAkBtE,UAAUiF,OAC5BV,iBAAkBvE,UAAUiF,kBAGjBpB,sIC7CfrL,OAAA0J,KAAAkD,GAAAhD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAyH,EAAA/G,yFACOgH,gCACAC,4iBCFPC,EAAA/L,EAAA,GAOAgM,EAAAhM,EAAA,uDACAA,EAAA,MACAiM,EAAAjM,EAAA,mtBAOqBkM,KAuPhBC,SAAOC,QA2BPD,SAAOC,QAQPD,SAAOC,qBA7PR,SAAAF,IAA0B,IAAdG,EAAc1E,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,mGAAAF,CAAAxB,KAAAiG,GAAAI,EAAArG,KAAA,oBAAAsG,EAAAtG,MAAAqG,EAAArG,KAAA,mBAAAuG,EAAAvG,WAb1BwG,sBAAwB,KAaExG,KAZ1ByG,wBAA0B,KAYA,IAElBC,EAKAN,EALAM,WACAC,EAIAP,EAJAO,yBACAC,EAGAR,EAHAQ,2BACAC,EAEAT,EAFAS,iBACAC,EACAV,EADAU,WAmBJ,GAhBA/N,OAAOiF,eAAegC,KAAM,cACxB/B,YAAY,EACZ8I,UAAY,IAEhBhO,OAAOiF,eAAegC,KAAM,4BACxB/B,YAAY,EACZ8I,UAAY,IAEhBhO,OAAOiF,eAAegC,KAAM,8BACxB/B,YAAY,EACZ8I,UAAY,IAGqBJ,GAA4BA,EAAyB/N,QACnFgO,GAA8BA,EAA2BhO,OAE9B,CAC9B,IAAKkO,EACD,MAAM,IAAI1J,MAAM,oDAGpBrE,OAAOiF,eAAegC,KAAM,cACxB1B,MAAYwI,EACZ7I,YAAY,EACZ8I,UAAY,IAIpB/G,KAAK0G,WAA6BA,EAClC1G,KAAK2G,yBAA6BA,MAClC3G,KAAK4G,2BAA6BA,MAClC5G,KAAKgH,mBAAmBH,GAExB7G,KAAKiH,+BACLjH,KAAKkH,iCACLlH,KAAKmH,oEAUGC,GACR,IAAIC,GAAW,EAAAvB,EAAAwB,MAAKtH,MAapB,OAXK,EAAA+F,EAAAwB,eAAcvH,KAAK0G,cACpBW,EAASX,WAAa1G,KAAK0G,YAG3BU,GAAcA,EAAWxO,SACzByO,EAAWD,EAAWI,OAClB,SAAC/N,EAAQ+B,GAAT,OAAezC,OAAO0O,OAAOhO,EAAdiO,KAAyBlM,EAAI6L,EAAS7L,WAKtD6L,yDAQoB,IAAAM,EAAA3H,KACvBA,KAAK2G,yBAAyB/N,SAC9B,EAAAkN,EAAA8B,UACI,kBAAMD,EAAKhB,yBAAyBkB,IAAI,SAAAnP,GAAA,OAAKiP,EAAKjP,MAClD,kBAAMiP,EAAKG,cAAcH,EAAKhB,yBAA0BV,EAAU8B,SAASC,0EAUtD,IAAAzG,EAAAvB,KACzBA,KAAK4G,2BAA2BhO,SAChC,EAAAkN,EAAA8B,UACI,kBAAMrG,EAAKqF,2BAA2BiB,IAAI,SAAAnP,GAAA,OAAK6I,EAAK7I,MACpD,kBAAM6I,EAAKuG,cAAcvG,EAAKqF,2BAA4BX,EAAU8B,SAASE,yDAY3Eb,EAAYc,GACtB,IAAMb,EAAWc,KAAKC,UAAUpI,KAAKqI,YAAYjB,GAAa,SAACxI,EAAKN,GAChE,GAAc,OAAVA,EAAgB,OAAOA,IAI3B4J,IAAYjC,EAAU8B,SAASC,cAC/BM,aAAaC,QAAQvI,KAAK8G,WAAYO,GAC/Ba,IAAYjC,EAAU8B,SAASE,iBACtCO,eAAeD,QAAQvI,KAAK8G,WAAYO,iDAS1B,IAAAoB,EAAAzI,KACZ0I,EAA2BP,KAAKQ,MAAML,aAAaM,QAAQ5I,KAAK8G,gBAChE+B,EAA2BV,KAAKQ,MAAMH,eAAeI,QAAQ5I,KAAK8G,gBAElEO,OAAgBqB,EAA2BG,GAEjD9P,OAAO0J,KAAK4E,GAAU1E,QAAQ,SAACmG,GAAD,OAAOL,EAAKK,GAAKzB,EAASyB,wDAWjCC,EAAcC,GACrChJ,KAAKiJ,kBAAkBF,GAAgBC,+CAUZ,IAAAE,EAAAlJ,KAAZmJ,EAAYzH,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MAC3B3I,OAAO0J,KAAK0G,GAAOxG,QAAQ,SAAA/D,GACvBsK,EAAKE,QAAQxK,EAAKuK,EAAMvK,sCAYxBI,EAAUmK,GAAO,IAAAE,EAAArJ,KACrBA,KAAK6G,iBAAiB7H,GAAYmK,GAElC,EAAArD,EAAAwD,WAAUtJ,KAAMhB,EAAU,SAAAuK,GAEtB,OADAF,EAAKG,iBAAiBxK,EAAUuK,EAAOE,UAChCF,6CAYEvK,EAAUV,GAAO,IAAAoL,EAAA1J,KACxB2J,EAAmB3J,KAAK6G,iBAAiB7H,GAAU2K,QACnDC,OAAsB5K,OAAqB1B,IAAVgB,EAAsBA,EAAQ0B,KAAKhB,IACpE6H,OAAsB7H,EAAYgB,KAAK6G,iBAAiB7H,GAAUmK,WAElEQ,GAAW5Q,OAAOE,eAAeC,KAAK8G,KAAM2J,KAC9CC,EAAOD,GAAqB3J,KAAK2J,GACjC9C,EAAiB8C,GAAW3J,KAAK6G,iBAAiB8C,GAASR,WAG/D,IAAMU,EAAY,IAAIC,UAClBF,EACA/C,EACA7G,MAGJ6J,EAAUE,WAEVhR,OAAO0J,KAAKmH,GAAQjH,QAAQ,SAAA/D,GACxB8K,EAAKM,2BAA2BpL,EAAKiL,EAAUI,OAAO/L,IAAIU,sDAS1C,IAAAsL,EAAAlK,KACpBA,KAAKiJ,qBACLlQ,OAAO0J,KAAKzC,KAAK6G,kBAAkBlE,QAAQ,SAAAnH,GACvC0O,EAAKV,iBAAiBhO,EAAG0O,EAAK1O,8CAKtB2O,GAAU,IAAAC,EAAApK,KACtBA,KAAKwG,uBAAwB,EAAAV,EAAAuE,MACzB,kBAAMD,EAAK1D,WAAWlG,OAAO8J,2SADJC,CAAAC,mBAAAC,KAEzB,SAAAC,IAAA,IAAAjR,EAAA,OAAA+Q,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,IAEcpR,EAAS2Q,EAAK3D,6BACNhN,EAAOsR,MAA+B,mBAAhBtR,EAAOsR,KAHnD,CAAAH,EAAAE,KAAA,QAIYrR,EAAOsR,KAAK,WACRX,EAAK1D,WAAWlG,OAAOwK,kBACvBZ,EAAKa,gBAAgBb,EAAK3D,2BAN1CmE,EAAAE,KAAA,qBASkB,IAAI1N,MAAM,iEAT5B,OAAAwN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,UAca,EAAA5E,EAAAmF,iBACDhM,QAAQhC,MAARyN,EAAAM,IAfZ,yBAAAN,EAAAQ,SAAAV,EAAAN,IAAA,WAoBJpK,KAAKyG,wBAA0B0D,iDAKW,mBAA/BnK,KAAKwG,uBACZxG,KAAKwG,wBAETxG,KAAKyG,wBAA0B,yCAK/BzG,KAAKqL,kCAvRFtD,SAAWhP,OAAOuS,QACrBtD,cAAiB5J,OAAO,iBACxB6J,gBAAiB7J,OAAO,8DAG3BmN,oGAGAA,qGA2IArF,sIAiBAA,qIAWAA,kHAcAA,gHAiBAA,8HA4BAA,ubA/OgBD,qFChBrB,QAAAlM,EAAA,QACAA,EAAA,QACAA,EAAA,IACAyR,EAAAzR,EAAA,uDAEA,IAAM0R,EAAQ,SAAApK,GAMR,IALFqK,EAKErK,EALFqK,OACApH,EAIEjD,EAJFiD,UAIEqH,EAAAtK,EAHFuK,gBAGEtO,IAAAqO,EAHS,MAGTA,EAFFE,EAEExK,EAFFwK,SAEEC,EAAAzK,EADF0K,oBACEzO,IAAAwO,KACEE,EAAO,IACNN,IAAWA,EAAS,GAAKG,KAC1BG,EAAON,EAAS,EAAI,IAAM,KAG9B,IAAMO,EAAYC,KAAKC,IAAIT,GACrBU,EAAeL,GAAe,EAAAP,EAAAa,aAAYT,EAAUK,GAAW,GAAQA,EAE7E,OACI7G,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACKN,EACD5G,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAWX,EAAW,UAAtB,YAA6CsH,EAASW,iBACtEH,IAKbX,EAAMvJ,WACFwJ,OAAQnL,UAAUiM,WACdjM,UAAUkM,OACVlM,UAAUiF,SAEdlB,UAAc/D,UAAUiF,OACxBoG,SAAcrL,UAAUiF,OACxBqG,SAActL,UAAUkF,KACxBsG,aAAcxL,UAAUkF,gBAGbgG,8FCxCf1S,OAAA0J,KAAAiK,GAAA/J,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwO,EAAA9N,qBACA7F,OAAA0J,KAAAkK,GAAAhK,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAyO,EAAA/N,qBACA7F,OAAA0J,KAAAmK,GAAAjK,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0O,EAAAhO,qBACA7F,OAAA0J,KAAAoK,GAAAlK,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2O,EAAAjO,qBACA7F,OAAA0J,KAAAqK,GAAAnK,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4O,EAAAlO,qBACA7F,OAAA0J,KAAAsK,GAAApK,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6O,EAAAnO,gDCKA,IAAMoO,GACFC,aAAc,EACdC,YAAc,OAGZC,EAAyB,kBAC3BpU,OAAO0J,KAAKuK,GAAgBI,KAAK,SAAAC,GAAA,OAAU,IAAIC,OAAJ,IAAeD,EAAf,IAA0B,KAAKE,KAAKlO,OAAOmO,SAASC,aAE7FtC,EAAe,WACjB,IAAMuC,EAAc3U,OAAO0J,KAAKuK,GAAgBnF,IAAI,SAAAwF,GAAA,eAAmBA,EAAOM,QAAQ,IAAK,SAC3F,OAAO,IAAIL,OAAJ,KAAgBI,EAAYE,KAAK,KAAjC,KAA2C,KAAKL,KAAKlO,OAAOmO,SAASC,WAK1EI,EAAW,WACb,IAAIC,EAAS,KAEPC,EAAgB1O,OAAOiJ,aAAaM,QAAQ,iBAC5CoF,EAAgB,UAAUT,KAAKlO,OAAOmO,SAASS,UAsBrD,OArBIF,EACAD,EAASC,EACF,eAAeR,KAAKlO,OAAOmO,SAASU,OAAS7O,OAAOiJ,aAAaM,QAAQ,0BAChFvJ,OAAOiJ,aAAa6F,WAAW,yBAC/B9O,OAAOiJ,aAAaC,QAAQ,wBAAyB,GACrDuF,EAZsB,OAaf,wBAAwBP,KAAKlO,OAAOmO,SAASC,WACpDpO,OAAOiJ,aAAa6F,WAAW,yBAC/BL,EAAS,MAXS,GAYClV,QACnByG,OAAOiJ,aAAaC,QAAQ,wBAbV,IAclBuF,EAdkB,IAeX,aAAaP,KAAKlO,OAAOmO,SAASC,UACzCK,EAAS,KACFE,GACP3O,OAAOiJ,aAAa6F,WAAW,yBAC/BL,EAAS,QAETzO,OAAOiJ,aAAa6F,WAAW,yBAC/BL,EAASd,EAAeG,MAA6B,GAElDW,GA+CX1T,EAAOD,SACHgT,yBACAhC,eACA0C,WACAO,YAhDgB,kBA/BU,QA+BHP,KAiDvBQ,aA/CiB,WACjB,IAAIC,EAAajP,OAAOiJ,aAAaM,QAAQ,qBAC7C,IAAK0F,EAAY,CA+Bb,IAAMC,EAAgBlP,OAAOiJ,aAAaM,QAAQ,kBAC5C4F,EAAgBD,IAAY,OAAOhB,KAAKgB,GAG9CD,GAFsBnD,KAAkBqD,EAAU,QAAU,QAE5D,gBAEJ,eAAgBF,EAAhB,86BC/FJvU,EAAA,KACA0U,EAAA1U,EAAA,GACAgM,EAAAhM,EAAA,GAGA2U,EAAA3U,EAAA,IACA4U,EAAA5U,EAAA,IAIA6U,EAAA7U,EAAA,KACA8U,EAAA9U,EAAA,IAGA+U,EAAA/U,EAAA,KAGAgV,EAAAhV,EAAA,6HAKA,IAAMiV,EAAgB,WAClB,IAAIC,KACAC,KACAC,SACEC,KAiGAC,EAAwB,SAACvT,GAA+B,IAArBwT,EAAqB5N,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MAE1D,OADA4N,EAAYxT,EAASyT,eAAiBzT,EAAS0T,iBACxCF,GAGLG,EAAuB,SAACC,EAAgBpR,GAAjB,OACU,IAAnCoR,EAAeC,QAAQrR,GAAgBA,EAAQoR,EAAe,IAqC5DE,EAAgB,SAACC,GAAD,OAAeC,iBAAkB,WAAY,UAA9B7N,OAAA8N,EAA2CZ,EAAeU,GAAQG,eAEjGC,EAAuB,SAACV,EAAeW,GAAhB,OACzBC,qBAAqB,EAAApK,EAAAqK,kBAAiBnB,GAA2BM,EAAe,SAAU,YAAa,gBAAiBW,UAGtHG,EAAkB,SAACC,EAAef,EAAeW,GACnD,IACMK,KAKN,QANuB,EAAAxK,EAAAqK,kBAAiBnB,GAA2BM,EAAe,SAAU,YAAa,gBAAiBW,SAE3GvN,QAAQ,SAAA6N,GACnBD,EAAUzX,KAAK0X,EAAIlS,UAInBgS,cAAeb,EAAqBc,EAAWD,KAIjDG,EAAoB,SAAClB,EAAeW,EAAqBQ,GAC3D,IAAIC,GAAmB,EAAA5K,EAAAqK,kBAAiBnB,GAA2BM,EAAe,SAAU,YAAa,UAAWW,QAMpH,OAJIQ,IACAC,EAAmBA,EAAiBD,SAG/BC,qBAKPC,EAAe,SAACC,GAAD,OAEjBX,oBAAqBW,IAAeC,OAAO,GAAK,OAAS,YAGvDC,EAAgB,SAACxB,EAAeyB,GAClC,IAAMC,GAAmB,EAAAlL,EAAAqK,kBAAiBnB,GAA2BM,EAAe,WAC9E2B,KAaN,OAXID,EAAOE,UAEPD,EAAiBpY,MAAO+L,MAAM,EAAA4J,EAAA2C,UAAS,OAAQ9S,MAAOwS,OAAO,KAE7DG,EAAOI,wBACPH,EAAiBpY,KAAjBS,MAAA2X,EAAAnB,EAAyBkB,EAAOI,0BAM3BR,WAHUK,EAAiB9D,KAAK,SAAAkE,GAAA,OAAQA,EAAKhT,QAAU0S,IAC5DA,EAAqBE,EAAiB,GAAG5S,MAExB4S,qBAUnBK,KAAUtP,OAAA8N,EAAInO,MAAM,IAAIa,SAAQoF,IAAI,SAAC2J,GAAD,OAAK,IAAIA,GAAIjS,OAAO,KACxDkS,KAAUxP,OAAA8N,EAAInO,MAAM,IAAIa,SAAQoF,IAAI,SAAC2J,GAAD,OAAK,IAAQ,EAAJA,GAAQjS,OAAO,KAE5DmS,EAAe,SAACC,EAAUC,EAAgBC,GAW5C,OAVIF,KAAa,EAAA7C,EAAAgD,oBAAmBH,EAAUC,KAE1CA,EAAeG,OAAON,EAAQrE,KAAK,SAAA1P,GAAA,OAAK,EAAAoR,EAAAgD,oBAAmBH,EAAUC,EAAeG,OAAOrU,OAAQkU,EAAeI,OAAO,QAEpH,EAAAlD,EAAAgD,oBAAmBH,EAAUC,KAC9BA,EAAeG,OAAO,GACtBH,EAAeK,KAAKV,EAAMnE,KAAK,SAAA8E,GAAA,OAAK,EAAApD,EAAAgD,oBAAmBH,EAAUC,EAAeK,KAAKC,GAAIL,GAAc,MAAUD,EAAeI,OAAO,OACvIJ,EAAeG,OAAON,EAAQrE,KAAK,SAAA1P,GAAA,OAAK,EAAAoR,EAAAgD,oBAAmBH,EAAUC,EAAeG,OAAOrU,OAAQkU,EAAeI,OAAO,SAG1HJ,EAAeI,OAAO,UAG3BG,EAAc,SAACC,EAAMC,GAAS,IAAAhR,GACP,EAAAsN,EAAA2D,aAAYD,GAAQA,EAAKE,MAAM,MAAQ,EAAG,GADnCC,EAAAC,EAAApR,EAAA,GACxB4Q,EADwBO,EAAA,GAClBT,EADkBS,EAAA,GAEhC,OAAO,EAAA7D,EAAA+D,UAASN,GAAQO,UAAWzU,OAAO+T,KAAKA,GAAMF,OAAOA,IAO1Da,aAAA,IAAAC,2RAAAtI,CAAAC,mBAAAC,KAAkB,SAAAC,EAAO0H,GAAP,IAAAU,EAAApa,EAAAqa,EAAAnZ,EAAAoZ,EAAAlK,EAAAmK,EAAaC,EAAbxR,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAA0B,KAA1B,OAAA8I,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACfsH,EADe,CAAAxH,EAAAE,KAAA,eAAAF,EAAAuI,OAAA,uBAKdf,KAAQhD,EALM,CAAAxE,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAMqBjF,KAAG+M,gBAAgBR,GANxC,OAQhB,GAFMU,EANUlI,EAAAwI,MAQZ,EAAArN,EAAAqK,kBAAiB0C,GAAyB,gBAAiB,YAC3D,IAASpa,EAAI,EAAGA,EAAIoa,EAAuB1D,cAAciE,QAAQza,OAAQF,IAErE,GADMqa,EAAaD,EAAuB1D,cAAciE,QAAQ3a,GAAGqa,WAE/D,IAASnZ,EAAI,EAAGA,EAAImZ,EAAWna,OAAQgB,IAEnC,GADMoZ,EAAUD,EAAWnZ,GAAGoZ,QAE1B,IAASlK,EAAI,EAAGA,EAAIkK,EAAQpa,OAAQkQ,IAC1BmK,EAASD,EAAQlK,GAClBsG,EAAc0D,EAAuBQ,SAASlE,iBAC/CA,EAAc0D,EAAuBQ,SAASlE,mBAElDA,EAAc0D,EAAuBQ,SAASlE,eAAe6D,EAAOA,SAChEM,KAASN,EAAOO,MAAMD,KACtBE,MAASR,EAAOO,MAAMC,OAtBlC,cAAA7I,EAAAuI,OAAA,SAgCbD,EAAa9D,EAAcgD,GAAMc,GAAc9D,EAAcgD,IAhChD,wBAAAxH,EAAAQ,SAAAV,OAAApN,MAAlB,gBAAAoW,GAAA,OAAAb,EAAAtZ,MAAAyG,KAAA0B,YAAAkR,GAwHAe,EAAgB,SAACpE,GAAD,OAClBD,aAAa,EAAAvJ,EAAAqK,kBAAiBnB,GAA2BM,EAAe,SAAU,kBAGhFqE,EAAc,SAACrE,EAAesE,GAChC,IAAMC,GAAiB,EAAA/N,EAAAqK,kBAAiBnB,GAA2BM,EAAe,SAAU,iBACtFwE,EAAiBD,EAASD,OAC1BG,EAAiBD,EAAeE,SAAWF,EAAeG,cAAgB,GAC1EC,EAAiBJ,EAAeK,aAAe,GACrD,OACIC,cAAeP,EAASQ,OAAS,EACjCN,UAAeA,EAAUO,WACzBJ,UAAeA,EAAUI,aAI3BC,EAAW,SAACjF,EAAekF,GAC7B,IAAMC,GAAa,EAAA3O,EAAAqK,kBAAiBnB,GAA2BM,EAAe,cACxEoF,GAAkB,EAAA5F,EAAA6F,qBAKxB,OACIC,WALeH,EAAUlN,OAAO,SAACsN,EAAKC,GAAN,SAAA9S,OAAA8N,EAC5B+E,KAAOjQ,KAAM8P,EAAgBI,GAAMzW,MAAOyW,UAK9CN,MAAOhF,EAAqBiF,EAAWD,KAI/C,OACIO,yBAtX6B,SAAC/B,GAAD,OAAYpN,KAAGoP,aAAahC,GAAQlI,KAAK,SAAA5M,GACtE,IAAM+W,GAAsB,EAAAnG,EAAAoG,+BAC5BhG,GAAiB,EAAAJ,EAAAqG,0BAEjBnG,KACAC,GAAuB,EAAAnJ,EAAAsP,aAAYH,GAEnC/W,EAAEmX,cAAcC,UAAU5S,QAAQ,SAAC7G,GAC/B,IAAMkB,EAAOjE,OAAO0J,KAAK0M,GAAgB/B,KAAK,SAAAxO,GAAA,OAC2B,IAArEuQ,EAAevQ,GAAK0Q,YAAYK,QAAQ7T,EAASyT,sBACH,IAAtCJ,EAAevQ,GAAKyV,gBAAkClF,EAAevQ,GAAKyV,gBAAkBvY,EAASgY,YAGjH,GAAK9W,EAAL,CAiDA,IAAKiS,EAAyBjS,GAAO,CAEjC,IAAMwY,EAAWtG,EAAqBnW,OAAO0J,KAAKyM,GAC7C9B,KAAK,SAAAxO,GAAA,OAAoD,IAA7CsQ,EAAqBtQ,GAAK+Q,QAAQ3S,MAEnD,IAAKwY,EAAU,OAEfA,EAASA,EAAS7F,QAAQ3S,KAAWsB,MAAOtB,EAAM6H,KAAMsK,EAAenS,GAAMyY,OAG7ExG,EAAyBjS,IAAQ,EAAA+I,EAAAsP,aAAYlG,EAAenS,IAEhE,IAAMiU,EAAShC,EAAyBjS,GAAMiU,WAG9CA,EAAOE,SAAyBF,EAAOE,UAAoC,SAAxBrV,EAAS4Z,WAC5DzE,EAAO0E,WAAyB,EAAA9G,EAAA+G,qBAAoB9Z,EAAUmV,EAAO0E,WACrE1E,EAAO3B,YAAyBD,EAAsBvT,EAAUmV,EAAO3B,aACvE2B,EAAO6C,UAAyB,EAAAlF,EAAAiH,qBAAoB/Z,EAAUmV,EAAO6C,UACrE7C,EAAOI,wBAAyB,EAAAvC,EAAAgH,4BAA2Bha,EAAUmV,EAAOI,wBAE5EpC,EAAyBjS,GAAMiU,OAASA,KAI5ClY,OAAO0J,KAAKyM,GAAsBvM,QAAQ,SAAC/D,GACvCsQ,EAAqBtQ,GAAOsQ,EAAqBtQ,GAAKmX,OAAO,SAAAzE,GAAA,MAAwB,iBAAhB,IAAOA,EAAP,YAAA0E,EAAO1E,MACnC,IAArCpC,EAAqBtQ,GAAKhG,eACnBsW,EAAqBtQ,QA6RpCgV,cACAqC,gBAtPoB,SAACC,EAAM3G,GAC3B,IAAM4G,EAAWpd,OAAO0J,KAAKyT,OACxB1O,OAAO,SAACsB,EAAGzO,GAAJ,SAAA4H,OAAA8N,EAAejH,GAAfiH,EAAqBmG,EAAK7b,GAAGwN,IAAI,SAAAuO,GAAA,OAAMA,EAAG9X,eACtD,OACIiR,cAAeE,EAAqB0G,EAAU5G,KAmPlD8G,kBAjRsB,SAACjW,GAAU,IACzBsQ,EAA0EtQ,EAA1EsQ,qBAAsBnB,EAAoDnP,EAApDmP,cAAekF,EAAqCrU,EAArCqU,MAAOnE,EAA8BlQ,EAA9BkQ,cAAeO,EAAezQ,EAAfyQ,WAC7Df,EAAoBF,EAAcL,GAClC+G,EAAoB9B,EAASjF,EAAekF,GAC5C8B,EAAoB5C,EAAcpE,GAClCiH,EAAoBzF,EAAcxB,EAAesB,GACjD4F,EAAoB7F,EAAa4F,EAAgB3F,YACjD6F,EAAoB9C,EAAYrE,EAAemB,GAC/CiG,EAAoBtG,EAAgBC,EAAef,EAAekH,EAAevG,qBAEjF0G,EAA6B3G,EAAqBV,EAAekH,EAAevG,qBAChF2G,EAA6BpG,EAAkBlB,EAAekH,EAAevG,qBAEnF,OAAA7P,KACOyP,EACAwG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IA4PPpG,oBACAJ,kBACAJ,uBACA6G,qBAvNyB,kBAAM7H,GAwN/B8H,cAnHkB,SAAC5G,EAAqB6G,EAAanD,EAAahD,GAClE,IAAIoG,EAAqB,KAEzB,GAAoB,YAAhBpD,EAA2B,CAC3B,IAAMqD,GAAgB,EAAAvI,EAAA+D,UAAS7B,GACzBsG,GAAgB,EAAAxI,EAAA+D,UAASsE,GAS3BC,GAPC,EAAApI,EAAAuI,yBAAwBjH,IAMrBgH,EAAcE,SAASH,EAAc,QAAWrG,GAAcsG,EAAcG,QAAQJ,EAAaK,QAAQC,IAAI,EAAG,QACjFN,EAAeC,GAAenF,OAAO,eANrDmF,EAAcM,eAAeP,EAAc,OAC3BA,EAAaK,QAAQC,IAAI,EAAG,OAASL,GAAenF,OAAO,cAStG,OAASgF,YAAaC,IAkGtBS,cA5FkB,SAClBV,EACAW,EACA9D,EACA+D,EACAjG,EACAd,EACAgH,GAEA,IAAIC,EAAW,KAEf,GAAoB,YAAhBjE,EAA2B,CAC3B,IAAIkE,EAAoB,WAQxB,GANIH,GAAsBA,EAAmBhf,QAAoC,OAA1Bgf,EAAmB,KAEtEG,EAAoBH,EAAmBrY,OAAO,GAAG,KAIhDsR,GAAc8B,UAAWzU,MAAMmZ,SAASlF,EAAY6E,GAAc,OACnEc,EAAWC,MACR,CACH,IAAMlG,EAAehB,EAAasB,EAAYtB,EAAYgH,GAAclF,UAAWzU,MAC7E8Z,EAAe7F,EAAY6E,EAAaW,GAE9CG,EAAWE,EAAWhG,OAAO,SAG7B,IAAMiG,IACF1E,KAAO1B,EAAa0F,QAAQC,IAAI,EAAG,UACnC/D,OAAO,EAAA9E,EAAAuJ,SAAQrG,EAAa0F,QAAQC,IAAI,GAAI,QAASrF,EAAY6E,EAAae,MAMlF,IAHK,EAAAjJ,EAAAgD,oBAAmBmG,EAAiBD,KACrCF,EAAWpG,EAAauG,EAAiBD,EAAWT,QAAS1F,EAAa0F,UAE1ES,EAAWP,eAAe5F,IAAiBmG,EAAWG,KAAKtG,EAAc,UAAY,EAAG,CACxF,IAAMuG,EAAkD,KAA9BvG,EAAa3T,IAAI,UAAmB2T,EAAa3T,IAAI,WAAa,GACtFma,EAAoB1G,KAAa,EAAA7C,EAAAgD,oBAAmBH,EAAUE,EAAa0F,QAAQC,IAAI,EAAG,YAChGM,EAAWjG,EAAa0F,QAAQC,IAAKY,GAAiBC,EAAqB,EAAI,EAAG,WAAWrG,OAAO,SAIvF,UAAb8F,GAAwBjG,EAAawF,SAASW,EAAY,SAC1DF,EAAWjG,EAAa0F,QAAQe,SAAS,EAAG,UAAUtG,OAAO,WAKzE,OAAS2F,YAAaG,IA2CtBS,cA7HkB,SAACpI,EAAqB0D,GACxC,OAAI1D,GAAsD,IAA/BA,EAAoBvX,QAAiD,MAAjCuX,EAAoB,GAAG7R,OACzEuV,YAAa,aAGjBA,gBAyHT2E,YAlMgB,SAACjJ,EAAesB,GAIhC,OAASc,aAHQ,EAAA5L,EAAAqK,kBAAiBnB,GAA2BM,EAAe,gBAEzD8B,4BAA8BjE,KAAK,SAAAqL,GAAA,OAAUA,EAAOna,QAAUuS,SAAmBc,WAgMpG+G,aAtKiB,SAAC/G,EAAUd,EAAYgH,GAAvB,OACjBA,WAAYhH,EAAaa,EAAaC,EAAUQ,EAAYtB,EAAYgH,IAAe,OAsKvFjH,eACAgC,kBACA+F,sBAAuB,kBAASC,oBAAqB1J,KA3YvC,aA+YPF,iFCraf,QAAAjV,EAAA,IACAyF,EAAAzF,EAAA,OAGAA,EAAA,QACAA,EAAA,IACA+J,EAAA/J,EAAA,KACAgK,EAAAhK,EAAA,SACAA,EAAA,SACAA,EAAA,wDAEA,IAAM8e,EAAa,SAAAxX,GA+Bb,IA9BFyX,EA8BEzX,EA9BFyX,QACAxU,EA6BEjD,EA7BFiD,UACAyU,EA4BE1X,EA5BF0X,eACAC,EA2BE3X,EA3BF2X,gBACAC,EA0BE5X,EA1BF4X,SACAC,EAyBE7X,EAzBF6X,WACAC,EAwBE9X,EAxBF8X,eACAC,EAuBE/X,EAvBF+X,kBACAC,EAsBEhY,EAtBFgY,OACA5U,EAqBEpD,EArBFoD,GACA6U,EAoBEjY,EApBFiY,yBACA5U,EAmBErD,EAnBFqD,YACA6U,EAkBElY,EAlBFkY,SACAC,EAiBEnY,EAjBFmY,iBAiBEC,EAAApY,EAhBFqY,oBAgBEpc,IAAAmc,KAAAE,EAAAtY,EAfFuY,iBAeEtc,IAAAqc,KAAAE,EAAAxY,EAdFyY,wBAcExc,IAAAuc,KAbFE,EAaE1Y,EAbF0Y,MACAC,EAYE3Y,EAZF2Y,WACAC,EAWE5Y,EAXF4Y,UACAC,EAUE7Y,EAVF6Y,UACArc,EASEwD,EATFxD,KACAsc,EAQE9Y,EARF8Y,SACAxV,EAOEtD,EAPFsD,QACAyV,EAME/Y,EANF+Y,YACAC,EAKEhZ,EALFgZ,OACAC,EAIEjZ,EAJFiZ,SACAtd,EAGEqE,EAHFrE,KACAud,EAEElZ,EAFFkZ,KACAjc,EACE+C,EADF/C,MAEMkc,EAAYrB,GAAkBA,EAAevgB,OAC/C6hB,GAAmB,EACjBC,EAAkBT,IAAc3b,IAAU2b,EAC1CU,EAAkBT,IAAc5b,IAAU4b,EA6C1CU,EAAiB,WACdF,GAGLP,GAAWjd,QAAUoB,OADKA,EAAS,EACUT,WAG3Cgd,EAAiB,WACdvc,IAASqc,GAGdR,GAAWjd,QAAUoB,OADKA,EAAS,EACUT,WAQ7Cid,EAAgBxc,EAEhBic,IACAO,EAAgBhB,EAAsBxb,EAAtB,IAA+Bic,EAAYA,EAA3C,IAAmDjc,GAGvE,IAAMyc,EAAqBvB,GAA6B,WAATxc,EAEzCge,EACF5V,EAAAH,QAAA/J,cAAA,SACI4d,QAASA,EAAU,UAAY,GAC/BxU,WAAW,EAAAU,EAAAC,SAAW8V,EAAqB,uBAAyB,GAAI,SAAWE,eAAgBT,GAAazB,GAChH1T,SAAUX,EACVwW,WAAA,iBAA2Brd,EAC3Bsd,aAAYjC,EACZkC,WAAUnC,EACVxU,GAAIA,EACJ4W,UAAWjC,EAAoBY,EAAaZ,EAAoB,EAAIY,EACpEnc,KAAMA,EACNyd,UAAW9B,EAxBE,SAAClf,GACA,KAAdA,EAAEihB,SAAgBX,IACJ,KAAdtgB,EAAEihB,SAAgBV,UAsB2Bvd,EAC7C6c,SAlFY,SAAC7f,GAKjB,GAJIigB,IACAjgB,EAAE4C,OAAOoB,MAAQhE,EAAE4C,OAAOoB,MAAMqP,QAAQ4M,EAAM,IAAIiB,QAGlDlhB,EAAE4C,OAAOoB,QAAUA,GAAkB,aAATtB,EAAhC,CAIA,GAAa,WAATA,EAAmB,CACnB,IAAMye,GAAYnhB,EAAE4C,OAAOoB,OAA4B,KAAnBhE,EAAE4C,OAAOoB,OAAmC,OAAnBhE,EAAE4C,OAAOoB,MAChEod,EAAe9B,EAAY,YAAgB,IAE3C+B,EAAY,IAAIrO,OAAUoO,EAAd,WAAoCnC,EAAW,aAAe,IAA9D,KACbhM,KAAKjT,EAAE4C,OAAOoB,OAEbsd,EAA0BrC,GAAY,IAAIjM,OAAUoO,EAAd,mBACvCnO,KAAKjT,EAAE4C,OAAOoB,OAGbud,EAAkB,IAAIvO,OAAUoO,EAAd,0BACnBnO,KAAKjT,EAAE4C,OAAOoB,OAEbwd,EAAyB,IAAIvO,KAAJ,KAAajT,EAAE4C,OAAOoB,OAOrD,GALI0b,GAAcZ,IACdqB,EAAmB,IAAInN,OAAUoO,EAAd,UAAoC1B,EAApC,eAA6DZ,EAA7D,QACd7L,KAAKjT,EAAE4C,OAAOoB,SAGlBqd,GAAaF,IAAahB,EAC3BngB,EAAE4C,OAAOoB,MAAQmd,GAAY7B,GAAaiC,GAAmBC,EACvDxhB,EAAE4C,OAAOoB,OACRhE,EAAE4C,OAAOoB,WACb,IAAKsd,EAER,YADAthB,EAAE4C,OAAOoB,MAAQA,GAKzB6b,EAAS7f,KA2CLqK,QAASA,EACTyV,YAAaA,QAAe9c,EAC5Bye,SAAUrC,EACVY,SAAUA,QAAYhd,EACtBN,KAAe,WAATA,EAAoB,OAASA,EACnCsB,MAAOwc,GAAiB,GACxBkB,aAAc1C,EAA2B,WAAQhc,IAGnD2e,EACF7W,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iBACXc,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGX,UAAW,yDACXI,YAAagW,EACb/V,QAASiW,EACThW,SAAS,MAETQ,EAAAH,QAAA/J,cAAC6I,EAAAoY,UAAS7X,UAAW,gDAAkDI,YAAagW,KAExFtV,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGX,UAAW,yDACXI,YAAaiW,EACbhW,QAASkW,EACTjW,SAAS,MAETQ,EAAAH,QAAA/J,cAAC4I,EAAAsY,WAAU9X,UAAW,iDAAkDI,YAAaiW,KAEvFK,GAGV,OACI5V,EAAAH,QAAA/J,cAAA,OACIoJ,UAAA,gBAA0BA,GAAa,KAEvCc,EAAAH,QAAA/J,cAACmhB,EAAApX,SAAQX,WAAW,EAAAU,EAAAC,SAAW,IAAMqX,aAAcvC,IAAUwC,UAAU,OAAOC,QAAShC,EAAYrB,EAAe,GAAK,QAChHY,GACC3U,EAAAH,QAAA/J,cAAA,SAAOuhB,QAAS5e,EAAMyG,UAAU,sBAAsByV,KAEvDM,GACCjV,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAW+T,EAAiB,UAA5B,YAAmDqB,EAAO9N,mBAE5E8M,GACCjU,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,uBAAuB+U,GAE1C0B,EAAqBkB,EAAkBjB,KASxDnC,EAAW3W,WACP4W,QAA0BvY,UAAUkM,OACpCnI,UAA0B/D,UAAUiF,OACpCuT,eAA0BxY,UAAUiF,OACpCwT,gBAA0BzY,UAAUiF,OACpC2T,eAA0BuD,YAAcC,uBACxCvD,kBAA0B7Y,UAAUkM,OACpC4M,OAA0B9Y,UAAUiF,OACpCf,GAA0BlE,UAAUiF,OACpC8T,yBAA0B/Y,UAAUkF,KACpCf,YAA0BnE,UAAUiF,OACpC+T,SAA0BhZ,UAAUkF,KACpC+T,iBAA0BjZ,UAAUkF,KACpCiU,aAA0BnZ,UAAUkF,KACpCmU,UAA0BrZ,UAAUkF,KACpCqU,iBAA0BvZ,UAAUkF,KACpCsU,MAA0BxZ,UAAUiF,OACpCwU,WAA0BzZ,UAAUkM,OACpC5O,KAA0B0C,UAAUiF,OACpC2U,SAA0B5Z,UAAUmF,KACpCf,QAA0BpE,UAAUmF,KACpC0U,YAA0B7Z,UAAUiF,OACpC6U,OAA0B9Z,UAAUiF,OACpC8U,SAA0B/Z,UAAUkF,KACpCzI,KAA0BuD,UAAUiF,OACpC+U,KAA0Bha,UAAUiF,OACpClH,MAA0BiC,UAAUiM,WAChCjM,UAAUkM,OACVlM,UAAUiF,qBAIH,EAAAhG,EAAAwB,UAAS6X,sFCxNxB,QAAA9e,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM6iB,EAAW,SAAAvb,GAOX,IANF3B,EAME2B,EANF3B,SACA4E,EAKEjD,EALFiD,UACAuY,EAIExb,EAJFwb,OACAC,EAGEzb,EAHFyb,UACAC,EAEE1b,EAFF0b,aACAC,EACE3b,EADF2b,aAEMC,GAAwB,EAAAjY,EAAAC,SAAW,mCAAoC6X,EAAY,cAAgB,IACnGI,GAAwB,EAAAlY,EAAAC,SAAW,kCAAmC6X,GAAa,wCAEzF,OACI1X,EAAAH,QAAA/J,cAAA,YAAUoJ,UAAWA,EAAWyY,aAAcA,EAAcC,aAAcA,KACnEH,GACCzX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW2Y,GACZ7X,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAW4Y,GAAsBL,IAG9Cnd,IASbkd,EAAS1a,WACLxC,SAAUa,UAAUiM,WAChBjM,UAAU4c,MACV5c,UAAUxB,SAEduF,UAAc/D,UAAUiF,OACxBqX,OAActc,UAAUiF,OACxBuX,aAAcxc,UAAUmF,KACxBsX,aAAczc,UAAUmF,gBAGbkX,8UC1Cf7iB,EAAA,QACAA,EAAA,QACAA,EAAA,IACA2J,EAAA3J,EAAA,KACA4J,EAAA5J,EAAA,KACAiK,EAAAjK,EAAA,KACAkK,EAAAlK,EAAA,+NAEMqjB,6SACFC,OACIC,2BAA2B,KAG/BP,aAAe,WACXpV,EAAK4V,UAAWD,2BAA2B,OAG/CN,aAAe,WACXrV,EAAK4V,UAAWD,2BAA2B,+UAV7Bjb,UAAMvB,+CAaf,IAAA0c,EAQDxd,KAAKG,MANLoc,EAFCiB,EAEDjB,UACA7c,EAHC8d,EAGD9d,SACA4E,EAJCkZ,EAIDlZ,UACAmZ,EALCD,EAKDC,cACAC,EANCF,EAMDE,KACAlB,EAPCgB,EAODhB,QAGEmB,GAAa,EAAA3Y,EAAAC,SAAWwY,EAAeC,GAC7C,OACItY,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAWX,EAAW,WACjCsZ,eAAcpB,EACdqB,mBAAkBtB,GAER,SAATmB,GACGtY,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACyI,EAAAma,iBACGxZ,UAAWqZ,EACXZ,aAAc/c,KAAK+c,aACnBC,aAAchd,KAAKgd,eAEvB5X,EAAAH,QAAA/J,cAACwI,EAAAqa,cACGzZ,WAAW,EAAAU,EAAAC,SAAcwY,EAAd,gBAA4C,yBACnDO,8BAA+Bhe,KAAKqd,MAAMC,+BAKhD,aAATI,GAAuBtY,EAAAH,QAAA/J,cAAC8I,EAAAia,cAAa3Z,UAAWqZ,IACvC,QAATD,GAAuBtY,EAAAH,QAAA/J,cAAC+I,EAAAia,YAAW5Z,UAAWqZ,IAC9Cje,YAMjB0d,EAAQlb,WACJqa,UAAehc,UAAUiF,OACzB9F,SAAea,UAAUgF,KACzBjB,UAAe/D,UAAUiF,OACzBiY,cAAeld,UAAUiF,OACzBkY,KAAend,UAAUiF,OACzBgX,QAAejc,UAAUiF,kBAGd4X,4MCrEf,IAAA3O,EAAA1U,EAAA,GACA4U,EAAA5U,EAAA,IAEA,IAAMokB,EAAkB,kBACpB5f,GAAK6f,SAAS,EAAA3P,EAAA2C,UAAS,SAAYiN,MAAO,GAC1CrkB,GAAKokB,SAAS,EAAA3P,EAAA2C,UAAS,WAAYiN,MAAO,EAAGC,UAAW,GACxD5gB,GAAK0gB,SAAS,EAAA3P,EAAA2C,UAAS,WAAYiN,MAAO,EAAGC,UAAW,IACxDpM,GAAKkM,SAAS,EAAA3P,EAAA2C,UAAS,SAAYiN,MAAO,EAAGC,UAAW,MACxD1gB,GAAKwgB,SAAS,EAAA3P,EAAA2C,UAAS,QAAYiN,MAAO,EAAGC,UAAW,SA+C/CC,GA5CA3I,sBAAsB,SAAC9Z,GAA6D,IAAnD6Z,EAAmDjU,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAArC8c,WAAaC,kBACrE9I,EAAU6I,QAAQ1iB,EAAS4Z,YAAoBC,EAAU6I,QAAQ1iB,EAAS4Z,gBAC1EC,EAAU8I,cAAc3iB,EAAS4Z,YAAcC,EAAU8I,cAAc3iB,EAAS4Z,gBAEhF,IAAMgJ,EAAUC,EAAsB7iB,EAAS8iB,uBACzCC,EAAUF,EAAsB7iB,EAASgjB,uBAE/CnJ,EAAU6I,QAAQ1iB,EAAS4Z,YAAY5Z,EAAS+X,cAC5CkL,IAAKR,EAAoBG,EAAQM,SAAUN,EAAQnE,KAAM,KACzD0E,IAAKV,EAAoBM,EAAQG,SAAUH,EAAQtE,KAAM,MAG7D,IAAMhK,KACNoF,EAAU8I,cAAc3iB,EAAS4Z,YAAY/S,QAAQ,SAAA6N,GACjDD,EAAUzX,KAAK0X,EAAIlS,SAGvB,IAAM4gB,EAAgBf,IAwBtB,MAtBI,eAAe5Q,KAAKzR,EAAS+X,cACY,IAArCtD,EAAUZ,QAAQ+O,EAAQnE,OAC1BhK,EAAUzX,KAAK4lB,EAAQnE,MAG3BxhB,OAAO0J,KAAKyc,GAAevc,QAAQ,SAAAwc,GAErB,MAANA,IAC0B,IAA1B5O,EAAUZ,QAAQwP,IAClBD,EAAcC,GAAGd,OAASa,EAAcR,EAAQnE,MAAM8D,OACtDa,EAAcC,GAAGd,OAASa,EAAcL,EAAQtE,MAAM8D,OACtD9N,EAAUzX,KAAKqmB,KAK3BxJ,EAAU8I,cAAc3iB,EAAS4Z,YAAcnF,EAC1C6O,KAAK,SAAC5N,EAAG6N,GAAJ,OAAWH,EAAc1N,GAAG6M,MAAQa,EAAcG,GAAGhB,MAAQ,GAAK,IACvE7W,OAAO,SAACzJ,EAAGJ,GAAJ,SAAAsE,6HAAA8N,CACAhS,KAAK8G,KAAMqa,EAAcvhB,GAAGygB,QAAS9f,MAAOX,UAGjDgY,GAGE4I,sBAAsB,SAACjgB,EAAOghB,EAAWC,GAClD,IAAKjhB,IAAUghB,IAAcC,GAAWC,MAAMC,SAASnhB,IACnD,OAAO,KAGX,IAAM4gB,EAAgBf,IAEtB,OAAImB,IAAcC,GAAa,cAAeL,EAAcI,GAIpDhhB,EAAQ4gB,EAAcI,GAAWhB,UAAaY,EAAcK,GAASjB,UAHlEhgB,IAMTqgB,EAAwB,SAACe,GAC3B,IAAMV,EAAWU,EAAgBnL,WAAWoL,MAAM,qBAClD,OACIX,SAAUA,EAAS,GACnBzE,KAAUyE,EAAS,KAuCd5H,GAnCAmB,gBAAgB,SAACnY,GAAU,IAC5BkQ,EAAiElQ,EAAjEkQ,cAAe0G,EAAkD5W,EAAlD4W,YAAanD,EAAqCzT,EAArCyT,YAAa1D,EAAwB/P,EAAxB+P,oBAC3CyP,EAAcxf,EAAMsG,WAAWjG,OAAOmf,YAEtCC,EAAwC,aAAhBhM,GAAgD,MAAlBvD,EACtDwP,EAAwC,YAAhBjM,KAA8B,EAAAlF,EAAA+D,UAASsE,GAAaM,SAAQ,EAAA3I,EAAA+D,UAASkN,GAAc,SAC5GxI,EAAwBjH,IAEzBO,EAAuB,QAK3B,OAJKmP,GAAoBC,IACrBpP,EAAyC,MAAlBJ,EAAwB,OAAS,YAGrDI,GAGEqP,uBAAuB,SAACzhB,EAAOic,GACxC,KAAMjc,GAAS,GAAOic,GAASzJ,OAAOkP,UAAU1hB,IAC5C,OAAO,KAGX,GAAa,MAATic,EAAc,CACd,IAAMxI,EAASzT,EAAQ,GACvB,OAAOyT,GAAU,EAAI7F,KAAK+T,MAAMlO,GAAU,EACvC,GAAa,MAATwI,EAAc,CACrB,IAAMtI,EAAO3T,OACb,OAAO2T,GAAQ,EAAI/F,KAAK+T,MAAMhO,GAAQ,EACnC,GAAa,MAATsI,EAAc,CACrB,IAAM2F,EAAM5hB,QACZ,OAAO4hB,GAAO,EAAIhU,KAAK+T,MAAMC,GAAO,EAGxC,OAAO5hB,GAGE8Y,0BAA0B,SAACjH,GAAD,OACnCA,EAAoBgQ,KAAK,SAAA5F,GAAA,OAA4C,KAAnC,IAAK,KAAK5K,QAAQ4K,EAAKjc,sGChHzD8hB,SAAkB,OAClB1kB,iBAAkB,6BAClB2kB,KAAkB,iBAClBxkB,iBAAkB,6BAClBC,SAAkB,yBAClBwkB,UAAkB,sBAClBC,UAAkB,sBAClBC,QAAkB,oBAClBC,MAAkB,SAClBzkB,OAAkB,mBAClB0kB,SAAkB,qBAClBvkB,UAAkB,aAClBwkB,KAAkB,IAClBtkB,SAAkB,YAClBC,UAAkB,aAClBskB,MAAkB,kBAClBC,MAAkB,yFCjBtB,QAAA9mB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM+mB,EAAW,SAAAzf,GAAmC,IAAhCiD,EAAgCjD,EAAhCiD,UAAWyc,EAAqB1f,EAArB0f,eACrBC,GAAgB,EAAAhc,EAAAC,SAAW,oBAAqBX,GAChD2c,GAAgB,EAAAjc,EAAAC,SAAW8b,EAAgB,YACjD,OACI3b,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW2c,GACZ7b,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW0c,GACZ5b,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qCAAqC4c,QAAQ,eACxD9b,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,iCAAiC6c,GAAG,KAAKC,GAAG,KAAKjjB,EAAE,KAAKkjB,KAAK,OAAOC,YAAY,IAAIC,iBAAiB,YAQ/IT,EAAS5e,WACLoC,UAAgB/D,UAAUiF,OAC1Bub,eAAgBxgB,UAAUiF,kBAGfsb,gUCzBf/mB,EAAA,MAEA,IAAMynB,EAmCFnhB,KACOohB,WACHC,iBApCqB,SAACC,EAAejb,GACrC,IAAMtO,GACFsE,MAAU,eACVklB,OAAU,MACV9lB,UACI4P,OAAeiW,EAAcjW,OAC7BmW,SAAeF,EAAc1N,QAC7B6N,SAAeH,EAAcG,SAC7BrN,MAAekN,EAAclN,MAC7BsN,UAAeJ,EAAcI,UAC7BxS,cAAeoS,EAAcpS,cAC7B3D,SAAe+V,EAAc/V,SAC7BoW,YAAeL,EAAcK,YAC7BC,WAAeN,EAAcM,WAC7BjD,SAAe2C,EAAc3C,SAC7B1O,cAAeqR,EAAcrR,cAC7B4R,OAAeP,EAAcO,OAC7BjP,OAAe0O,EAAc1O,QAEjC5W,UACI8lB,MAAkBzb,EAAWhG,GAAG0hB,gBAAkB,OAAS,QAC3DC,iBAAkB3b,EAAWhG,GAAG4hB,uBAAyB,OAAS,SAClEC,iBAAkB7b,EAAWhG,GAAG8hB,uBAAyB,UAAY,WACrEC,OACIC,iBAAkBhc,EAAWhG,GAAGiiB,wBAA0B,SAAW,OACrEC,iBAAkBlc,EAAWhG,GAAGmiB,4BAA8B,UAAY,SAC1EC,WAAkBpc,EAAWvN,QAAQqD,YAAYsmB,WACjDC,YAAkBrc,EAAWvN,QAAQqD,YAAYumB,eAI7DtB,UAAQuB,cAAc5qB,gBASfopB,iFC3CFyB,iBAAiB,SAACC,GAC3B,IAAMC,EAAQD,EAAcjB,WACtBmB,EAAQF,EAAclB,YACtBe,EAAcM,EAAqBD,EAAMD,GAE/C,OACIJ,cACAD,WAAaC,EAAc,SAAW,WACtCO,UAAaF,GAASL,GAAe,GACrCQ,YAAaJ,GAASJ,GAAe,KATtC,IAaDS,IACD,EAAS,IACT,EAAS,MACT,EAAS,MACT,GAAS,MACT,IAAS,OACT,IAAS,QAERH,EAAuB,SAACrE,GAAD,OACxBwE,EAAwBpW,KAAK,SAAA1P,GAAA,OAAKshB,GAAmB,KAAPthB,EAAE,OAAe,KAAM,QAAQ,IAoBrE+lB,GAlBAC,mBAAmB,SAACR,GAC7B,IAAIS,EAAS,YAIb,OAHIC,EAAQV,KACRS,EAAST,EAAcW,QAAU,EAAI,MAAQ,QAE1CF,GAKEG,aAAa,SAACZ,GAAD,OACtBA,EAAca,kBAAoBb,EAAcc,UAAYd,EAAce,WAGjEC,iBAAiB,SAAChB,GAAD,OAC1BA,EAAca,kBAAoBb,EAAciB,eAAiBjB,EAAckB,gBAGtEX,gBAAgB,SAACP,GAAD,QACvBA,EAAcmB,YAAcnB,EAAcoB,aASnCV,GANAW,qBAAqB,SAACrB,GAAD,OAC9BO,EAAcP,IAAkBU,EAAQV,GACpCO,EAAcP,IACZA,EAAcoB,WAAa,MAGxBV,UAAU,SAACV,GAAD,SAClBA,EAAcS,QAAmC,SAAzBT,EAAcS,QACvCT,EAAcsB,YACdtB,EAAcuB,iBAWLC,GARAC,oBAAoB,SAACzB,GAAD,OAC7BA,EAAc0B,YAAc1B,EAAc0B,WAAa1B,EAAcjB,YAG5D4C,YAAY,SAAC3B,GAAD,OACpBA,EAAc4B,qBAAuB5B,EAAc6B,kBAAoB7B,EAAcjB,YAG7EyC,aAAa,SAACxB,GAAD,MACG,SAAzBA,EAAcS,SAGLqB,gBAAgB,SAAC9B,GAAD,OACxBU,EAAQV,KAAmBwB,EAAWxB,IAAsD,IAAnCA,EAAc+B,2HCvE5E,wDAAAlrB,EAAA,IAEamrB,mBACTC,cAAkB5kB,UAAUiF,OAC5B4f,iBAAkB7kB,UAAUmF,KAC5B2f,cAAkB9kB,UAAUiF,OAC5B8f,eAAkB/kB,UAAUmF,qFCNhC,QAAA3L,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAwrB,EAAAxrB,EAAA,wDAEA,IAAMyrB,EAAW,SAAAnkB,GAAwB,IAArBokB,EAAqBpkB,EAArBokB,IAAKC,EAAgBrkB,EAAhBqkB,UACfC,GAAY,EAAAlX,EAAA2C,UAASqU,GAE3B,MAAK,WAAWlY,KAAKoY,GAKjBvgB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACK,EAAAiZ,EAAAK,cAAaD,EAAWD,IALtBtgB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KAAiBqZ,IAUhCH,EAAStjB,WACLwjB,UAAWnlB,UAAUxB,OACrB0mB,IAAWllB,UAAUiF,kBAGVggB,8FCxBfzsB,OAAA0J,KAAAojB,GAAAljB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2nB,EAAAjnB,qBACA7F,OAAA0J,KAAAqjB,GAAAnjB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA4nB,EAAAlnB,qBACA7F,OAAA0J,KAAAsjB,GAAApjB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6nB,EAAAnnB,qBACA7F,OAAA0J,KAAAujB,GAAArjB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA8nB,EAAApnB,qBACA7F,OAAA0J,KAAAwjB,GAAAtjB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+nB,EAAArnB,qBACA7F,OAAA0J,KAAAyjB,GAAAvjB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAgoB,EAAAtnB,oLCLA,IAAAunB,EAAApsB,EAAA,yDACAA,EAAA,KAEaqsB,gBAAgB,SAACC,GAAD,MAAU,MAAM9Y,KAAK8Y,GAAQA,EAAnB,KAA8BA,GAAQ,KAEhEC,kBAAkB,SAAlBA,EAAmBD,EAAME,GAClC,IAAI9sB,SAaJ,OAXA8sB,EAAcpG,KAAK,SAACqG,GAChB,OAAI,EAAAL,EAAAM,WAAUJ,EAAMG,IAChB/sB,EAAS+sB,GACF,KACAA,EAAWE,SAClBjtB,EAAS6sB,EAAgBD,EAAMG,EAAWE,WAM3CjtB,GAGEktB,iBAAiB,SAACC,EAAOC,GAAR,QACxBD,GAASA,EAAME,mBAAqBD,IApBnC,IAsBME,YAAU,SAACC,GAAD,IAAaC,EAAbvlB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,aACnB3I,OAAO0J,KAAKwkB,GAAQzf,OAChB,SAAChM,EAAGqC,GAAJ,OAAarC,EAAEmS,QAAF,IAAc9P,EAAQopB,EAAOppB,KAC1CmpB,IAIKE,kBAAkB,SAACC,GAAD,OAAiBJ,EAAQL,UAAO5qB,UAAYqrB,6KC7B3EpuB,OAAA0J,KAAA2kB,GAAAzkB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAkpB,EAAAxoB,iHAHOyoB,uBACAC,uBACAriB,oBAEAsiB,qTCJPxtB,EAAA,SACAA,EAAA,MACAgM,EAAAhM,EAAA,sDAEA,IAAM8L,GAoFE2hB,cAnFkB,kBAClBC,UAAaC,MAAOC,eAAgB,WAmFpCC,IAjFQ,SAACC,EAAaC,GAAd,OACRL,UAAaC,MAAOE,IAAKC,EAAaC,WAiFtC7S,aA/EiB,SAAChC,GAAD,OACjBwU,UAAaC,MAAOpS,cAAerC,KA+EnC8U,iBA7EqB,kBACrBN,UAAaC,MAAOM,mBAAoB,KA6ExCC,iBA3EqB,kBACrBR,UAAaC,MAAOQ,mBAAoB,KA2ExCC,YAzEgB,kBAChBV,UAAaC,MAAOU,aAAc,KAyElCxV,gBAvEoB,SAACR,GAAD,OACpBqV,UAAaC,MAAOtY,cAAegD,KAuEnCiW,eArEmB,SAACC,GAAD,OACnBb,UAAaC,MAAOa,gBAAiBD,KAqErCE,OAnEW,kBACXf,UAAaC,MAAOc,OAAQ,KAmE5BC,aAjEiB,kBACjBhB,UAAaC,MAAOgB,eAAgB,KAiEpCC,UA/Dc,kBACdlB,UAAaC,MAAOkB,WAAY,KA+DhCzsB,UA1Dc,kBACdsrB,UAAaC,MAAOvrB,UAAW,KA0D/B0sB,iBA9DqB,kBACrBpB,UAAaC,MAAOoB,kBAAmB,KA8DvCC,qBAzDyB,SAAC5B,GAAD,OACzBM,UAAaC,MAAOsB,uBAAwB,EAAG7B,iBAyD/C8B,KAvDS,SAAC9B,EAAaW,GAAd,OACTL,UAAaC,MAAOuB,KAAM9B,EAAaW,WAuDvCoB,YArDgB,kBAChBzB,UAAaC,MAAOyB,aAAc,KAqDlCC,YAnDgB,SAACC,GAAD,OAChB3uB,QAAQC,SAAS,EAAAoL,EAAAwB,eAAc8hB,MAAkB5B,UAAaC,KAAK2B,KAmDnE/sB,UAjDc,SAACgtB,EAAOC,EAAQC,GAAhB,OACd/B,UAAaC,KAAbrnB,GAAoB/D,UAAW,EAAGmtB,YAAa,EAAGH,QAAOC,UAAWC,KAmDpEE,OAhDW,SAACC,EAAUC,EAAIC,GAAf,OACXC,UAAoBJ,OAAOC,EAAUC,EAAIC,IAgDzCE,UA9Cc,kBACdD,UAAoBC,UAApBxwB,MAAAywB,EAAA/kB,QAAAvD,YA8CAuoB,iBA5CqB,SAACL,EAAIM,GAAL,OACrBJ,UAAoBK,UAAU,WAAaC,QAAS,EAAGD,UAAW,GAAKP,EAAIM,IA4C3EG,kBA1CsB,SAACC,EAAKV,EAAIW,GAAV,OACtBT,UAAoBK,UAAU,WAAYG,EAAKV,EAAIW,IA0CnDC,8BAxCkC,eAACrD,EAADzlB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAe,KAAMkoB,EAArBloB,UAAA,GAAyB6oB,EAAzB7oB,UAAA,UAClCooB,UAAoBK,UAAU,yBAA9B9pB,GAA0D2oB,uBAAwB,EAAGmB,UAAW,GAAOhD,IAAiBA,gBAAkByC,EAAIW,IAwC9IE,eAtCmB,SAACxX,EAAQ2W,EAAIW,GAAb,OACnBT,UAAoBK,UAAU,SAAWO,MAAOzX,EAAQkX,UAAW,GAAKP,EAAIW,IAsC5EI,sBApC0B,SAACtB,EAAgBO,EAAIW,GAArB,OAC1BT,UAAoBK,UAAU,gBAAiBd,EAAgBO,EAAIW,IAoCnEK,qBAlCyB,SAAChB,EAAIW,GAAL,OACzBT,UAAoBK,UAAU,eAAiBU,YAAa,EAAGV,UAAW,GAAKP,EAAIW,IAkCnFO,uBAhC2B,SAAClB,GAAD,OAC3BE,UAAoBK,UAAU,kBAAoBY,eAAgB,EAAGZ,UAAW,GAAKP,eAmC9E/jB,kFCxHFmlB,mBACTC,KAAa,QACbC,IAAa,QACbC,YAAa,UACbC,WAAa,UACbC,MAAa,UACbC,SAAa,UACbC,SAAa,cACbC,QAAa,cACbC,OAAa,QACbC,OAAa,SAIJC,kBACTC,EAAG,cACHC,EAAG,eAGMC,kBACTC,MAAO,QACPC,IAAO,OAGEC,uBACTC,OAAQ,SACRC,OAAQ,SACRC,MAAQ,wFC3BZ,IAAA5sB,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,uDAEA,IAAMsyB,EAAW,kBACbjnB,EAAAH,QAAA/J,cAAA,OAAKoxB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACnE9b,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,kBACRwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,OAAOoL,SAAS,UAAU7uB,EAAE,2WAK3EyuB,EAASnqB,WACLwqB,MAAOnsB,UAAUiF,mBAGN,EAAAhG,EAAAwB,UAASqrB,kHCjBxB,IAAA5d,EAAA1U,EAAA,GAEa4yB,yBAAyB,kBAClClB,QAAc,EAAAhd,EAAA2C,UAAS,YACvBsa,QAAc,EAAAjd,EAAA2C,UAAS,cACvB6Z,MAAc,EAAAxc,EAAA2C,UAAS,UACvBwb,OAAc,EAAAne,EAAA2C,UAAS,mBACvB8Z,KAAc,EAAAzc,EAAA2C,UAAS,SACvByb,MAAc,EAAApe,EAAA2C,UAAS,kBACvB0b,YAAc,EAAAre,EAAA2C,UAAS,iBACvB2b,WAAc,EAAAte,EAAA2C,UAAS,iBACvB4b,UAAc,EAAAve,EAAA2C,UAAS,aACvB6b,WAAc,EAAAxe,EAAA2C,UAAS,cACvB8b,WAAc,EAAAze,EAAA2C,UAAS,cACvB+b,YAAc,EAAA1e,EAAA2C,UAAS,eACvBga,YAAc,EAAA3c,EAAA2C,UAAS,gBACvB+Z,aAAc,EAAA1c,EAAA2C,UAAS,gBACvBgc,cAAc,EAAA3e,EAAA2C,UAAS,gBACvBic,aAAc,EAAA5e,EAAA2C,UAAS,aACvBkc,YAAc,EAAA7e,EAAA2C,UAAS,cACvBmc,WAAc,EAAA9e,EAAA2C,UAAS,YACvBia,OAAc,EAAA5c,EAAA2C,UAAS,iBACvBka,UAAc,EAAA7c,EAAA2C,UAAS,gBACvBma,UAAc,EAAA9c,EAAA2C,UAAS,WACvBoa,SAAc,EAAA/c,EAAA2C,UAAS,uHCxB3B,wDAAArX,EAAA,MAcSyzB,UAZS,kBACdpoB,EAAAH,QAAA/J,cAAA,OAAKoxB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACnE9b,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,KAAKC,GAAG,KAAKjjB,EAAE,KAAKkjB,KAAK,YACpCjc,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoM,UAAU,0BACrBroB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,IAAIC,GAAG,IAAIjjB,EAAE,MACxBiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oKCRxB,QAAA7D,EAAA,QACAA,EAAA,uDAEA,IAAMgkB,EAAe,SAAA1c,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACjBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACzF9b,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,IAAIC,GAAG,IAAIjjB,EAAE,IAAIkjB,KAAK,YACjCjc,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoM,UAAU,oBACrBroB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,MAAMC,GAAG,IAAIjjB,EAAE,MAC1BiH,EAAAH,QAAA/J,cAAA,QAAMqxB,MAAM,IAAIC,OAAO,IAAIkB,EAAE,KAAKC,EAAE,IAAIC,GAAG,UAM3D7P,EAAa7b,WACToC,UAAW/D,UAAUiF,UAGhBuY,2GCnBThlB,OAAA0J,KAAAorB,GAAAlrB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA2vB,EAAAjvB,uFCAA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA+zB,EAAA/zB,EAAA,uDAEA,IAAMg0B,EAAmB,SAAC5tB,GAAU,IACxBsV,EAA+CtV,EAA/CsV,MAAOuY,EAAwC7tB,EAAxC6tB,QAAStuB,EAA+BS,EAA/BT,SAAUoF,EAAqB3E,EAArB2E,iBAoClC,OAjCQ3E,EAAM6tB,SACNjzB,SAASkzB,KAAKC,UAAU1W,IAAI,aAC5Bzc,SAASozB,eAAe,cAAcD,UAAU1W,IAAI,eAEpDzc,SAASkzB,KAAKC,UAAUE,OAAO,aAC/BrzB,SAASozB,eAAe,cAAcD,UAAUE,OAAO,cA6B3DhpB,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,qBAClBopB,0BAA2BL,IAE/BrpB,QAnBY,SAACrK,GACjB,GAAyB,UAArBA,EAAE4C,OAAOoxB,SAAyC,WAAlBh0B,EAAE4C,OAAOF,KAAmB,CAC5D,IAAMuxB,EAZU,SAACC,EAAQC,GAC7B,IAAMC,EAAkBD,EAAGE,wBAE3B,GADeD,EAAgBE,IAAMH,EAAGI,aAAe,GAAKxvB,OAAOyvB,YACvD,CACR,IAAMC,GAAc1vB,OAAOyvB,YAAcL,EAAGI,cAAgB,EAC5DL,EAAOQ,WAAaN,EAAgBE,IAAMG,GAOnBE,CAAgB30B,EAAE40B,cAAe50B,EAAE4C,QAC1DmC,OAAO8vB,iBAAiB,SAAUZ,GAAgB,GAGlDlvB,OAAO9B,WAAW,WACd8B,OAAO+vB,oBAAoB,SAAUb,GAAgB,IACtD,QAaHnpB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BACXc,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,4BACTmR,GAELrQ,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,+CACVK,QAASxE,EAAMkvB,SAEfjqB,EAAAH,QAAA/J,cAAC4yB,EAAAwB,WAAUhrB,UAAU,wCAG7Bc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,2CACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qCACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAA,uBAAiCQ,GAAoB,yBACrDpF,MAOrBquB,EAAiB7rB,WACbxC,SAAkBa,UAAUgvB,IAC5BF,QAAkB9uB,UAAUmF,KAC5B+P,MAAkBlV,UAAUiF,OAC5BwoB,QAAkBztB,UAAUkF,KAC5BX,iBAAkBvE,UAAUiF,kBAGjBuoB,oKC/ER9oB,8KCAP,IAAAwJ,EAAA1U,EAAA,GAEay1B,iBACTC,KAAK,EAAAhhB,EAAA2C,UAAS,OACdse,KAAK,EAAAjhB,EAAA2C,UAAS,OACdue,KAAK,EAAAlhB,EAAA2C,UAAS,OACdwe,KAAK,EAAAnhB,EAAA2C,UAAS,OACdye,KAAK,EAAAphB,EAAA2C,UAAS,OACd0e,KAAK,EAAArhB,EAAA2C,UAAS,OACd2e,KAAK,EAAAthB,EAAA2C,UAAS,OACd4e,KAAK,EAAAvhB,EAAA2C,UAAS,OACd6e,KAAK,EAAAxhB,EAAA2C,UAAS,OACd8e,KAAK,EAAAzhB,EAAA2C,UAAS,OACd+e,KAAK,EAAA1hB,EAAA2C,UAAS,OACdgf,KAAK,EAAA3hB,EAAA2C,UAAS,QAGLif,gBACTC,QAAW,EAAA7hB,EAAA2C,UAAS,UACpBmf,SAAW,EAAA9hB,EAAA2C,UAAS,WACpBof,WAAW,EAAA/hB,EAAA2C,UAAS,aACpBqf,UAAW,EAAAhiB,EAAA2C,UAAS,YACpBsf,QAAW,EAAAjiB,EAAA2C,UAAS,UACpBuf,UAAW,EAAAliB,EAAA2C,UAAS,YACpBwf,QAAW,EAAAniB,EAAA2C,UAAS,WAGXyf,qBACTP,QAAW,EAAA7hB,EAAA2C,UAAS,KACpBmf,SAAW,EAAA9hB,EAAA2C,UAAS,KACpBof,WAAW,EAAA/hB,EAAA2C,UAAS,KACpBqf,UAAW,EAAAhiB,EAAA2C,UAAS,KACpBsf,QAAW,EAAAjiB,EAAA2C,UAAS,KACpBuf,UAAW,EAAAliB,EAAA2C,UAAS,KACpBwf,QAAW,EAAAniB,EAAA2C,UAAS,MAGX0f,mBAAmB,SAAC5Q,GAW7B,OATI6Q,QAAc,EACdC,SAAc,EACdC,WAAc,EACdC,UAAc,EACdC,QAAc,EACdC,UAAc,EACdC,QAAc,GAGMnR,mHChD5B,IAAAvR,EAAA5U,EAAA,IAEau3B,YAAY,SAACC,GAAD,OAAoB,EAAA5iB,EAAA+D,UAAS6e,GAAaC,OAA1C,KAAoD,EAAA7iB,EAAA+D,UAAS6e,GAAa/Z,IAAI,EAAG,SAASga,QAEtGC,aAAa,SAACF,GAAD,OAAoB,EAAA5iB,EAAA+D,UAAS6e,GAAaC,OAA1C,KAAoD,EAAA7iB,EAAA+D,UAAS6e,GAAa/Z,IAAI,GAAI,SAASga,oGCJrHz4B,OAAA0J,KAAAivB,GAAA/uB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwzB,EAAA9yB,qBACA7F,OAAA0J,KAAAkvB,GAAAhvB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAyzB,EAAA/yB,qBACA7F,OAAA0J,KAAAmvB,GAAAjvB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA0zB,EAAAhzB,yFCFA,QAAA7E,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,IACA4U,EAAA5U,EAAA,uDAIA,IAAM+3B,EAAgB,SAAAzwB,GAGhB,IAAA0wB,EAAA1wB,EAFFyW,gBAEExa,IAAAy0B,EAFS,KAETA,EADFla,EACExW,EADFwW,WAEA,KAAMC,GAAYD,EAAWma,QAAUla,EACnC,MAAO,GAGX,IAAMma,GAAiB,EAAAtjB,EAAAujB,iBAAe,EAAAvjB,EAAAwjB,iBAAgBta,EAAWma,OAAQla,IAEzE,OACI1S,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,kBAAkB2tB,IAIzCH,EAAc5vB,WACV4V,SAAUvX,UAAUiM,WAChBjM,UAAUkM,OACVlM,UAAUiF,SACX4sB,WACHva,WAAYtX,UAAUxB,mBAGX,EAAA8yB,EAAAlxB,SACX,SAAA6R,GAAA,OACIqF,WADJrF,EAAG/R,OACoBmf,cAFZ,CAIbkS,+GClCF/4B,OAAA0J,KAAAsM,GAAApM,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6Q,EAAAnQ,qBAEA7F,OAAA0J,KAAA4vB,GAAA1vB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAm0B,EAAAzzB,yEADO8nB,mLCDAzhB,4JCAP,QAAAlL,EAAA,SACAA,EAAA,MACAu4B,EAAAv4B,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEaw4B,gBAAgB,WACzB1sB,UAAG2iB,SAASzd,KAAKynB,IADd,IAIDA,EAAW,SAACC,GACU,IAApBA,EAASjK,SACbhH,UAAIwB,eAAgBtmB,MAAO,aAC3B,EAAA41B,EAAAI,eAAc,kBAAmB,sBACjCC,UAAOC,mBACPD,UAAOE,IAAI,UAAW,IACtBC,UAAYC,QACZ1zB,OAAOmO,SAASwlB,wGCjBpBj6B,OAAA0J,KAAAwwB,GAAAtwB,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA+0B,EAAAr0B,+PCAas0B,kBAAkB,SAAC3jB,GAAD,MAAmB,SAAShC,KAAKgC,IAEnD4jB,eAAe,SAACC,EAAalQ,GACtC,IAAMrL,GAAcqL,EAAcmQ,gBAClC,IAAKxb,EAAY,SAEjB,IAAMyb,EAAQzb,KAAcub,KACxBG,EAAgBrQ,EAAeA,EAAcsQ,WAAY3b,GAEvD4b,GAAmBvQ,EAAc6B,kBACjC2O,GAAmBxQ,EAAckB,eAGjCuP,EAAWF,KAAaL,GAFNM,GAAaD,EAAYC,KAG7CH,EAAgBrQ,EAAeA,EAAc0Q,aAAcH,GAE/D,OAAApzB,KACOizB,EACAK,IAlBJ,IAsBDJ,EAAkB,SAACrQ,EAAe2Q,EAAMJ,GAC1C,IAAMK,IAAS,GAAGD,GAAOt0B,OAAO,GAEhC,6HAAAmI,KACM+rB,GACEK,QACAC,OAASC,EAAM9Q,EAAe4Q,GAC9BG,QAASR,KAAevQ,EAAckB,kBAK5C4P,EAAQ,SAAC9Q,EAAeyQ,GAAhB,OACTO,EAAYhR,EAAc3T,gBAAmB,eAAY2T,EAAcjP,QAAS0f,IAE/EO,GACFpH,WAAY,SAAC7Y,EAAS0f,GAAV,OAAsBA,IAAY1f,GAC9C8Y,UAAY,SAAC9Y,EAAS0f,GAAV,OAAsBA,IAAY1f,GAC9C+Y,SAAY,SAAC/Y,EAAS0f,GAAV,OAAsBA,EAAU,GAC5C1G,UAAY,SAAChZ,EAAS0f,GAAV,QAAwBA,EAAU,IAC9CzG,UAAY,SAACjZ,EAAS0f,GAAV,OAAsBA,EAAU1f,GAC5CkZ,WAAY,SAAClZ,EAAS0f,GAAV,OAAsBA,EAAU1f,0JC3ChD,IAAAnO,EAAA/L,EAAA,GACAgM,EAAAhM,EAAA,GACAo6B,EAAAp6B,EAAA,KAEaq6B,qBAAqB,SAAC7kB,GAAD,OAAmBA,KAAiByb,mBAEzDqJ,mBAAmB,SAACC,GAAD,QAAA7yB,EAAAC,UAAA9I,OAAiB27B,EAAjB3yB,MAAAH,EAAA,EAAAA,EAAA,KAAA+yB,EAAA,EAAAA,EAAA/yB,EAAA+yB,IAAiBD,EAAjBC,EAAA,GAAA9yB,UAAA8yB,GAAA,OAAmCD,EAAc1sB,IAC7E,SAAAoM,GAAA,OAAcqgB,IAAgB,QAAQ/mB,KAAK0G,GAAW,IAAM,IAAKA,KAGxDwgB,wBAAwB,SAAC3gB,GAAD,OACjC/a,OAAO0J,KAAKqR,OACPjM,IAAI,SAAAjJ,GAAA,OAAO,EAAAkH,EAAAwB,MAAKwM,EAASlV,MACzBmX,OAAO,SAAAzE,GAAA,QAAS,EAAAvL,EAAAwB,eAAc+J,8ICbvC,wDAAAvX,EAAA,KACA4U,EAAA5U,EAAA,IAEa+b,6BAA6B,SAACha,EAAUuV,GACjD,IAAMqjB,KAkBN,OAhBK54B,EAAS64B,8BAAgC/7B,QAC1CkD,EAAS64B,yBAAyBhyB,QAAQ,SAAA8V,GACtC,IAAMmc,EAAoBF,EAAwBtnB,KAAK,SAAAynB,GAAA,OAAOA,EAAIv2B,QAAUmhB,SAAShH,EAAOrG,QACtF0iB,GAAsBvhB,MAAM,EAAA5E,EAAA+D,UAAS+F,EAAOlF,MAAOE,OAAO,EAAA9E,EAAA+D,UAAS+F,EAAOhF,QAC5EmhB,EACAA,EAAkBjjB,SAAS7Y,KAAKg8B,GAEhCJ,EAAwB57B,MACpB+L,MAAU,EAAA8J,EAAA+D,UAAS+F,EAAOrG,MAAMJ,OAAO,sBACvC1T,MAAUmhB,SAAShH,EAAOrG,MAC1BT,UAAWmjB,OAMpBJ,EAAwB97B,OAAS87B,EAA0BrjB,GAnB/D,IAuBD0jB,EAAe,SAACnjB,EAAgBC,EAAcmjB,GAChD,IAAMC,GAAa,EAAAtmB,EAAA+D,UAASb,GAI5B,OAHImjB,GACAC,EAAWljB,OAAO,GAAGmjB,OAAO,GAEzBtjB,EAAeyF,SAAS4d,IAAeA,EAAWjD,SAAWpgB,EAAeogB,QAG1ElgB,qBAAqB,eAC9BH,EAD8BjQ,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MAE9BkQ,EAF8BlQ,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAEL,EAAAiN,EAAA+D,UAASC,UAAWzU,OAC7C2T,EAH8BnQ,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAGL,EAAAiN,EAAA+D,UAASC,UAAWzU,OAC7C82B,EAJ8BtzB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,IAAAA,UAAA,WAM7BqzB,EAAanjB,EAAgBe,UAAWzU,MAAO82B,IAC/CD,EAAanjB,EAAgBC,EAAcmjB,IACtCrjB,EAAS/Y,SACL+Y,EAASvE,KAAK,SAAA+nB,GAAA,OACZvjB,EAAewjB,UAAUD,EAAQ5hB,KAAM4hB,EAAQ1hB,MAAOuhB,EAAyB,OAAS,KAAM,8OC5C9G,wDAAAj7B,EAAA,6HAGas7B,kCACT,SACA,YACA,YACA,QACA,sBACA,gBACA,WACA,gBACA,cACA,cACA,mBACA,aACA,aACA,aACA,UAGSC,qCAAqC,SAACl1B,GAC/C,IAAMm1B,GACF,sBACA,eAGJ,IAAKn1B,EAAO,OAAOm1B,EANsC,IAQjDrlB,EAAwBlB,UAAa4B,aAAaxQ,EAAMyQ,YAAxDX,oBACA2D,EAAgBzT,EAAhByT,YACR,SAAA5R,OACOszB,EADPxlB,EAEgC,YAAxBG,GAAqC,kBAF7CH,EAGgC,YAAxB8D,GAAqC,qBAIpC2hB,yCACTvhB,QAAa,SAAAwhB,GAAA,OAAYA,EAAW,aAAe,aACnD3T,SAAa,YACbE,YAAa,cACbC,WAAa,cAGJyT,iCACT,WACA,cACA,WACA,SACA,4FClDSC,mBAAmB,IACnBC,mBAAmB,4GCDhC,QAAA77B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM87B,EAAW,SAAAx0B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACbc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACpH9b,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,qBAAqBoL,SAAS,UAAU7uB,EAAE,wIAIrFi4B,EAAS3zB,WACLoC,UAAW/D,UAAUiF,UAGhBqwB,mHCdT,QAAA97B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM+7B,EAAkB,SAAAz0B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWyxB,EAAd10B,EAAc00B,cAAd,OACpB3wB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACjF9b,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWyxB,GAAiB,cAAe1U,KAAK,qBAAqBoL,SAAS,UAAU7uB,EAAE,2GAIxGk4B,EAAgB5zB,WACZoC,UAAe/D,UAAUiF,OACzBuwB,cAAex1B,UAAUiF,UAGpBswB,2HCfT,QAAA/7B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMi8B,EAAmB,SAAA30B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWyxB,EAAd10B,EAAc00B,cAAd,OACrB3wB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACjF9b,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWyxB,GAAiB,cAAe1U,KAAK,qBAAqBoL,SAAS,UAAU7uB,EAAE,6GAIxGo4B,EAAiB9zB,WACboC,UAAe/D,UAAUiF,OACzBuwB,cAAex1B,UAAUiF,UAGpBwwB,qHCfT,QAAAj8B,EAAA,QACAA,EAAA,uDAEA,IAAMk8B,EAAY,SAAA50B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWK,EAAdtD,EAAcsD,QAAd,OACdS,EAAAH,QAAA/J,cAAA,OACIoxB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPloB,UAAWA,EACXK,QAASA,GAETS,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,UAAUyJ,OAAO,WACrC9wB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,IAAIC,GAAG,IAAIjjB,EAAE,QACxBiH,EAAAH,QAAA/J,cAAA,QAAMi7B,cAAc,QAAQC,eAAe,QAAQx4B,EAAE,oBAKjEq4B,EAAU/zB,WACNoC,UAAW/D,UAAUiF,OACrBb,QAAWpE,UAAUmF,QAGhBuwB,8GCvBT,QAAAl8B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMu1B,EAAY,SAAAjuB,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACdc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACpH9b,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAAUoL,SAAS,UAAU7uB,EAAE,mLAI1E0xB,EAAUptB,WACNoC,UAAW/D,UAAUiF,UAGhB8pB,oHCdT,QAAAv1B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM+jB,EAAkB,SAAAzc,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWyY,EAAd1b,EAAc0b,aAAcC,EAA5B3b,EAA4B2b,aAA5B,OACpB5X,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GACrCkoB,OAAO,KACPzP,aAAcA,EACdC,aAAcA,EACdkE,QAAQ,YACRqL,MAAM,KACND,MAAM,8BAENlnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,sBAAsBoL,SAAS,UAAU7uB,EAAE,6KAItFkgB,EAAgB5b,WACZoC,UAAW/D,UAAUiF,UAGhBsY,oHCtBT,QAAA/jB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMqiB,EAAY,SAAA/a,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWI,EAAdrD,EAAcqD,YAAd,OACdU,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAae,SAAUX,IAAgB4nB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aAC/I9b,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,qBAAqBoL,SAAS,UAAU7uB,EAAE,qBAIrFwe,EAAUla,WACNoC,UAAa/D,UAAUiF,OACvBd,YAAanE,UAAUkF,QAGlB2W,6GCfT,QAAAriB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMoiB,EAAW,SAAA9a,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWI,EAAdrD,EAAcqD,YAAd,OACbU,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAae,SAAUX,IAAgB4nB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aAC/I9b,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAAUoL,SAAS,UAAU7uB,EAAE,oDAK1Eue,EAASja,WACLoC,UAAa/D,UAAUiF,OACvBd,YAAanE,UAAUkF,QAGlB0W,gHChBT,QAAApiB,EAAA,QACAA,EAAA,uDAEA,IAAMkkB,EAAe,SAAA5c,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACjBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACzF9b,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wEAAwE6uB,SAAS,YACzFrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,qlBAKpBqgB,EAAa/b,WACToC,UAAW/D,UAAUiF,UAGhByY,kHChBT,QAAAlkB,EAAA,QACAA,EAAA,uDAEA,IAAMmkB,EAAa,SAAA7c,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWioB,MAAM,IAAIC,OAAO,IAAIF,MAAM,8BAClDlnB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,OAAOC,GAAG,MAAMjjB,EAAE,IAAIsvB,UAAU,wBAAwBpM,KAAK,UAAUoL,SAAS,cAInGvO,EAAWhc,WACPoC,UAAW/D,UAAUiF,UAGhB0Y,iHCbT,QAAAnkB,EAAA,QACAA,EAAA,uDAEA,IAAMs8B,EAAc,SAAAh1B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAChBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MAC5EpnB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,IAAIC,GAAG,IAAIjjB,EAAE,IAAIkjB,KAAK,YACjCjc,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOoL,SAAS,UAAU7uB,EAAE,gHAKnDy4B,EAAYn0B,WACRoC,UAAW/D,UAAUiF,UAGhB6wB,kHChBT,QAAAt8B,EAAA,QACAA,EAAA,uDAEA,IAAMu8B,EAAc,SAAAj1B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAChBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MAC5EpnB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,IAAIC,GAAG,IAAIjjB,EAAE,IAAIkjB,KAAK,YACjCjc,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoM,UAAU,2BACrBroB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,MAAMC,GAAG,IAAIjjB,EAAE,MAC1BiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8DAMxB04B,EAAYp0B,WACRoC,UAAW/D,UAAUiF,UAGhB8wB,yQCnBTv8B,EAAA,QACAA,EAAA,IACAw8B,EAAAx8B,EAAA,IACAqtB,EAAArtB,EAAA,SAGAA,EAAA,yDAKA,IAAMstB,EAAa,SAAAhmB,GAA8C,IAA3Cm1B,EAA2Cn1B,EAA3Cm1B,aAAcC,EAA6Bp1B,EAA7Bo1B,GAAI/2B,EAAyB2B,EAAzB3B,SAAaS,yHAAYu2B,CAAAr1B,GAAA,iCACvDglB,GAAQ,EAAAe,EAAAhB,eAAcqQ,GACtB7P,GAAQ,EAAAQ,EAAAd,iBAAgBD,GAAM,EAAAsQ,EAAA1xB,YAEpC,IAAK2hB,EACD,MAAM,IAAIxpB,MAAJ,oBAA8Bq5B,GAGxC,OACIA,EACIrxB,EAAAH,QAAA/J,cAACq7B,EAAAK,QAADv2B,GAASo2B,GAAIpQ,EAAMwQ,gBAAiBL,GAAgB,SAAUM,MAAOlQ,EAAMkQ,OAAW32B,GACjFT,GAGL0F,EAAAH,QAAA/J,cAAA,IAAAmF,GAAG6N,KAAK,gBAAmB/N,GACtBT,IAKjB2nB,EAAWnlB,WACPs0B,aAAcj2B,UAAUiF,OACxB9F,SAAca,UAAUxB,OACxB03B,GAAcl2B,UAAUiF,kBAGb6hB,iFCrCf,IAAA0P,EAAAh9B,EAAA,GACAw8B,EAAAx8B,EAAA,IACA0U,EAAA1U,EAAA,GACAi9B,EAAAj9B,EAAA,KAEAk9B,EAAAl9B,EAAA,wDAIAA,EAAA,MAEA,IAAMm9B,GAAkB,EAAAH,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,YAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAC7Bu4B,GAAkB,EAAAL,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,aAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAC7Bw4B,GAAkB,EAAAN,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,YAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAC7By4B,GAAkB,EAAAP,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,aAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAG7B04B,GAAyB,EAAAR,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,oBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpC24B,GAAyB,EAAAT,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,YAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpC44B,GAAyB,EAAAV,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,0BAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpC64B,GAAyB,EAAAX,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,oBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpC84B,GAAyB,EAAAZ,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,wBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpC+4B,GAAyB,EAAAb,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,UAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpCg5B,GAAyB,EAAAd,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,iBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpCi5B,GAAyB,EAAAf,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,oBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eACpCk5B,GAAyB,EAAAhB,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,kBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAGpCm5B,GAAU,EAAAjB,EAAAI,MAAK,kBAAMp9B,EAAAO,EAAA,OAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eA4BvBo5B,SAGEC,GAAmBC,UAAWH,EAASviB,OAAO,EAAAhH,EAAA2C,UAAS,wBAErC,WAKpB,OAJK6mB,IACDA,IAhCF5R,KAAMK,SAAO5qB,SAAWq8B,UAAWjB,EAAiBzhB,OAAO,EAAAhH,EAAA2C,UAAS,oBAAsB0V,kBAAkB,IAC5GT,KAAMK,SAAOjG,MAAW0X,UAAWC,WAAiB3iB,MAAO,GAA+BghB,GAAI,WAC9FpQ,KAAMK,SAAOvqB,UAAWg8B,UAAWf,EAAiB3hB,OAAO,EAAAhH,EAAA2C,UAAS,aAAsB0V,kBAAkB,EAAMuR,eAAgBC,kBAClIjS,KAAMK,SAAO/F,KAAWwX,UAAWC,WAAiB3iB,MAAO,GAA+BqhB,OAAO,EAAML,GAAI,WAC3GpQ,KAAMK,SAAOpqB,UAAW67B,UAAWb,EAAiB7hB,OAAO,EAAAhH,EAAA2C,UAAS,aAAsB0V,kBAAkB,EAAMuR,eAAgBE,kBAClIlS,KAAMK,SAAO7F,MAAWsX,UAAWK,UAAiB/iB,OAAO,EAAAhH,EAAA2C,UAAS,SAAsB0lB,OAAO,IAE/FzQ,KAAkBK,SAAOrqB,SACzB87B,UAAkBd,EAClBvQ,kBAAkB,EAClBJ,SACML,KAAMK,SAAOhG,SAAkByX,UAAWL,EAAwBriB,OAAO,EAAAhH,EAAA2C,UAAS,sBAClFiV,KAAMK,SAAOnG,UAAkB4X,UAAWR,EAAwBliB,OAAO,EAAAhH,EAAA2C,UAAS,0BAClFiV,KAAMK,SAAOhrB,iBAAkBy8B,UAAWZ,EAAwB9hB,OAAO,EAAAhH,EAAA2C,UAAS,sBAClFiV,KAAMK,SAAO7qB,iBAAkBs8B,UAAWT,EAAwBjiB,OAAO,EAAAhH,EAAA2C,UAAS,sBAClFiV,KAAMK,SAAOpG,UAAkB6X,UAAWJ,EAAwBtiB,OAAO,EAAAhH,EAAA2C,UAAS,oBAClFiV,KAAMK,SAAO1qB,OAAkBm8B,UAAWP,EAAwBniB,OAAO,EAAAhH,EAAA2C,UAAS,oBAClFiV,KAAMK,SAAOlG,QAAkB2X,UAAWN,EAAwBpiB,OAAO,EAAAhH,EAAA2C,UAAS,mBAClFiV,KAAMK,SAAO9F,MAAkBuX,UAAWX,EAAwB/hB,OAAO,EAAAhH,EAAA2C,UAAS,eAClFiV,KAAMK,SAAOrG,KAAkB8X,UAAWV,EAAwBhiB,OAAO,EAAAhH,EAAA2C,UAAS,+BAG1FiV,KAAMK,SAAOtG,SAAU+X,UAAWH,EAASviB,OAAO,EAAAhH,EAAA2C,UAAS,gBAY7D6mB,EAAan/B,KAAKo/B,GACXD,kFClEX,QAAAl+B,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,QACAA,EAAA,yDAEA,IAAM0+B,EAAW,SAAAp3B,GAAA,IACbkO,EADalO,EACbkO,cACAqJ,EAFavX,EAEbuX,oBACAuB,EAHa9Y,EAGb8Y,SACAue,EAJar3B,EAIbq3B,UAJa,OAMbtzB,EAAAH,QAAA/J,cAACy9B,EAAA1zB,SACGpH,KAAK,gBACLqY,KAAM0C,EACNta,MAAOiR,EACP4K,SAAUA,EACVue,UAAWA,KAInBD,EAASv2B,WACLqN,cAAqBhP,UAAUiF,OAC/BoT,oBAAqBrY,UAAUxB,OAC/B25B,UAAqBn4B,UAAUkF,KAC/B0U,SAAqB5Z,UAAUmF,iBAGpB,EAAAmsB,EAAAlxB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAASuH,EAAZ8R,EAAY9R,GAAZ,OACI6O,cAAqBpW,EAAQ0nB,MAAMtR,cACnCqJ,oBAAqBzf,EAAQ0nB,MAAMjI,oBACnCuB,SAAqBhhB,EAAQ0nB,MAAM1G,SACnCue,UAAqBh4B,EAAGg4B,YALjB,CAObD,+FClCF1/B,OAAA0J,KAAAm2B,GAAAj2B,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA06B,EAAAh6B,uFCAA,QAAA7E,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAgM,EAAAhM,EAAA,OACAA,EAAA,KACA8+B,EAAA9+B,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KACA++B,EAAA/+B,EAAA,KACA83B,EAAA93B,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMg/B,EAAW,SAAA13B,GAAA,IACbuK,EADavK,EACbuK,SACAotB,EAFa33B,EAEb23B,2BACAxW,EAHanhB,EAGbmhB,uBACAyW,EAJa53B,EAIb43B,oBACAC,EALa73B,EAKb63B,mBACAC,EANa93B,EAMb83B,iBACAC,EAPa/3B,EAOb+3B,gBACAC,EARah4B,EAQbg4B,gBACAC,EATaj4B,EASbi4B,mBACAC,EAVal4B,EAUbk4B,cACAC,EAXan4B,EAWbm4B,cACAC,EAZap4B,EAYbo4B,cACAnqB,EAbajO,EAabiO,YAba,OAebvW,OAAO0J,KAAK6M,GAAazH,IAAI,SAAC7K,EAAM08B,GAChC,IAAMC,EAAcH,EAAcx8B,OAC5B0H,IAAeu0B,GAAwBE,GAAqBQ,EAAKl1B,IAAOu0B,GAExEY,EACFx0B,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGP,YAAaA,EACbD,GAAA,YAAgBzH,EAChBsH,UAAU,4BACVE,YAAA,EACAG,QAAS,WAAQy0B,EAAgBO,EAAKl1B,GAAIk1B,EAAKE,MAAO78B,KAEtDoI,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gCACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eAAc98B,KAAMA,EAAKuP,cAAejI,UAAU,kCACnDc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,kCAAiC,EAAAmK,EAAA2C,UAAS,OAAQ9B,EAAYtS,OAGtFoI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBAAwBI,EAAc,QAAUi1B,EAAKI,SACpE30B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACVI,EAAc,QAAUU,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQiuB,EAAK9V,OAAQjY,SAAUA,EAAUtH,UAAU,+BAOjG21B,IAAsB,EAAAl0B,EAAAwB,eAAckyB,IAAkBA,EAAcnmB,SAASsU,MAAQ+R,EAAKl1B,GAEhG,OACIW,EAAAH,QAAA/J,cAACg/B,EAAAj1B,SACGX,UAAU,uDACV1F,IAAK86B,EACL3c,aAAc,WAAQsc,GAAgB,EAAMr8B,IAC5CggB,aAAc,WAAQqc,GAAgB,KAEpCH,GAA8B,IAARQ,GACxBt0B,EAAAH,QAAA/J,cAACi/B,EAAAl1B,SAAaN,QAAS20B,IAErBW,EACE70B,EAAAH,QAAA/J,cAACk/B,EAAAn1B,SACGw0B,cAAeA,EACf90B,QAAS40B,EACT3tB,SAAUA,IAGdxG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACO2sB,GAA+B,IAARS,GAC1Bt0B,EAAAH,QAAA/J,cAACm/B,EAAAp1B,SAAS8b,eAAe,gCAEzB3b,EAAAH,QAAA/J,cAACo/B,EAAAr1B,SACG2G,SAAUA,EACV4tB,cAAeG,EACfY,cAAeZ,EAAKY,gBAEvB/X,EACGpd,EAAAH,QAAA/J,cAAC29B,EAAA2B,YACGje,UAAU,OACVke,aAAa,EAAAhsB,EAAA2C,UAAS,UACtBspB,cAAc,EAAAjsB,EAAA2C,UAAS,YACvBoL,SAAS,EAAA/N,EAAA2C,UAAS,qDAEjBwoB,GAGLA,OAS5Bb,EAAS72B,WACL0J,SAA4BrL,UAAUiF,OACtCwzB,2BAA4Bz4B,UAAUkF,KACtC+c,uBAA4BjiB,UAAUkF,KACtCwzB,oBAA4B14B,UAAUkF,KACtCyzB,mBAA4B34B,UAAUkF,KACtC0zB,iBAA4B54B,UAAUkF,KACtC2zB,gBAA4B74B,UAAUmF,KACtC2zB,gBAA4B94B,UAAUmF,KACtC8zB,cAA4Bj5B,UAAUxB,OACtC06B,cAA4Bl5B,UAAUxB,OACtCw6B,cAA4Bh5B,UAAUmF,KACtC4zB,mBAA4B/4B,UAAUmF,KACtC4J,YAA4B/O,UAAUxB,mBAG3B,EAAA8yB,EAAAlxB,SACX,SAAA6R,GAAA,IAAGhS,EAAHgS,EAAGhS,OAAQrH,EAAXqZ,EAAWrZ,QAASuH,EAApB8R,EAAoB9R,GAApB,OACIkL,SAA4BpL,EAAOoL,SACnCotB,2BAA4Bx4B,EAAOw4B,2BACnCC,oBAA4B9/B,EAAQ0nB,MAAMoY,oBAC1CE,iBAA4BhgC,EAAQ0nB,MAAMsY,iBAC1CC,gBAA4BjgC,EAAQ0nB,MAAM8Z,WAC1CtB,gBAA4BlgC,EAAQ0nB,MAAMwY,gBAC1CE,cAA4BpgC,EAAQ0nB,MAAM+Z,gBAC1CpB,cAA4BrgC,EAAQ0nB,MAAM2Y,cAC1CC,cAA4BtgC,EAAQ0nB,MAAM4Y,cAC1CnqB,YAA4BnW,EAAQ0nB,MAAMvR,YAC1CkT,uBAA4B9hB,EAAG8hB,uBAC/B0W,mBAA4Bx4B,EAAGm6B,oBAC/BvB,mBAA4B54B,EAAG44B,qBAdxB,CAgBbP,6GC5IF,QAAAh/B,EAAA,QACAA,EAAA,QACAA,EAAA,IACA+zB,EAAA/zB,EAAA,+KAEA,IAAM+gC,EAAoB,SAAAz5B,GASpB,IAAA05B,EARFxe,EAQElb,EARFkb,UACAke,EAOEp5B,EAPFo5B,YACAC,EAMEr5B,EANFq5B,aACAM,EAKE35B,EALF25B,WACAxe,EAIEnb,EAJFmb,QACA6S,EAGEhuB,EAHFguB,QACA4L,EAEE55B,EAFF45B,UACAC,EACE75B,EADF65B,WAEMC,GAAmB,EAAAn2B,EAAAC,SAAW,aAAX,eAAwCsX,GAAxC7U,EAAAqzB,KAAA,eACLxe,EADK,SACeye,GADftzB,EAAAqzB,EAErB,mBAAoCC,GAFfD,IAIzB,OACI31B,EAAAH,QAAA/J,cAAA,OAAKyE,IAAKu7B,EAAY52B,UAAW62B,GAC7B/1B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACXc,EAAAH,QAAA/J,cAAC4yB,EAAAsN,iBAAgB92B,UAAU,iCAC3Bc,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,sBAAsBkY,IAExCpX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACXc,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,0CACVK,QAAS0qB,GAETjqB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,2BAA2Bm2B,IAE/Cr1B,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,0CACVK,QAASs2B,GAET71B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,2BAA2Bo2B,OAO/DI,EAAkB54B,WACdqa,UAAchc,UAAUiF,OACxBi1B,YAAcl6B,UAAUiF,OACxBk1B,aAAcn6B,UAAUiF,OACxBw1B,WAAcz6B,UAAUkF,KACxB+W,QAAcjc,UAAUiF,OACxB6pB,QAAc9uB,UAAUmF,KACxBu1B,UAAc16B,UAAUmF,KACxBw1B,WAAc36B,UAAUmF,QAGnBo1B,ggBCtDTt7B,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,IACAs4B,EAAAt4B,EAAA,KACAshC,EAAAthC,EAAA,4DAEMuhC,grBAAoBj5B,UAAMvB,gDAClBy6B,GACN,OAAOv7B,KAAKG,MAAM2P,gBAAgB0rB,SAASD,yCAGjC,IAAAh6B,EAAAvB,KACV,OAAO8P,kBACFiG,OAAO,SAAA1U,GAAA,IAAGxD,EAAHwD,EAAGxD,KAAH,OAAc0D,EAAKk6B,UAAU59B,KACpCgK,IAAI,SAAA2K,GAAA,IAAG3U,EAAH2U,EAAG3U,KAAMiD,EAAT0R,EAAS1R,UAAT,OACDsE,EAAAH,QAAA/J,cAAC4F,EAADT,GACIzB,IAAKf,EACL69B,aAAcn6B,EAAKpB,MAAMu7B,aACzBC,gBAAiBp6B,EAAKpB,MAAMw7B,kBACxB,EAAAN,EAAAO,wBACA96B,EACAS,EAAKpB,MAAM07B,aAEPjc,YAAare,EAAKpB,MAAMyf,aAE5Bre,EAAKpB,MAAM27B,aACXv6B,EAAKpB,MAAM47B,+CAO3B,OAAO/7B,KAAKg8B,uBAIpBV,EAAYp5B,WACR45B,aAAiBv7B,UAAUxB,OAC3B+Q,gBAAiB4M,YAAcC,uBAC/B+e,aAAiBn7B,UAAUkF,KAC3Bk2B,gBAAiBp7B,UAAUkF,KAC3Bma,YAAiBrf,UAAUxB,OAC3B88B,YAAiBt7B,UAAUxB,mBAGhB,EAAA8yB,EAAAlxB,SACX,SAAAkS,GAAA,IAAGrS,EAAHqS,EAAGrS,OAAQC,EAAXoS,EAAWpS,OAAQtH,EAAnB0Z,EAAmB1Z,QAASuH,EAA5BmS,EAA4BnS,GAA5B,OACIo7B,aAAiBt7B,EACjBof,YAAiBnf,EAAOmf,YACxB9P,gBAAiB3W,EAAQ0nB,MAAM/Q,gBAC/B+rB,YAAiB1iC,EAAQ0nB,MACzBkb,SAAiBr7B,IANV,CAQb46B,qKCvDKr2B,iGCAP,QAAAlL,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,wDAEA,IAAMkiC,EAAmB,SAAA56B,GAKnB,IAJF66B,EAIE76B,EAJF66B,YACAr+B,EAGEwD,EAHFxD,KACAsc,EAEE9Y,EAFF8Y,SACA7b,EACE+C,EADF/C,MAMM69B,EAAOD,EAAYr0B,IAAI,SAACu0B,EAAK1C,GAC/B,IAAMp1B,GAAY,EAAAU,EAAAC,SAAW,uBACzBo3B,8BAA+BD,EAAI99B,QAAUA,IAEjD,OACI8G,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGrG,IAAK86B,EACL70B,KAAMu3B,EAAIv3B,KACVF,QAAS,kBAZD,SAAC23B,GACbh+B,IAAUg+B,GACdniB,GAAWjd,QAAUoB,MAAOg+B,EAAgBz+B,UAUrB0+B,CAAYH,EAAI99B,QAC/BgG,UAAWA,MAIvB,OAAOc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eAAe63B,IAGzCF,EAAiB/5B,WACbg6B,YAAa37B,UAAU4c,MACvBtf,KAAa0C,UAAUiF,OACvB2U,SAAa5Z,UAAUmF,KACvBpH,MAAaiC,UAAUiM,WACnBjM,UAAUkM,OACVlM,UAAUiF,oBAIHy2B,oKCzCRh3B,iGCAP,IAAAzF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEA,IAAMyiC,EAAiB,SAAAn7B,GAKjB,IAJF6hB,EAIE7hB,EAJF6hB,cAIEuZ,EAAAp7B,EAHFq7B,gBAGEp/B,IAAAm/B,KAAAE,EAAAt7B,EAFFu7B,sBAEEt/B,IAAAq/B,KAAAE,EAAAx7B,EADFy7B,iBACEx/B,IAAAu/B,OAEEjxB,EAGAsX,EAHAtX,SACAiY,EAEAX,EAFAW,OACAkZ,EACA7Z,EADA6Z,kBAGEC,GAAqBD,EAAoB,EAAI,IAAM,IAAKA,EAAxD,IAEN,OACI33B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAA,YAAsBuf,EAAS,EAAI,MAAQ,SAC1CiZ,EAAUG,gBACR73B,EAAAH,QAAA/J,cAACgiC,EAAAj4B,SAASie,cAAeA,EAAe4Z,UAAWA,IAErDJ,GACEt3B,EAAAH,QAAA/J,cAACiiC,EAAAl4B,QAAD,MAEJG,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,eAAf,KACAhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,YACXc,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQmY,EAAQjY,SAAUA,EAAUC,UAAA,IACzC+wB,GACEx3B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAhB,IAA+B04B,EAA/B,SAQxBR,EAAet6B,WACXghB,cAAgB3iB,UAAUxB,OAC1B29B,SAAgBn8B,UAAUkF,KAC1Bm3B,eAAgBr8B,UAAUkF,KAC1Bq3B,UAAgBv8B,UAAUxB,mBAGf,EAAAS,EAAAwB,UAASw7B,gHCjDxBzjC,OAAA0J,KAAA26B,GAAAz6B,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAk/B,EAAAx+B,0EADOqG,iGCAMo4B,gBAAgB,IAEhBC,aACTC,SAAe,kBACfC,UAAe,mBACfC,WAAe,oBACfC,YAAe,qBACfC,aAAe,sBACfC,cAAe,wBAGNC,SACTC,MAAS,qBACTC,KAAS,oBACTC,QAAS,uBACTC,QAAS,yXCfblkC,EAAA,QACAA,EAAA,IACAmkC,EAAAnkC,EAAA,4DAEMokC,cACF,SAAAA,EAAYh+B,gGAAOqB,CAAAxB,KAAAm+B,GAAA,IAAAx2B,mKAAA7F,CAAA9B,MAAAm+B,EAAAp8B,WAAAhJ,OAAAiJ,eAAAm8B,IAAAjlC,KAAA8G,KACTG,IADS,OAAAwH,EAiBnBy2B,SAAW,WACP,IAAMC,EAAa12B,EAAKgZ,KAAKgO,wBACvB2P,KACNvlC,OAAO0J,KAAKkF,EAAK42B,KAAK57B,QAAQ,SAAC/D,GAC3B,IACM4/B,EADK72B,EAAK42B,IAAI3/B,GACF+vB,wBAEZ8P,EAAOD,EAAOC,KAAOJ,EAAWI,KAChCC,EAAQL,EAAWK,MAAQF,EAAOE,MAExCJ,EAAM1/B,IAAS6/B,OAAMC,WAEzB/2B,EAAK4V,UAAW+gB,WA7BD32B,EAgCnBg3B,kBAAoB,WAChB,GAAyB,MAArBh3B,EAAKxH,MAAMy+B,QAA2D,IAAzC7lC,OAAO0J,KAAKkF,EAAK0V,MAAMihB,OAAO1lC,OAC3D,OAAS6lC,KAAM,IAAKC,MAAO,QAE/B,IAAMG,EAAOl3B,EAAK0V,MAAMihB,MAAM32B,EAAKxH,MAAMy+B,QACzC,OACIH,KAAeI,EAAKJ,KAApB,KACAC,MAAeG,EAAKH,MAApB,KACAI,WAAY,2BAtChBn3B,EAAK0V,OACDihB,UAEJ32B,EAAK42B,OALU52B,qUADGtF,UAAM08B,8DAUxB/+B,KAAKo+B,WACL/+B,OAAO8vB,iBAAiB,SAAUnvB,KAAKo+B,yDAIvC/+B,OAAO+vB,oBAAoB,SAAUpvB,KAAKo+B,2CA8BrC,IAAA78B,EAAAvB,KACL,OACIoF,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,cACV3E,IAAK,SAAA8uB,GAAA,OAAMltB,EAAKof,KAAO8N,IAEvBrpB,EAAAH,QAAA/J,cAACgjC,EAAAc,UACGJ,OAAQ5+B,KAAKG,MAAMy+B,OACnBzkB,SAAUna,KAAKG,MAAMga,SACrB8kB,SAAUj/B,KAAKu+B,KAEdv+B,KAAKG,MAAMT,UAEhB0F,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,gBACV46B,MAAOl/B,KAAK2+B,gCAOhCR,EAAYj8B,WACR08B,OAAcr+B,UAAUiF,OACxB9F,SAAca,UAAUgF,KACxB4U,SAAc5Z,UAAUmF,KACxBy5B,aAAc5+B,UAAUmF,QAGnBy4B,+GC9ET,QAAApkC,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMilC,EAAW,SAAA39B,GAAA,IACbu9B,EADav9B,EACbu9B,OACAl/B,EAFa2B,EAEb3B,SACAu/B,EAHa59B,EAGb49B,SACA9kB,EAJa9Y,EAIb8Y,SAJa,OAMb9X,UAAM+8B,SAASv3B,IAAInI,EAAU,SAAC2/B,GAC1B,IAAMC,GAAY,EAAAt6B,EAAAC,SACd,OACEs6B,cAAeF,EAAMzgC,MAAQggC,IAEnC,OACIx5B,EAAAH,QAAA/J,cAAA,OACIoJ,UAAWg7B,EACX3/B,IAAK,SAAA8uB,GAAA,OAAMwQ,EAASI,EAAMzgC,KAAO6vB,GACjC9pB,QAAS,WACLwV,EAASklB,EAAMzgC,OAGlBygC,MAMjBL,EAAS98B,WACL08B,OAAUr+B,UAAUiF,OACpB9F,SAAUa,UAAUgF,KACpB05B,SAAU1+B,UAAUxB,OACpBob,SAAU5Z,UAAUmF,QAGfs5B,0FCpCT,QAAAjlC,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAMylC,EAAkB,SAAAn+B,GAAA,IACpB3B,EADoB2B,EACpB3B,SACA7B,EAFoBwD,EAEpBxD,KACA8G,EAHoBtD,EAGpBsD,QACAu6B,EAJoB79B,EAIpB69B,MACAO,EALoBp+B,EAKpBo+B,UACAC,EANoBr+B,EAMpBq+B,OANoB,OAQpBt6B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBAAuBK,QAAS+6B,GAAU/6B,GACrDS,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,6BAA6BzG,GAC5C6hC,EACGt6B,EAAAH,QAAA/J,cAACykC,EAAA16B,SACG26B,QAASH,EACTP,MAAOA,IAGXx/B,IAKZ8/B,EAAgBt9B,WACZxC,SAAWa,UAAUgF,KACrB1H,KAAW0C,UAAUiF,OACrBb,QAAWpE,UAAUmF,KACrBw5B,MAAW3+B,UAAUiF,OACrBi6B,UAAWl/B,UAAUkF,KACrBi6B,OAAWn/B,UAAUmF,gBAGV85B,iFClCf,QAAAzlC,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM8lC,EAAe,SAAAx+B,GAAwB,IAArB69B,EAAqB79B,EAArB69B,MAAOU,EAAcv+B,EAAdu+B,QACrBE,EAAeZ,GAAS,gBACxBvhB,GAAa,EAAA3Y,EAAAC,SAAW66B,wHAAXp4B,IACXo4B,EADW,YACeF,IAGlC,OACIx6B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWqZ,KAIxBkiB,EAAa39B,WACTg9B,MAAS3+B,UAAUiF,OACnBo6B,QAASr/B,UAAUkF,gBAGRo6B,8FCpBf9mC,OAAA0J,KAAAs9B,GAAAp9B,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6hC,EAAAnhC,mQCAA7E,EAAA,IACAw8B,EAAAx8B,EAAA,IAGAimC,EAAAjmC,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,MACAkmC,EAAAlmC,EAAA,kEAE2B,SAAA6sB,GA2BvB,OAAOxhB,EAAAH,QAAA/J,cAACq7B,EAAA2J,OACJpJ,MAAOlQ,EAAMkQ,MACbzQ,KAAMO,EAAMP,KACZ8Z,OA7BkB,SAAAhgC,GAClB,IAAI1G,EAAS,KACb,GAAImtB,EAAMuR,YAAcC,WAAU,CAC9B,IAAI3B,EAAK7P,EAAM6P,GAGX7P,EAAMP,OAASK,UAAOjG,QAEtBgW,EADqBt2B,EAAbqN,SACMS,SAAS1B,cAAcoB,QAAQiZ,EAAMP,KAAM,KAE7D5sB,EAAS2L,EAAAH,QAAA/J,cAACq7B,EAAA6B,UAAS3B,GAAIA,SAEvBh9B,EACKmtB,EAAME,mBAAqBF,EAAMC,aAC9BzhB,EAAAH,QAAA/J,cAACklC,EAAAn7B,SAAYo7B,cAAezZ,EAAMyR,eAAgBiI,QAASC,oBAE3Dn7B,EAAAH,QAAA/J,cAAC0rB,EAAMuR,UAAP93B,KAAqBF,GAAOumB,OAAQE,EAAMF,UAItD,IAAMjR,EAAQmR,EAAMnR,MAAWmR,EAAMnR,MAAvB,MAAoC,GAGlD,OAFA1a,SAAS0a,MAAT,GAAqBA,EAAU+qB,gBAC/Bhf,UAAIwB,eAAgBtmB,MAAO,cACpBjD,2GClCf,QAAAM,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACA+zB,EAAA/zB,EAAA,wDAEa0mC,eAAe,SAAAp/B,GAGtB,IAFFkb,EAEElb,EAFFkb,UACAmkB,EACEr/B,EADFq/B,SAEMC,GAAsB,EAAA37B,EAAAC,SAAW,gBAAiBsX,GACxD,OACInX,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACKiQ,GAA2B,UAAdA,EACVnX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWq8B,GACZv7B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,kBAAkBK,QAAS+7B,GACtCt7B,EAAAH,QAAA/J,cAAC4yB,EAAAwB,UAAD,OAEJlqB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,WAAK,EAAAuT,EAAA2C,UAAS,wBAItBhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWq8B,GACZv7B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,kBAAkBK,QAAS+7B,GACtCt7B,EAAAH,QAAA/J,cAAC4yB,EAAAwB,UAAD,OAEJlqB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,aAQ1BpC,WACTqa,UAAWhc,UAAUiF,OACrBk7B,SAAWngC,UAAUmF,sWCtCzB3L,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,IACA6mC,EAAA7mC,EAAA,+NAEM8mC,6SACFC,kBAAoB,WAChBn5B,EAAKxH,MAAM4gC,cACPp5B,EAAKxH,MAAM6gC,eACXr5B,EAAKxH,MAAM6gC,2VAJE3+B,UAAMvB,+CAQlB,IAAA0c,EAC0Cxd,KAAKG,MAA5C8gC,EADHzjB,EACGyjB,QAASp8B,EADZ2Y,EACY3Y,KAAM6Y,EADlBF,EACkBE,KAAMwjB,EADxB1jB,EACwB0jB,cAE7B,OACI97B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,cAAcK,QAAS3E,KAAK8gC,mBACtCI,EACG97B,EAAAH,QAAA/J,cAAA,KAAGgT,KAAK,eAAevJ,QAASu8B,GAC5B97B,EAAAH,QAAA/J,cAAA,YAAOwiB,EAAM7Y,IAGjBO,EAAAH,QAAA/J,cAAC0lC,EAAAvZ,YAAWoP,GAAIwK,GACZ77B,EAAAH,QAAA/J,cAAA,YAAOwiB,EAAM7Y,cAQrCg8B,EAAW3+B,WACP8+B,cAAezgC,UAAUmF,KACzBw7B,cAAe3gC,UAAUmF,KACzBq7B,YAAexgC,UAAUmF,KACzBwI,KAAe3N,UAAUiF,OACzBkY,KAAend,UAAUgF,KACzB07B,QAAe1gC,UAAUiF,OACzBX,KAAetE,UAAUiF,QAG7B,IAAM27B,GAAwB,EAAAtP,EAAAlxB,SAAQ,SAAA6R,GAAA,OAClCuuB,YADkCvuB,EAAG9R,GACrBqgC,cADU,CAE1BF,KAE8BA,WAAzBM,8VC9CTpnC,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,IACA83B,EAAA93B,EAAA,IACA8rB,EAAA9rB,EAAA,+NAEMsnC,6SACFhkB,OACIikB,mBAAmB,KAGvBC,OAAS,SAACh8B,GACNoC,EAAKhI,IAAM4F,KAkBfi8B,KAAO,WACH75B,EAAK85B,cAAa,GAClB95B,EAAKxH,MAAM4gC,iBAGfW,mBAAqB,SAAChlC,GACdiL,EAAK0V,MAAMikB,mBACP35B,EAAKhI,MAAQgI,EAAKhI,IAAIgiC,SAASjlC,EAAMQ,SACrCyK,EAAK65B,kVAhCAn/B,UAAMvB,mDASVuc,GACTrd,KAAK4hC,QAAUvkB,EACftiB,SAASkzB,KAAKC,UAAUwR,OAAO,YAAa1/B,KAAK4hC,0CA0B5C,IACGN,EAAsBthC,KAAKqd,MAA3BikB,kBADH9jB,EAEqCxd,KAAKG,MAAvCoc,EAFHiB,EAEGjB,UAAWmkB,EAFdljB,EAEckjB,SAAUhhC,EAFxB8d,EAEwB9d,SAEvBmiC,GAAkB,EAAA78B,EAAAC,SAAW,aAC/B68B,KAAQR,IAENS,GAAe,EAAA/8B,EAAAC,SAAW,SAAUsX,GAE1C,OACInX,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,GAAIX,EACJlmC,QAAS,IACT8mC,WAAW,mBACXC,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAA,SAAOoJ,UAAU,oBACbc,EAAAH,QAAA/J,cAAA,OACIoJ,UAAWu9B,EACXl9B,QAAS3E,KAAK0hC,oBAEdt8B,EAAAH,QAAA/J,cAAA,OACIyE,IAAKK,KAAKuhC,OACVj9B,UAAWy9B,GAEX38B,EAAAH,QAAA/J,cAAC2qB,EAAA4a,cACGlkB,UAAWA,EACXmkB,SAAUA,IAEbhhC,yDApDOS,EAAOkd,GAOnC,MANwB,SAApBld,EAAMoc,UACNc,EAAMikB,kBAAoBnhC,EAAMiiC,kBACL,UAApBjiC,EAAMoc,YACbc,EAAMikB,kBAAoBnhC,EAAMkiC,4BAG7BhlB,WAsDfgkB,EAAOn/B,WACHqa,UAAWhc,UAAUiF,OACrB9F,SAAWa,UAAUiM,WACjBjM,UAAU4c,MACV5c,UAAUxB,SAEd2hC,SAA4BngC,UAAUmF,KACtC48B,OAA4B/hC,UAAUmF,KACtCq7B,YAA4BxgC,UAAUmF,KACtCiY,WAA4Bpd,UAAUiF,OACtC+8B,UAA4BhiC,UAAUiF,OACtC48B,kBAA4B7hC,UAAUkF,KACtC48B,2BAA4B9hC,UAAUkF,MAG1C,IAAM+8B,GAAmB,EAAA3Q,EAAAlxB,SACrB,SAAA6R,GAAA,IAAG9R,EAAH8R,EAAG9R,GAAH,OACI0hC,kBAA4B1hC,EAAG0hC,kBAC/BC,2BAA4B3hC,EAAG2hC,2BAC/BtB,YAA4BrgC,EAAGqgC,cAJd,CAMvBM,KAE2BA,OAApBmB,oFCzGT,wDAAAzoC,EAAA,IACA0U,EAAA1U,EAAA,GACAk9B,EAAAl9B,EAAA,cAE8B,kBAE1BqL,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAC+7B,EAAAqB,eAAch0B,UAAU,0BACzBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAAyB,EAAAmK,EAAA2C,UAAS,0GCT9D,QAAArX,EAAA,QACAA,EAAA,IACAgV,EAAAhV,EAAA,KACA++B,EAAA/+B,EAAA,wDAEA,IAAM0oC,EAAmB,SAAAphC,GAAA,IAAGrE,EAAHqE,EAAGrE,KAAH,OACrBoI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eAAc98B,KAAMA,EAAKuP,cAAejI,UAAU,UAEvDc,EAAAH,QAAA/J,cAAA,aACK,EAAA6T,EAAA4d,0BAAyB3vB,IAAS,MAK/CylC,EAAiBvgC,WACblF,KAAMuD,UAAUiF,kBAGLi9B,oKCpBRx9B,8VCAPlL,EAAA,QACAA,EAAA,IACAw8B,EAAAx8B,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,KACA83B,EAAA93B,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,6DAEMm9B,grBAAwB70B,UAAMvB,0DACVd,KAAKG,MAAMuiC,QAAQ1iC,KAAKG,MAAMgnB,4DAE3BnnB,KAAKG,MAAMwiC,6CAE3B,IAAAC,EAKD5iC,KAAKG,MAAM+iB,cAHXiE,EAFCyb,EAEDzb,YACA0b,EAHCD,EAGDC,SACAC,EAJCF,EAIDE,gBAGJ,OAAI3b,IAAgBnnB,KAAKG,MAAMqa,UAEvBpV,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAC6nC,EAAA99B,SAAc0e,OAAQ3jB,KAAKG,MAAM6iC,iBAClC59B,EAAAH,QAAA/J,cAAC+nC,EAAAh+B,SACGi+B,OAAQJ,EAAgBlb,IACxBub,eAAgBnjC,KAAKG,MAAMgjC,eAC3BC,aAAcpjC,KAAKG,MAAMijC,aACzBP,SAAUA,IAEdz9B,EAAAH,QAAA/J,cAACq7B,EAAA8M,MACG/+B,UAAU,sDACVmyB,GAAI/P,UAAO7F,MACXlc,QAAS3E,KAAKG,MAAMmjC,iBAEpBl+B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAa,EAAAmK,EAAA2C,UAAS,yBAK9C+V,GAAgBnnB,KAAKG,MAAMqa,UAMnCpV,EAAAH,QAAA/J,cAACqoC,EAAAt+B,SAAeuX,QAASxc,KAAKG,MAAMqjC,gBAJhCp+B,EAAAH,QAAA/J,cAACm/B,EAAAp1B,QAAD,eAUhBiyB,EAAgBh1B,WACZilB,YAAiB5mB,UAAUiF,OAC3B0d,cAAiB3iB,UAAUxB,OAC3BokC,eAAiB5iC,UAAUxB,OAC3BqkC,aAAiB7iC,UAAUxB,OAC3BikC,eAAiBziC,UAAUiF,OAC3Bg+B,cAAiBjjC,UAAUiF,OAC3BgV,UAAiBja,UAAUkF,KAC3B69B,gBAAiB/iC,UAAUmF,KAC3Bg9B,QAAiBniC,UAAUmF,KAC3Bi9B,UAAiBpiC,UAAUmF,iBAGhB,EAAAmsB,EAAAlxB,SACX,SAAAU,GAAA,IAAGlI,EAAHkI,EAAGlI,QAAH,OACI+pB,cAAgB/pB,EAAQ2C,SAASonB,cACjCkgB,aAAgBjqC,EAAQ2C,SAASsnC,aACjCD,eAAgBhqC,EAAQ2C,SAASqnC,eACjCH,eAAgB7pC,EAAQ2C,SAASknC,eACjCQ,cAAgBrqC,EAAQ2C,SAAS0nC,cACjChpB,UAAgBrhB,EAAQ2C,SAAS0e,UACjCkoB,QAAgBvpC,EAAQ2C,SAAS4mC,QACjCC,UAAgBxpC,EAAQ2C,SAAS6mC,YAT1B,CAWbzL,kFChFF,QAAAn9B,EAAA,QACAA,EAAA,QACAA,EAAA,IAEA83B,EAAA93B,EAAA,IACA0pC,EAAA1pC,EAAA,KACA2pC,EAAA3pC,EAAA,SACAA,EAAA,MACA4pC,EAAA5pC,EAAA,wDAIA,IAAM6pC,EAAU,SAAAviC,GAOV,IALF6hB,EAKE7hB,EALF6hB,cACAkQ,EAIE/xB,EAJF+xB,YACAyQ,EAGExiC,EAHFwiC,cACAC,EAEEziC,EAFFyiC,YACAhH,EACEz7B,EADFy7B,UAEMrH,GAAW,EAAAgO,EAAAvQ,iBAAgBhQ,EAAc3T,eACzCw0B,GAAW,EAAAL,EAAA9f,SAAQV,GACnB8gB,GAAY,EAAAh/B,EAAAC,SAAW,YACzBg/B,MAASF,IAGTG,EAAWC,kBAIf,OAHI1O,GAAYoO,IACZK,EAAWE,gBAUXh/B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACT4e,EAAc3T,eACZnK,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW0/B,GACZ5+B,EAAAH,QAAA/J,cAACgpC,GACGhhB,cAAeA,EACfkQ,YAAaA,EACb2Q,SAAUA,EACVjH,UAAWA,KAIvB13B,EAAAH,QAAA/J,cAACmpC,EAAAp/B,SACGuX,QAASsgB,EAAU0G,cACnBc,aAAcR,MAO9BF,EAAQ1hC,WACJghB,cAAe3iB,UAAUxB,OACzBq0B,YAAe7yB,UAAUxB,OAEzB8kC,cAAetjC,UAAUkF,KACzBq+B,YAAevjC,UAAUmF,KACzBo3B,UAAev8B,UAAUxB,mBAGd,EAAA8yB,EAAAlxB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAAH,OACI+pB,cAAe/pB,EAAQ2C,SAASonB,cAChCkQ,YAAej6B,EAAQ2C,SAASs3B,YAChC0Q,YAAe3qC,EAAQ2C,SAASyoC,gBAChCzH,UAAe3jC,EAAQ2C,SAASghC,YALzB,CAQb8G,iCC3EF7pC,EAAA,KACAA,EAAA,KAEA,IAAAyqC,EAAAzqC,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEAsF,OAAOolC,kBAAoBC,mBAE3B,EAAAC,EAAA1/B,YACA,EAAA2/B,EAAA3/B,2OCVA,IAAA4C,GACAg9B,OAAA,IACAC,UAAA,KAIA,SAAAC,EAAAza,GACA,IAAA7lB,EAAAugC,EAAA1a,GACA,OAAAvwB,EAAA0K,GAEA,SAAAugC,EAAA1a,GACA,IAAA7lB,EAAAoD,EAAAyiB,GACA,KAAA7lB,EAAA,IACA,IAAAnK,EAAA,IAAA8C,MAAA,uBAAAktB,EAAA,KAEA,MADAhwB,EAAA2qC,KAAA,mBACA3qC,EAEA,OAAAmK,EAEAsgC,EAAAtiC,KAAA,WACA,OAAA1J,OAAA0J,KAAAoF,IAEAk9B,EAAApqC,QAAAqqC,EACA5qC,EAAAD,QAAA4qC,EACAA,EAAAtgC,GAAA,qFCxBA,IAAAqB,EAAA/L,EAAA,OACAA,EAAA,IACAmrC,EAAAnrC,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,MACAu4B,EAAAv4B,EAAA,SACAA,EAAA,0DAEA,EAAA+L,EAAAq/B,YAAYC,gBAAgB,cAEZ,WACZzS,UAAO0S,QAEP,EAAA/S,EAAAgT,oBAEA,IAAM5+B,EAAa,IAAI6+B,UAEvBC,UAAeH,KAAK3+B,GACpB++B,UAAgBJ,KAAK3+B,GACrBA,EAAWlG,OAAO6kC,OAClB3+B,EAAWvN,QAAQ0nB,MAAMwkB,OAEzB,IAAMK,EAAM3qC,SAASozB,eAAe,cAEhCuX,IACA,EAAAR,EAAA/E,QAAO/6B,EAAAH,QAAA/J,cAAC0pC,EAAA3/B,SAAIyB,WAAYA,IAAgBg/B,uFC3BhD,IAAA5/B,EAAA/L,EAAA,uDACAA,EAAA,MACA4rC,EAAA5rC,EAAA,IAEA,IAAI6rC,SAEEJ,EAAkB,WACpB,IAKMK,GAAc,EAAA//B,EAAAI,QAAO,SAACyd,EAAQmiB,GAC5BF,IACAA,EAAaG,eAAoBpiB,EACjCiiB,EAAaI,kBAAoBF,KAIzC,OACIT,KAbS,SAACjlC,GACV6lC,UAAmBZ,KAAKz/B,sBAAoBy/B,KAAKjlC,GAAQylC,GACzDD,EAAexlC,EAAMK,SAHL,aAkBT+kC,oFCxBf,IAAA1/B,EAAA/L,EAAA,GACAyR,EAAAzR,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KACAu4B,EAAAv4B,EAAA,IACAgM,EAAAhM,EAAA,GACA4L,EAAA5L,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEA,IAAI+hC,SACA8J,SAGEhgC,EAAuB,WACzB,IAAMsgC,EAAe,WACjBN,EAAaO,mBAAkB,IAG7BC,EAAS,SAACC,GAEZ,GAAIA,EAAU,CACV,IAAKC,UAAMC,eAAgB,CACvB,IAAKzK,EAAa0K,eAEd,YADA,EAAA7gC,EAAA4sB,iBAGJ1sB,UAAGilB,uBAAuB2b,EAAiBC,eAE/C/zB,UAAW0yB,MAAK,EAAAv/B,EAAAI,QAAO,UAAW,WAAQ0/B,EAAahmB,YAAcjN,UAAWzU,SAChF0nC,EAAaO,mBAAkB,KAIjCQ,EAAY,SAAClU,GAGf,OAFAmU,EAAYnU,GAEJA,EAAS9I,UACb,IAAK,YACD,GAAI8I,EAASt1B,MAAO,CAChB,IAAM0pC,EAAyD,MAAzCr+B,eAAeI,QAAQ,cACS,mBAAlD,EAAA7C,EAAAqK,kBAAiBqiB,GAAW,QAAS,UAAgCoU,GACrEr+B,eAAe2F,WAAW,eAG9B,EAAAxI,EAAA4sB,sBACQ+T,UAAMC,gBAAmB,YAAYh5B,KAAKu5B,QAAM5oC,IAAI,oBACxDu0B,EAASsU,UAAUx4B,UAAYutB,EAAavtB,SAC5C,EAAA5I,EAAA4sB,kBAEAuJ,EAAakL,kBAAkBvU,GAC/B5sB,UAAGokB,iBAAiBwc,EAAiBrc,SAAS,GAC9CvkB,UAAGsiB,cACHtiB,UAAGkiB,mBACHliB,UAAGgjB,mBACHhjB,UAAG4iB,eACHwe,EACIxU,EAASsU,UAAUG,SACnBpL,EAAaqL,SAASrL,EAAavtB,SAAS+Z,WAE3CwT,EAAasL,YACdvhC,UAAGoiB,mBAEPR,UAAa4f,eACT,OAAO95B,KAAKklB,EAASsU,UAAUn7B,WAAckwB,EAAaqL,SAASrL,EAAavtB,SAAS+4B,eAYrG,MACJ,IAAK,kBAGL,IAAK,qBAED,MACJ,IAAK,eACG7U,EAASrK,eACT6e,EAAaxU,EAASrK,aAAamf,cACnCzL,EAAa0L,SAAS/U,EAASrK,aAAaqf,QAMhD,MACJ,IAAK,oBACD3L,EAAa4L,yBAAyBjV,EAAS3J,mBAC/C,MACJ,IAAK,cACDtH,UAAImmB,oBAAoBlV,GAAY7Q,OAAQ,UAMlDqlB,EAAe,SAAC3e,GACdA,IACAwT,EAAamL,aAAa3e,GAC1BziB,UAAGwiB,eAAeC,KASpBse,EAAc,SAACnU,GACjB,IAAM9I,EAAa8I,EAAS9I,SAE5B,QADmB,EAAA5jB,EAAAqK,kBAAiBqiB,GAAW,QAAS,UAEpD,IAAK,gBACL,IAAK,sBACL,IAAK,yBACgB,mBAAb9I,GACAic,EAAagC,UAAS,GAAQprB,QAASiW,EAASt1B,MAAMqf,UAE1D,MAEJ,IAAK,YACgB,qBAAbmN,GACAic,EAAagC,UAAS,GAAQprB,QAAS,8EAE3C,MACJ,IAAK,eAGL,IAAK,iBACDopB,EAAagC,UAAS,GAAQprB,QAASiW,EAASt1B,MAAMqf,YAiBlE,OACI6oB,KAZS,SAACjlC,GAIV,OAHA07B,EAAe17B,EAAMI,OACrBolC,EAAexlC,EAAMK,QAGjBylC,eACAE,SACAO,cAMJkB,YA7Ce,EAAA/hC,EAAAgiC,MAAAt9B,mBAAAC,KAAK,SAAAC,EAAW0f,GAAX,OAAA5f,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACd2c,UAAasgB,KAAK,kBADJ,OAEpBjM,EAAa+L,WAAWzd,GAFJ,wBAAAxf,EAAAQ,SAAAV,EAAA1K,UAhGC,aAiJd4F,EAEf,IAAM6gC,EAAoB,WACtB,IAAIuB,GAAe,EAwBnB,OACItB,cAxBkB,SAACjU,GACnB,GAAIA,EAAS1H,eAAgB,CAEzB,IADAid,EAAe,QAAQz6B,KAAKklB,EAAS1H,eAAekd,gBAC/BxgB,UAAaygB,eAE9B,YADA7oC,OAAOmO,SAASwlB,SAGhBP,EAAS1H,eAAevO,QAK5BiL,UAAaygB,aAAaF,IAC1B,EAAAx8B,EAAA28B,eAAc1V,EAAS1H,kBAY3BX,QARY,SAACqI,GACRA,EAASt1B,OACVyI,EAAoBiiC,WAAWpV,EAASrI,QAAQA,WArBlC,kFClK1B,IAAAtkB,EAAA/L,EAAA,GAEI6rC,SAEEH,EAAmB,WACrB,IAsBMI,GAAc,EAAA//B,EAAAI,QAAO,YAAa,WAChC0/B,GACAA,EAAawC,WACT3iB,IAAW,8GACXC,WACI2iB,OACI/Z,QAAS,IACTpgB,KAAS,6BACTo6B,IAAS,sBACTprC,OAAS,eAO7B,OACImoC,KAvCS,SAACjlC,GACVwlC,EAAexlC,EAAMK,OAErB,IAAMlF,EAAM,qCACZ,IAAIR,SAASwtC,cAAT,gBAAuChtC,EAAvC,QACJ8D,OAAOmpC,QACHC,IAAa/vC,EAAG,GAAIgwC,GAAI,EAAG3qC,GAAI,EAAG/D,EAAG,EAAG2D,GAAI,GAC5CgrC,IAAW,EACXC,IAAW,2BACXC,SAAW,EACXC,SAAW,EACXC,OAAWlD,EACXmD,WAAW,EACXC,UAAW,GAEXluC,SAASkzB,MAAM,CACf,IAAMhzB,EAASF,SAASG,cAAc,UACtCD,EAAOK,aAAa,MAAOC,GAC3BR,SAASkzB,KAAKzwB,YAAYvC,MAnBb,aA4CVwqC,kGChDf,QAAA1rC,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,mEAGI,SAAAwrC,iGAAc/jC,CAAAxB,KAAAulC,GACVvlC,KAAKQ,OAAU,IAAI0oC,UAAYlpC,MAC/BA,KAAKS,OAAU,IAAI0oC,UACnBnpC,KAAK7G,QAAU,IAAIiwC,UAAappC,MAChCA,KAAKU,GAAU,IAAI2oC,kZCV3BvjC,EAAA/L,EAAA,OAKAA,EAAA,KACA2U,EAAA3U,EAAA,IAGAuvC,EAAAvvC,EAAA,QACAA,EAAA,UACAA,EAAA,KACY+4B,0JAAZ/4B,EAAA,MACA0U,EAAA1U,EAAA,GACAu4B,EAAAv4B,EAAA,QAGAA,EAAA,KACAwvC,EAAAxvC,EAAA,s6BAEA,IACqBmvC,KAiIhBhjC,SAAOC,QASPD,SAAOC,QA2BPD,SAAOC,QAOPD,SAAOC,QAWPD,SAAOC,QAmBPD,SAAOC,QAKPD,SAAOC,QASPD,SAAOC,QA+DPD,SAAOC,QAKPD,SAAOC,QAmCPD,SAAOC,QASPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,oBA9UR,SAAA+iC,EAAYxiC,gGAAYlF,CAAAxB,KAAAkpC,GAAA,IAAAvhC,mKAAA7F,CAAA9B,MAAAkpC,EAAAnnC,WAAAhJ,OAAAiJ,eAAAknC,IAAAhwC,KAAA8G,MACZ0G,gBADY,OAAAL,EAAAsB,EAAA,UAAArB,EAAAqB,GAAAtB,EAAAsB,EAAA,eAAApB,EAAAoB,GAAAtB,EAAAsB,EAAA,WAAA6hC,EAAA7hC,GAAAtB,EAAAsB,EAAA,WAAA8hC,EAAA9hC,GAAAtB,EAAAsB,EAAA,mBAAA+hC,EAAA/hC,GAAAtB,EAAAsB,EAAA,kBAAAgiC,EAAAhiC,GAAAtB,EAAAsB,EAAA,oBAAAiiC,EAAAjiC,wUATa1B,8DAkIbsI,GACpBvO,KAAKmnC,SAAS54B,GAASs7B,kBAAoB,EAC3C7pC,KAAKmnC,SAAS54B,GAAS+4B,aAAoB,EAC3CwC,aAAWC,UAtIC,kBAsIsB/pC,KAAKmnC,UACvC2C,aAAWjX,IAAI,iBAAkBtkB,GACjCvO,KAAKuO,QAAUA,gDAIG,IAAAhN,EAAAvB,KACZgqC,EAAgClD,QAAMmD,YAAY,2CACpDC,GAAkC,EAClCltC,SACAmtC,SACJ,IAAKH,OAAqCpxC,OAAQ,CAC9CsxC,GACgE,IAD7CF,EAA8Br6B,QAC7C3P,KAAKmnC,SAASnnC,KAAKuO,SAAS67B,4BAKhCD,EAJmB,mBAAA1oC,EAAAC,UAAA9I,OAAIyxC,EAAJzoC,MAAAH,GAAA+yB,EAAA,EAAAA,EAAA/yB,EAAA+yB,IAAI6V,EAAJ7V,GAAA9yB,UAAA8yB,GAAA,OAA0B6V,EAAkBj9B,KAAK,SAAAmb,GAAA,OAChEA,IAAoBhnB,EAAK4lC,SAAS5lC,EAAKgN,SAAS67B,4BACY,IAA5DJ,EAA8Br6B,QAAQ4Y,KAEvB+hB,CAAW,YAAa,MAAO,QAAS,kBAEvDttC,EAA0B,gBAAnBmtC,EAAmC,YAAc,QAIhE,OACIntC,OACAutC,cAAeJ,EACfA,iBACAD,mEAKiBzX,GACrB,IAAMvc,EAAOuc,EAAS3J,mBAAqB2J,EAC3CzyB,KAAKwqC,iBAAkB,EAAAjB,EAAAkB,qBAAoBv0B,GAC3ClW,KAAK0qC,eAAe,8CAINjY,GACdzyB,KAAKmnC,SAASnnC,KAAKuO,SAASk5B,MAA4BhV,EAASsU,UAAUU,MAC3EznC,KAAKmnC,SAASnnC,KAAKuO,SAAS3C,SAA4B6mB,EAASsU,UAAUn7B,SAC3E5L,KAAKmnC,SAASnnC,KAAKuO,SAAS64B,YAA6B3U,EAASsU,UAAUK,WAC5EpnC,KAAKmnC,SAASnnC,KAAKuO,SAASo8B,cAA4BlrB,UAAS,EAAAmrB,EAAA3lC,WAAS4lC,UAAY,KACtF7qC,KAAKmnC,SAASnnC,KAAKuO,SAAS67B,0BAA4B3X,EAASsU,UAAU+D,qBAC3E9qC,KAAK+qC,kBAAkBtY,EAASsU,UAAUiE,cAC1ChrC,KAAKirC,aAAejrC,KAAKkrC,gEAIXF,GAAc,IAAAviC,EAAAzI,KAC5BgrC,EAAaroC,QAAQ,SAACwoC,GAClB1iC,EAAK0+B,SAASgE,EAAQ58B,SAAS68B,eAAiBD,EAAQC,gBAAkB,GAC1EryC,OAAO0J,KAAK0oC,GAASxoC,QAAQ,SAAC0oC,GAC1B,IAAMC,EAAyB,YAAVD,EAAsB,YAAcA,EACnDE,OAAyC,IAAnBJ,EAAQE,GAAyB,GAAKF,EAAQE,GACrD,YAAjBC,IACA7iC,EAAK0+B,SAASgE,EAAQ58B,SAAS+8B,GAAgBC,6CAYjDh9B,GACVvO,KAAKwrC,SAAWj9B,4CAKhBvO,KAAKsK,kBAAmB,oKASxBtK,KAAKuO,QAAWu7B,aAAW5rC,IAAI,kBAC/B8B,KAAKmnC,SAAW2C,aAAW2B,UA5Nf,mBA6NZzrC,KAAKwrC,SAAW,GAEhBxrC,KAAK0qC,eAAe,SAEpB1qC,cAAoC6F,KAAGgjB,2CAAlC6e,yCAEL1nC,KAAK0rC,4JAS0B,IAAxBn9B,EAAwB7M,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuO,QACtB,OAAOvO,KAAK2rC,WAAWp9B,GAAS7J,+CASH,IAAxB6J,EAAwB7M,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuO,QACpB,OAAOvO,KAAK2rC,WAAWp9B,GAASqS,2CASD,IAAxBrS,EAAwB7M,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuO,QACtB,OAAOvO,KAAKmnC,SAAS54B,4CASc,IAAxBA,EAAwB7M,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAd1B,KAAKuO,QACpB48B,EAAenrC,KAAK2rC,WAAWp9B,GAC/B3C,EAAeu/B,EAAQv/B,SACvBw7B,EAAe+D,EAAQ/D,WACvBwE,GAAgBxE,GAAcx7B,EAAWA,GAAW,EAAA09B,EAAAuC,iBAAgBt9B,GAE1E,OACIA,UACA64B,aACA1pB,KAAOkuB,EAAar/B,cACpBkJ,MAAsC,YAA/Bm2B,EAAar/B,eAA8B,EAAAkC,EAAA2C,UAAS,QAAUw6B,oDAMzE5rC,KAAKsK,kBAAmB,2LAKnBtK,KAAKwrC,UAAaxrC,KAAKwrC,SAAS5yC,QAAWoH,KAAK2rC,WAAW3rC,KAAKwrC,UAAU5qB,0BAEtE5gB,KAAK8rC,aAAa3rB,KAAK,SAAA1b,GAAA,OAAMA,IAAOyE,EAAKsiC,YAAaxrC,KAAKwrC,WAAaxrC,KAAKuO,+BAC9EvO,KAAK0G,WAAWhG,GAAGqrC,iBACfvvB,SAAS,EAAA/N,EAAA2C,UAAS,wCAClBpU,KAAS,WAGb,EAAA0R,EAAA6jB,kDAKJvyB,KAAK0G,WAAWhG,GAAGqrC,iBACfvvB,SAAS,EAAA/N,EAAA2C,UAAS,iCAClBpU,KAAS,SAIbgD,KAAKgsC,cAAchsC,KAAK8rC,aAAa,aAC/B9rC,KAAKisC,uEAGfzjC,eAAeD,QAAQ,aAAc,KAErCiZ,UAAI0qB,eACJlsC,KAAKmsC,wBAAwBnsC,KAAKwrC,UAClC1Y,EAAYC,kBACNtL,UAAaC,MAAOqf,UAAa/mC,KAAKosC,aAAgBC,QAAQ,6BAC9DrsC,KAAKqlC,eACXrlC,KAAKssC,wKAIW,IAAAjjC,EAAArJ,MAEhB,EAAA8F,EAAAuE,MACI,kBAAMhB,EAAKmiC,UACXxrC,KAAKisC,yDAKF7hB,GACPpqB,KAAKmnC,SAASnnC,KAAKuO,SAAS6b,QAAUA,yCAI3B9rB,GACX0B,KAAKusC,kBAAoBjuC,uCAIhBgqB,GACTtoB,KAAKmnC,SAASnnC,KAAKuO,SAAS+Z,UAAYA,mCAInCmf,GACLznC,KAAKmnC,SAASnnC,KAAKuO,SAASk5B,MAAQA,kCA1UpC,OAAKznC,KAAKmnC,UACFnnC,KAAKmnC,SAASnnC,KAAKuO,UAAYvO,KAAKmnC,SAASnnC,KAAKuO,SAAS6b,QAC/DpqB,KAAKmnC,SAASnnC,KAAKuO,SAAS6b,QAAQ7V,WAFb,sDAa3B,QACKvU,KAAK6mB,eAAgB7mB,KAAKonC,YAC+B,cAA1DpnC,KAAKmnC,SAASnnC,KAAKuO,SAAS67B,gEAKjB,IAAA1gC,EAAA1J,KACf,OAAOA,KAAK8rC,aAAajkC,IAAI,SAAApD,GAAA,OACxBiF,EAAK8iC,WAAW/nC,IACjBiF,EAAK0iC,SAAS3nC,GACViF,EAAK+iC,eAAehoC,QACpBnH,IACLyY,OAAO,SAAAo1B,GAAA,OAAWA,4CAKrB,OAAOnrC,KAAKmnC,oBAAoBpuC,OAC1BA,OAAO2zC,OAAO1sC,KAAKmnC,UAAUpxB,OAAO,SAAAo1B,GAAA,OAAYA,EAAQzmC,sDAM9D,OAAO1E,KAAKmnC,oBAAoBpuC,OAASA,OAAO0J,KAAKzC,KAAKmnC,mDAK1D,OAAO,EAAAmC,EAAAuC,iBAAgB7rC,KAAKuO,0CAK5B,OAAIvO,KAAKusC,kBAAkB3zC,OAChBoH,KAAKusC,kBACLvsC,KAAK6mB,aACL7mB,KAAKmnC,SAASnnC,KAAKuO,SAAS3C,SAEhC5L,KAAK2sC,0DAMZ,GAAI5zC,OAAO0J,KAAKzC,KAAKwqC,iBAAiB5xC,OAAS,EAAG,CAC9C,IAAM6J,EAAO1J,OAAO0J,KAAKzC,KAAKwqC,iBAC9B,OAAOzxC,OAAO2zC,OAAO1sC,KAAKwqC,gBAAL,GAAwB/nC,EAAK,KAAO,GAAGoC,KAC9D,MAAO,6CAKT,IAAK7E,KAAK6mB,aAAc,OAAO,EAC/B,IAAM+lB,EAAwB,IAAIt/B,OAAO,kCAAmC,KAC5E,OAAOtN,KAAK8rC,aAAae,MAAM,SAAApoC,GAAA,OAAMmoC,EAAsBr/B,KAAK9I,0CAKhE,SACIzE,KAAKmnC,oBAAoBpuC,QACzBA,OAAO0J,KAAKzC,KAAKmnC,UAAUvuC,OAAS,GACpCoH,KAAKuO,SACLvO,KAAKmnC,SAASnnC,KAAKuO,SAASqS,0CAMhC,OAAO5gB,KAAKmnC,SAASnnC,KAAKuO,YAAcvO,KAAKmnC,SAASnnC,KAAKuO,SAAS64B,+CAKpE,OAAOpnC,KAAKirC,eAAiBjrC,KAAKirC,aAAaV,aAAevqC,KAAKirC,aAAaf,uDAKhF,OAAOlqC,KAAKirC,cAAiBjrC,KAAKirC,aAAad,+DAIrB,IAAAjgC,EAAAlK,KAC1B,OAAOA,KAAK8rC,aACP1+B,KAAK,SAAAmB,GAAA,QAAarE,EAAKi9B,SAAS54B,GAAS64B,wDAIzB,IAAAh9B,EAAApK,KACrB,OAC4C,IADrCjH,OAAO0J,KAAKzC,KAAKwqC,iBAAiB3iC,IAAI,SAAA7K,GAAA,OAAQjE,OAAO2zC,OAAOtiC,EAAKogC,gBAAgBxtC,IAAOpE,SAC1F4O,OAAO,SAACslC,EAAKh4B,GAAN,OAAcg4B,EAAMh4B,GAAK,uCAxHxCvJ,gFACAA,4EACAA,4EACAA,0DAA8B,0CAC9BA,2DAA8B,wCAC9BA,qGACAA,0DAA+B,+BAM/BwhC,4HAaAA,iIAQAA,sHAUAA,sHAOAA,oHAKAA,gHAKAA,mHAWAA,yHAQAA,qHAOAA,iHAUAA,gHAKAA,oHAKAA,gIAKAA,oIAMAA,4wDAtHgB7D,oKCrBdjkC,0VCAPc,EAAAhM,EAAA,GACAizC,EAAAjzC,EAAA,yDACAA,EAAA,UAEM+P,aACF,SAAAA,EAAYkR,EAAO7R,GAAqB,IAAd/I,EAAcsB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAN,kGAAMF,CAAAxB,KAAA8J,GACpC9J,KAAKgb,MAASA,EACdhb,KAAKmJ,MAASA,EACdnJ,KAAKI,MAASA,EACdJ,KAAKiK,OAAS,IAAI7M,UAElB4C,KAAKitC,YAAc,+CASZC,EAAWC,GAClB,IAAI3wB,EAAU2wB,EAAK/mC,QAAQoW,UAAW,EAAAwwB,EAAAI,mBAAkBD,EAAKtvC,MAAM2e,QACjD,WAAd2wB,EAAKtvC,KACL2e,GAAU,EAAAzW,EAAAsnC,UAAS7wB,GAAU2wB,EAAK/mC,QAAQ2Y,MAAQouB,EAAK/mC,QAAQ6Y,IAAMkuB,EAAK/mC,QAAQ2Y,IAASouB,EAAK/mC,QAAQ2Y,IAA3E,IAAkFouB,EAAK/mC,QAAQ6Y,MACvG,QAAdkuB,EAAKtvC,KACZ2e,GAAU,EAAAzW,EAAAsnC,UAAS7wB,GAAU2wB,EAAK/mC,QAAQ2Y,MACrB,cAAdouB,EAAKtvC,OACZ2e,GAAU,EAAAzW,EAAAsnC,UAAS7wB,GAAU2wB,EAAK/mC,QAAQknC,MAAOH,EAAK/mC,QAAQmnC,SAElEvtC,KAAKiK,OAAOuN,IAAI01B,EAAW1wB,GAC3Bxc,KAAKitC,8CAQD,IAAAtlC,EAAA3H,KAiCJ,OAhCAjH,OAAO0J,KAAKzC,KAAKgb,OAAOrY,QAAQ,SAAAuqC,GACvBn0C,OAAOC,UAAUC,eAAeC,KAAKyO,EAAKwB,MAAO+jC,IAItDvlC,EAAKwB,MAAM+jC,GAAWvqC,QAAQ,SAAAwqC,GAC1B,IAAMK,EAAa1jC,EAAU2jC,cAAcN,IAEtCK,EAAW3jC,WAA6C,mBAAzB2jC,EAAW3jC,aAI3C2jC,EAAWpnC,QAAQsnC,YAAcF,EAAWpnC,QAAQsnC,UAAU/lC,EAAKvH,QAIzC,KAA1BuH,EAAKqT,MAAMkyB,IAAyC,QAApBM,EAAW3vC,MAI9B2vC,EAAW3jC,UACxBlC,EAAKqT,MAAMkyB,GACXM,EAAWpnC,QACXuB,EAAKvH,MACLuH,EAAKqT,QAILrT,EAAKgmC,WAAWT,EAAWM,SAI/BxtC,KAAKitC,+CASb,OAAOjtC,KAAK4tC,gDASKT,GACjB,IAAMU,EAAiC,iBAATV,EACxBW,GACFjwC,KAASgwC,EAAiBV,EAAOA,EAAK,GACtC/mC,QAASynC,KAAsBV,EAAK,QAKxC,OAFAW,EAAYjkC,UAAiC,WAArBikC,EAAYjwC,KAAoBsvC,EAAK,GAAGznC,MAAO,EAAAsnC,EAAAI,mBAAkBU,EAAYjwC,MAAM6H,KAEpGooC,qBAIAhkC,oICtGf,QAAA/P,EAAA,KACAyR,EAAAzR,EAAA,QAGAA,EAAA,MACA0U,EAAA1U,EAAA,GACAg0C,EAAAh0C,EAAA,KACAgM,EAAAhM,EAAA,sDAKA,IAAMi0C,EAAoB,SAAC1vC,GACvB,YAAchB,IAAVgB,GAAiC,OAAVA,GAIf2vC,OAAO3vC,GAAOqP,QAAQ,MAAO,IAC9B/U,OAAS,GAElBs1C,EAAoB,SAAA5vC,GAAA,MAAS,oDAAoDiP,KAAKjP,IACtF6vC,EAAoB,SAAC7vC,EAAO8H,EAASgoC,GACvC,QAAI,4CAA4C7gC,KAAKjP,KACjD+vC,UAASC,cAAcF,EAAMG,WACtB,IAKTC,EAAoB,SAAAlwC,GAAA,OAAU,uCAAuCiP,KAAKjP,IAC1EmwC,EAAoB,SAAAnwC,GAAA,OAAU,oCAAoCiP,KAAKjP,IACvEowC,EAAoB,SAAApwC,GAAA,OAAU,6BAA6BiP,KAAKjP,IAChEqwC,EAAoB,SAAArwC,GAAA,MAAS,mBAAmBiP,KAAKjP,IACrDswC,EAAoB,SAAAtwC,GAAA,MAAS,gBAAgBiP,KAAKjP,IAClDuwC,EAAoB,SAACvwC,EAAO8H,GAAR,OAAoBA,EAAQ0oC,MAAMvhC,KAAKjP,IAC3DywC,EAAoB,SAAAzwC,GAAA,OAAiC,IAAxBA,EAAMkd,OAAO5iB,QAC1Co2C,EAAoB,SAAA1wC,GAAA,MAAS,uBAAuBiP,KAAKjP,IACzD2wC,EAAoB,SAAA3wC,GAAA,MAAS,mBAAmBiP,KAAKjP,IAErD4wC,EAAgB,SAAC5wC,EAAO8H,GAAR,OAAoB9H,IAAU6wC,EAAE/oC,EAAQqwB,IAAI2F,OAC5DgT,EAAgB,SAAC9wC,EAAO8H,GAAR,OAAoB9H,IAAU6wC,EAAE/oC,EAAQqwB,IAAI2F,OAC5DiT,EAAgB,SAAC/wC,EAAO8H,GAAR,OAAqBA,EAAQ2Y,KAAMzgB,EAAM1F,QAAUwN,EAAQ2Y,KAC3EuwB,EAAgB,SAAChxC,EAAO8H,GAAR,QACjBA,EAAQ2Y,KAAMzgB,EAAM1F,QAAUwN,EAAQ2Y,QACtC3Y,EAAQ6Y,KAAM3gB,EAAM1F,QAAUwN,EAAQ6Y,MAGrCswB,EAAc,SAACjxC,EAAOkxC,GACxB,IAAMppC,GAAU,EAAAL,EAAAsP,aAAYm6B,GACxBhzB,EAAU,KACd,GAAIpW,EAAQqpC,aAAgC,IAAjBnxC,EAAM1F,OAC7B,OAAO,EAGX,IAAI82C,GAAQ,EA8BZ,MA7BI,QAAStpC,GAAkC,mBAAhBA,EAAQ2Y,MACnC3Y,EAAQ2Y,IAAM3Y,EAAQ2Y,OAEtB,QAAS3Y,GAAkC,mBAAhBA,EAAQ6Y,MACnC7Y,EAAQ6Y,IAAM7Y,EAAQ6Y,SAGH,UAAjB7Y,EAAQpJ,KAAmB,gBAAkB,SAASuQ,KAAKjP,IAAUkhB,MAAMlhB,IAC7EoxC,GAAU,EACVlzB,GAAU,EAAA/N,EAAA2C,UAAS,8BACK,UAAjBhL,EAAQpJ,MAAoBoJ,EAAQupC,WACzC,IAAIriC,OAAJ,kBAA6BlH,EAAQupC,SAArC,QAAqDpiC,KAAKjP,IAC5DoxC,GAAU,EACVlzB,GAAU,EAAA/N,EAAA2C,UAAS,0CAA2ChL,EAAQupC,YAC/D,QAASvpC,GAAW,QAASA,IAAYA,EAAQ2Y,MAAS3Y,EAAQ6Y,MAAQ3gB,IAAW8H,EAAQ2Y,KACpG2wB,GAAU,EACVlzB,GAAU,EAAA/N,EAAA2C,UAAS,mBAAmB,EAAA5F,EAAAokC,UAASxpC,EAAQ2Y,IAAK3Y,EAAQypC,cAAe,EAAArkC,EAAAskC,kBAAiBnd,UAAOz0B,IAAI,kBAAeZ,MACvH,QAAS8I,GAAW,QAASA,KAAa9H,GAAS8H,EAAQ2Y,KAAOgxB,EAAczxC,EAAO8H,KAC9FspC,GAAU,EACVlzB,GAAU,EAAA/N,EAAA2C,UAAS,oCAAoC,EAAA5F,EAAAokC,UAASxpC,EAAQ2Y,IAAK3Y,EAAQypC,cAAe,EAAArkC,EAAAskC,kBAAiBnd,UAAOz0B,IAAI,kBAAeZ,IAAY,EAAAkO,EAAAokC,UAASxpC,EAAQ6Y,IAAK7Y,EAAQypC,cAAe,EAAArkC,EAAAskC,kBAAiBnd,UAAOz0B,IAAI,kBAAeZ,MAC5O,QAAS8I,IAAY9H,GAAS8H,EAAQ2Y,KAC7C2wB,GAAU,EACVlzB,GAAU,EAAA/N,EAAA2C,UAAS,6BAA6B,EAAA5F,EAAAokC,UAASxpC,EAAQ2Y,IAAK3Y,EAAQypC,cAAe,EAAArkC,EAAAskC,kBAAiBnd,UAAOz0B,IAAI,kBAAeZ,MACjI,QAAS8I,GAAW2pC,EAAczxC,EAAO8H,KAChDspC,GAAU,EACVlzB,GAAU,EAAA/N,EAAA2C,UAAS,6BAA6B,EAAA5F,EAAAokC,UAASxpC,EAAQ6Y,IAAK7Y,EAAQypC,cAAe,EAAArkC,EAAAskC,kBAAiBnd,UAAOz0B,IAAI,kBAAeZ,MAG5I8vC,IAAkB3gC,OAAO+P,QAAUA,EAC5BkzB,GAGLK,EAAgB,SAACzxC,EAAO8H,GAAR,MACA,UAAjBA,EAAQpJ,MAAoBsB,GAAS8H,EAAQ6Y,IAAoD,KAA9C,EAAA8uB,EAAAiC,uBAAsB1xC,EAAO8H,EAAQ6Y,MAsBzFgxB,SACS7C,oBAAkB,WAI3B,OAHK6C,IACDA,GAtBJC,SAAiBxqC,KAAMgpC,EAAmBlyB,SAAS,EAAA/N,EAAA2C,UAAS,gFAAiF,2BAC7I6C,SAAiBvO,KAAMupC,EAAmBzyB,SAAS,EAAA/N,EAAA2C,UAAS,+DAAgE,WAC5H++B,SAAiBzqC,KAAMwpC,EAAmB1yB,SAAS,EAAA/N,EAAA2C,UAAS,qDAC5Dq2B,OAAiB/hC,KAAMwoC,EAAmB1xB,SAAS,EAAA/N,EAAA2C,UAAS,2BAC5Dg/B,SAAiB1qC,KAAM+oC,EAAmBjyB,SAAS,EAAA/N,EAAA2C,UAAS,8EAC5DxY,QAAiB8M,KAAM4pC,EAAmB9yB,SAAS,EAAA/N,EAAA2C,UAAS,qCAAsC,UAClGi/B,eAAiB3qC,KAAM8oC,EAAmBhyB,SAAS,EAAA/N,EAAA2C,UAAS,qEAC5D2N,KAAiBrZ,KAAM2pC,EAAmB7yB,SAAS,EAAA/N,EAAA2C,UAAS,wCAAyC,UACrGk/B,WAAiB5qC,KAAM0pC,EAAmB5yB,SAAS,EAAA/N,EAAA2C,UAAS,qCAAsC,OAAQ,UAC1G3E,QAAiB/G,KAAM6pC,EAAmB/yB,QAAS,IACnD+zB,UAAiB7qC,KAAMyoC,EAAmB3xB,SAAS,EAAA/N,EAAA2C,UAAS,mEAC5Do/B,OAAiB9qC,KAAMkpC,EAAmBpyB,SAAS,EAAA/N,EAAA2C,UAAS,yCAC5Dq/B,UAAiB/qC,KAAMipC,EAAmBnyB,SAAS,EAAA/N,EAAA2C,UAAS,0DAC5Ds/B,SAAiBhrC,KAAMmpC,EAAmBryB,QAAS,IACnD8N,KAAiB5kB,KAAMsoC,EAAmBxxB,QAAS,IACnDm0B,cAAiBjrC,KAAMqpC,EAAmBvyB,SAAS,EAAA/N,EAAA2C,UAAS,qCAC5Dw/B,QAAiBlrC,KAAMspC,EAAmBxyB,SAAS,EAAA/N,EAAA2C,UAAS,iFAQrD6+B,GAGEY,0BAA0B,SAAA7zC,GAAA,OAAW+hB,IAAM,OAAOxR,KAAKvQ,GAAQ,EAAI,EAAIiiB,IAAK,oVCtHnF6xB,aACF,SAAAA,iGAActvC,CAAAxB,KAAA8wC,GACV9wC,KAAKiK,gDAGLijC,EAAW1wB,GACNxc,KAAK+wC,IAAI7D,KACVltC,KAAKiK,OAAOijC,QAGiC,IAA7CltC,KAAKiK,OAAOijC,GAAWv9B,QAAQ6M,IAC/Bxc,KAAKiK,OAAOijC,GAAWp0C,KAAK0jB,iCAKhC,OAAOxc,KAAKiK,qCAGVijC,GACF,OAAIltC,KAAK+wC,IAAI7D,GACFltC,KAAKiK,OAAOijC,GAAW,GAE3B,iCAGPA,GACA,OAAIltC,KAAK+wC,IAAI7D,GACFltC,KAAKiK,OAAOijC,kCAMvBA,GACA,OAAOn0C,OAAOC,UAAUC,eAAeC,KAAK8G,KAAKiK,OAAQijC,sBAIlD4D,mICvCf,IAAAtlC,EAAAzR,EAAA,IACA0U,EAAA1U,EAAA,mPAEa0wC,sBAAsB,SAAC3hB,GAAsB,IAAAznB,EAChD2vC,KACAC,KAMN,OAJAnoB,EAAkBnmB,QAAQ,SAACmS,KACtB,EAAAtJ,EAAA0lC,kBAAiBp8B,GAAOm8B,EAASD,GAAMl4C,MAAO+L,KAAMiQ,EAAKxW,MAAOwW,MAGrEpN,EAAArG,MACK,EAAAoN,EAAA2C,UAAS,QAAY4/B,GAD1BtpC,EAAArG,GAEK,EAAAoN,EAAA2C,UAAS,UAAY6/B,GAF1B5vC,GAMS8vC,qBAAqB,SAAC3G,GAAmC,IAAlB5+B,EAAkBlK,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAP,GACrD0vC,EAAuBr4C,OAAO2zC,OAAOlC,GAAiBhjC,OAAO,SAACgK,EAAG6N,GAAJ,SAAApd,OAAA8N,EAAcyB,GAAdzB,EAAoBsP,MAIvF,OACIzT,SAHMwlC,EAAqBhkC,KAAK,SAAAzP,GAAA,OAAKA,EAAEW,QAAUsN,IAAYA,EAAWwlC,EAAqB,GAAG9yC,uXCpBxGwH,EAAA/L,EAAA,OAGAA,EAAA,KACAs3C,EAAAt3C,EAAA,SACAA,EAAA,kzBAEqBovC,KAchBjjC,SAAOC,QAKPD,SAAOC,QASPD,SAAOC,uyBA5B6BF,wDAenBqrC,GACdtxC,KAAKsxC,iBAAmBA,mCAInB92B,EAAWrd,GAChB6C,KAAKwa,UAAYA,EACjBxa,KAAK7C,OACDH,KAASG,EAAQA,EAAMH,KAAO,OAC9Bwf,QAASrf,EAAQA,EAAMqf,QAAU,sCAK/BA,GACNxc,KAAK4nC,UAAS,GACVprB,UACAxf,KAAM,kDA/BbuO,2DAA8BgmC,UAAOC,6CACrCjmC,2DAA8BkmC,kDAC9BlmC,2DAA8B,8BAE9BA,2DACGvO,KAAS,OACTwf,QAAS,yCAGZjR,qGACAA,2DAA+B,yCAC/BA,2DAA+B,4UAZf49B,yICPrB,IAAAlW,EAAAl5B,EAAA,IAEa03C,mBAAkB,EAAAxe,EAAA/0B,OAElBwzC,sBAAsB,WAC/B,IAAMC,GACF,OAGgB54C,OAAO0J,MAAK,EAAAwwB,EAAA2e,WAC3B77B,OAAO,SAAAnX,GAAA,OAAS+yC,EAAkBnW,SAAS58B,KAC3C4I,OAAO,SAACgJ,EAAK5R,GAEV,OADA4R,EAAI5R,IAAO,EAAAq0B,EAAA2e,UAAShzC,GACb4R,OAKf,OADkBqhC,GAAI,YAIbC,SAAS,SAAAC,GAAA,OAAQ,EAAA9e,EAAA+e,QAAOD,oGCrBrC,QAAAh4C,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,mEAGI,SAAAqvC,EAAY1iC,gGAAYlF,CAAAxB,KAAAopC,GACpBppC,KAAKlE,SAAc,IAAIm2C,WAAgBvrC,eACvC1G,KAAK7D,UAAc,IAAI+1C,WAAiBxrC,eACxC1G,KAAKxD,YAAc,IAAI21C,WAAkBzrC,eACzC1G,KAAK1D,UAAc,IAAI81C,WAAiB1rC,eACxC1G,KAAK6gB,MAAc,IAAIwxB,WAAa3rC,+YCZ5CZ,EAAA/L,EAAA,GAKAgM,EAAAhM,EAAA,GACA0U,EAAA1U,EAAA,GACA2U,EAAA3U,EAAA,IACAu4C,EAAAv4C,EAAA,KACAw4C,EAAAx4C,EAAA,KACAy4C,EAAAz4C,EAAA,KAGA0pC,EAAA1pC,EAAA,KAGA2pC,EAAA3pC,EAAA,yDAYAA,EAAA,+vBAEqBk4C,KAehB/rC,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAcPD,SAAOC,QAaPD,SAAOC,QAgBPD,SAAOC,QA0BPD,SAAOC,QAOPD,SAAOC,QAQPD,SAAOC,QAwBPD,SAAOC,0zBArI+BF,sDAgBvB6c,GACZ9iB,KAAKyyC,aAAa3vB,WAAaA,4CAIjBC,GACd/iB,KAAKyyC,aAAa1vB,YAAcA,kCAI5BoE,GACJnnB,KAAKiL,gBAAgBjL,KAAK0yC,wBAAwB7zC,KAAK,KAAMsoB,IAC7DnnB,KAAKwa,WAAgB,EACrBxa,KAAKwjC,cAAgB,GACrBxjC,KAAKmnB,YAAgBA,EACrBnnB,KAAKxD,YAAgBwD,KAAK0G,WAAWvN,QAAQqD,YAC7CwD,KAAKxD,YAAYm2C,iBAAgB,GAE7BxrB,GACAthB,KAAG2kB,8BAA8BxqB,KAAKmnB,YAAannB,KAAK4yC,gBAAgB,mDAKvDzrB,GACrBnnB,KAAKwa,WAAgB,EACrBxa,KAAKwjC,cAAgB,GACrBxjC,KAAKmnB,YAAgBA,EACrBnnB,KAAKxD,YAAgBwD,KAAK0G,WAAWvN,QAAQqD,YAC7CwD,KAAKxD,YAAYm2C,iBAAgB,GAE7BxrB,GACAthB,KAAG2kB,8BAA8BxqB,KAAKmnB,YAAannB,KAAK4yC,gBAAgB,uCAM5E5yC,KAAKqL,uBACLrL,KAAK6yC,6BAEL7yC,KAAKmnB,YAAoB,KACzBnnB,KAAKkjB,iBACLljB,KAAKozB,eACLpzB,KAAK88B,aACL98B,KAAK8yC,mBAAoB,EAEzB9yC,KAAKxD,YAAYu2C,iBACjB/yC,KAAKxD,YAAYw2C,gBACjBhzC,KAAKxD,YAAYm2C,iBAAgB,0CAItBlgB,GACX,MAAI,UAAWA,GACXzyB,KAAKwa,WAAgB,EACrBxa,KAAKwjC,cAAgB/Q,EAASt1B,MAAMqf,aACpCxc,KAAKkjB,oBAGL,EAAAnd,EAAAwB,eAAckrB,EAASzJ,yBACvBhpB,KAAKwa,WAAgB,EACrBxa,KAAKwjC,eAAgB,EAAA/0B,EAAA2C,UAAS,mEAC9BpR,KAAKkjB,oBAGTljB,KAAKkjB,cAAgBuP,EAASzJ,wBAC1B,EAAA0a,EAAA9f,SAAQ5jB,KAAKkjB,eACbljB,KAAKyyC,cAAe,EAAA/O,EAAAzgB,gBAAejjB,KAAKkjB,uBAEjCljB,KAAKyyC,aAAanvB,iBAClBtjB,KAAKyyC,aAAalvB,cAE7B,EAAA+uB,EAAAW,oBAAmBjzC,KAAKxD,YAAawD,KAAKkjB,gBAC1C,EAAAqvB,EAAAW,oBAAmBlzC,KAAKxD,YAAawD,KAAKkjB,cAAeljB,WACzDA,KAAKmzC,wDAKD,EAAA1P,EAAAvQ,iBAAgBlzB,KAAKkjB,cAAc3T,iBACnC,EAAAzJ,EAAAstC,kBAAiBpzC,KAAKozB,aAAa,EAAAqQ,EAAAtQ,cAAanzB,KAAKozB,YAAapzB,KAAKkjB,sDAMvEljB,KAAKmnB,cAAgBnnB,KAAK8yC,oBAAqB,EAAA/sC,EAAAwB,eAAcvH,KAAK88B,aAClE98B,KAAK8yC,mBAAoB,EACzBjtC,KAAGojB,KAAKjpB,KAAKmnB,YAAannB,KAAKkjB,cAAcoB,WAAWvZ,KAAK/K,KAAKqzC,gDAK/D5gB,GAAU,IAAAlxB,EAAAvB,KACbyyB,EAASt1B,OACT6C,KAAK88B,WACD0G,cAAe/Q,EAASt1B,MAAMqf,SAGlCxc,KAAK8yC,mBAAoB,IAEzB9yC,KAAK6yC,6BACLhtC,KAAGkjB,qBAAqB/oB,KAAKmnB,aAAapc,MAAK,EAAAjF,EAAAI,QAAO,SAACotC,GACnD/xC,EAAKqxC,eAAeU,GACpB/xC,EAAKu7B,WACDzY,WAAgBoO,EAASxJ,KAAKsqB,SAC9BtW,eAAgBxK,EAASxJ,KAAKgU,yEAO1Cp3B,KAAG6jB,OAAO,yBAA0B1pB,KAAK4yC,gBAAkBzrB,YAAannB,KAAKmnB,+DAKtEnnB,KAAK88B,UAAU0G,qDAUtB,OAAO,EAAAgP,EAAAgB,kBAAiBxzC,2CAKxB,OAAO,EAAAwyC,EAAAiB,gBAAezzC,KAAKkjB,sDAK3B,OAAO,EAAAwgB,EAAAhgB,kBAAiB1jB,KAAKkjB,gDAK7B,OAAO,EAAAwgB,EAAA5f,YAAW9jB,KAAKkjB,qDAKvB,OAAO,EAAAwgB,EAAAxf,gBAAelkB,KAAKkjB,mDAK3B,OAAO,EAAAwgB,EAAAjgB,eAAczjB,KAAKkjB,wDAK1B,OAAO,EAAAwgB,EAAAnf,oBAAmBvkB,KAAKkjB,gDAK/B,OAAO,EAAAwgB,EAAA9f,SAAQ5jB,KAAKkjB,4DAKpB,OAAO,EAAAwgB,EAAA/e,mBAAkB3kB,KAAKkjB,kDAK9B,OAAO,EAAAwgB,EAAA7e,WAAU7kB,KAAKkjB,oDAKtB,OAAO,EAAAwgB,EAAAhf,YAAW1kB,KAAKkjB,wDAKvB,OAAO,EAAAwgB,EAAA1e,eAAchlB,KAAKkjB,uDAvM7B3X,iFAEAA,2DAA2BA,aAAWxM,6CACtCwM,2DAA2BA,aAAWxM,2CACtCwM,2DAA2BA,aAAWxM,8CACtCwM,2DAA2BA,aAAWxM,2CAEtCwM,2DAA+B,sCAC/BA,0DAA+B,2CAC/BA,2DAA+B,mmCAqI/BwhC,qHAKAA,qHAKAA,iHAKAA,gHAKAA,mHAKAA,sHAKAA,mHAKAA,uHAKAA,yHAKAA,iHAKAA,uHAKAA,sGAtMgBkF,6GC9BrB,IAAA9d,EAAAp6B,EAAA,KAEak5C,qBAAqB,SAACd,EAAiBjvB,GAGhD,GAFAivB,EAAgBY,iBAEZ7vB,EAAe,KACP3T,EAAsD2T,EAAtD3T,cAAe0E,EAAuCiP,EAAvCjP,QAASC,EAA8BgP,EAA9BhP,aAAcE,EAAgB8O,EAAhB9O,aAE1CH,GAAWC,KACXi+B,EAAgBuB,eACZnkC,EACA0E,GAAWC,EACXE,EACA,MAEIu/B,WAAe1nB,sBAAoBG,MACnCwnB,eAAe,IAIvBzB,EAAgB0B,oBAAmB,EAAMtkC,uHCpBrD,wDAAAxV,EAAA,MACA+5C,EAAA/5C,EAAA,6HAEam5C,qBAAqB,SAACf,EAAiBjvB,GAAwC,IAAzB+uB,EAAyBvwC,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAT,KAC3EwhB,GACAnqB,OAAO0J,KAAKsxC,GAAiBpxC,QAAQ,SAACqxC,GAClC,KAAIA,KAAe7B,EAAgB8B,SAAnC,CAEA,IAAMC,EAAgBH,EAAgBC,GAAa9wB,EAAe+uB,GAC9DiC,GACA/B,EAAgBgC,aAAaD,OAPtC,IAaDH,UACDK,sBAAoBC,SAASr3C,KAQlC,SAA6BkmB,GACzB,QAA6B,SAAzBA,EAAcS,SAAsBT,EAAclB,cAE/CsyB,EACHF,sBAAoBC,SAASr3C,KAC7BkmB,EAAclB,eAdhBta,EAAA6sC,EAEDH,sBAAoBI,cAAcx3C,KAgBvC,SAAkCkmB,GAC9B,SAAKA,EAAcuxB,gBAAkBvxB,EAAcjB,aAC9CiB,EAAcuxB,gBAAmBvxB,EAAcjB,aAE7CqyB,EACHF,sBAAoBI,cAAcx3C,KAClCkmB,EAAcuxB,iBAxBhB/sC,EAAA6sC,EAGDH,sBAAoBM,WAAW13C,KAyBpC,SAA+BkmB,GAC3B,QAAKA,EAAcjB,YAEZqyB,EACHF,sBAAoBM,WAAW13C,KAC/BkmB,EAAcjB,cAjChBva,EAAA6sC,EAIDH,sBAAoBO,WAAW33C,KAkCpC,SAA+BkmB,EAAe+uB,GAC1C,SAAK/uB,EAAcmQ,iBAAmB4e,EAAc2C,uBAE7CN,EACHF,sBAAoBO,WAAW33C,KAC/BkmB,EAAcmQ,gBACdnQ,EAAcsQ,YAEVqhB,cAAe3xB,EAAcsQ,eA9CnC9rB,EAAA6sC,EAKDH,sBAAoBU,UAAU93C,KA8CnC,SAA8BkmB,EAAe+uB,GACzC,QAAKA,EAAc8C,eAEZT,EACHF,sBAAoBU,UAAU93C,KAC9Bi1C,EAAc8C,cACd9C,EAAc+C,UAEVH,cAAe5C,EAAc+C,SAC7BrxB,OAAeT,EAAcW,OAAS,EAAI,MAAQ,WA5DxD0wB,GAkEN,IAAMD,EAAqB,SAACN,EAAatmB,EAAGC,EAAGsnB,GAApB,OACvB,EAAAC,EAAAjwC,UAAO,KAAUmvC,sBAAoBJ,IACjCE,eACIxmB,GAAIA,EACJC,KAEJsnB,gICxFR,QAAAl7C,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMo7C,EACK,QAILC,EACK,QADLA,EAEK,OAGLC,GACFC,MACIC,iBAAkBC,UAClBC,YAAkBN,EAClBO,YAAkBN,EAClB9wC,UAAkB,qBAEtBqxC,MACIJ,iBAAkBK,UAClBH,YAAkBN,EAClBO,YAAkBN,IAIbhB,uBACTC,UAAiBr3C,KAAM,WAAiBk3C,cAAemB,EAAqBC,KAAML,gBAAkBtB,WAAY,OAAS55B,OAAO,EAAAtL,EAAA2C,UAAS,cACzIojC,eAAiBx3C,KAAM,gBAAiBk3C,cAAemB,EAAqBC,KAAML,gBAAkBtB,WAAY,QAAS55B,OAAO,EAAAtL,EAAA2C,UAAS,mBACzIsjC,YAAiB13C,KAAM,aAAiBk3C,cAAemB,EAAqBC,KAAML,gBAAkBtB,WAAY,QAAS55B,OAAO,EAAAtL,EAAA2C,UAAS,gBACzIujC,YAAiB33C,KAAM,aAAiBk3C,cAAemB,EAAqBM,KAAMV,gBAAkBY,MAAO,OAASn4B,KAAMtY,EAAAH,QAAA/J,cAAC46C,EAAA7wC,QAAD,QAC1H6vC,WAAiB93C,KAAM,YAAiBk3C,cAAemB,EAAqBM,KAAMV,gBAAkBY,MAAO,QAASn4B,KAAMtY,EAAAH,QAAA/J,cAACiiC,EAAAl4B,QAAD,wFCpC9H,IAAAzF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,uDAEA,IAAMg8C,EAAgB,kBAClB3wC,EAAAH,QAAA/J,cAAA,OAAKoxB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACnE9b,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,kBACRwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOoL,SAAS,UAAU7uB,EAAE,iKACvCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOoL,SAAS,UAAU7uB,EAAE,mOAKnDm4C,EAAc7zC,WACVwqB,MAAOnsB,UAAUiF,mBAGN,EAAAhG,EAAAwB,UAAS+0C,sFClBxB,IAAAv2C,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,uDAEA,IAAMy7C,EAAa,SAAAn0C,GAAA,IACf0Y,EADe1Y,EACf0Y,MACA45B,EAFetyC,EAEfsyC,WAFe,OAIfvuC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWqvC,GACZvuC,EAAAH,QAAA/J,cAAA,WAAM6e,KAIdy7B,EAAWtzC,WACP6X,MAAYxZ,UAAUiF,OACtBmuC,WAAYpzC,UAAUiF,mBAEX,EAAAhG,EAAAwB,UAASw0C,kFCjBxB,QAAAz7C,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACAyR,EAAAzR,EAAA,uDAEA,IAAM67C,EAAa,SAAAv0C,GAAA,IACfw0C,EADex0C,EACfw0C,MACAn4B,EAFerc,EAEfqc,KACAm3B,EAHexzC,EAGfwzC,WACAlxB,EAJetiB,EAIfsiB,OAJe,OAMfve,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,aAAc4wC,EAAOlyB,IAC5Cve,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,WACVoZ,GACA,EAAAlS,EAAAokC,UAASiF,IAEdzvC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,UACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,WAIvBsxC,EAAW1zC,WACP2zC,MAAYt1C,UAAUy1C,OAAO,OAAQ,UACrCt4B,KAAYnd,UAAUxB,OACtB81C,WAAYt0C,UAAUiF,OACtBme,OAAYpjB,UAAUy1C,OAAO,MAAO,qBAEzB,EAAAx2C,EAAAwB,UAAS40C,ySC5BxB77C,EAAA,IACAyR,EAAAzR,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,KACAgV,EAAAhV,EAAA,KACA4U,EAAA5U,EAAA,+KAEA,IAAMk8C,EAAgB,WAClB,IAAIC,SAaJ,OACIh4C,IAAK,WAID,OAHKg4C,IACDA,GAbR3mC,eAAgB,EAAAd,EAAA2C,UAAS,iBACzByG,YAAgB,EAAApJ,EAAA2C,UAAS,cACzB+kC,YAAgB,EAAA1nC,EAAA2C,UAAS,cACzBglC,gBAAgB,EAAA3nC,EAAA2C,UAAS,kBACzB0G,UAAgB,EAAArJ,EAAA2C,UAAS,YACzBilC,WAAgB,EAAA5nC,EAAA2C,UAAS,aACzBklC,gBAAgB,EAAA7nC,EAAA2C,UAAS,kBACzB8Q,QAAgB,EAAAzT,EAAA2C,UAAS,YAQd8kC,IAnBG,GAwBTzC,iBAAiB,SAACvwB,GAAkB,IAAA7hB,EAEzC0gB,EAMAmB,EANAnB,UACAxS,EAKA2T,EALA3T,cACA3D,EAIAsX,EAJAtX,SACAqW,EAGAiB,EAHAjB,WACAk0B,EAEAjzB,EAFAizB,WACAvxB,EACA1B,EADA0B,UAGEsxB,EAAgBD,EAAa/3C,MAK7B02C,EAAuBhwB,IAAcA,GAAa3C,EAClDs0B,EAAuBt0B,IAAc,EAAAtT,EAAA6nC,aAA0B,KAAbv0B,GAClDw0B,EAAuBN,IAAevB,GAAuB,EAAAppC,EAAAokC,UAASuG,GAAc,IAE1F,OAAAzuC,EAAArG,KACK60C,EAAc3mC,eAAiB,EAAAR,EAAA4d,0BAAyBpd,IAD7D7H,EAAArG,EAEK60C,EAAcr+B,WAAiB0+B,GAFpC7uC,EAAArG,EAGK60C,EAAcC,WAAiBM,GAHpC/uC,EAAArG,EAIK60C,EAAcE,eAAiBhxC,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQqW,EAAWnW,SAAUA,KAJxEvK,GAQSmyC,mBAAmB,SAACpzC,GAAU,IAAAyS,EACvC,IAAKzS,EAAM2jC,SAAU,SADkB,IAInC7gB,EAKA9iB,EALA8iB,cACA8xB,EAIA50C,EAJA40C,SACAD,EAGA30C,EAHA20C,cACA2B,EAEAt2C,EAFAs2C,iBACAC,EACAv2C,EADAu2C,aAGET,EAAgBD,EAAa/3C,MAInC,OAAAmC,KACQs2C,OACCT,EAAcp+B,SAAWoL,EAAclB,cAAe,EAAArT,EAAA6nC,aAAyC,KAA5BtzB,EAAclB,eADlFta,EAAAmL,KAGCqjC,EAAcG,UAAiBrB,GAAW,EAAAxpC,EAAAokC,UAASoF,GAAY,KAHhEttC,EAAAmL,EAICqjC,EAAcI,eAAiBvB,GAAgB,EAAApmC,EAAA6nC,aAA6B,KAAhBzB,GAAwB,KAJrFliC,GADRnL,KAOKwuC,EAAch0B,OAAS9c,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQgrC,EAAkB9qC,SAAUsX,EAActX,41BChFzF7R,EAAA,KACA0U,EAAA1U,EAAA,GAOO,IAAM68C,kBAAgB,SAAAC,GAAA,OAAStF,UAAOvf,KAAK6kB,GAAOrF,OAQ5C9+B,aAAW,SAAApU,GACpB,IAAKA,EAAO,OAAO,EAAAssC,EAAA3lC,WAASusC,MAC5B,GAAIlzC,aAAiBizC,WAAUjzC,EAAMw4C,WAAax4C,EAAMy4C,QAAS,OAAOz4C,EACxE,IAAMqd,EAAkC,iBAAVrd,EAGxB04C,GAAiB,EAAApM,EAAA3lC,SAAO,IAAIgyC,KAAK34C,IAAQ0T,OAAO,cACtD,OAAO2J,EAAYi7B,EAAct4C,GAASizC,UAAOC,IAAIwF,IAS5CE,YAAU,SAACC,EAAY9kC,GAAS,IAAAhR,EACVgR,EAAOA,EAAKE,MAAM,MAAQ,EAAG,EAAG,GADtBC,EAAAC,EAAApR,EAAA,GAClC4Q,EADkCO,EAAA,GAC5BT,EAD4BS,EAAA,GACpB0iB,EADoB1iB,EAAA,GAGzC,OADA2kC,EAAWllC,KAAKA,GAAMF,OAAOA,GAAU,GAAGmjB,OAAOA,GAAU,GACpDiiB,GAuDE7kC,GA9CA8kC,gBAAgB,SAACP,EAAOxkC,GAAR,OAAiB6kC,EAAQxkC,EAASmkC,GAAQxkC,GAAM2f,QAEhEwkB,cAAc,SAACnkC,GAAD,OAAU,EAAAu4B,EAAA3lC,SAAOoN,QAAQ/U,GAAWk0C,MAAMx/B,OAAO,8BAE/DqlC,aAAa,SAACjlC,GAAD,IAAOklC,EAAP51C,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAqB,aAArB,OAAsCgR,EAASN,GAAMJ,OAAOslC,IAOzEC,kBAAkB,SAACnlC,GAC5B,IAAM+F,EAAOzF,EAASN,GAAMolC,QAAQ,OAAOr/B,KAAKzF,IAAW8kC,QAAQ,OAAQ,QAC3E,OAASplC,GAAQ+F,EAAO,EAAK,GAAKA,GASzBga,kBAAkB,SAACta,EAAYC,GAAb,OAC3By5B,UAAOvyB,SAASuyB,UAAOvf,KAAKla,GAAUK,KAAKo5B,UAAOvf,KAAKna,MAO9Cqa,iBAAiB,SAAClT,GAC3B,IAAMphB,EAAIsO,KAAK+T,MAAMjB,EAASy4B,UACxBvlC,EAAI8M,EAASzN,QACb7T,EAAIshB,EAASvN,UACbzX,EAAIglB,EAAS04B,UACfC,GAAgB,EAAA/M,EAAA3lC,SAAO,GAAGgN,KAAKC,GAAGH,OAAOrU,GAAGg6C,QAAQ19C,GAAGgY,OAAO,YAIlE,OAHIpU,EAAI,IACJ+5C,EAAmB/5C,EAAnB,KAAwBA,EAAI,GAAI,EAAA6Q,EAAA2C,UAAS,SAAU,EAAA3C,EAAA2C,UAAS,QAA5D,IAAsEumC,GAEnEA,GAOErlC,cAAc,SAAAslC,GAAA,MAAY,uEAAuErqC,KAAKqqC,KAMtGC,cAAc,SAAAD,GAAA,OAAYtlC,EAAYslC,IAAa,uBAAuBrqC,KAAKqqC,EAASrlC,MAAM,KAAK,KAMnGulC,gBAAgB,SAAAF,GAAA,OAAYtlC,EAAYslC,IAAa,eAAerqC,KAAKqqC,EAASrlC,MAAM,KAAK,KAM7FwlC,cAAc,SAAA3lC,GAAA,OAAQ,EAAAw4B,EAAA3lC,SAAOmN,EAAM,eAAe0kC,WAOlDkB,UAAU,SAAC5lC,EAAM6lC,GAAP,OAAuBvlC,EAASN,GAAMmF,QAAQC,IAAIygC,EAAa,QAOzEC,YAAY,SAAC9lC,EAAM+lC,GAAP,OAAyBzlC,EAASN,GAAMmF,QAAQC,IAAI2gC,EAAe,UAO/EC,WAAW,SAAChmC,EAAMimC,GAAP,OAAwB3lC,EAASN,GAAMmF,QAAQC,IAAI6gC,EAAc,SAO5EC,UAAU,SAAClmC,EAAM6lC,GAAP,OAAuBvlC,EAASN,GAAMmF,QAAQe,SAAS2/B,EAAa,QAO9EM,YAAY,SAACnmC,EAAM+lC,GAAP,OAAyBzlC,EAASN,GAAMmF,QAAQe,SAAS6/B,EAAe,UAOpFK,WAAW,SAACpmC,EAAMimC,GAAP,OAAwB3lC,EAASN,GAAMmF,QAAQe,SAAS+/B,EAAc,SAOjFngC,UAAU,SAACugC,EAAQC,GAAT,OAAoBnH,UAAOxyB,IAAIrM,EAAS+lC,GAAS/lC,EAASgmC,KAMpEC,kBAAkB,SAACvmC,GAAD,OAAUM,EAASN,GAAMmF,QAAQigC,QAAQ,SAASxlC,OAAO,0YCnKxFlM,EAAA/L,EAAA,GAIA2U,EAAA3U,EAAA,IACA4U,EAAA5U,EAAA,IAGA6+C,EAAA7+C,EAAA,KACAy4C,EAAAz4C,EAAA,KAGA2pC,EAAA3pC,EAAA,yDAKAA,EAAA,+vBAEqBm4C,KAKhBhsC,SAAOC,QAUPD,SAAOC,QAOPD,SAAOC,QAePD,SAAOC,QAyBPD,SAAOC,QAqCPD,SAAOC,QASPD,SAAOC,QAqDPD,SAAOC,QAKPD,SAAOC,QAQPD,SAAOC,QASPD,SAAOC,QAQPD,SAAOC,stBA/LgCF,mDAiBpCjG,KAAK64C,aACL74C,KAAK84C,YAAa,EAClB94C,KAAK7C,MAAa,4CAILs1B,GACbzyB,KAAK84C,YAAa,EACd,UAAWrmB,EACXzyB,KAAK7C,MAAQs1B,EAASt1B,MAAMqf,SAGhCxc,KAAK7C,MAAQ,GACTs1B,EAASt2B,UAAU48C,YACnB/4C,KAAK64C,UAAYpmB,EAASt2B,UAAU48C,UAC/BlxC,IAAI,SAAAmxC,GAAA,OAAO,EAAAJ,EAAAK,yBAAwBD,KACnC55B,KAAK,SAAC85B,EAAMC,GAAP,OAAgBA,EAAKC,UAAYF,EAAKE,yDAKrC3mB,GAAU,IAAAlxB,EAAAvB,KAIzB,GAHI,UAAWyyB,IACXzyB,KAAK7C,MAAQs1B,EAASt1B,MAAMqf,SAE3BiW,EAAS5H,YAAd,CAJyB,IAAAwuB,EAKY5mB,EAAS5H,YAAtC1D,EALiBkyB,EAKjBlyB,YAAqBmyB,EALJD,EAKJnzC,OAET,QAARozC,GACAzzC,KAAG1J,YAAY4O,KAAK,SAACwuC,GACjB,IAAMC,EAAUD,EAAIp9C,UAAU48C,UAAU3rC,KAAK,SAAA4rC,GAAA,OAAQA,EAAI7xB,cAAiBA,IACrEqyB,GACLj4C,EAAKk4C,gBAAgBD,KAGzB3zC,KAAG2kB,8BAA8BrD,EAAannB,KAAK05C,6BAA6B,IACjE,SAARJ,GAEPzzC,KAAGkjB,qBAAqB5B,GAAapc,MAAK,EAAAjF,EAAAI,QAAO,SAACotC,GAE9C/xC,EAAKo4C,sBAAsBrG,2DAMX7gB,GACxB,KAAI,UAAWA,GAAf,CAEA,IAAMmnB,EAAWnnB,EAASzJ,uBACpB6wB,EAAqB75C,KAAK64C,UAAUzrC,KAAK,SAAC0sC,GAAD,OAAeA,EAASr1C,KAAQm1C,EAASzyB,cAExF,GAAK0yB,EAAL,CAEA,IAAME,EAAkBF,EAAmBG,WACrCC,GAAmBL,EAASt1B,UAC5B41B,GAAmBN,EAAS/1B,OAElCg2B,EAAmBpF,cAAkD,IAAjCmF,EAAS90B,oBACzC80B,EAAS33B,WAET23B,EAASnF,cAEboF,EAAmBv1B,UAAmBs1B,EAASt1B,UAC/Cu1B,EAAmBG,WAAmBC,EACtCJ,EAAmBM,gBAAmBP,EAAS1mC,WAC/C2mC,EAAmBO,gBAAmBR,EAASS,aAC/CR,EAAmBK,YAAmBA,EACtCL,EAAmBS,WAAmBV,EAASU,WAC/CT,EAAmB50B,kBAAmB,EAAAye,EAAA1e,eAAc40B,GAE/CA,EAAS30B,iBAGV40B,EAAmBl2B,OADZs2B,EAAiBF,EACI,iBACrBE,EAAiBF,EACI,mBAEA,eAN5BF,EAAmBl2B,OAAS,kDAWxBwD,GACR,IAAMzuB,EAAIsH,KAAK64C,UAAU0B,UAAU,SAAAvB,GAAA,OAAQA,EAAIv0C,KAAQ0iB,IACjD7C,EAAYtkB,KAAK64C,UAAUngD,GAAG4rB,UAChC6C,GAAe7C,GACfze,KAAGojB,KAAK9B,EAAa7C,GAAWvZ,KAAK/K,KAAKqzC,+CAKvC5gB,GAAU,IAAAhqB,EAAAzI,KACXw6C,EAAmBx6C,KAAK0G,WAAWvN,QAAQqD,YAAYg+C,kBAGxDA,GAAoB/nB,EAASt1B,MAE9B6C,KAAK0G,WAAWhG,GAAGqrC,iBACfvvB,QAASiW,EAASt1B,MAAMqf,QACxBxf,KAAS,UAGNw9C,IAAqB/nB,EAASt1B,QACrC0I,KAAG6jB,OAAO,yBAA0B1pB,KAAK0G,WAAWvN,QAAQ2C,SAAS82C,gBAAkBzrB,YAAasL,EAASxJ,KAAK9B,cAClHthB,KAAGkjB,qBAAqB0J,EAASxJ,KAAK9B,aAAapc,MAAK,EAAAjF,EAAAI,QAAO,SAACotC,GAE5D7qC,EAAK/B,WAAWvN,QAAQ2C,SAAS82C,eAAeU,GAChD7qC,EAAKkxC,sBAAsBrG,MAG/BtzC,KAAK0G,WAAWvN,QAAQ2C,SAASghC,WAC7BzY,WAAgBoO,EAASxJ,KAAKsqB,SAC9BtW,eAAgBxK,EAASxJ,KAAKgU,+DAKpBxK,GAClB,IAAMgoB,EAAoBhoB,EAASzJ,uBAC7BtwB,EAAIsH,KAAK64C,UAAU0B,UAAU,SAAAvB,GAAA,OAAQA,EAAIv0C,KAAQg2C,EAAkBtzB,cACnEvC,GAAY,EAAA8e,EAAAhf,YAAW+1B,IACxBA,EAAkBz4B,aAEnB,EAAA0hB,EAAAxf,gBAAeu2B,GACbC,GACF,EAAA/rC,EAAAwjB,kBACI,EAAAxjB,EAAAioC,eAAc52C,KAAK64C,UAAUngD,GAAG+7C,eAAiBz0C,KAAK64C,UAAUngD,GAAGupB,aACnE,EAAAtT,EAAAioC,eAAc52C,KAAK64C,UAAUngD,GAAGif,cAElCqH,EAAWhf,KAAK64C,UAAUngD,GAAG4hD,WAC/Bt6C,KAAK64C,UAAUngD,GAAG4hD,YAElB,EAAA9H,EAAAmI,sBAAqBD,GAEzB16C,KAAK64C,UAAUngD,GAAGkiD,SAAiBH,EAAkB3X,gBAAgB7Z,KACrEjpB,KAAK64C,UAAUngD,GAAGub,SAAiBwmC,EAAkBxmC,QACrDjU,KAAK64C,UAAUngD,GAAGsmB,SAAgBA,EAClChf,KAAK64C,UAAUngD,GAAG4X,eAAgB,EAAAkiC,EAAAqI,qBAAoBH,GACtD16C,KAAK64C,UAAUngD,GAAGy9C,YAAiBsE,EAAkBtE,WACrDn2C,KAAK64C,UAAUngD,GAAGksB,UAAgBA,EAClC5kB,KAAK64C,UAAUngD,GAAGe,QAAgB,EAAAiqC,EAAAhgB,kBAAiB+2B,2CAIvCjB,GACZx5C,KAAK64C,UAAUiC,SAAQ,EAAAlC,EAAAK,yBAAwBO,+CAIhCryB,GACf,IAAIzuB,EAAIsH,KAAK64C,UAAU0B,UAAU,SAAAvB,GAAA,OAAQA,EAAIv0C,KAAQ0iB,IAEjDnnB,KAAK64C,UAAUjgD,OAAS,IAAGF,GAAK,GACpCsH,KAAK64C,UAAU/+C,OAAOpB,EAAG,qDAIF,IAAAwQ,EAAAlJ,KACvB,OAAO,IAAItF,QAAQ,SAACC,GAGhB,OAFAuO,EAAK6xC,aACLl1C,KAAGkkB,UAAU,yBAA0B,eAChCpvB,EAAQuO,EAAK8xC,2DAMxBh7C,KAAKiL,gBAAgBjL,KAAK0yC,wBAAwB7zC,KAAK,OACzB,IAA1BmB,KAAK64C,UAAUjgD,QACfoH,KAAKg7C,0DAMTh7C,KAAKqL,uBAEDrL,KAAK0G,WAAWhG,GAAGg4B,YACnB14B,KAAK+6C,aACLl1C,KAAGkkB,UAAU,yBAA0B,+CAM3C,IAAIiwB,EAAa,EACb93B,EAAa,EACb+4B,EAAa,EAOjB,OALAj7C,KAAK64C,UAAUl2C,QAAQ,SAACu4C,GACpBlB,IAAgBkB,EAAclB,WAC9B93B,IAAgBg5B,EAAch5B,OAC9B+4B,IAAgBC,EAAcD,YAG9BjB,aACA93B,SACA+4B,qDAMJ,OAAOj7C,KAAK64C,2CAKZ,OAAQ74C,KAAK84C,YAA+C,IAAjC94C,KAAKm7C,iBAAiBviD,6CAjOpD2S,8FACAA,2DAAwB,8BACxBA,0DAAwB,wGAGH,WACblC,EAAK3C,WAAWlG,OAAOqmB,eAC5Bxd,EAAKyvC,YAAa,EAElBjzC,KAAG1J,YAAY4O,KAAK1B,EAAK+xC,kBACzBv1C,KAAG2kB,8BAA8B,KAAMnhB,EAAKqwC,6BAA6B,GACzE7zC,KAAG+kB,qBAAqBvhB,EAAKgyC,oBAAoB,8uCA6LpDtO,iHAkBAA,mHAKAA,8FAhOgBmF,iFCnBR+G,0BAA0B,SAACiC,GACpC,IAAMD,EAAWK,WAAWJ,EAAcn5B,WACpCG,EAAWo5B,WAAWJ,EAAch5B,QAE1C,OACIq5B,QAAaL,EAAcrY,SAASl1B,QAAQ,MAAO,UACnDgK,YAAaujC,EAAcvjC,YAC3BlT,GAAay2C,EAAc/zB,YAC3B6yB,WAAa,EACb93B,SACA+4B,WACA7B,WAAc8B,EAAcje,eAC5BjgC,KAAak+C,EAAc3rC,mJCZnC,IAAAd,EAAA1U,EAAA,GAEa4gD,uBAAuB,SAACa,GACjC,IAAMC,EAAcD,EAAaE,iBAAmB,IAEpD,OAAID,GAAe,MACRvvC,KAAK+T,MAAMw7B,SACXA,GAAe,MAAWA,EAAc,MACxCvvC,KAAK+T,MAAMw7B,QACXA,GAAe,KAASA,EAAc,KACtCvvC,KAAK+T,MAAMw7B,OAEXvvC,KAAK+T,MAAMw7B,EAAe,MAK5BZ,sBAAsB,SAACW,GAChC,IAAMG,GACF3hD,GAAK6D,MAAM,EAAA4Q,EAAA2C,UAAS,YACpB1T,GAAKG,MAAM,EAAA4Q,EAAA2C,UAAS,YACpBc,GAAKrU,MAAM,EAAA4Q,EAAA2C,UAAS,UACpBxT,GAAKC,MAAM,EAAA4Q,EAAA2C,UAAS,UAElBqqC,EAAcD,EAAaE,iBAAmB,IACpD,GAAID,EAAa,CACb,GAAIA,GAAe,MACf,OAAOE,EAAS/9C,EAAEC,KACf,GAAI49C,GAAe,MAAWA,EAAc,MAC/C,OAAOE,EAASzpC,EAAErU,KACf,GAAI49C,GAAe,KAASA,EAAc,KAC7C,OAAOE,EAASj+C,EAAEG,KACf,GAAI49C,GAAe,KAAQA,EAAc,IAC5C,OAAOE,EAAS3hD,EAAE6D,KAG1B,OAAO89C,EAAS3hD,EAAE6D,+iBCpCtB9D,EAAA,MACA+L,EAAA/L,EAAA,GAIAgM,EAAAhM,EAAA,OACAA,EAAA,KACA2U,EAAA3U,EAAA,IACA6hD,EAAA7hD,EAAA,KACA8hD,EAAA9hD,EAAA,KACA+hD,EAAA/hD,EAAA,KACAo6B,EAAAp6B,EAAA,SAGAA,EAAA,2oBAEA,IAAM+M,EAAa,oBAEEqrC,KAgBhBjsC,SAAOC,QAKPD,SAAOC,QAQPD,SAAOC,QAMPD,SAAOC,QAQPD,SAAOC,QAcPD,SAAOC,QAOPD,SAAOC,QAOPD,SAAOC,QAWPD,SAAOC,QAOPD,SAAOC,oBA9ER,SAAAgsC,EAAA9wC,GAA4B,IAAdqF,EAAcrF,EAAdqF,wGAAclF,CAAAxB,KAAAmyC,GACxB,IADwBxqC,mKAAA7F,CAAA9B,MAAAmyC,EAAApwC,WAAAhJ,OAAAiJ,eAAAmwC,IAAAj5C,KAAA8G,MAEhB0G,aAAYC,0BADc,aAAc,eACFG,gBAFtB,OAAAT,EAAAsB,EAAA,SAAArB,EAAAqB,GAAAtB,EAAAsB,EAAA,WAAApB,EAAAoB,GAAAtB,EAAAsB,EAAA,UAAA6hC,EAAA7hC,GAAAtB,EAAAsB,EAAA,mBAAA8hC,EAAA9hC,GAAAtB,EAAAsB,EAAA,mBAAA+hC,EAAA/hC,GAAAtB,EAAAsB,EAAA,aAAAgiC,EAAAhiC,GAAAtB,EAAAsB,EAAA,cAAAiiC,EAAAjiC,GAAAtB,EAAAsB,EAAA,YAAAo0C,EAAAp0C,GAAAtB,EAAAsB,EAAA,iBAAAq0C,EAAAr0C,KAqG5Bs0C,YAAc,SAAC5yB,EAAgB6yB,GACM,IAA7B7yB,EAAec,WACnBtkB,KAAG8kB,sBAAHtqB,KAA8BgpB,GAAkB6yB,IAvGxBv0C,EA0G5Bw0C,SAAW,SAACtyB,EAAcqyB,GAAf,OACPr2C,KAAG6jB,OAAO,gBAAiBwyB,EAAUryB,IA3GbliB,EA8G5By0C,cAAgB,SAAC/yB,GACb,OAAIA,EAAehX,KACRM,UAAW0pC,YAAYtxC,KAAK,kBAC/B4e,SAAU,OACVtX,KAAUM,UAAWzU,MAAM8zB,UAG5BnsB,KAAGujB,YAAYC,IArHE1hB,qUAXa1B,sDAiBzB6c,GACZ9iB,KAAK8iB,WAAaA,4CAIJC,GACd/iB,KAAK+iB,YAAcA,EACC,IAAhBA,GAAsBu5B,mBAAiB9gB,SAASx7B,KAAK8iB,cACrD9iB,KAAK8iB,WAAa,oDAKV03B,GACZx6C,KAAKw6C,iBAAmBA,EACxBx6C,KAAKu8C,kBAAoB/B,yCA0BdxmC,EAAWG,IACjB,EAAApO,EAAAwB,eAAcvH,KAAK8T,SAAS0oC,OAC7Bx8C,KAAK8T,SAAS0oC,KAAKC,eAAezoC,EAAWG,8CAKlCuoC,EAAgBntC,IAC1B,EAAAxJ,EAAAwB,eAAcvH,KAAK8T,SAAS0oC,OAC7Bx8C,KAAK8T,SAAS0oC,KAAK3I,mBAAmB6I,EAAgBntC,4CAM1DvP,KAAK8T,iDAUI7C,GACTjR,KAAKi0C,SAAU,EAAA0I,EAAA13C,YAAWjF,KAAKi0C,8HAAhBvsC,IACVuJ,EAAOjU,KAAO,IAAI4/C,mBAAiB3rC,EAAOijC,cAAejjC,EAAOgkC,0DAMrEj1C,KAAKi0C,kDAbL,OAAO,EAAA9f,EAAAM,uBAAsBz0B,KAAK8T,gDAkBlC,OAAO,EAAAqgB,EAAAM,uBAAsBz0B,KAAKi0C,0CAKvB,IAAA1yC,EAAAvB,KACX,OAAQ,eAAAwS,EAAA9Q,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAkBH,EAAKmF,WAApBjG,EAAH+R,EAAG/R,OAAQC,EAAX8R,EAAW9R,GAAX,OACJm8C,iBAAkBn8C,EAAGmiB,4BACrBi6B,UAAkBp8C,EAAGq8C,2BACrBhL,KAAkBtxC,EAAOu8C,iBACzBlD,SAAkBp5C,EAAGiiB,wBAA0B,SAAW,OAC1DR,MAAkBzhB,EAAG0hB,gBAAkB,OAAS,SAL5C,sCArGX7W,4EACAA,2DAAsBA,aAAWxM,yCACjCwM,2DAAsBA,aAAWxM,kDAEjCwM,2DAA8B,yCAC9BA,2DAA8B,mCAE9BA,0DAAwB,6CACxBA,2DAAyB,ibA2Bd,WACR9C,EAAKwK,OAAS,KACdxK,EAAKsqC,iBACLtqC,EAAKuqC,iHAKQ,SAACzjC,EAAe2E,EAAcE,EAAa6oC,EAAsBhsC,GAC9E,IAAI,EAAAlL,EAAAwB,eAAc2B,EAAK4K,SAAS0oC,MAAO,CACnC,IAAIU,MACA,EAAA/oB,EAAAC,oBAAmB7kB,KACnB2tC,EAAe,IAAIC,oBAAkBjpC,EAAcE,EAAa6oC,EAAsBhsC,IAG1F/H,EAAK4K,UACD0oC,KAAMU,0XAwBjBnQ,4UAkBAA,gHAMAA,8FApGgBoF,6XClBrBrsC,EAAA/L,EAAA,GAIAo6B,EAAAp6B,EAAA,KAKAqjD,EAAArjD,EAAA,0lBAEaojD,qBAwCRj3C,SAAOC,QAOPD,SAAOC,QAKPD,SAAOC,mBAtCR,SAAAg3C,EACIjpC,EACAE,GAGF,IAFE6oC,EAEFv7C,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAFyB,KAEzBL,EAAAK,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MADIgrB,EACJrrB,EADIqrB,MAAOinB,EACXtyC,EADWsyC,WAAYC,EACvBvyC,EADuBuyC,2GACvBpyC,CAAAxB,KAAAm9C,GAAA92C,EAAArG,KAAA,QAAAsG,EAAAtG,MAAAqG,EAAArG,KAAA,YAAAuG,EAAAvG,MAAAqG,EAAArG,KAAA,QAAAwpC,EAAAxpC,MAAAqG,EAAArG,KAAA,OAAAypC,EAAAzpC,MAAAqG,EAAArG,KAAA,MAAA0pC,EAAA1pC,MAAAqG,EAAArG,KAAA,WAAA2pC,EAAA3pC,MAAAqG,EAAArG,KAAA,YAAA4pC,EAAA5pC,MAAAqG,EAAArG,KAAA,iBAAA+7C,EAAA/7C,MACEA,KAAK0sB,MAAYA,GAAcZ,iBAAeC,MAC9C/rB,KAAKq9C,UAAY1J,GAAc1nB,sBAAoBC,OACnDlsB,KAAKma,SAAYna,KAAKs9C,gBAGtBt9C,KAAKi9C,qBAAuD,mBAAzBA,EAAsCA,EAAqBp+C,KAAKmB,MAAQ,aAE3GA,KAAKu9C,MAAQrpC,GAAgB,EACzBE,IACApU,KAAKw9C,KAAOppC,GAGhBpU,KAAKy9C,MAAQz9C,KAAK09C,cAElB,IAAMC,IAAkBzpC,EACxBlU,KAAK49C,UAAkBD,GAAe,QAAQpwC,KAAK2G,GACnDlU,KAAK69C,WAAkBjK,GAAiB+J,EACxC39C,KAAK89C,gBAAkBH,mDAIZJ,EAAMC,GACjBx9C,KAAK49C,SAAiB,QAAQrwC,KAAKgwC,GACnCv9C,KAAKu9C,MAAQA,QAAQjgD,EACrB0C,KAAKw9C,KAAQA,QAAQlgD,6CAINo/C,EAAgBntC,GAC/BvP,KAAKy9C,MAASf,GAAkB1xB,kBAAgBzb,IAAmBvP,KAAK09C,yDAI7C,IAAbH,EAAa/qC,EAAb+qC,KAAMC,EAAOhrC,EAAPgrC,IACpBx9C,KAAKy8C,eAAec,EAAMC,GAC1Bx9C,KAAKi9C,qBAAL1jD,MAAAyG,2HAAA+P,EAA6B,EAAAqtC,EAAA/oB,kBAAiBr0B,KAAK49C,SAAUL,EAAMC,2CAKnE,YAA6B,IAAdx9C,KAAKu9C,YAA6C,IAAbv9C,KAAKw9C,2CAKzD,OAAO7xB,iBAAe3rB,KAAKqU,iDAhE9B9I,6EACAA,yEACAA,wEAEAA,uEACAA,4EAEAA,6EACAA,kFACAA,maAgDAwhC,qHAKAA,4MC1EL,IAAAjnC,EAAA/L,EAAA,wlBAEa6iD,yBAIT,SAAAA,EAAY1I,EAAee,gGAAgBzzC,CAAAxB,KAAA48C,GAAAv2C,EAAArG,KAAA,gBAAAsG,EAAAtG,MAAAqG,EAAArG,KAAA,iBAAAuG,EAAAvG,MACvCA,KAAKk0C,cAAiBA,EACtBl0C,KAAKi1C,eAAiBA,+BALzB1pC,2DAA4BA,aAAWxM,gDACvCwM,2DAA4BA,aAAWxM,gGCJ/Bu9C,oBACT,WACA,OACA,eACA,SACA,yiBCLJx2C,EAAA/L,EAAA,OAIAA,EAAA,KACA2U,EAAA3U,EAAA,IACA6+C,EAAA7+C,EAAA,SACAA,EAAA,isCAEA,IAEqBq4C,KAkBhBlsC,SAAOC,QAOPD,SAAOC,QAMPD,SAAOC,QAiBPD,SAAOC,QAiBPD,SAAOC,QASPD,SAAOC,QAUPD,SAAOC,QASPD,SAAOC,QAMPD,SAAOC,ovBAnGgCF,mDAoBpCjG,KAAK5H,QACL4H,KAAK+9C,gBAAiB,EACtB/9C,KAAK84C,YAAiB,4CAKtB94C,KAAKg+C,UAAY,GACjBh+C,KAAKi+C,QAAY,kLAKbj+C,KAAK+9C,iBAAkB/9C,KAAK84C,mEAEhC94C,KAAK84C,YAAa,WAEKjzC,KAAGvJ,UAvCf,IAyCP0D,KAAK5H,KAAKQ,OAFSyH,KAIZL,KAAKg+C,YAAeA,WAAW,EAAApT,EAAA3lC,SAAOjF,KAAKg+C,WAAWhsB,QACtDhyB,KAAKi+C,UAAaA,SAAS,EAAArT,EAAA3lC,SAAOjF,KAAKi+C,SAASzmC,IAAI,EAAG,KAAKc,SAAS,EAAG,KAAK0Z,iBALlFS,SAQNzyB,KAAKk+C,iBAAiBzrB,8IAITA,GAAU,IAAAlxB,EAAAvB,KACvB,GAAI,UAAWyyB,EACXzyB,KAAK7C,MAAQs1B,EAASt1B,MAAMqf,YADhC,CAKA,IAAM2hC,EAAyB1rB,EAASn2B,UAAU8hD,aAC7Cv2C,IAAI,SAAAgjB,GAAA,OAAe,EAAA+tB,EAAAyF,4BAA2BxzB,EAC3CtpB,EAAKmF,WAAWlG,OAAOoL,YAG/B5L,KAAK5H,QAAL6J,OAAA8N,EAA0B/P,KAAK5H,MAA/B2X,EAAwCouC,IACxCn+C,KAAK+9C,eAAiBI,EAAuBvlD,OA/DlC,IAgEXoH,KAAK84C,YAAiB,4CAITx+C,GACTA,EAAE4C,OAAOoB,QAAU0B,KAAK1F,EAAE4C,OAAOW,QACjCmC,KAAK1F,EAAE4C,OAAOW,MAAQvD,EAAE4C,OAAOoB,MAC/B0B,KAAK+6C,aACL/6C,KAAKs+C,uDAKA5hD,GAAO,IAAA6hD,EACkC7hD,EAAMQ,OAAhD8xB,EADQuvB,EACRvvB,UADQuvB,EACGC,cAC+CxvB,EAFlDuvB,EACiB1vB,cAGZ,KACjB7uB,KAAKs+C,mEAKa,IAAA71C,EAAAzI,KACtB,OAAO,IAAItF,QAAQ,SAACC,GAGhB,OAFA8N,EAAKsyC,aACLtyC,EAAKg2C,kBACE9jD,EAAQ8N,EAAK61C,yLAMxBt+C,KAAKiL,gBAAgBjL,KAAK0yC,kCACpB1yC,KAAKs+C,uJAKXt+C,KAAKqL,uBACLrL,KAAK+6C,aACL/6C,KAAKy+C,mDA7FL,OAAQz+C,KAAK84C,YAAmC,IAArB94C,KAAK5H,KAAKQ,iDAKrC,SAAUoH,KAAKg+C,YAAah+C,KAAKi+C,0CAdpC1yC,8FACAA,2DAA4B,uCAC5BA,2DAA4B,kCAC5BA,0DAA4B,iCAC5BA,0DAA4B,+BAC5BA,0DAA4B,gCAE5BwhC,oHAKAA,6jCAbgBqF,qHCXrB,IAAA5mC,EAAAzR,EAAA,IACA0U,EAAA1U,EAAA,GACAg0C,EAAAh0C,EAAA,KACA4U,EAAA5U,EAAA,IAEaskD,6BAA6B,SAACxzB,EAAajf,GACpD,IAAMurC,GAAa,EAAAxoC,EAAA+D,UAASmY,EAAY6zB,kBAClCC,EAAaxH,EAAWnlC,OAAO,cAC/B4lC,EAAgBT,EAAWnlC,OAAO,YAAlC,OACAkQ,EAAao5B,WAAWzwB,EAAY3I,QACpCxW,EAAa4vC,WAAWzwB,EAAYnf,QACpC0e,EAAakxB,WAAWzwB,EAAY+zB,eAG1C,OACI14C,QAAS,EAAAuI,EAAA2C,WAAS,EAAA28B,EAAA8Q,aAAYh0B,EAAYi0B,cAC1C1sC,KAAYusC,EAAZ,KAAyB/G,EACzBmH,MAASl0B,EAAYoS,eACrB/a,OAAS1C,MAAM0C,GAAW,KAAM,EAAA1W,EAAAa,aAAYT,EAAUsW,GAN1B,GAO5BxW,OAAS8T,MAAM9T,GAAW,KAAM,EAAAF,EAAAa,aAAYT,EAAUF,GAP1B,GAQ5B0e,QAAS5K,MAAM4K,GAAW,KAAM,EAAA5e,EAAAa,aAAYT,EAAUwe,GAR1B,GAS5B40B,KAASn0B,EAAYgY,SAASl1B,QAAQ,MAAO,UAC7ClJ,GAASomB,EAAY1D,YACrBrZ,OAAS+c,EAAY/c,6nBCvB7B/T,EAAA,MACA+L,GAAA/L,EAAA,SAKAA,EAAA,KACA0U,GAAA1U,EAAA,GACAgM,GAAAhM,EAAA,GAIAyR,GAAAzR,EAAA,IAGA2U,GAAA3U,EAAA,UACAA,EAAA,YACAA,EAAA,MACAklD,GAAAllD,EAAA,KACYqE,2JAAZrE,EAAA,MACAmlD,GAAAnlD,EAAA,WAGAA,EAAA,MACA+hD,GAAA/hD,EAAA,WACAA,EAAA,KACA8U,GAAA9U,EAAA,IACAolD,GAAAplD,EAAA,KACAqlD,GAAArlD,EAAA,KAIAslD,GAAAtlD,EAAA,WACAA,EAAA,4pCAEA,IAAM+M,GAAa,cAEEurC,MAkEhBnsC,UAAOC,QAgDPD,UAAOC,QAMPD,UAAOC,QAyCPD,UAAOC,QAWPD,UAAOC,QA0BPD,UAAOC,QAKPD,UAAOC,QAqBPD,UAAOC,QAWPD,UAAOC,QAyFPD,UAAOC,QA+BPD,UAAOC,QAkBPD,UAAOC,QAKPD,UAAOC,QAgBPD,UAAOC,QAyBPD,UAAOC,QAqCPD,UAAOC,QASPD,UAAOC,QAWPD,UAAOC,oBApZR,SAAAksC,EAAAhxC,GAA4B,IAAdqF,EAAcrF,EAAdqF,wGAAclF,CAAAxB,KAAAqyC,GACxBiN,WAAUC,iBAAiBlqB,mCADH,IAAA1tB,mKAAA7F,CAAA9B,MAAAqyC,EAAAtwC,WAAAhJ,OAAAiJ,eAAAqwC,IAAAn5C,KAAA8G,MAIpB0G,aACAI,cACAF,2BAA4ByuB,kCAC5BxuB,kBAA4B,EAAA24C,GAAAv6C,cAPR,OAAAoB,GAAAsB,EAAA,6BAAArB,EAAAqB,GAAAtB,GAAAsB,EAAA,sBAAApB,EAAAoB,GAAAtB,GAAAsB,EAAA,mBAAA6hC,EAAA7hC,GAAAtB,GAAAsB,EAAA,iBAAA8hC,EAAA9hC,GAAAtB,GAAAsB,EAAA,mBAAA+hC,EAAA/hC,GAAAtB,GAAAsB,EAAA,SAAAgiC,EAAAhiC,GAAAtB,GAAAsB,EAAA,uBAAAiiC,EAAAjiC,GAAAtB,GAAAsB,EAAA,sBAAAo0C,EAAAp0C,GAAAtB,GAAAsB,EAAA,gBAAAq0C,EAAAr0C,GAAAtB,GAAAsB,EAAA,sBAAA83C,EAAA93C,GAAAtB,GAAAsB,EAAA,kBAAA+3C,EAAA/3C,GAAAtB,GAAAsB,EAAA,cAAAg4C,EAAAh4C,GAAAtB,GAAAsB,EAAA,SAAAi4C,EAAAj4C,GAAAtB,GAAAsB,EAAA,QAAAk4C,EAAAl4C,GAAAtB,GAAAsB,EAAA,aAAAm4C,EAAAn4C,GAAAtB,GAAAsB,EAAA,WAAAo4C,EAAAp4C,GAAAtB,GAAAsB,EAAA,gBAAAq4C,EAAAr4C,GAAAtB,GAAAsB,EAAA,sBAAAs4C,EAAAt4C,GAAAtB,GAAAsB,EAAA,mBAAAu4C,EAAAv4C,GAAAtB,GAAAsB,EAAA,cAAAw4C,EAAAx4C,GAAAtB,GAAAsB,EAAA,cAAAy4C,EAAAz4C,GAAAtB,GAAAsB,EAAA,cAAA04C,EAAA14C,GAAAtB,GAAAsB,EAAA,YAAA24C,EAAA34C,GAAAtB,GAAAsB,EAAA,YAAA44C,EAAA54C,GAAAtB,GAAAsB,EAAA,gBAAA64C,EAAA74C,GAAAtB,GAAAsB,EAAA,aAAA84C,EAAA94C,GAAAtB,GAAAsB,EAAA,mBAAA+4C,EAAA/4C,GAAAtB,GAAAsB,EAAA,aAAAg5C,EAAAh5C,GAAAtB,GAAAsB,EAAA,WAAAi5C,EAAAj5C,GAAAtB,GAAAsB,EAAA,oBAAAk5C,EAAAl5C,GAAAtB,GAAAsB,EAAA,qBAAAm5C,EAAAn5C,GAAAtB,GAAAsB,EAAA,aAAAo5C,EAAAp5C,GAAAtB,GAAAsB,EAAA,gBAAAq5C,GAAAr5C,GAAAtB,GAAAsB,EAAA,gBAAAs5C,GAAAt5C,KAV5Bu5C,SAAW,EAUiBv5C,EAR5Bw5C,mBAAoB,EAAAC,GAAAn8C,SAAS0C,EAAKizB,gBAAiB,KAQvBjzB,EAP5B05C,qBAO4Bh7C,GAAAsB,EAAA,OAAA25C,GAAA35C,GAUxB5O,OAAOiF,eAAP2J,EAEI,2BAEI1J,YAAY,EACZK,OAAY,EACZyI,UAAY,KAIpB,EAAAjB,GAAA8B,UACI,kBAAOD,EAAK+I,qBAAsB/I,EAAKgJ,iBAAkBhJ,EAAK2I,cAAe3I,EAAKkM,cAClF,WACIlM,EAAK45C,mCAGb,EAAAz7C,GAAA8B,UACI,kBACID,EAAKsL,OACLtL,EAAK4H,cACL5H,EAAK2I,cACL3I,EAAKkM,YACLlM,EAAKwI,oBACLxI,EAAKiR,sBAET,WACIjR,EAAK65C,sBAEPC,MAAO,MAtCW95C,qUAxEQ1B,kDAoHhCjG,KAAKiT,OAAS,KACdpN,MAAGkkB,UAAU,2MAKT23B,EAAsB1hD,KAAK2hD,oBAC/B3hD,KAAKxD,YAAqBwD,KAAK0G,WAAWvN,QAAQqD,qBAClBqJ,MAAG2hB,2BAA7BG,UACcA,gBAA2D,IAAzCA,EAAeA,eAAe/uB,QAChEoH,KAAK0G,WAAWjG,OAAO2nC,WAAU,EAAA35B,GAAA2C,UAAS,2CAIlBswC,EAAoBzuC,SAC3C0U,EAAeA,eAAeva,KAAK,SAAApT,GAAA,OAAKA,EAAEiZ,SAAWyuC,EAAoBzuC,WAI1EjT,KAAK0G,WAAWhG,GAAGqrC,iBACfvvB,SAAS,EAAA/N,GAAA2C,UAAS,4EAClBpU,KAAS,SAEbsiD,WAAUsC,eAAgB3uC,QAAU,EAAAosC,GAAAwC,mBAAkBl6B,EAAeA,kBACrE+5B,EAAsB1hD,KAAK2hD,qBAG1B3hD,KAAKiT,yCACAjT,KAAK8hD,sBAALzhD,IACF4S,QAAQ,EAAAosC,GAAAwC,mBAAkBl6B,EAAeA,iBACtC+5B,YAIP1hD,KAAKiT,QACLjE,WAAagG,yBAAyB0sC,EAAoBzuC,QAAUjT,KAAKiT,QAAQlI,MAAK,EAAAjF,GAAAI,QAAAqE,GAAAC,mBAAAC,KAAO,SAAAC,IAAA,OAAAF,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACnFvJ,EAAKugD,sBAALzhD,MACC2O,WAAaqH,kBAAb9U,GACAyN,WAAa2J,wBACb+oC,IAJkF,wBAAA92C,EAAAQ,SAAAV,EAAAnJ,oJAWpFmrC,GAAQ,IAAAjkC,EAAAzI,KACrBjH,OAAO0J,KAAKiqC,GAAQ/pC,QAAQ,SAAC9E,GACzB,KAAMA,QACF,MAAM,IAAIT,MAAJ,qBAA+BS,KAI7CmC,KAAK8hD,sBAALzhD,MAAgCqsC,IAAU,oCAIrCpyC,GAAG,IAAAynD,EACkBznD,EAAE4C,OAApBW,EADAkkD,EACAlkD,KAAMib,EADNipC,EACMjpC,QACRxa,EAAUhE,EAAE4C,OAAZoB,MAEN,GAAa,aAATT,EACAmC,KAAK0G,WAAWlG,OAAOkqC,eAAepsC,QACnC,GAAc,aAAVA,EACH,gCAAgCiP,KAAKvN,KAAKuP,iBACtCuJ,GACA9Y,KAAKgiD,iBAAmB,EACxB1jD,EAAQ,oBAER0B,KAAKgiD,iBAAmB,EACxB1jD,EAAQ,mBAGb,GAAc,gBAAVT,EACPmC,KAAK2X,YAAc,UAChB,KAAM9Z,KAAQmC,MACjB,MAAM,IAAI5C,MAAJ,qBAA+BS,GAGzCmC,KAAK8hD,sBAALp6C,MAA8B7J,EAAOS,IAAS,2CAIlC2jD,EAAS1yC,GACrBvP,KAAKxD,YAAYq3C,mBAAmBoO,EAAS1yC,sCAItCsY,EAAaC,EAAO9qB,GAAM,IAAAkM,EAAAlJ,KAC7B6nB,IACA,EAAAo3B,GAAAiD,iBAAgBr6B,EAAaC,GAAO/c,MAAK,EAAAjF,GAAAI,QAAO,SAACusB,GAC7C,GAAIvpB,EAAKswB,cAAcx8B,GAAMyH,KAAOojB,EAChC,MAAM,IAAIzqB,MAAM,+BAEpB,GAAIq1B,EAAS7K,IAAK,CACd,IAAMjG,QACCzY,EAAKm4C,kBAAkBrkD,GACvBkM,EAAKswB,cAAcx8B,IACtB+kB,UAAW0Q,EAAS7K,IAAI7F,YAE5BP,WAAIE,iBAAiBC,EAAezY,EAAKxC,YAE7Cb,MAAGkkB,UAAU,YACb7gB,EAAKuwB,cAAgBhH,6CAMjBn4B,GACZA,EAAE6nD,iBACFt8C,MAAGkkB,UAAU,YAAYhf,KAAK/K,KAAK46B,uDAS3BwnB,GAAW,IAAA/4C,EAAArJ,KAiCnB,OAhCAjH,OAAO0J,MAAK,EAAAsD,GAAAsP,aAAY+sC,IAAYz/C,QAAQ,SAAC/D,GAC7B,eAARA,IAAyB,mBAAoB,oBAAqB,WAAY,eAAe+Q,QAAQ/Q,IAAQ,IAC7GuJ,KAAKC,UAAUiB,EAAKzK,MAAUuJ,KAAKC,UAAUg6C,EAAUxjD,WAChDwjD,EAAUxjD,IAEL,WAARA,IACAyK,EAAK4vB,qBAAsB,EAC3B5vB,EAAK8vB,kBAAsB,GAG3BipB,EAAUvxC,YAA8C,iBAAzBuxC,EAAUvxC,aACzCuxC,EAAUvxC,WAAa4O,SAAS2iC,EAAUvxC,cAKO,IAAjDwkB,kCAA+B1lB,QAAQ/Q,IACvCyK,EAAKg5C,4BAEL/C,WAAUsC,cAAVl6C,MAA2B9I,EAAMwjD,EAAUxjD,KAG/CyK,EAAKzK,GAAOwjD,EAAUxjD,GAIV,cAARA,GAAuBwjD,EAAUpuC,YACjC3K,EAAK2K,UAAYouC,EAAUpuC,eAKhCouC,0GAGiBE,4DAAqBC,4IAG7C18C,MAAGkkB,UAAU,YAETw4B,GACA,eAAeh1C,KAAKxU,OAAO0J,KAAK6/C,MAChC,EAAA92C,GAAA0lC,kBAAiBoR,EAAe12C,aAAc,EAAAJ,GAAA0lC,kBAAiBlxC,KAAK4L,YAEpE02C,EAAe52C,OAAS42C,EAAe52C,SAAU,EAAAF,GAAAg3C,cAAaF,EAAe12C,WAG3Ew2C,EAAYpiD,KAAK6lC,aAAY,EAAA9/B,GAAAsP,aAAYitC,KAE3CC,IAAsB,mCAAmCh1C,KAAKxU,OAAO0J,KAAK2/C,0BACtE,WAAYA,mCACNhkD,GAAOqkD,oBAAoBL,EAAUnvC,sBAG/CjT,KAAK6lC,aACD5M,qBAAqB,EACrBO,mBAGCx5B,KAAKxD,YAAYg+C,mBACS,cAAe4H,GAAa,cAAeA,EAElEpiD,KAAKxD,YAAYigD,eAAez8C,KAAKgU,UAAWhU,KAAKmU,WAErDnU,KAAKxD,YAAYu2C,6BAIS,EAAAoM,GAAAuD,oBAAmB1iD,KAAMoiD,WAArD/6C,SACAq6C,EAAsB1hD,KAAK2hD,oBACjCt6C,EAAS8xB,kBAAmB,EAE5Bn5B,KAAK6lC,YAALxlC,MACOgH,EACCrH,KAAK2iD,2BAA+BjB,IAG5C1hD,KAAK2iD,yBAA0B,EAE3B,oBAAoBp1C,KAAKxU,OAAO0J,KAAK2/C,KACrCpiD,KAAK4iD,wBAGT5iD,KAAKmhD,iKAKK,IAAAz3C,EAAA1J,KACR6iD,GAAW,EAAAzD,GAAA0D,wBAAuB9iD,MAExC,GAAIjH,OAAO2zC,OAAO1sC,KAAKiJ,mBAAmBkX,KAAK,SAAA7lB,GAAA,OAAKA,EAAE1B,SAIlD,OAHAoH,KAAKw5B,iBACLx5B,KAAKy5B,sBACL5zB,MAAGkkB,UAAU,YAIjB,KAAK,EAAAhkB,GAAAwB,eAAcs7C,GAAW,CAC1B,IAAME,GAA0C,EAAA3D,GAAA4D,2BAA0BH,GAE1EvD,WAAUC,oBAAVt9C,OAAA8N,GAEWgzC,GAFXhzC,IAGW,EAAAmvC,GAAA5pB,oCAAmCt1B,SAI9CA,KAAKqhD,kBAAoBwB,EACzB7iD,KAAKw5B,iBACLx5B,KAAKy5B,iBAEL1gC,OAAO0J,KAAKzC,KAAKqhD,mBAAmB1+C,QAAQ,SAAC3F,GACzC6I,MAAGwkB,kBAAkB3gB,EAAK23C,kBAAkBrkD,GAAO0M,EAAKu5C,kEAMjDxwB,GACf,IAAMljB,EAA0BkjB,EAASnf,SAAS/D,cAC5C2zC,GAA0B,EAAAn9C,GAAAqK,kBAAiBpQ,KAAKw5B,cAAejqB,OAC/D4zC,GAA0B,EAAAp9C,GAAAqK,kBAAiB8yC,EAAoB,0BAErEljD,KAAKw5B,cAALn5B,MACOL,KAAKw5B,cADZ9xB,MAEK6H,GAAgB,EAAA6vC,GAAAgE,iBAAgBpjD,KAAMyyB,EAAU0wB,KAGhDnjD,KAAKxD,YAAYg+C,mBAClB,EAAAsB,GAAAuH,iBAAgBrjD,KAAKxD,YAAai2B,EAAUzyB,KAAKi9C,sBAGrDj9C,KAAKi5B,qBAAsB,+CAIVjlB,EAAWG,GAC5BnU,KAAK8hD,uBAAwB9tC,YAAWG,cAAa,+CAOrD,IAAMmvC,EAAehE,WAAUqC,kBAC3B3hD,KACAq1B,kCACAr1B,KAAKqiD,4BAIHpxC,KAEN,SADAhP,OAAA8N,GAAIuzC,IAAc3gD,QAAQ,SAAA0oC,GAAA,OAASp6B,EAAOo6B,EAAM,IAAMA,EAAM,KACrDp6B,0DAKP,GAAyB,YAArBjR,KAAK6T,YAAT,CAKA,IAAM4M,EAASzgB,KAAK6G,iBAAiBmY,SAAS7V,MAAMoxC,UAAU,SAAAjpC,GAAA,MAAoB,WAAZA,EAAK,KACrEtV,EAASgE,KAAK2Q,iBAAiB3Q,KAAK0Q,wBAAyB,EAEnE,GAAI1U,EAAQ,CACR,IAAMunD,GACFxkC,KAAK,EAAAlQ,GAAAkR,uBAAsB/jB,EAAO+iB,IAAK/e,KAAKsQ,eAC5C2O,KAAK,EAAApQ,GAAAkR,uBAAsB/jB,EAAOijB,IAAKjf,KAAKsQ,gBAG5CmQ,GAAS,EACTzgB,KAAK6G,iBAAiBmY,SAAS7V,MAAMsX,GAAO,GAAK8iC,EAEjDvjD,KAAK6G,iBAAiBmY,SAAS7V,MAAMrQ,MAAM,SAAUyqD,IAEzDvjD,KAAKwJ,iBAAiB,WAAYxJ,KAAKgf,gBAlBvChf,KAAKiJ,kBAAkB+V,wDAwB3B,IAAMwkC,EAAkB,SAACC,GACrB,QAAKA,IAEE,EAAA19C,GAAAqK,kBAAiBqzC,EAAoB,WACvCtjC,KAAK,SAAArkB,GAAA,MAA+B,oBAAnBA,EAASwC,SAgB7BolD,EAd6B,SAACD,EAAoBnzC,EAAeJ,GACnE,IAAKuzC,IAAuBnzC,IAAkBJ,EAAqB,OAAO,EAE1E,IAGMyzC,EAHgB5qD,OAAO0J,KAAKghD,OAC7Bj8C,OAAO,SAAC5I,EAAKsX,GAAN,SAAAjU,OAAA8N,GAAoBnR,GAApBmR,GAA4B0zC,EAAmBvtC,GAAMrO,IAAI,SAAA/L,GAAA,OAAYA,EAASwC,eAGrFuJ,IAAI,SAAAqO,GAAA,OAAAxO,MAAYwO,GAAO,EAAAnQ,GAAAqK,kBAAiBpB,WAAa8H,wBAAyBZ,EAAM,SAAU,YAAa,gBAAiBhG,OAGjI,QAAOszC,EAAgBC,IAAsBE,EACxC5tC,OAAO,SAAAja,GAAA,OAAYA,EAAS8nD,kBAAiB,GAAGA,gBAChDzjC,KAAK,SAAAnB,GAAA,OAAYA,EAAS1gB,QAAUgS,IAERuzC,CAA2B7jD,KAAK4Y,oBACjE5Y,KAAKsQ,cAAetQ,KAAKkQ,qBAEvB,gCAAgC3C,KAAKvN,KAAKuP,iBAC5CvP,KAAK8jD,gBAAiB,EACtB9jD,KAAKgiD,iBAAmB,GAGxB,gCAAgCz0C,KAAKvN,KAAKuP,iBAAmBm0C,GAAqD,YAArB1jD,KAAK6T,cAA8B2vC,EAAgBxjD,KAAK4Y,qBACrJ5Y,KAAK8jD,gBAAiB,EAEtB9jD,KAAK8jD,gBAAiB,oDAKJ,IAAA55C,EAAAlK,KACtB,OAAO,IAAItF,QAAJ,eAAAqpD,EAAAx5C,GAAAC,mBAAAC,KAAY,SAAAu5C,EAAOrpD,GAAP,OAAA6P,mBAAAG,KAAA,SAAAs5C,GAAA,cAAAA,EAAAp5C,KAAAo5C,EAAAn5C,MAAA,cAAAm5C,EAAAn5C,KAAA,EACTZ,EAAKg6C,UADI,cAAAD,EAAAn5C,KAAA,EAETZ,EAAKi6C,oBAFI,cAAAF,EAAA9wC,OAAA,SAGRxY,EAAQuP,EAAKi3C,sBAHL,wBAAA8C,EAAA74C,SAAA44C,EAAA95C,MAAZ,gBAAAk6C,GAAA,OAAAL,EAAAxqD,MAAAyG,KAAA0B,YAAA,8LASD1B,KAAKmkD,2BACXnkD,KAAKmhD,qBACL,EAAAr7C,GAAAu+C,aAAY,WACRj6C,EAAKi4C,4BAA6B,IAEtCriD,KAAK2hD,oBACL3hD,KAAKiL,gBAAgBjL,KAAK0yC,+JAK1B1yC,KAAKqL,uBACLxF,MAAGkkB,UAAU,YACb/pB,KAAKqiD,4BAA6B,0DA9drC92C,4DAAwC,6CACxCA,4DAAwC,0CACxCA,4DAAwC,wCACxCA,4DAAwC,0CACxCA,4DAAwC,gCAGxCA,0FAGAA,2DAAkC,8CAClCA,2DAAkC,wCAClCA,2DAAkC,8CAClCA,qGACAA,iGACAA,4FAGAA,4DAA6B,gCAC7BA,2DAA6B,qCAC7BA,8FAGAA,4DAAiC,uCACjCA,2DAAiC,8CACjCA,sGACAA,iGACAA,2DAAiC,sCACjCA,2DAAiC,sCACjCA,2DAAiC,4CAGjCA,2DAA2B,oCAC3BA,2DAA2B,wCAC3BA,4DAA2B,oCAG3BA,4DAA8BuF,OAAO,2CACrCvF,gGACAA,4DAA8B,qCAC9BA,uGAEAA,wGAQAA,gGAGAA,4DAAwB,wCAGxBA,oGACAA,iLAQM,SAAA+4C,IAAA,OAAA95C,mBAAAG,KAAA,SAAA45C,GAAA,cAAAA,EAAA15C,KAAA05C,EAAAz5C,MAAA,cAAAy5C,EAAAz5C,KAAA,EAEG2c,WAAasgB,KAAK,kBAFrB,wBAAAwc,EAAAn5C,SAAAk5C,EAAAE,q5DAnEUnS,yiBCrCrBtsC,EAAAhM,EAAA,+HAEqBulD,sLAQK1W,GAClB,IAAM6b,EAAgB7b,EAAM,IAAI8b,IAAI9b,GAAK+b,OAAStlD,OAAOmO,SAASm3C,OAGlE,OAFqB,IAAIC,gBAAgBH,EAAallD,MAAM,0CAa3C0nB,GAAoB,IAAZ2hB,EAAYlnC,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAAN,KACzBmjD,EAAajc,EAAM,IAAI8b,IAAI9b,GAAOvpC,OAAOmO,SACzCs3C,EAAe,IAAIF,gBAAgBC,EAAWF,OAAOplD,MAAM,IAqBjE,OApBAxG,OAAO0J,KAAKwkB,GAAQtkB,QAAQ,SAAC9E,GACzBinD,EAAaC,OAAOlnD,GAEpB,IAAMS,EAAQ2oB,EAAOppB,GAEjBS,GAA0B,iBAAjB,IAAOA,EAAP,YAAA0X,EAAO1X,KAAgC,KAAVA,GACtCwmD,EAAaE,OAAOnnD,EAAMopB,EAAOppB,MAIrCinD,EAAalsD,QACbksD,EAAa1lC,OAGZwpB,EAGDic,EAAWF,OAASG,EAAavwC,WAFjClV,OAAOmhB,QAAQykC,aAAa,KAAM,KAAlC,IAA4CC,mBAAmBJ,EAAavwC,aAKzEswC,4CAWczkD,EAAOi1B,GAA0D,IAA1B8vB,EAA0BzjD,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,IAAAA,UAAA,GAChF4hD,EAAehE,EAAU8F,iBAgB/B,OAdK,EAAAr/C,EAAAwB,eAAcnH,IAGfi1B,EACKtf,OAAO,SAAAva,GAAA,OAAM8nD,EAAaplD,IAAI1C,KAAImH,QAAQ,SAAA/D,GACnCwB,EAAMxB,KACFumD,GACA7F,EAAUsC,oIAAVl6C,IAA2B9I,EAAMwB,EAAMxB,KAG3C0kD,EAAazwB,IAAIj0B,EAAKwB,EAAMxB,OAIrC0kD,6CAQwB,IAAX7gD,EAAWf,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MACzB4hD,EAAehE,EAAU8F,oBAE/BnjD,OAAA8N,EAAIuzC,IAAc3gD,QAAQ,SAAArE,GAAA,OAASmE,EAAKkN,QAAQrR,EAAM,MAAQ,GAAKglD,EAAayB,OAAOzmD,EAAM,MAE7F,IAAMmmD,KAAexiD,OAAA8N,EAAIuzC,IAAc1qD,OAAlB,IAA+B0qD,EAAa/uC,WAAe,GAEhFlV,OAAOmhB,QAAQykC,aAAa,KAAM,KAAMC,mBAAmBT,uBAzF9CnF,0GCFrB,IAAA5wC,EAAA3U,EAAA,IAEamoD,6BAAA,IAAA7gD,2RAAAkJ,CAAAC,mBAAAC,KAAkB,SAAAC,EAAMmd,EAAaC,GAAnB,OAAAtd,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAuI,OAAA,SAA6BtN,KAAG+hB,IAAIC,EAAaC,IAAjD,wBAAAld,EAAAQ,SAAAV,OAAApN,MAAlB,gBAAA+nD,EAAA3xC,GAAA,OAAArS,EAAA9H,MAAAyG,KAAA0B,YAAAwgD,+GCFb,wDAAAnoD,EAAA,KAEa0oD,iCAAA,IAAAphD,2RAAAkJ,CAAAC,mBAAAC,KAAsB,SAAAC,EAAMuI,GAAN,OAAAzI,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACzBkE,UAAagG,yBAAyB/B,GADb,wBAAArI,EAAAQ,SAAAV,OAAApN,MAAtB,gBAAA+nD,GAAA,OAAAhkD,EAAA9H,MAAAyG,KAAA0B,YAAA+gD,kFCFA5sC,sBAAsB,SAAC/Z,GAAsD,IAA5CgY,EAA4CpS,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,IAA/B4S,MAAOxY,EAASgY,UACvE,GAAKhY,EAASgY,SAAd,CAIA,IAAM4C,KAMN,OAJC,UAAW,cAAe,gBAAgB/T,QAAQ,SAACyrC,GAC5CA,KAAStyC,IAAU4a,EAAY03B,GAAStyC,EAASsyC,MAGlDr1C,OAAO0O,OAAOqM,4HAAdpM,IACF5L,EAAS+X,YAAc6C,uKCZhC,IAAAjI,EAAA1U,EAAA,2HAEa6a,oBAAoB,kBAC7BsN,QAAY,EAAAzT,EAAA2C,UAAS,UACrByoB,OAAY,EAAAprB,EAAA2C,UAAS,SACrBk0C,YAAY,EAAA72C,EAAA2C,UAAS,gBAOZgE,yBAAyB,kBAE9BmwC,WAAmB9vC,OAAO,EAAAhH,EAAA2C,UAAS,aAA+B9B,aAAc,OAAQ,OAAsBmF,OAAQ,SAAU,SAAUzE,YAAa,cAAeqE,cAAe,GACrLuvC,iBAAmBnuC,OAAO,EAAAhH,EAAA2C,UAAS,aAA+B9B,aAAc,QAAS,QAAqBmF,OAAQ,SAAU,SAAUzE,YAAa,cAAeqE,cAAe,GACrLmxC,UAAmB/vC,OAAO,EAAAhH,EAAA2C,UAAS,gBAA+B9B,aAAc,OAAQ,OAAsBmF,OAAQ,SAAU,SAAUzE,YAAa,WAAeqE,cAAe,GACrLoxC,OAAmBhwC,OAAO,EAAAhH,EAAA2C,UAAS,kBAA+B9B,aAAc,WAAY,WAAkBmF,OAAQ,SAAU,SAAUzE,YAAa,YACvJoT,KAAmB3N,OAAO,EAAAhH,EAAA2C,UAAS,6BAA+B9B,aAAc,aAAc,eAAgBmF,OAAQ,SAAU,SAAUzE,YAAa,YACvJ01C,MAAmBjwC,OAAO,EAAAhH,EAAA2C,UAAS,8BAA+B9B,aAAc,QAAS,YAAqBmF,OAAQ,SAAU,SAAUzE,YAAa,YACvJ21C,OAAmBlwC,OAAO,EAAAhH,EAAA2C,UAAS,UAA+B9B,aAAc,SAAU,UAAoBmF,OAAQ,SAAU,SAAUzE,eAC1I41C,YAAmBnwC,OAAO,EAAAhH,EAAA2C,UAAS,mBAA+B9B,aAAc,aAAc,aAAgBmF,OAAQ,SAAU,SAAUzE,YAAa,eACvJ61C,UAAmBpwC,OAAO,EAAAhH,EAAA2C,UAAS,YAA+B9B,aAAc,WAAY,aAAkBmF,OAAQ,SAAU,SAAUzE,eAC1I81C,YAAmBrwC,OAAO,EAAAhH,EAAA2C,UAAS,cAA+B9B,aAAc,YAAa,cAAiBmF,OAAQ,SAAU,SAAUzE,YAAa,eACvJ+1C,SAAmBtwC,OAAO,EAAAhH,EAAA2C,UAAS,aAA+B9B,aAAc,eAA8BmF,OAAQ,cAAoBzE,eAC1Ig2C,QAAmBvwC,OAAO,EAAAhH,EAAA2C,UAAS,cAA+B9B,aAAc,cAA8BmF,OAAQ,cAAoBzE,eAC1Ii2C,aAAmBxwC,OAAO,EAAAhH,EAAA2C,UAAS,YAA+B9B,aAAc,aAA8BmF,OAAQ,cAAoBzE,iBAIrImF,8BAA8B,eAAA9T,EAAA,OAAAqG,EAAArG,MAElC,EAAAoN,EAAA2C,UAAS,YAAqB,YAAa,WAAY,oBAFrB1J,EAAArG,GAGlC,EAAAoN,EAAA2C,UAAS,mBAAqB,UAHI1J,EAAArG,GAIlC,EAAAoN,EAAA2C,UAAS,WAAqB,MAAO,SAJH1J,EAAArG,GAKlC,EAAAoN,EAAA2C,UAAS,WAAqB,UALI1J,EAAArG,GAMlC,EAAAoN,EAAA2C,UAAS,WAAqB,aAAc,WAAY,eANtB/P,yfC9B3CoN,EAAA1U,EAAA,GACA+U,EAAA/U,EAAA,KACA4U,EAAA5U,EAAA,cAM2B,kBACvB2R,QACIvC,QACK,OAAaqT,SAAS,EAAA/N,EAAA2C,UAAS,kCAC/B,UAAa2N,IAAK,EAAG/hB,KAAM,YAGpCgX,WACI7K,QACK,OAAaukC,UAAW,SAAAttC,GAAA,OAASA,EAAMiU,eAAiBjU,EAAM0P,gBAAgBH,QAAQ,YAAc,GAAG6M,SAAS,EAAA/N,EAAA2C,UAAS,mCACzH,WAAas8B,UAAW,SAAAttC,GAAA,MAAwC,UAA/BA,EAAMsQ,sBAAoCtQ,EAAMiU,kBACjF,UAAaq5B,UAAW,SAAAttC,GAAA,MAAwC,UAA/BA,EAAMsQ,sBAAoCtQ,EAAMiU,eAAerX,KAAM,WACtG,UAAa0I,KAAM,SAACpH,EAAO8H,EAAShG,EAAOwJ,GAAxB,QAAmCxJ,EAAMiU,cAAgB,KAAK/V,GAASsL,EAAOuK,WAAkBqI,SAAS,EAAA/N,EAAA2C,UAAS,wDAE1IzH,QAAS,aAEbwK,WACIhL,QACK,OAAaukC,UAAW,SAAAttC,GAAA,OAASA,EAAMiU,cAAgB,GAAKjU,EAAM0P,gBAAgBH,QAAQ,YAAc,GAAG6M,SAAS,EAAA/N,EAAA2C,UAAS,mCAC7H,WAAas8B,UAAW,SAAAttC,GAAA,MAAwC,UAA/BA,EAAMsQ,sBAAoCtQ,EAAMiU,kBACjF,UAAaq5B,UAAW,SAAAttC,GAAA,MAAwC,UAA/BA,EAAMsQ,sBAAoCtQ,EAAMiU,eAAerX,KAAM,WACtG,UAAa0I,KAAM,SAACpH,EAAO8H,EAAShG,EAAOwJ,GAAxB,MAAoC,SAAS2D,KAAK3D,EAAOoK,YAAc,SAASzG,KAAKjP,IAAY,aAAaiP,KAAK3D,EAAOoK,YAAc,aAAazG,KAAKjP,IAASke,SAAS,EAAA/N,EAAA2C,UAAS,mDACxM,UAAa1L,KAAM,SAACpH,EAAO8H,EAAShG,EAAOwJ,GAAxB,OAAoCA,EAAOoK,WAAa1V,GAAOke,SAAS,EAAA/N,EAAA2C,UAAS,uDAEzGzH,QAAS,aAEbqV,UACI7V,QACK,OAAaqT,SAAS,EAAA/N,EAAA2C,UAAS,qCAGxCP,YACIlH,QAAS,cAEbkO,YACI1O,QACK,UAAazD,KAAM,SAACpH,EAAO8H,EAAShG,GAAjB,MAAyD,SAA9BA,EAAM8P,sBAAkC,EAAAvB,EAAA2D,aAAYhU,IAAUke,SAAS,EAAA/N,EAAA2C,UAAS,yDAC9H,UAAa1L,KAAM,SAACpH,EAAO8H,EAAShG,GAAjB,MAAyD,SAA9BA,EAAM8P,sBAAkC,EAAAvB,EAAAkpC,aAAYv5C,IAAUke,SAAS,EAAA/N,EAAA2C,UAAS,qCAC9H,UAAa1L,KAAM,SAACpH,EAAO8H,EAAShG,GAAjB,MAAyD,SAA9BA,EAAM8P,sBAAkC,EAAAvB,EAAAmpC,eAAcx5C,IAAQke,SAAS,EAAA/N,EAAA2C,UAAS,uCAC9H,UAAa1L,KAAM,SAACpH,EAAO8H,EAAShG,GACjC,GAAkC,SAA9BA,EAAM8P,oBAAgC,OAAO,EACjD,KAAK,EAAAvB,EAAA2D,aAAYhU,GAAQ,OAAO,EAChC,IAAMuT,GAAqB,EAAAlD,EAAA+D,UAAStS,EAAMyQ,YACpCq1C,EAAqBr0C,EAAa0F,QAJG4uC,EAK5B7nD,EAAMiU,MAAM,KALgB6zC,EAAA3zC,EAAA0zC,EAAA,GAKpCj0C,EALoCk0C,EAAA,GAKjC1oD,EALiC0oD,EAAA,GAM3C,OAAO,EAAAt3C,EAAAgD,oBAAmB1R,EAAMuR,SAAUu0C,EAAmBj0C,KAAKC,GAAGH,OAAOrU,GAAImU,IACjF2K,SAAS,EAAA/N,EAAA2C,UAAS,0HCtDpBiyC,kBAAkB,SAAClR,EAAiBmB,EAAmBgK,GAAoB,IAAA+I,EACvC/S,EAAkBhgC,SAAvDW,EAD4EoyC,EAC5EpyC,QAAS6N,EADmEukC,EACnEvkC,SAAUvS,EADyD82C,EACzD92C,cAC3B4iC,EAAgBuB,eACZnkC,EACA0E,EACA6N,EACAw7B,+GCNR,QAAAvjD,EAAA,UAEAA,EAAA,KACYiV,IAAZjV,EAAA,MACYusD,IAAZvsD,EAAA,MACYwsD,IAAZxsD,EAAA,kNAEa2oD,gCAAA,IAAArhD,2RAAAkJ,CAAAC,mBAAAC,KAAqB,SAAAC,EAAMtK,EAAOgiD,GAAb,IAAA/6C,EAAAm/C,EAAA9tD,EAAA,OAAA8R,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxBzD,EAAWjH,EAAMiI,cACjBm+C,EAAYC,EAAermD,EAAOgiD,GAG/B1pD,EAAI,EALiB,YAKdA,EAAI8tD,EAAU5tD,QALA,CAAAgS,EAAAE,KAAA,gBAAAF,EAAAM,GAM1Bw7C,EAN0B97C,EAAA+7C,GAMVt/C,EANUuD,EAAAE,KAAA,EAMM07C,EAAU9tD,GAAG2O,GANnB,OAAAuD,EAAAg8C,GAAAh8C,EAAAwI,MAAA,EAAAxI,EAAAM,IAAAN,EAAA+7C,GAAA/7C,EAAAg8C,IAAA,QAKQluD,IALRkS,EAAAE,KAAA,uBAAAF,EAAAuI,OAAA,SASvB9L,GATuB,yBAAAuD,EAAAQ,SAAAV,OAAApN,MAArB,gBAAA+nD,EAAA3xC,GAAA,OAAArS,EAAA9H,MAAAyG,KAAA0B,YAAAghD,GAAN,IAYD+D,EAAiB,SAACrmD,EAAOgiD,GAAR,OACnByE,UAAmBluC,sBACnB3J,EAAa83C,0BAFM7kD,6HAAA8N,CAGf,6BAA6BxC,KAAKxU,OAAO0J,KAAK2/C,MAAgBhiD,EAAMmP,eACnEP,EAAa+3C,2BAClBR,EAAUS,kBACVV,EAASW,kBAIPP,EAAkB,SAACQ,EAAQC,IACT,sBAAuB,sBAAuB,kBAAmB,qBAAsB,eAEhGxkD,QAAQ,SAAC/D,GACZA,KAAOuoD,IACPD,EAAOtoD,QAAOtB,MAItB,EAAA43C,EAAAjwC,UAAO,EAAMiiD,EAAQC,4ICtCzB,wDAAAptD,EAAA,KAEa+sD,2BAA2B,SAAAzlD,GAAA,IAAGuX,EAAHvX,EAAGuX,oBAAqBrJ,EAAxBlO,EAAwBkO,cAAxB,OACpCP,UAAaiH,gBAAgB2C,EAAqBrJ,IAGzCw3C,uBAAuB,SAAC3mD,GAAD,OAChC4O,UAAaqH,kBAAkBjW,uUCPnCrG,EAAA,KACA8U,EAAA9U,EAAA,IAEaktD,iBAAiB,SAAC7mD,GAC3B,IAAMsQ,GAAuB,EAAA7B,EAAA0J,eAAcnY,GAGrCgnD,EAAehnD,EAAMsQ,uBAAyBA,GAChD1B,UAAa4E,YAAYxT,EAAMmP,cAAemB,GAElD,OAAArQ,GACIqQ,wBACG02C,0UCZXrtD,EAAA,KAEaitD,+BAAA,IAAA3lD,2RAAAkJ,CAAAC,mBAAAC,KAAoB,SAAAC,EAAOtK,GAAP,IAAAmP,EAAAe,EAAAqH,EAAA9G,EAAAoC,EAAA2M,EAAA/H,EAAAb,EAAAnD,EAAAwzC,EAAAn3C,EAAAo3C,EAAA31C,EAAA41C,EAAA3wC,EAAAzG,EAAAwG,EAAA6wC,EAAAC,EAAAr4C,EAAAs4C,EAAAC,EAAA/vC,EAAAgwC,EAAAC,EAAA,OAAAr9C,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEzByE,EAIWnP,EAJXmP,cACAe,EAGWlQ,EAHXkQ,cACAqH,EAEWvX,EAFXuX,YACA9G,EACWzQ,EADXyQ,WACAoC,EAAW7S,EAAX6S,OACE2M,EAAcxf,EAAMsG,WAAWjG,OAAOmf,YAExC/H,EAEgBzX,EAFhByX,WACAb,EACgB5W,EADhB4W,YACAnD,EAAgBzT,EAAhByT,YAEJgE,EAAaA,GAAc+H,EAAYrI,QAAQC,IAAI,EAAG,UAAUxF,OAAO,SAEjEq1C,EAA0Br4C,UAAa4B,aAAaC,GACpDX,EAA0Bm3C,EAAwBn3C,oBAClDo3C,EAA0Bt4C,UAAawJ,YAAYjJ,EAAesB,GAClEc,EAA0B21C,EAAa31C,SACvC41C,EAA0Bv4C,UAAa0J,aAAa/G,EAAUd,EAAYgH,GAChFA,EAAgC0vC,EAAe1vC,WAEzCjB,EAA0B5H,UAAaiB,qBAAqBV,EAAeW,GAC3EC,EAA0ByG,EAAwBzG,oBAClDwG,EAA0B3H,UAAaqB,gBAAgBC,EAAef,EAAeW,GAErFs3C,EAAkBx4C,UAAauJ,cAAcpI,EAAqB0D,GACxEA,EAAwB2zC,EAAgB3zC,YAClC4zC,EAAkBz4C,UAAa+H,cAAc5G,EAAqB6G,EAAanD,EAAahD,GAClGmG,EAAwBywC,EAAgBzwC,YA7BXpM,EAAAE,KAAA,GA+BQkE,UAAa4D,gBAAgBoE,EAAa/D,GA/BlD,eA+BvB7D,EA/BuBxE,EAAAwI,KAgCvBs0C,GAA2BI,kBAAmB14C,EAAcmE,MAC5Do0C,GAA2B/vC,mBAAoBxI,EAAcqE,OAE7DmE,EAAyB+vC,EAAuB/vC,mBAChDgwC,EAAyB54C,UAAa0I,cACxCV,EACAW,EACA9D,EACA+D,EACAjG,EACAd,EACAgH,GAGEgwC,EAAuB74C,UAAayB,kBAAkBlB,EAAeW,GA9C9CtF,EAAAuI,OAAA,SAAA9S,KAiDtBgnD,EACAzwC,EACAixC,EACAlxC,EACA2wC,EACAC,EACAE,EACAG,EACAJ,EACAE,EACAC,IA3DsB,yBAAA/8C,EAAAQ,SAAAV,OAAApN,MAApB,gBAAA+nD,GAAA,OAAAhkD,EAAA9H,MAAAyG,KAAA0B,YAAAslD,wUCFbx7C,EAAAzR,EAAA,IACAgM,EAAAhM,EAAA,GACA4U,EAAA5U,EAAA,IAGAmlD,EAAAnlD,EAAA,KAoDMguD,GAhDO3E,kBAAkB,SAAChjD,EAAOqyB,EAAU0wB,GAC7C,IAAMvJ,EAAannB,EAASmnB,aACtB/1B,EAAc+1B,EAAS13B,OAAS03B,EAASoO,WAAc,EACvDjuB,EAAsB,IAATlW,GAAgB+1B,EAASoO,WAAa,GACnDnuB,EAAa+f,EAAS9+B,cAGtBmtC,EAFa7nD,EAAMyU,WAEUzH,KAAK,SAAArP,GAAA,OAAKA,EAAEO,QAAU8B,EAAMqU,QAEzDqT,EADyC,UAAxBmgC,EAAepjD,KACJg1B,EAAQ+f,EAASqO,EAAe3pD,OAC9Di8B,EAAmBzS,EAAQq7B,EAAwB7kD,MAEnDwpB,IAAUq7B,EAAwB7kD,QAClCi8B,EAAgB,MAGpB,IAAM2tB,GACFrjD,KAAOojD,EAAepjD,MAAQ,GAC9BvG,MAAOwpB,GAAS,IAGpB,OACIrjB,GAAWm1C,EAASn1C,IAAM,GAC1B+V,YAAaiY,EAASt1B,MACtBo9B,gBACA/d,QAAWo9B,EAAS/W,UAAYpQ,EAASt1B,MAAMqf,QAC/C0rC,qBACAhmC,OAAW03B,EAAS13B,OACpB2B,OAAWA,EAAOskC,SAAQ,EAAA38C,EAAAskC,kBAAiB1vC,EAAMwL,WACjDmuB,QAAcA,EAAQouB,QAAQ,GAA9B,IACAtuB,UAIKipB,yBAAyB,SAAC1iD,GACnC,IAAMyiD,KAUN,OARA9pD,OAAO0J,KAAKrC,EAAMkP,aAAa3M,QAAQ,SAAC3F,GACpC,IAAMorD,EAAcL,EAAiC3nD,EAAOpD,GACtDqrD,EAAcjoD,EAAMihD,kBAAkBrkD,IACvC,EAAA+I,EAAAuiD,aAAYF,EAASC,KACtBxF,EAAS7lD,GAAQorD,KAIlBvF,GAG8B,SAACziD,EAAOmoD,GAC7C,IAAMC,KACN,GAA0B,YAAtBpoD,EAAMyT,YAA2B,CACjC,IAAMmD,GAAc,EAAArI,EAAA+D,UAAStS,EAAM4W,aACnCwxC,EAAWxmC,aAAc,EAAArT,EAAAyoC,eAAcpgC,EAAYgb,OAAQ5xB,EAAMuX,aAGrE,OAAAtX,GACIu5C,SAAe,EACfzvB,UAAe,EACfze,OAAe4vC,WAAWl7C,EAAMsL,QAChC+I,MAAerU,EAAMqU,MACrBlF,cAAeg5C,EACf38C,SAAexL,EAAMsG,WAAWlG,OAAOoL,SACvCqH,OAAe7S,EAAM6S,QAEjB7S,EAAMyQ,aACJoR,YAAY,EAAAtT,EAAAyoC,eAAch3C,EAAMyQ,WAAYzQ,EAAMyX,aAG9B,aAAtBzX,EAAMyT,aAEEmL,SAAeS,SAASrf,EAAM4e,UAC9B1O,cAAelQ,EAAMkQ,eAGzBk4C,GAGHpoD,EAAMiU,cAAgB,IAAsD,IAAjDjU,EAAM0P,gBAAgBH,QAAQ,iBACxDsE,QAAS7T,EAAM4T,WAAa5T,EAAMqoD,YAGZ,IAAxBroD,EAAMiU,gBACJyN,SAAU1hB,EAAM+T,cAKjB6uC,4BAA4B,SAAC3B,GACtC,IAAMqH,KACAjzB,EAAW18B,OAAO0J,KAAK4+C,GACxB9G,UAAU,SAAA7hD,GAAA,OAAKA,EAAEiwD,cAAch5C,QAAQ,UAAY,KAAM,EAe9D,OAba5W,OAAO0J,KAAK1J,OAAO2zC,OAAO2U,GAAmB,IAErD1+C,QAAQ,SAAA9E,GACT,IAAM+qD,EAAmBpzB,wCAAsC33B,GAE3D+qD,EACAF,EAAkB5vD,KAAiC,iBAArB8vD,EAAgCA,EAAmBA,EAAiBnzB,KAC1C,IAAjDC,gCAA8B/lB,QAAQ9R,IAC7C6qD,EAAkB5vD,KAAK+E,KAI/B6qD,EAAkBtpC,OACXspC,kFClHE7G,oBAAoB,WAAyB,IAAxBl6B,EAAwBjmB,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,MACtD,OAAKimB,EAAe/uB,OACb+uB,EAAe5R,OAAO,SAAA8yC,GAAA,MAAe,2BAA2Bt7C,KAAKs7C,EAAYC,aAAY,GAAG71C,OADpE,6bCDvCnN,EAAA/L,EAAA,GAKAs4B,EAAAt4B,EAAA,0DAGAA,EAAA,0lBAEA,IAAM+M,GAAa,WAEEuiC,MAgEhBnjC,SAAOC,QAQPD,SAAOC,QAkBPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAMPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAMPD,SAAOC,QAKPD,SAAOC,QAMPD,SAAOC,QAKPD,SAAOC,QAKPD,SAAOC,QAQPD,SAAOC,oBAxJR,SAAAkjC,iGAAc7nC,CAAAxB,KAAAqpC,GACV,IADU1hC,mKAAA7F,CAAA9B,MAAAqpC,EAAAtnC,WAAAhJ,OAAAiJ,eAAAqnC,IAAAnwC,KAAA8G,MAoBF2G,0BAlBJ,yBACA,uBACA,uBACA,uBACA,aACA,aACA,aACA,aACA,aACA,8BACA,6BACA,0BACA,kBACA,yBACA,yBACA,uBAG8BG,iBApBxB,OAAAT,GAAAsB,EAAA,oBAAArB,EAAAqB,GAAAtB,GAAAsB,EAAA,6BAAApB,EAAAoB,GAAAtB,GAAAsB,EAAA,yBAAA6hC,EAAA7hC,GAAAtB,GAAAsB,EAAA,kBAAA8hC,EAAA9hC,GAAAtB,GAAAsB,EAAA,wBAAA+hC,EAAA/hC,GAAAtB,GAAAsB,EAAA,wBAAAgiC,EAAAhiC,GAAAtB,GAAAsB,EAAA,0BAAAiiC,EAAAjiC,GAAAtB,GAAAsB,EAAA,yBAAAo0C,EAAAp0C,GAAAtB,GAAAsB,EAAA,sBAAAq0C,EAAAr0C,GAAAtB,GAAAsB,EAAA,8BAAA83C,EAAA93C,GAAAtB,GAAAsB,EAAA,6BAAA+3C,EAAA/3C,GAAAtB,GAAAsB,EAAA,0BAAAg4C,EAAAh4C,GAAAtB,GAAAsB,EAAA,4BAAAi4C,EAAAj4C,GAAAtB,GAAAsB,EAAA,mBAAAk4C,EAAAl4C,GAAAtB,GAAAsB,EAAA,eAAAm4C,EAAAn4C,GAAAtB,GAAAsB,EAAA,iBAAAo4C,EAAAp4C,GAAAtB,GAAAsB,EAAA,uBAAAq4C,EAAAr4C,GAAAtB,GAAAsB,EAAA,yBAAAs4C,EAAAt4C,GAAAtB,GAAAsB,EAAA,uBAAAu4C,EAAAv4C,GAAAtB,GAAAsB,EAAA,uBAAAw4C,EAAAx4C,GAAAtB,GAAAsB,EAAA,aAAAy4C,EAAAz4C,GAAAtB,GAAAsB,EAAA,aAAA04C,EAAA14C,GAAAtB,GAAAsB,EAAA,aAAA24C,EAAA34C,GAAAtB,GAAAsB,EAAA,aAAA44C,EAAA54C,GAAAtB,GAAAsB,EAAA,aAAA64C,EAAA74C,KAFdohD,oBAAsB,SAACxuC,GAAD,OAAU5S,EAAA,YAAiB4S,IAuB7Clb,OAAO8vB,iBAAiB,SAAUxnB,EAAKqhD,eACvC,EAAAljD,EAAAmjD,SAAQ,kBAAMluD,SAASkzB,KAAKC,UAAUvmB,EAAKya,gBAAkB,MAAQ,UAAU,iBAtBrEza,qUAvCmB1B,0DAiEA,IAAfpI,EAAewD,EAAfxD,KAAMS,EAAS+C,EAAT/C,MACpB,KAAMT,KAAQmC,MACV,MAAM,IAAI5C,MAAJ,qBAA+BS,GAEzCmC,KAAKnC,GAAQS,yCAKb0B,KAAKkpD,aAAe7pD,OAAO8pD,WACvBnpD,KAAK04B,YACL14B,KAAKsiB,wBAAyB,kDAgBlCtiB,KAAKopD,yBAA2BppD,KAAKopD,oEAKrCppD,KAAK2iB,yBAA2B3iB,KAAK2iB,uEAKrC3iB,KAAK6iB,6BAA+B7iB,KAAK6iB,2EAKzC7iB,KAAK+8C,4BAA8B/8C,KAAK+8C,wEAKxC/8C,KAAK66B,qBAAuB76B,KAAK66B,yEAKjC76B,KAAKwiB,wBAA0BxiB,KAAKwiB,gEAKpCxiB,KAAKoiB,iBAAmBpiB,KAAKoiB,+DAK7BpiB,KAAKqpD,uBAAyBrpD,KAAKqpD,sBAC9BrpD,KAAKqpD,wBAAuBrpD,KAAKspD,uBAAwB,gDAK9DtpD,KAAKspD,uBAAwB,+CAK7BtpD,KAAKspD,uBAAwB,kDAK7BtpD,KAAKsiB,wBAA0BtiB,KAAKsiB,gEAKpCtiB,KAAKoiC,mBAAoB,oDAKzBpiC,KAAKqiC,4BAA6B,wCAKlCriC,KAAKoiC,mBAAoB,EACzBpiC,KAAKqiC,4BAA6B,8CAKlCriC,KAAKupD,2BAA4B,8CAKjCvpD,KAAKupD,2BAA4B,EACjCvpD,KAAKwpD,iBAAmB,+CAIVlvD,GACd0F,KAAKwpD,iBAAmBlvD,0CAIZmvD,GACZzpD,KAAK0pD,eAAe5wD,KAAK2wD,8CAIVA,GACf,IAAMhpC,EAAQzgB,KAAK0pD,eAAe/5C,QAAQ85C,GACtChpC,GAAS,GACTzgB,KAAK0pD,eAAe5vD,OAAO2mB,EAAO,oDAMtCzgB,KAAK0pD,oDA/GL,OAAO1pD,KAAKkpD,cAAgBvzB,qDAK5B,OAAO31B,KAAKkpD,cAAgBtzB,kEAtF/BrqB,2DAAwC,oDACxCA,2DAAwC,gDACxCA,2DAAwC,yCAExCA,2DAAqC,+CACrCA,2DAAqC,+CACrCA,2DAAqC,iDACrCA,2DAAqC,gDAGrCA,2DAAoC,6CACpCA,2DAAoC,qDAGpCA,2DAAyC,oDACzCA,2DAAyC,iDACzCA,2DAAyC,mDAGzCA,2DAAuC,0CACvCA,2DAAuC,yCAEvCA,2DAA0BlM,OAAO8pD,iDAEjC59C,yGAEAA,2DAAoC,gDACpCA,0DAAoC,gDACpCA,0DAAoC,uDACpCA,0DAAoC,sCACpCA,2DAAoC,oCACpCA,2DAAoC,qCACpCA,2DAAoC,oCACpCA,2DAAoC,oCACpCA,2DAAoC,6PA6CpCwhC,8GAKAA,u7EArFgB1D,kFCZR/D,mBAAmB,WAC5BjmC,OAAO8vB,iBAAiB,UAAW,SAACw6B,GAChC,OAAQA,EAAI/qD,KACR,IAAK,kBACG7D,SAAS6uD,QAA4B,KAAjBD,EAAIlgD,UAAoBpK,OAAOwqD,eACnDxqD,OAAOmO,SAASwlB,4FCLpC,QAAAj5B,EAAA,QACAA,EAAA,IACAw8B,EAAAx8B,EAAA,QACAA,EAAA,MACA83B,EAAA93B,EAAA,QACAA,EAAA,UACAA,EAAA,MACA+vD,EAAA/vD,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMgwD,EAAM,SAAA1oD,GAAA,IAAGqF,EAAHrF,EAAGqF,WAAH,OACRtB,EAAAH,QAAA/J,cAACq7B,EAAAyzB,eAAOC,UAAU,EAAAC,EAAAjlD,YACdG,EAAAH,QAAA/J,cAAC22B,EAAAjyB,cAAaQ,MAAOsG,GACjBtB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,UACXc,EAAAH,QAAA/J,cAACivD,EAAAllD,QAAD,OAEJG,EAAAH,QAAA/J,cAACkvD,EAAAnlD,QAAD,KACIG,EAAAH,QAAA/J,cAACmvD,EAAAplD,QAAD,KACIG,EAAAH,QAAA/J,cAACovD,EAAArlD,QAAD,MACAG,EAAAH,QAAA/J,cAACqvD,EAAAtlD,QAAD,MACAG,EAAAH,QAAA/J,cAACsvD,EAAAvlD,SAAa60C,SAAUxc,YAAUE,aAEtCp4B,EAAAH,QAAA/J,cAACuvD,EAAAxlD,QAAD,OAGJG,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,UACdc,EAAAH,QAAA/J,cAACwvD,EAAAzlD,QAAD,WAOpB8kD,EAAI7nD,WACAwE,WAAYnG,UAAUxB,kBAGXgrD,kFC3Cf,IAAA92B,EAAAl5B,EAAA,cAOoB,WAChB,IAAM4wD,aAA0B5xD,OAAO0J,MAAK,EAAAwwB,EAAA2e,WAAmBhkC,KAAK,KAA9D,uBACAq8C,EAAW,IAAI38C,OAAOq9C,EAAc,MAAMC,KAAKvrD,OAAOmO,SAASS,UAErE,OAAIg8C,GAAYA,EAASrxD,OACdqxD,EAAS,GAGb,4GCfX,wDAAAlwD,EAAA,QAEqB8wD,cACjB,SAAAA,EAAY1qD,gGAAOqB,CAAAxB,KAAA6qD,GAAA,IAAAljD,mKAAA7F,CAAA9B,MAAA6qD,EAAA9oD,WAAAhJ,OAAAiJ,eAAA6oD,IAAA3xD,KAAA8G,KACTG,IADS,OAAAwH,EAKnBmjD,kBAAoB,SAAC3tD,EAAOw8B,GACxBhyB,EAAK4V,UACDwtC,UAAU,EACV5tD,QACAw8B,UATWhyB,EAanBw4B,OAAS,kBAAMx4B,EAAK0V,MAAM0tC,SAElB3lD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,aACVqD,EAAK0V,MAAMlgB,MAAMqf,SAEtB7U,EAAKxH,MAAMT,UAhBfiI,EAAK0V,OAAU0tC,UAAU,GAFVpjD,qUADoBtF,UAAMvB,0BAA5B+pD,oKCFd5lD,kgBCAPlL,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,IACAixD,EAAAjxD,EAAA,IACA0U,EAAA1U,EAAA,GACA+zB,EAAA/zB,EAAA,QACAA,EAAA,MACA83B,EAAA93B,EAAA,QACAA,EAAA,6DAEMkxD,grBAAwB5oD,UAAMvB,0DAE5Bd,KAAKG,MAAMuiC,yDAIX1iC,KAAKG,MAAMwiC,6CAGN,IAAAnlB,EAYDxd,KAAKG,MAVL+qD,EAFC1tC,EAED0tC,mBACA/P,EAHC39B,EAGD29B,iBACAh+C,EAJCqgB,EAIDrgB,MACAyO,EALC4R,EAKD5R,SACA6P,EANC+B,EAMD/B,SACA6G,EAPC9E,EAOD8E,uBACA6oC,EARC3tC,EAQD2tC,YACAC,EATC5tC,EASD4tC,cACAC,EAVC7tC,EAUD6tC,aACAzrC,EAXCpC,EAWDoC,YAGA0rC,SAiCJ,OA9BIA,EADAnuD,EACeiI,EAAAH,QAAA/J,cAAA,SAAIiC,GACZse,EACQrW,EAAAH,QAAA/J,cAACqwD,EAAAtmD,QAAD,MAGAk2C,EAAiB57C,MAAM,EAAG,GAAGsI,IAAI,SAACgyC,GAAD,OAC5Cz0C,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGpjC,IAAKi7C,EAAmBp1C,GACxBw9B,KAAO4X,EAAmBM,gBAC1B/+C,QAAS,IACT8mC,YACIspB,MAAW,wCACXC,UAAW,6CACXC,KAAW,wCAEfvpB,eAAA,GAEA/8B,EAAAH,QAAA/J,cAACywD,EAAA1mD,QAAD5E,GACIurD,gBAAiBV,EACjBC,YAAaA,EACbC,cAAeA,EACfxrC,YAAaA,EACbhhB,IAAKi7C,EAAmBp1C,GACxBmH,SAAUA,GACNiuC,OAOhBz0C,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,oBAAsB4mD,yBAA0BvpC,KACvEld,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,4BAA2B,EAAAmK,EAAA2C,UAAS,cACpDhM,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,+BACVK,QAAS0mD,GAETjmD,EAAAH,QAAA/J,cAAC4yB,EAAAg+B,aAAD,QAGR1mD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAAC8vD,EAAAe,YACG7sB,OAAS3S,MAAO,OAAQC,OAAQ,QAChCw/B,UAAA,GAECV,IAGTlmD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BAEXc,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,+BAA+B4J,KAAK,gBAC7C9I,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cACX,EAAAmK,EAAA2C,UAAS,8BAStC65C,EAAgB/oD,WACZgpD,mBAAwB3qD,UAAUiF,OAClC21C,iBAAwBz+B,YAAcC,uBACtCjd,SAAwBa,UAAUgvB,IAClC3jB,SAAwBrL,UAAUiF,OAClCrI,MAAwBoD,UAAUiF,OAClCiW,SAAwBlb,UAAUkF,KAClCqzC,WAAwBv4C,UAAUkF,KAClC6c,uBAAwB/hB,UAAUkF,KAClC2lD,cAAwB7qD,UAAUmF,KAClCylD,YAAwB5qD,UAAUmF,KAClCg9B,QAAwBniC,UAAUmF,KAClCi9B,UAAwBpiC,UAAUmF,KAClCka,YAAwBrf,UAAUxB,OAClCssD,aAAwB9qD,UAAUmF,iBAGvB,EAAAmsB,EAAAlxB,SACX,SAAAU,GAAA,IAAGZ,EAAHY,EAAGZ,OAAQtH,EAAXkI,EAAWlI,QAASqH,EAApBa,EAAoBb,OAAQE,EAA5BW,EAA4BX,GAA5B,OACIkf,YAAwBnf,EAAOmf,YAC/BhU,SAAwBpL,EAAOoL,SAC/Bs/C,mBAAwB/xD,EAAQ2C,SAASqrB,YACzCg0B,iBAAwBhiD,EAAQgD,UAAUg/C,iBAC1Ch+C,MAAwBhE,EAAQgD,UAAUgB,MAC1Cse,SAAwBtiB,EAAQgD,UAAUsf,SAC1Cq9B,WAAwB3/C,EAAQgD,UAAU28C,WAC1CqS,YAAwBhyD,EAAQgD,UAAUgvD,YAC1CC,cAAwBjyD,EAAQgD,UAAU8vD,mBAC1CvpB,QAAwBvpC,EAAQgD,UAAUumC,QAC1CC,UAAwBxpC,EAAQgD,UAAUwmC,UAC1CrgB,uBAAwB5hB,EAAG4hB,uBAC3B+oC,aAAwB3qD,EAAGwrD,wBAdpB,CAgBbjB,8HCrIF,QAAAlxD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMoyD,EAAY,SAAA9qD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWyxB,EAAd10B,EAAc00B,cAAdq2B,EAAA/qD,EAA6BgrD,QAA7B,YAAA/uD,IAAA8uD,KAEVhnD,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKF,MAAM,8BAC/ElnB,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAW8wB,EAAe,eACrC1U,KAAK,OACLirC,YAAY,KACZ7/B,SAAS,UACT7uB,EAAE,2GAIVwH,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKF,MAAM,8BAC/ElnB,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAW8wB,EAAe,eACrC1U,KAAK,qBACLoL,SAAS,UACT7uB,EAAE,+GAKlBuuD,EAAUjqD,WACNoC,UAAe/D,UAAUiF,OACzBuwB,cAAex1B,UAAUiF,UAGpB2mD,sHC/BT,QAAApyD,EAAA,QACAA,EAAA,uDAEA,IAAMwyD,EAAoB,SAAAlrD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWyxB,EAAd10B,EAAc00B,cAAepxB,EAA7BtD,EAA6BsD,QAA7B,OACtBS,EAAAH,QAAA/J,cAAA,OACIoxB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPloB,UAAWA,EACXK,QAASA,GAETS,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWyxB,GAAiB,cAAe1U,KAAK,OAAOirC,YAAY,KAAK7/B,SAAS,UAAU7uB,EAAE,uZAI3G2uD,EAAkBrqD,WACdoC,UAAe/D,UAAUiF,OACzBuwB,cAAex1B,UAAUiF,OACzBb,QAAepE,UAAUmF,QAGpB6mD,yHCrBT,QAAAxyD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMyyD,EAAe,SAAAnrD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWK,EAAdtD,EAAcsD,QAAd,OACjBS,EAAAH,QAAA/J,cAAA,OACIoxB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPloB,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GACrCK,QAASA,GAETS,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,OAAOirC,YAAY,KAAK7/B,SAAS,UAAU7uB,EAAE,qMAIxF4uD,EAAatqD,WACToC,UAAW/D,UAAUiF,OACrBb,QAAWpE,UAAUmF,QAGhB8mD,6HCrBT,QAAAzyD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM0yD,EAAwB,SAAAprD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWyxB,EAAd10B,EAAc00B,cAAd,OAC1B3wB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACjF9b,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWyxB,GAAiB,cAAe1U,KAAK,qBAAqBoL,SAAS,UAAU7uB,EAAE,mNAIxG6uD,EAAsBvqD,WAClBoC,UAAe/D,UAAUiF,OACzBuwB,cAAex1B,UAAUiF,UAGpBinD,uICfT,QAAA1yD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM2yD,EAAyB,SAAArrD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWyxB,EAAd10B,EAAc00B,cAAd,OAC3B3wB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACjF9b,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWyxB,GAAiB,cAAe1U,KAAK,qBAAqBoL,SAAS,UAAU7uB,EAAE,gNAIxG8uD,EAAuBxqD,WACnBoC,UAAe/D,UAAUiF,OACzBuwB,cAAex1B,UAAUiF,UAGpBknD,iICfT,QAAA3yD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM4yD,EAAkB,SAAAtrD,GAAyB,IAAtBrE,EAAsBqE,EAAtBrE,KAAMsH,EAAgBjD,EAAhBiD,UACzBsoD,SACJ,GAAI5vD,EACA,OAAQA,GACJ,IAAK,KACD4vD,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOyrC,KAAK,UAAUlvD,EAAE,iBACnCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,kBACtCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO42B,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,QAI3G,MACJ,IAAK,KACDg/B,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,8BACtCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,KAAG4xD,KAAK,WACJ1nD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUzjB,EAAE,gCACvBwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uJAAuJs4B,OAAO,UAAU5U,YAAY,SAC5Llc,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUzjB,EAAE,sNAE3BwH,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO42B,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,QAI3G,MACJ,IAAK,KACDg/B,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,mBACtCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOyrC,KAAK,UAAUlvD,EAAE,iBACnCwH,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO42B,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,QAI3G,MACJ,IAAK,KACDg/B,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOyrC,KAAK,UAAUlvD,EAAE,iBACnCwH,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO42B,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,QAI3G,MACJ,IAAK,KACDg/B,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,mBACtCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOyrC,KAAK,UAAUlvD,EAAE,iBACnCwH,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO42B,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,QAI3G,MACJ,IAAK,KACDg/B,EACIxnD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,WACRrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uFAAuFyjB,KAAK,YACpGjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,mFAAmFyjB,KAAK,UAEpGjc,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAOxI,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAGxF,MACJ,IAAK,KACDg/B,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,kBACtCwH,EAAAH,QAAA/J,cAAA,UAAQg7B,OAAO,UAAU42B,KAAK,UAAU3rC,GAAG,IAAIC,GAAG,IAAIjjB,EAAE,QACxDiH,EAAAH,QAAA/J,cAAA,KAAG4xD,KAAK,WACJ1nD,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8IAA8IyjB,KAAK,SAC3Jjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,4EAA4EyjB,KAAK,aAE7Fjc,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO42B,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,QAI3G,MACJ,IAAK,KACDg/B,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOyrC,KAAK,UAAUlvD,EAAE,iBACnCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,kBACtCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO42B,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,QAI3G,MACJ,IAAK,KACDg/B,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,OAAKmmB,KAAK,UAAUwrC,UAAU,OAC9BznD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOyrC,KAAK,UAAUlvD,EAAE,kBACnCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,iBACtCwH,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO42B,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,QAI3G,MACJ,IAAK,KACDg/B,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,OAAKmmB,KAAK,UAAUwrC,UAAU,OAC9BznD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUyrC,KAAK,UAAUlvD,EAAE,iHACtCwH,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO42B,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,QAI3G,MACJ,IAAK,QACDg/B,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO7U,KAAK,UAAUyrC,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,MAC9GxoB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,6uBAA6uByjB,KAAK,OAAOyrC,KAAK,cAIlxB,MACJ,IAAK,QACDF,EACIxnD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI8nB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAE3CxoB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,IAAI4c,KAAK,QACdjc,EAAAH,QAAA/J,cAAA,OAAK2xD,UAAU,QAEnBznD,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAO7U,KAAK,UAAUyrC,KAAK,UAAUp/B,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,MAC9GxoB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wxDAAwxDyjB,KAAK,OAAOyrC,KAAK,cAI7zD,MACJ,QACIF,EACIxnD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,WACRrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0JAA0JyjB,KAAK,YACvKjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0TAA0TyjB,KAAK,SACvUjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,kVAAkVyjB,KAAK,aAEnWjc,EAAAH,QAAA/J,cAAA,QAAM6xD,cAAc,MAAM72B,OAAO,OAAOxI,EAAE,KAAKC,EAAE,KAAKpB,MAAM,KAAKC,OAAO,KAAKoB,GAAG,OAMpG,OACIxoB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,YAAYoL,MAAM,8BAClGsgC,IAMbD,EAAgBzqD,WACZoC,UAAW/D,UAAUiF,OACrBxI,KAAWuD,UAAUiF,UAGhBmnD,oHCtPT,QAAA5yD,EAAA,QACAA,EAAA,uDAEA,IAAMizD,EAAY,SAAA3rD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWK,EAAdtD,EAAcsD,QAAd,OACdS,EAAAH,QAAA/J,cAAA,OACIoJ,UAAWA,QAAahH,EACxBqH,QAASA,EACT2nB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPtL,QAAQ,aAER9b,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,qPAAqPyjB,KAAK,UAAUoL,SAAS,cAI7RugC,EAAU9qD,WACNoC,UAAW/D,UAAUiF,OACrBb,QAAWpE,UAAUmF,QAGhBsnD,oHCrBT,QAAAjzD,EAAA,QACAA,EAAA,uDAEA,IAAMqhC,EAAkB,SAAA/5B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACpBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACzF9b,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WAAUrnB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,IAAIC,GAAG,IAAIjjB,EAAE,IAAIkjB,KAAK,YAC/Djc,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoM,UAAU,2BACrBroB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,MAAMC,GAAG,IAAIjjB,EAAE,MAC1BiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,6DAMxBw9B,EAAgBl5B,WACZoC,UAAW/D,UAAUiF,UAGhB41B,mHClBT,QAAArhC,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMsyB,EAAW,SAAAhrB,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACbc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACpH9b,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,UAAUpL,KAAK,QACvBjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oBACRwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kKAAkKyjB,KAAK,eAKnNgL,EAASnqB,WACLoC,UAAW/D,UAAUiF,UAGhB6mB,gHCjBT,QAAAtyB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM+xD,EAAe,SAAAzqD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACjBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACpH9b,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,OAAOirC,YAAY,MAAM7/B,SAAS,UAAU7uB,EAAE,mBAIzFkuD,EAAa5pD,WACToC,UAAW/D,UAAUiF,UAGhBsmD,gHCdT,QAAA/xD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMkzD,EAAW,SAAA5rD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACbc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYgoB,MAAM,6BAA6BpL,QAAQ,aAC7F9b,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,gBAAgB+c,KAAK,OAAOoL,SAAS,UAAUyJ,OAAO,WAC/D9wB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uFACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wEAKpBqvD,EAAS/qD,WACLoC,UAAW/D,UAAUiF,UAGhBynD,+GCjBT,QAAAlzD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMmzD,EAAc,SAAA7rD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAChBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,YAAYoL,MAAM,8BACnGlnB,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMg7B,OAAO,UAAUxI,EAAE,KAAKC,EAAE,MAAMpB,MAAM,KAAKC,OAAO,IAAIoB,GAAG,MAC/DxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUzjB,EAAE,kBACvBwH,EAAAH,QAAA/J,cAAA,QAAMg7B,OAAO,UAAUt4B,EAAE,qBACzBwH,EAAAH,QAAA/J,cAAA,QAAMg7B,OAAO,UAAUxI,EAAE,MAAMC,EAAE,MAAMpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,MAC/DxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUzjB,EAAE,kBACvBwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUqM,EAAE,KAAKC,EAAE,IAAIpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,OAC1DxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUqM,EAAE,KAAKC,EAAE,IAAIpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,OAC1DxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUqM,EAAE,IAAIC,EAAE,IAAIpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,OACzDxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUqM,EAAE,IAAIC,EAAE,IAAIpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,OACzDxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUqM,EAAE,IAAIC,EAAE,IAAIpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,OACzDxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUqM,EAAE,IAAIC,EAAE,IAAIpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,OACzDxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUqM,EAAE,IAAIC,EAAE,IAAIpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,OACzDxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUqM,EAAE,IAAIC,EAAE,IAAIpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,OACzDxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUqM,EAAE,IAAIC,EAAE,IAAIpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,OACzDxoB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUqM,EAAE,IAAIC,EAAE,IAAIpB,MAAM,IAAIC,OAAO,IAAIoB,GAAG,UAKrEs/B,EAAYhrD,WACRoC,UAAW/D,UAAUiF,UAGhB0nD,oHC9BT,QAAAnzD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMozD,EAAgB,SAAA9rD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAClBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,YAAYoL,MAAM,8BACnGlnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,gDAAgDyjB,KAAK,OAAOoL,SAAS,cAI7G0gC,EAAcjrD,WACVoC,UAAW/D,UAAUiF,UAGhB2nD,sHCdT,QAAApzD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMu+B,EAAgB,SAAAj3B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAClBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACpH9b,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOirC,YAAY,OAAO1uD,EAAE,+MACvCwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOoL,SAAS,UAAU7uB,EAAE,qTAKnD06B,EAAcp2B,WACVoC,UAAW/D,UAAUiF,UAGhB8yB,sHCjBT,QAAAv+B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMw+B,EAAgB,SAAAl3B,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAClBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,YAAYoL,MAAM,8BACnGlnB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAc+c,KAAK,OAAOoL,SAAS,WAC5CrnB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,gBAAgB4xB,OAAO,WAChC9wB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,qIAEZwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,qKAAqKyjB,KAAK,eAKtNkX,EAAcr2B,WACVoC,UAAW/D,UAAUiF,UAGhB+yB,kHCnBT,QAAAx+B,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMqzD,EAAY,SAAA/rD,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACdc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,YAAYoL,MAAM,8BACnGlnB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,8BAA8B4xB,OAAO,UAAU7U,KAAK,OAAOoL,SAAS,WAC7ErnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAA0B1G,EAAE,0KAKxDwvD,EAAUlrD,WACNoC,UAAW/D,UAAUiF,UAGhB4nD,2FChBT,QAAArzD,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,MACAqtB,EAAArtB,EAAA,SACAA,EAAA,SACAA,EAAA,MACAszD,EAAAtzD,EAAA,SACAA,EAAA,wDAGA,IAAMuzD,EAAsB,SAAAjsD,GA0BtB,IAzBFuqD,EAyBEvqD,EAzBFuqD,gBACA33C,EAwBE5S,EAxBF4S,QACA3P,EAuBEjD,EAvBFiD,UACAsH,EAsBEvK,EAtBFuK,SACAoT,EAqBE3d,EArBF2d,SACA1O,EAoBEjP,EApBFiP,cACA6lC,EAmBE90C,EAnBF80C,WACAx+B,EAkBEtW,EAlBFsW,YACAlT,EAiBEpD,EAjBFoD,GACAm2C,EAgBEv5C,EAhBFu5C,QACAZ,EAeE34C,EAfF24C,WACA/0B,EAcE5jB,EAdF4jB,iBACAi1B,EAaE74C,EAbF64C,YACAe,EAYE55C,EAZF45C,SACAxG,EAWEpzC,EAXFozC,cACA0W,EAUE9pD,EAVF8pD,YACAC,EASE/pD,EATF+pD,cACA3xD,EAQE4H,EARF5H,OACAmrB,EAOEvjB,EAPFujB,UACAhF,EAMEve,EANFue,YACA+D,EAKEtiB,EALFsiB,OACA22B,EAIEj5C,EAJFi5C,WACAt9C,EAGEqE,EAHFrE,KACAm9C,EAEE94C,EAFF84C,gBACAC,EACE/4C,EADF+4C,gBAEMmT,GAAa,EAAAnmC,EAAAomC,mBAAkB5tC,EAAa60B,EAAe98B,GACjE,OACIvS,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,iCAAkCX,IACzDc,EAAAH,QAAA/J,cAACuyD,EAAAxoD,SACGR,GAAIA,EACJ2mD,cAAeA,EACf3xD,OAAQA,IAEZ2L,EAAAH,QAAA/J,cAACwyD,EAAAzoD,SACGX,WAAW,EAAAU,EAAAC,SACP,yBACI0oD,gCAAkCluC,SAASmsC,KAAqBnnD,EAChEmpD,+BAAkCL,GAAc,KAAQ9zD,EACxDo0D,gCAAkCN,EAAa,IAAMA,GAAc,KAAQ9zD,EAC3Eq0D,6BAAkCP,EAAa,KAAQ9zD,IAG/Dg9B,IAAI,EAAA42B,EAAAnmC,iBAAgBziB,IAEpBW,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,8BACA,iDAGAG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0CACXc,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SACP,mBADO,yBAEiBk1C,GAAmB,cAGnD/0C,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,iCAAiC81C,IAErDh1C,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BACXc,EAAAH,QAAA/J,cAAC6yD,EAAA9oD,SAAiBjI,KAAMA,MAGhCoI,EAAAH,QAAA/J,cAAC8yD,EAAA/oD,SACGgtB,eAAgBta,EAChB41C,WAAYA,EACZU,YAAa3T,EACb4T,aAAez0D,IAEnB2L,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,8BACA,8CAGAG,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,qCACA,8CAGC,EAAAwJ,EAAA2C,UAAS,mBAEdhM,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,oCACA,6CAGC,EAAAwJ,EAAA2C,UAAS,sBAEdhM,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,sCACIkpD,+CAAiDjU,EAAc,EAC/DkU,+CAAiDlU,EAAc,KAGnE90C,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQQ,KAAKC,IAAI+tC,GAActuC,SAAUA,KAEpDxG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAA,wEAAmFqf,GACpFve,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQsuC,EAAYpuC,SAAUA,MAG7CxG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yCACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0CACX,EAAAmK,EAAA2C,UAAS,mBAEdhM,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQuvC,EAAUrvC,SAAUA,OAI/CxG,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,KAAOhd,EACP7pB,QAAS,IACT8mC,YACIspB,MAAW,4CACXC,UAAW,iDACXC,KAAW,4CAEfvpB,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sCACXc,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGX,UAAU,oCACVI,aAAcugB,EACdpgB,MAAM,EAAA4J,EAAA2C,UAAS,iBACfzM,QAAS,kBAAMwmD,EAAY1mD,QAIvCW,EAAAH,QAAA/J,cAACmzD,EAAAppD,SACGgP,QAASA,EACTq6C,kBAAmB1pC,EACnB2pC,oBAAqB9Z,EACrBz1B,SAAUA,EACV1O,cAAeA,EACf6lC,WAAYA,EACZmE,WAAYA,EACZ4T,aAAez0D,EACfmhD,QAASA,MAMzB0S,EAAoBprD,WAChB0pD,gBAAiBrrD,UAAUiF,OAC3ByO,QAAiB1T,UAAUkM,OAC3BnI,UAAiB/D,UAAUiF,OAC3BoG,SAAiBrL,UAAUiF,OAC3BwZ,SAAiBze,UAAUkM,OAC3B6D,cAAiB/P,UAAUiF,OAC3B2wC,WAAiB51C,UAAUkM,OAC3B4pC,UAAiB91C,UAAUkM,OAC3BkL,YAAiBpX,UAAUA,UAAUiM,WACjCjM,UAAUkM,OACVlM,UAAUiF,SAEdf,GAAkBlE,UAAUkM,OAC5BmuC,QAAkBr6C,UAAUkM,OAC5ButC,WAAkBz5C,UAAUkM,OAC5BwY,iBAAkB1kB,UAAUA,UAAUiM,WAClCjM,UAAUkM,OACVlM,UAAUkF,OAEd2lD,cAAe7qD,UAAUmF,KACzBylD,YAAe5qD,UAAUmF,KACzBw0C,YAAe35C,UAAUkM,OACzBwuC,SAAe16C,UAAUkM,OACzBgoC,cAAel0C,UAAUA,UAAUiM,WAC/BjM,UAAUkM,OACVlM,UAAUiF,SAEd/L,OAAW8G,UAAUiF,OACrBof,UAAWrkB,UAAUA,UAAUiM,WAC3BjM,UAAUkM,OACVlM,UAAUiF,SAEdoa,YAAiBrf,UAAUxB,OAC3B4kB,OAAiBpjB,UAAUiF,OAC3B80C,WAAiB/5C,UAAUkM,OAC3BzP,KAAiBuD,UAAUiF,OAC3B20C,gBAAiB55C,UAAUiF,OAC3B40C,gBAAiB75C,UAAUiF,kBAGhB8nD,wGCzMf,QAAAvzD,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM+/B,EAAgB,SAAAz4B,GAAyB,IAAtBrE,EAAsBqE,EAAtBrE,KAAMsH,EAAgBjD,EAAhBiD,UACvBkqD,SACJ,GAAIxxD,EACA,OAAQA,GACJ,IAAK,SACDwxD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,mEAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASoL,SAAS,UAAU7uB,EAAE,+FACjEwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,+DAGtD,MACJ,IAAK,SACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,kEAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASoL,SAAS,UAAU7uB,EAAE,+FACjEwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,4DAGtD,MACJ,IAAK,eACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,oIAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,4DAGlD,MACJ,IAAK,QACL,IAAK,OACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,iIAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,0CAGlD,MACJ,IAAK,cACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,qWAAqW0G,UAAU,cAAc+c,KAAK,UAASoL,SAAS,YAEha,MACJ,IAAK,YACD+hC,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,0MAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,wLAGlD,MACJ,IAAK,YACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,yIAC1CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,2IAGtD,MACJ,IAAK,aACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,6MAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,iNAGlD,MACJ,IAAK,WACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,sFAC1CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,4KAGtD,MACJ,IAAK,YACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,+CAC1CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,4KAGtD,MACJ,IAAK,aACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,8CAC1CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,iKAGtD,MACJ,IAAK,aACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAc+c,KAAK,UAASoL,SAAS,WAAUrnB,EAAAH,QAAA/J,cAAA,QAAMuyB,UAAU,kBAAkBE,EAAE,MAAMpB,MAAM,KAAKC,OAAO,IAAIoB,GAAG,OAC3HxoB,EAAAH,QAAA/J,cAAA,QAAMuyB,UAAU,mBAAmBE,EAAE,OAAOpB,MAAM,KAAKC,OAAO,IAAIoB,GAAG,OACrExoB,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,WAAUrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oHAC1BwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oDAIpB,MACJ,IAAK,cAWL,IAAK,eACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAc+c,KAAK,UAASoL,SAAS,WAAUrnB,EAAAH,QAAA/J,cAAA,QAAMuyB,UAAU,kBAAkBE,EAAE,MAAMpB,MAAM,KAAKC,OAAO,IAAIoB,GAAG,OAC3HxoB,EAAAH,QAAA/J,cAAA,QAAMuyB,UAAU,mBAAmBE,EAAE,OAAOpB,MAAM,KAAKC,OAAO,IAAIoB,GAAG,OACrExoB,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,WACRrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oHACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oDAIpB,MACJ,IAAK,cACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8CAA8C0G,UAAU,cAAc+c,KAAK,UAASoL,SAAS,YACrGrnB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAc+c,KAAK,UAASoL,SAAS,WAAUrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+CAChEwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,sPAEZwH,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAc+c,KAAK,UAASoL,SAAS,WAC9CrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,2GACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uEAIpB,MACJ,IAAK,aACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,6CAA6C0G,UAAU,cAAc+c,KAAK,UAASoL,SAAS,YACpGrnB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAc+c,KAAK,UAASoL,SAAS,WAC9CrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+CACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uPAEZwH,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAc+c,KAAK,UAASoL,SAAS,WAC9CrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0GACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uEAIpB,MACJ,IAAK,YACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wFAAwF0G,UAAU,cAAc+c,KAAK,UAASoL,SAAS,YAC/IrnB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAc+c,KAAK,UAASoL,SAAS,WAC9CrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,sGACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uPAEZwH,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,cAAc+c,KAAK,UAASoL,SAAS,WAC9CrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0EACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,sKAIpB,MACJ,IAAK,UACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,oLAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,wCAGlD,MACJ,IAAK,WACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,yKAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,yCAGlD,MACJ,IAAK,cACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,mIAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,wDAGlD,MACJ,IAAK,OACL,IAAK,MACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASzjB,EAAE,uIAC9CwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,YAAY+c,KAAK,OAAOzjB,EAAE,wCAGlD,MACJ,IAAK,QACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASoM,UAAU,qBAAqBE,EAAE,KAAKpB,MAAM,KAAKC,OAAO,IAAIoB,GAAG,OAC3GxoB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASoM,UAAU,oBAAoBE,EAAE,IAAIpB,MAAM,KAAKC,OAAO,IAAIoB,GAAG,OACzGxoB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,kHAAkH0G,UAAU,cAAc+c,KAAK,UAASoL,SAAS,YACzKrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8OAA8O0G,UAAU,cAAc+c,KAAK,UAASoL,SAAS,aAG7S,MACJ,IAAK,WACD+hC,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc1G,EAAE,kBAChCwH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASoM,UAAU,mBAAmBE,EAAE,OAAOpB,MAAM,KAAKC,OAAO,IAAIoB,GAAG,OAC3GxoB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,cAAc+c,KAAK,UAASoM,UAAU,kBAAkBE,EAAE,MAAMpB,MAAM,KAAKC,OAAO,IAAIoB,GAAG,OACzGxoB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wHAAwH0G,UAAU,cAAc+c,KAAK,UAASoL,SAAS,YAC/KrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+KAA+K0G,UAAU,cAAc+c,KAAK,UAASoL,SAAS,aAG9O,MACJ,QACI+hC,EACIppD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUoL,SAAS,UAAU7uB,EAAE,gVAK1D,OACIwH,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,kBAAmBX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,YAAYoL,MAAM,8BACtGkiC,IAMb10B,EAAc53B,WACVoC,UAAW/D,UAAUiF,OACrBxI,KAAWuD,UAAUiF,UAGhBs0B,kLCxQF70B,iGCAP,QAAAlL,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEA,IAAM00D,EAAiB,SAAAptD,GAOjB,IANFiD,EAMEjD,EANFiD,UACA4pD,EAKE7sD,EALF6sD,WACAD,EAIE5sD,EAJF4sD,YACAS,EAGErtD,EAHFqtD,aACAnB,EAEElsD,EAFFksD,WACAt7B,EACE5wB,EADF4wB,eAEA,OAAKs7B,IAAeU,GAAeC,IAAej8B,EAAuB7sB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BAEpFc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,kBAAmBX,IAExC2pD,GAAe,EACb7oD,EAAAH,QAAA/J,cAACyzD,EAAA1pD,SACGypD,aAAcA,EACdT,YAAaA,IAGjB7oD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,yCACZc,EAAAH,QAAA/J,cAAC0zD,EAAA3pD,SAAc6S,SAAUma,KAG7B7sB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,yBAClB4pD,+BAAkCtB,GAAc,GAChDuB,gCAAkCvB,EAAa,IAAMA,GAAc,GACnEwB,6BAAkCxB,EAAa,KAEnDruB,OAAS3S,MAAUghC,EAAV,WAUrCkB,EAAevsD,WACXoC,UAAgB/D,UAAUiF,OAC1BkpD,aAAgBnuD,UAAUkM,OAC1ByhD,WAAgB3tD,UAAUkF,KAC1B8nD,WAAgBhtD,UAAUkM,OAC1BwlB,eAAgB1xB,UAAUiM,WACtBjM,UAAUkM,OACVlM,UAAUiF,SAEdyoD,YAAa1tD,UAAUkM,kBAGZgiD,iFC1Df,QAAA10D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,sDAEA,IAAMi1D,EAAgB,SAAA3tD,GAAmC,IAAhCqtD,EAAgCrtD,EAAhCqtD,aAAcT,EAAkB5sD,EAAlB4sD,YAC7BgB,mIAAgBrtD,MAAMqsD,GAAaxrD,SACzC,OAEI2C,EAAAH,QAAA/J,cAAA,OAAKgkC,OAAS9gB,QAAS,SACnBhZ,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,mCACX,EAAAmK,EAAA2C,UAAS,YAAas9C,IAE3BtpD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iCACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACV2qD,EAAUpnD,IAAI,SAAA6xB,GAAA,OACXt0B,EAAAH,QAAA/J,cAAA,QACI0D,IAAK86B,EACLp1B,WAAW,EAAAU,EAAAC,SAAW,eAClBiqD,sBAAwBx1B,EAAM,IAAOja,SAASivC,GAC9CS,sBAAwBz1B,EAAM,EAAKja,SAASivC,aAU5EM,EAAc9sD,WACVwsD,aAAcnuD,UAAUkM,OACxBwhD,YAAc1tD,UAAUkM,kBAGbuiD,8UCnCfj1D,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,IACA+zB,EAAA/zB,EAAA,IACA0U,EAAA1U,EAAA,GACA4U,EAAA5U,EAAA,8NAIMq1D,6SACF/xC,OACIukB,SAAS,KAGbytB,cAAgB,WACZ1nD,EAAK4V,UAAWqkB,SAAUj6B,EAAK0V,MAAMukB,qVANjBv/B,UAAM08B,mDASrB,IAAAvhB,EAWDxd,KAAKG,MATL8T,EAFCuJ,EAEDvJ,QACAq6C,EAHC9wC,EAGD8wC,kBACAC,EAJC/wC,EAID+wC,oBACAvvC,EALCxB,EAKDwB,SACA1O,EANCkN,EAMDlN,cACA6lC,EAPC34B,EAOD24B,WACA+X,EARC1wC,EAQD0wC,WACAtT,EATCp9B,EASDo9B,QACAN,EAVC98B,EAUD88B,WAEJ,OAAK4T,EAED9oD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACfc,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,GAAIjiC,KAAKqd,MAAMukB,QACfxmC,QAAS,IACT8mC,YACIspB,MAAW,iCACXC,UAAW,sCACXC,KAAW,iCAEfvpB,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,2BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BACX,EAAAmK,EAAA2C,UAAS,iBAEdhM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,yBACXs2C,IAGTx1C,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BACX,EAAAmK,EAAA2C,UAAS,aAEdhM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,yBACXg2C,EAAgBA,EAAhB,KAA8B,EAAA7rC,EAAA2C,UAAS,SAAgB4N,EAAvD,IAAmE1O,KAIhFlL,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BACX,EAAAmK,EAAA2C,UAAS,YAEdhM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,yBACX2P,EAAQk0C,QAAQ,KAGzB/iD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BACX,EAAAmK,EAAA2C,UAAS,eAEdhM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,yBACX6xC,EAAWgS,QAAQ,MAIhC/iD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BACX,EAAAmK,EAAA2C,UAAS,eAEdhM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BACX,EAAAqK,EAAA6nC,cAAY,EAAA7nC,EAAAioC,eAAc2X,MAGnCnpD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BACX,EAAAmK,EAAA2C,UAAS,aAEdhM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BACX,EAAAqK,EAAA6nC,cAAY,EAAA7nC,EAAAioC,eAAc0X,SAM/ClpD,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,0BAClBqqD,kCAAmCtvD,KAAKqd,MAAMukB,UAElDj9B,QAAS3E,KAAKqvD,eAEdjqD,EAAAH,QAAA/J,cAAC4yB,EAAAq+B,UAAD,QA7EY,cAoFhCiD,EAAcltD,WACV+R,QAAmB1T,UAAUkM,OAC7B6hD,kBAAmB/tD,UAAUA,UAAUiM,WACnCjM,UAAUkM,OACVlM,UAAUiF,SAEd+oD,oBAAqBhuD,UAAUA,UAAUiM,WACrCjM,UAAUkM,OACVlM,UAAUiF,SAEdwZ,SAAeze,UAAUkM,OACzB6D,cAAe/P,UAAUiF,OACzB2wC,WAAe51C,UAAUkM,OACzByhD,WAAe3tD,UAAUkF,KACzBm1C,QAAer6C,UAAUkM,OACzB6tC,WAAe/5C,UAAUkM,kBAGd2iD,iFCrIf,QAAAr1D,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,QACAA,EAAA,UACAA,EAAA,MACA0U,EAAA1U,EAAA,sDAEA,IAAMw1D,EAAgB,SAAAluD,GAAA,IAClBoD,EADkBpD,EAClBoD,GACA2mD,EAFkB/pD,EAElB+pD,cACA3xD,EAHkB4H,EAGlB5H,OAHkB,OAKlB2L,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,KAAOxoC,EACP2B,QAAS,IACT8mC,YACIspB,MAAW,uCACXC,UAAW,4CACXC,KAAW,uCAEfvpB,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,iCACvBuqD,qCAAmD,QAAX/1D,EACxCg2D,sCAAmD,SAAXh2D,KAGxC2L,EAAAH,QAAA/J,cAAA,QACIoJ,UAAU,oBACVK,QAAS,kBAAMymD,EAAc3mD,MAEjCW,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAW,mBACxByqD,uBAAqC,QAAXj2D,EAC1Bk2D,wBAAqC,SAAXl2D,KAKV,QAAXA,EACG2L,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACK,EAAAmC,EAAA2C,UAAS,OACVhM,EAAAH,QAAA/J,cAAC00D,EAAA3qD,SAAUX,UAAU,kBAGzBc,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACK,EAAAmC,EAAA2C,UAAS,QACVhM,EAAAH,QAAA/J,cAAC20D,EAAA5qD,SAAUX,UAAU,uBASrDirD,EAAcrtD,WACVuC,GAAelE,UAAUkM,OACzB2+C,cAAe7qD,UAAUmF,KACzBjM,OAAe8G,UAAUiF,kBAGd+pD,iFC3Df,wDAAAx1D,EAAA,IAJA,IAAIsG,EAAWtH,OAAO0O,QAAU,SAAUvK,GAAU,IAAK,IAAIxE,EAAI,EAAGA,EAAIgJ,UAAU9I,OAAQF,IAAK,CAAE,IAAIwuD,EAASxlD,UAAUhJ,GAAI,IAAK,IAAIkG,KAAOsoD,EAAcnuD,OAAOC,UAAUC,eAAeC,KAAKguD,EAAQtoD,KAAQ1B,EAAO0B,GAAOsoD,EAAOtoD,IAAY,OAAO1B,aAKvO,SAACmE,GAGXA,EADFyuD,OAFsB,IAIpB3vD,EAPN,SAAkCqQ,EAAK/N,GAAQ,IAAIvF,KAAa,IAAK,IAAIxE,KAAK8X,EAAW/N,EAAKkN,QAAQjX,IAAM,GAAkBK,OAAOC,UAAUC,eAAeC,KAAKsX,EAAK9X,KAAcwE,EAAOxE,GAAK8X,EAAI9X,IAAM,OAAOwE,EAOrMw5B,CAAyBr1B,GAAO,WAE5C,OAAOgB,UAAMnH,cACX,MACAmF,GAAWisB,MAAO,6BAA8BC,MAAO,KAAMC,OAAQ,KAAMtL,QAAS,aAAe/gB,GACnGkC,UAAMnH,cACJ,KACEmmB,KAAM,OAAQoL,SAAU,WAC1BpqB,UAAMnH,cAAc,UAAYimB,GAAI,IAAKC,GAAI,IAAKjjB,EAAG,IAAKkjB,KAAM,YAChEhf,UAAMnH,cAAc,QAAUmmB,KAAM,OAAQoL,SAAU,UAAW7uB,EAAG,gLCd1E,wDAAA7D,EAAA,IAJA,IAAIsG,EAAWtH,OAAO0O,QAAU,SAAUvK,GAAU,IAAK,IAAIxE,EAAI,EAAGA,EAAIgJ,UAAU9I,OAAQF,IAAK,CAAE,IAAIwuD,EAASxlD,UAAUhJ,GAAI,IAAK,IAAIkG,KAAOsoD,EAAcnuD,OAAOC,UAAUC,eAAeC,KAAKguD,EAAQtoD,KAAQ1B,EAAO0B,GAAOsoD,EAAOtoD,IAAY,OAAO1B,aAKvO,SAACmE,GAGXA,EADFyuD,OAFsB,IAIpB3vD,EAPN,SAAkCqQ,EAAK/N,GAAQ,IAAIvF,KAAa,IAAK,IAAIxE,KAAK8X,EAAW/N,EAAKkN,QAAQjX,IAAM,GAAkBK,OAAOC,UAAUC,eAAeC,KAAKsX,EAAK9X,KAAcwE,EAAOxE,GAAK8X,EAAI9X,IAAM,OAAOwE,EAOrMw5B,CAAyBr1B,GAAO,WAE5C,OAAOgB,UAAMnH,cACX,MACAmF,GAAWisB,MAAO,6BAA8BC,MAAO,KAAMC,OAAQ,KAAMtL,QAAS,aAAe/gB,GACnGkC,UAAMnH,cACJ,KACEmmB,KAAM,OAAQoL,SAAU,WAC1BpqB,UAAMnH,cAAc,UAAYimB,GAAI,IAAKC,GAAI,IAAKjjB,EAAG,IAAKkjB,KAAM,UAAWoL,SAAU,YACrFpqB,UAAMnH,cAAc,QAAUg7B,OAAQ,OAAQC,cAAe,QAASv4B,EAAG,2HClB/E7E,OAAA0J,KAAAstD,GAAAptD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA6xD,EAAAnxD,kHCAA,wDAAA7E,EAAA,KAGayzD,oBAAoB,SAAC31C,EAAY48B,EAAe98B,GACzD,IAAMq4C,EAAyBze,UAAOvyB,SAASuyB,UAAOvf,KAAKra,GAAaQ,KAAKo5B,UAAOvf,KAAKyiB,KAErF8Y,EADsBhc,UAAOvyB,SAASuyB,UAAOvf,KAAKra,GAAaQ,KAAKN,IACpC6jC,iBAAmBsU,EAAuBtU,iBAAoB,IAIlG,OAFI6R,EAAa,KAAKA,EAAa,GAE5BrhD,KAAK+jD,MAAM1C,sKCVftoD,8VCAPlL,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,IACAgM,EAAAhM,EAAA,OACAA,EAAA,KACA83B,EAAA93B,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMm2D,EAAa7tD,UAAM80B,KAAK,kBAAMz8B,QAAA+C,KAAA1D,EAAAO,EAAA,uBAAAP,EAAAO,EAAA,iBAAAyQ,KAAAhR,EAAAwE,EAAAM,KAAA,eAE9B25B,grBAAcn2B,UAAMvB,0DAElBd,KAAKG,MAAMuiC,yDAIX1iC,KAAKG,MAAMwiC,6CAIX,IAAMxb,GAAc,EAAAphB,EAAAqK,kBAAiBpQ,KAAKG,MAAMs5B,eAAgB,MAAO,gBACjE02B,EAAqBnwD,KAAKG,MAAMu4B,UAAY,iBAAmB,kCAC/D03B,GAAgC,aAAc,WAAY,cAAc50B,SAASx7B,KAAKG,MAAMoP,eAElG,OACInK,EAAAH,QAAA/J,cAAA,OAAKuJ,GAAG,kBAAkBH,UAAU,mBAChCc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mBACTtE,KAAKG,MAAM8S,QACT7N,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMorD,UAASC,SAAUlrD,EAAAH,QAAA/J,cAACm/B,EAAAp1B,QAAD,OACtBG,EAAAH,QAAA/J,cAACg1D,GACGhP,SAAUlhD,KAAKG,MAAM+gD,SACrBtd,QAASx+B,EAAAH,QAAA/J,cAACq1D,EAAAtrD,SAAQ4+B,eAAA,IAClB2sB,eAAgBxwD,KAAKG,MAAMqwD,eAC3Bv9C,OAAQjT,KAAKG,MAAM8S,OACnB6P,WAAY9iB,KAAKG,MAAM2iB,WACvBC,YAAa/iB,KAAKG,MAAM4iB,YACxB0tC,gBAAiBzwD,KAAKG,MAAMswD,gBAC5BC,kBAAmB1wD,KAAKG,MAAMuwD,kBAC9BN,6BAA8BA,KAI1ChrD,EAAAH,QAAA/J,cAACy1D,EAAA1rD,QAAD,OAEJG,EAAAH,QAAA/J,cAAA,OACIoJ,UAAW6rD,GAEX/qD,EAAAH,QAAA/J,cAAC01D,EAAA3rD,SACGyzB,UAAW14B,KAAKG,MAAMu4B,UACtBm4B,sBAAuB1pC,EACvBgS,iBAAkBn5B,KAAKG,MAAMg5B,mBAEjC/zB,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,KAAM9a,EACN/rB,QAAS,IACT8mC,YACIspB,MAAW,kBACXC,UAAW,uBACXC,KAAW,kBAEfvpB,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACXc,EAAAH,QAAA/J,cAAC41D,EAAA7rD,SACGkiB,YAAaA,EACbmc,gBAAiBtjC,KAAKG,MAAMmjC,+BAU5D9K,EAAMt2B,WACFg/C,SAAkB3gD,UAAUkM,OAC5B8C,cAAkBhP,UAAUiF,OAC5Bg1C,iBAAkBj6C,UAAUkF,KAC5BizB,UAAkBn4B,UAAUkF,KAC5B0zB,iBAAkB54B,UAAUkF,KAC5B69B,gBAAkB/iC,UAAUmF,KAC5Bg9B,QAAkBniC,UAAUmF,KAC5B8qD,eAAkBjwD,UAAUmF,KAC5Bi9B,UAAkBpiC,UAAUmF,KAC5B+zB,cAAkBl5B,UAAUxB,OAC5BkU,OAAkB1S,UAAUiF,mBAGjB,EAAAqsB,EAAAlxB,SACX,SAAAU,GAAA,IAAGlI,EAAHkI,EAAGlI,QAASuH,EAAZW,EAAYX,GAAZ,OACIoiB,WAAmB3pB,EAAQqD,YAAYsmB,WACvCC,YAAmB5pB,EAAQqD,YAAYumB,YACvCy3B,iBAAmBrhD,EAAQqD,YAAYg+C,iBACvCiW,gBAAmBt3D,EAAQqD,YAAYi0D,gBACvCC,kBAAmBv3D,EAAQqD,YAAYk0D,kBACvCxP,SAAmB/nD,EAAQ0nB,MAAMqgC,SACjC3xC,cAAmBpW,EAAQ0nB,MAAMtR,cACjC4pB,iBAAmBhgC,EAAQ0nB,MAAMsY,iBACjCmK,gBAAmBnqC,EAAQ0nB,MAAMyiB,gBACjCZ,QAAmBvpC,EAAQ0nB,MAAM6hB,QACjC8tB,eAAmBr3D,EAAQ0nB,MAAM1G,SACjCwoB,UAAmBxpC,EAAQ0nB,MAAM8hB,UACjClJ,cAAmBtgC,EAAQ0nB,MAAM4Y,cACjCxmB,OAAmB9Z,EAAQ0nB,MAAM5N,OACjCylB,UAAmBh4B,EAAGg4B,YAhBf,CAkBbF,07BC9GF1yB,EAAA/L,EAAA,OACAA,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,8NAEMg3D,6SACF1zC,OAAkB2d,YAAY,KAC9Bg2B,cAAgBrpD,EAAKspD,gBAAgBpyD,KAArB8I,KAChBmoD,QACIoB,WACIC,SAAY,OACZC,WAAY,OACZtX,SAAY,WACZuX,OAAY,EACZC,WAAY,qBACZ5kC,MAAY,OACZ6kC,QAAY,OACZC,UAAY,QACZpzC,QAAY,OACZqzC,UAAY,OACZjlC,OAAY,QAEhBklC,WACIhlC,MAAO,kBAIfilC,kBAAoB,WAChB52D,SAASo0B,iBAAiB,QAASxnB,EAAKqpD,eAAe,MAG3DY,qBAAuB,WACnB72D,SAASq0B,oBAAoB,QAASznB,EAAKqpD,0VA3BhC3uD,UAAMvB,sDA8BLxG,GACRA,EAAEu3D,SAAyB,KAAdv3D,EAAEihB,SACfvb,KAAKud,UAAWyd,YAAah7B,KAAKqd,MAAM2d,8CAIvC,IAAAz5B,EAAAvB,KACL,OACIoF,EAAAH,QAAA/J,cAAA,QAAMuJ,GAAG,aAAay6B,MAAOnmC,OAAO0O,UAAWzH,KAAK8vD,OAAOoB,WAAa9yC,QAASpe,KAAKqd,MAAM2d,WAAa,QAAU,UAC9Gh7B,KAAKG,MAAM2xD,QAAQ1yC,OAAOvX,IAAI,SAAA2K,GAAA,IAAAK,EAAAJ,EAAAD,EAAA,GAAE1J,EAAF+J,EAAA,GAAKk/C,EAALl/C,EAAA,SAAkB,eAAN/J,GAAmC,mBAANipD,GAAoB3sD,EAAAH,QAAA/J,cAAA,OAAK0D,IAAKkK,GAAG1D,EAAAH,QAAA/J,cAAA,QAAMgkC,MAAO39B,EAAKuuD,OAAO4B,WAAY5oD,EAArC,KAAb,IAA8DipD,GAAkB,iBAAb,IAAOA,EAAP,YAAA/7C,EAAO+7C,IAAiB5pD,KAAKC,WAAU,EAAAtC,EAAAwB,MAAKyqD,GAAI,KAAM,GAAKA,eAM1OhB,EAAK7uD,WACD4vD,QAASvxD,UAAU4c,kBAGR,EAAA0U,EAAAlxB,SACX,SAAAqxD,GAAA,IAAG74D,EAAH64D,EAAG74D,QAAH,OACI24D,QAAS/4D,OAAO+4D,QAAQ34D,EAAQ0nB,SAFzB,CAIbkwC,kFC1DF,QAAAh3D,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEA,IAAMk4D,EAAa,SAAA5wD,GAAA,IACfwvD,EADexvD,EACfwvD,oBACAn4B,EAFer3B,EAEfq3B,UACAS,EAHe93B,EAGf83B,iBAHe,OAKfT,EACItzB,EAAAH,QAAA/J,cAACg3D,EAAAjtD,SACGk0B,iBAAkBA,IAGtB/zB,EAAAH,QAAA/J,cAACi3D,EAAAltD,SACG4rD,oBAAqBA,EACrB13B,iBAAkBA,KAI9B84B,EAAW/vD,WACP2uD,oBAAqBtwD,UAAUkF,KAC/BizB,UAAqBn4B,UAAUkF,KAC/B0zB,iBAAqB54B,UAAUkF,gBAGpBwsD,iFC3Bf,QAAAl4D,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMq4D,EAAc,SAAA/wD,GAAA,IAAGwvD,EAAHxvD,EAAGwvD,oBAAqB13B,EAAxB93B,EAAwB83B,iBAAxB,OAChB/zB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,kBACvBotD,2BAA4BxB,KAG1B13B,GAAqB03B,EAGnBzrD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACg/B,EAAAj1B,SAASX,UAAU,yCAChBc,EAAAH,QAAA/J,cAACo3D,EAAArtD,QAAD,OAEJG,EAAAH,QAAA/J,cAACq3D,EAAAttD,QAAD,MACAG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAACs3D,EAAAvtD,QAAD,QARRG,EAAAH,QAAA/J,cAACm/B,EAAAp1B,QAAD,QAeZmtD,EAAYlwD,WACR2uD,oBAAqBtwD,UAAUkF,KAC/B0zB,iBAAqB54B,UAAUkF,gBAGpB2sD,8UCnCfr4D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA04D,EAAA14D,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,6DAEM24D,cACF,SAAAA,EAAYvyD,gGAAOqB,CAAAxB,KAAA0yD,GAAA,IAAA/qD,mKAAA7F,CAAA9B,MAAA0yD,EAAA3wD,WAAAhJ,OAAAiJ,eAAA0wD,IAAAx5D,KAAA8G,KACTG,IADS,OAAAwH,EAiBnBgrD,aAAe,SAACrhD,EAAMhX,GACdgX,EAAKhT,QAAUqJ,EAAKxH,MAAM7B,OAAyB,cAAhBhE,EAAE4C,OAAOuH,IAC5CkD,EAAKxH,MAAMga,UAAWjd,QAAUW,KAAM8J,EAAKxH,MAAMtC,KAAMS,MAAOgT,EAAKhT,SAEvEqJ,EAAKirD,oBArBUjrD,EAwBnBkrD,oBAAsB,SAACvhD,GACfA,EAAKhT,QAAUqJ,EAAKxH,MAAM7B,OAC1BqJ,EAAKxH,MAAMga,UAAWjd,QAAUW,KAAM8J,EAAKxH,MAAMtC,KAAMS,MAAOgT,EAAKhT,SAEvEqJ,EAAKmrD,wBA5BUnrD,EA+BnBorD,gBAAkB,SAACzhD,GACf3J,EAAK4V,UAAWjM,SAChB3J,EAAKmrD,uBACLnrD,EAAKirD,oBAlCUjrD,EAqCnBqrD,sBAAwB,SAAC1hD,GACrB3J,EAAK4V,UAAWjM,UAtCD3J,EAyCnBsrD,gBAAkB,SAACC,GACf,IAAMC,EAAmBD,EAAet6D,OAClC0Y,EAAO3J,EAAK0V,MAAM/L,KAElB8hD,EADeF,EAAe3Y,UAAU,SAAC8Y,GAAD,OAAeA,EAAU/0D,QAAUgT,EAAKhT,QACrD,EAC7B80D,EAAYD,EACZxrD,EAAKqrD,sBAAsBE,EAAeE,IAE1CzrD,EAAKqrD,sBAAsBE,EAAe,KAjD/BvrD,EAqDnB2rD,gBAAkB,SAACJ,GACf,IAAMC,EAAmBD,EAAet6D,OAClC0Y,EAAO3J,EAAK0V,MAAM/L,KAElBiiD,EADeL,EAAe3Y,UAAU,SAAC8Y,GAAD,OAAeA,EAAU/0D,QAAUgT,EAAKhT,QACrD,EAC7Bi1D,GAAa,EACb5rD,EAAKqrD,sBAAsBE,EAAeK,IAE1C5rD,EAAKqrD,sBAAsBE,EAAeC,EAAmB,KA7DlDxrD,EAiEnB6rD,cAAgB,SAACjuD,GACboC,EAAK8rD,YAAcluD,GAlEJoC,EAqEnB+5B,mBAAqB,SAAChlC,GACdiL,EAAK8rD,cAAgB9rD,EAAK8rD,YAAY9xB,SAASjlC,EAAMQ,SAAWyK,EAAK0V,MAAMq2C,eAC3E/rD,EAAK4V,UAAWm2C,gBAAgB,IACzB/rD,EAAK8rD,cAAgB9rD,EAAK8rD,YAAY9xB,SAASjlC,EAAMQ,SAAWyK,EAAK0V,MAAMs2C,qBAClFhsD,EAAK4V,UAAWo2C,qBAAqB,EAAOD,gBAAgB,KAzEjD/rD,EA6EnBmrD,qBAAuB,WACnBnrD,EAAK4V,SAAS,SAACF,GAAD,OACVs2C,qBAAsBt2C,EAAMs2C,wBA/EjBhsD,EAmFnBirD,iBAAmB,WACfjrD,EAAK4V,UAAWm2C,gBAAiB/rD,EAAK0V,MAAMq2C,kBApF7B/rD,EAuFnBisD,cAAgB,WACZjsD,EAAK4V,SAAS,SAACF,GAAD,OAAcq2C,gBAAiBr2C,EAAMq2C,eAAgBC,qBAAqB,MAxFzEhsD,EA2FnBksD,kBAAoB,WAChBlsD,EAAK4V,SAAS,SAACF,GAAD,OAAcq2C,gBAAiBr2C,EAAMq2C,eAAgBC,qBAAqB,MA5FzEhsD,EA+FnBmsD,eAAiB,WAAM,IAAAC,EACKpsD,EAAKxH,MAArB+V,EADW69C,EACX79C,KAAM5X,EADKy1D,EACLz1D,MAEVuG,EAAO,GAOX,OANIqR,GACAnd,OAAO0J,KAAKyT,GAAMiK,KAAK,SAAAvhB,GAEnB,OADAiG,EAJY,SAACsR,GAAD,OAAeA,EAAS/I,KAAK,SAAAkE,GAAA,OAAQA,EAAKhT,QAAUA,SAAcuG,KAIvEmvD,CAAY99C,EAAKtX,MAIzBiG,GAzGQ8C,EA4GnBssD,kBAAoB,WAChB,IAAMf,KACAh9C,EAAOvO,EAAKxH,MAAM+V,KAQxB,OANAnd,OAAO0J,KAAKyT,GAAMrO,IAAI,SAAAjJ,KAChB,SAAU,UAAU48B,SAAS58B,IAAQsX,EAAKtX,GAAKiJ,IAAI,SAAA/L,GAC7B,oBAAnBA,EAASwC,OAAgC40D,EAAep6D,KAAKgD,OAI/Do3D,GApHPvrD,EAAK0V,OACDq2C,gBAAqB,EACrBC,qBAAqB,EACrBriD,SALW3J,qUADUtF,UAAM08B,8DAW/BhkC,SAASo0B,iBAAiB,YAAanvB,KAAK0hC,mEAI5C3mC,SAASq0B,oBAAoB,YAAapvB,KAAK0hC,qDA4G/C,OACIt8B,EAAAH,QAAA/J,cAAA,OACIyE,IAAKK,KAAKwzD,cACVlvD,UAAW,uBACXM,SAAS,KAETQ,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,iCAClBivD,yCAA0Cl0D,KAAKqd,MAAMq2C,iBAEzD/uD,QAAS3E,KAAK4zD,eAEdxuD,EAAAH,QAAA/J,cAACu3D,EAAA0B,mBAAkBC,SAAUp0D,KAAKG,MAAM7B,MAAOgG,UAAU,uCACzDc,EAAAH,QAAA/J,cAAA,QAAM2C,KAAMmC,KAAKG,MAAMtC,KAAMS,MAAO0B,KAAKG,MAAM7B,OAC1C0B,KAAK8zD,mBAId1uD,EAAAH,QAAA/J,cAACm5D,EAAApvD,SACGyzB,UAAW14B,KAAKG,MAAMu4B,UACtBnlB,KAAMvT,KAAKqd,MAAMq2C,eACjBrkC,QAASrvB,KAAK4yD,kBAEdxtD,EAAAH,QAAA/J,cAACo5D,EAAArvD,SACGiR,KAAMlW,KAAKG,MAAM+V,KACjBrY,KAAMmC,KAAKG,MAAMtC,KACjBS,MAAO0B,KAAKG,MAAM7B,MAClBq0D,aAAc3yD,KAAK2yD,aACnBI,gBAAiB/yD,KAAK+yD,mBAG9B3tD,EAAAH,QAAA/J,cAACq5D,EAAAtvD,SACGyzB,UAAW14B,KAAKG,MAAMu4B,UACtBrJ,QAASrvB,KAAK+yD,gBACdx/C,KAAMvT,KAAKqd,MAAMs2C,oBACjBl+C,MAAOzV,KAAKqd,MAAM/L,KAAKzM,MAEvBO,EAAAH,QAAA/J,cAACs5D,EAAAvvD,SACG+tD,sBAAuBhzD,KAAKgzD,sBAC5BC,gBAAiBjzD,KAAKizD,gBACtBK,gBAAiBtzD,KAAKszD,gBACtB56B,UAAW14B,KAAKG,MAAMu4B,UACtBpnB,KAAMtR,KAAKqd,MAAM/L,KACjB4hD,eAAgBlzD,KAAKi0D,oBACrBJ,kBAAmB7zD,KAAK6zD,kBACxBhB,oBAAqB7yD,KAAK6yD,iCAQlDH,EAAmBxwD,WACfw2B,UAAWn4B,UAAUkF,KACrByQ,KAAW3V,UAAUxB,OACrBlB,KAAW0C,UAAUiF,OACrB2U,SAAW5Z,UAAUmF,KACrBpH,MAAWiC,UAAUiF,kBAGVktD,4GCjMf,QAAA34D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA++B,EAAA/+B,EAAA,wDAEA,IAAMo6D,EAAoB,SAAA9yD,GAA6B,IAA1B+yD,EAA0B/yD,EAA1B+yD,SAAU9vD,EAAgBjD,EAAhBiD,UAC/BmwD,SACJ,GAAIL,EACA,OAAQA,GACJ,IAAK,YACDK,EACIrvD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,UAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,UAKrB,MACJ,IAAK,kBACDy3D,EACIrvD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,WAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,WAKrB,MACJ,IAAK,WACDy3D,EACIrvD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,kBAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,kBAKrB,MACJ,IAAK,MACDy3D,EACIrvD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,gBAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,kBAKrB,MACJ,IAAK,OACDy3D,EACIrvD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,WAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,eAKrB,MACJ,IAAK,aACDy3D,EACIrvD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,gBAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,gBAKrB,MACJ,IAAK,WACDy3D,EACIrvD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,eAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,eAKrB,MACJ,IAAK,aACDy3D,EACIrvD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,eAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,iBAKrB,MACJ,IAAK,QACDy3D,EACIrvD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,cAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,cAKrB,MACJ,IAAK,QACDy3D,EACIrvD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,YAGboI,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,aAKrB,MACJ,IAAK,UACDy3D,EACIrvD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,iBAIjB,MACJ,IAAK,SACDy3D,EACIrvD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,gBAIjB,MACJ,IAAK,cACDy3D,EACIrvD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,eAIjB,MACJ,QACIy3D,EACIrvD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAAC49B,EAAAgB,eACGx1B,UAAU,gBACVtH,KAAK,aAO7B,OACIoI,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,uBAAwBX,IAC9CmwD,IAKbN,EAAkBjyD,WACdkyD,SAAW7zD,UAAUiF,OACrBlB,UAAW/D,UAAUiF,UAGhB2uD,mGCnPT,QAAAp6D,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,QACAA,EAAA,yDAEA,IAAM26D,EAAqB,SAAArzD,GAAA,IACvB3B,EADuB2B,EACvB3B,SACAg5B,EAFuBr3B,EAEvBq3B,UACAnlB,EAHuBlS,EAGvBkS,KACA8b,EAJuBhuB,EAIvBguB,QAJuB,OAMvBqJ,EACItzB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,uCAChBc,EAAAH,QAAA/J,cAACy5D,EAAA1vD,SACGwQ,MAAM,sBACNuY,QAASza,EACT8b,QAASA,GAER3vB,IAIT0F,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,GAAI1uB,EACJnY,QAAS,IACT8mC,YACIspB,MAAW,+BACXC,UAAW,mCACXC,KAAW,+BAEfvpB,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uCACV5E,MAMrBg1D,EAAmBxyD,WACfxC,SAAWa,UAAUq0D,QACrBl8B,UAAWn4B,UAAUkF,KACrB4pB,QAAW9uB,UAAUmF,KACrB6N,KAAWhT,UAAUkF,gBAGVivD,iFChDf,IAAAl1D,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAM86D,EAAmB,SAAAxzD,GAAA,IACrB0xD,EADqB1xD,EACrB0xD,gBACAJ,EAFqBtxD,EAErBsxD,aACAz8C,EAHqB7U,EAGrB6U,KACArY,EAJqBwD,EAIrBxD,KACAS,EALqB+C,EAKrB/C,MALqB,OAQjBvF,OAAO0J,KAAKyT,GAAMrO,IAAI,SAAAjJ,GAAA,QAEhB,SAAU,UAAU48B,SAAS58B,IAC/BwG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKA,GACjBwG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BAA4Bc,EAAAH,QAAA/J,cAAA,YAAO0D,IAClDwG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yCACXc,EAAAH,QAAA/J,cAAC45D,EAAA7vD,SACG8zC,UAAW7iC,EAAKtX,GAChBf,KAAMA,EACNS,MAAOA,EACPq0D,aAAcA,EACdI,gBAAiBA,UAQ7C8B,EAAiB3yD,WACb6wD,gBAAiBxyD,UAAUmF,KAC3BitD,aAAiBpyD,UAAUmF,KAC3BwQ,KAAiBwG,YAAcq4C,yBAC/Bl3D,KAAiB0C,UAAUiF,OAC3BlH,MAAiBiC,UAAUiF,kBAGhBqvD,iFCzCf,IAAAr1D,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA+zB,EAAA/zB,EAAA,IACA04D,EAAA14D,EAAA,wDAEA,IAAMi7D,EAAmB,SAAA3zD,GAAA,IACrB03C,EADqB13C,EACrB03C,UACAl7C,EAFqBwD,EAErBxD,KACAS,EAHqB+C,EAGrB/C,MACAy0D,EAJqB1xD,EAIrB0xD,gBACAJ,EALqBtxD,EAKrBsxD,aALqB,OAOrB5Z,EAAUlxC,IAAI,SAAC/L,EAAU49B,GAAX,MACU,oBAAnB59B,EAASwC,OACV8G,EAAAH,QAAA/J,cAAA,OACI0D,IAAK86B,EACLp1B,UAAA,uBAAiChG,IAAUxC,EAASwC,MAAQ,+BAAiC,IAC7FT,KAAMA,EACNS,MAAOxC,EAASwC,MAChBqG,QAAS,SAACrK,GAAD,OAAOq4D,EAAa72D,EAAUxB,KAEvC8K,EAAAH,QAAA/J,cAACu3D,EAAA0B,mBAAkBC,SAAUt4D,EAASwC,MAAOgG,UAAU,qCACvDc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,6BACXxI,EAAS+I,MAEdO,EAAAH,QAAA/J,cAAA,OAAKuJ,GAAG,YAAYH,UAAU,2BAA2BK,QAAS,kBAAMouD,EAAgBj3D,KACpFsJ,EAAAH,QAAA/J,cAAC4yB,EAAAhQ,gBAAD,WAMhBk3C,EAAiB9yD,WACb62C,UAAiBr8B,YAAcC,uBAC/Bo2C,gBAAiBxyD,UAAUmF,KAC3BitD,aAAiBpyD,UAAUmF,KAC3B7H,KAAiB0C,UAAUiF,OAC3BlH,MAAiBiC,UAAUiF,kBAGhBwvD,iFCzCf,QAAAj7D,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,QACAA,EAAA,yDAEA,IAAMk7D,EAAsB,SAAA5zD,GAAA,IACxB3B,EADwB2B,EACxB3B,SACAg5B,EAFwBr3B,EAExBq3B,UACAnlB,EAHwBlS,EAGxBkS,KACA8b,EAJwBhuB,EAIxBguB,QACA5Z,EALwBpU,EAKxBoU,MALwB,OAOxBijB,EACItzB,EAAAH,QAAA/J,cAACy5D,EAAA1vD,SACG+oB,QAASza,EACT8b,QAASA,EACT5Z,MAAOA,EACP3Q,iBAAiB,yBAEhBpF,GAGL0F,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGE,YACIspB,MAAW,gCACXC,UAAW,oCACXC,KAAW,gCAEfzpB,GAAI1uB,EACJnY,QAAS,IACT+mC,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wCACV5E,MAMrBu1D,EAAoB/yD,WAChBxC,SAAWa,UAAUq0D,QACrBl8B,UAAWn4B,UAAUkF,KACrB4pB,QAAW9uB,UAAUmF,KACrB6N,KAAWhT,UAAUkF,KACrBgQ,MAAWlV,UAAUiF,kBAGVyvD,iFChDf,QAAAl7D,EAAA,QACAA,EAAA,QACAA,EAAA,IACAixD,EAAAjxD,EAAA,IACA8I,EAAA9I,EAAA,KACAmJ,EAAAnJ,EAAA,KACAoJ,EAAApJ,EAAA,KACAm7D,EAAAn7D,EAAA,SACAA,EAAA,KACA0U,EAAA1U,EAAA,sDAEA,IAAMo7D,EAAoB,SAAA9zD,GAAA,IACtB2xD,EADsB3xD,EACtB2xD,sBACAC,EAFsB5xD,EAEtB4xD,gBACAK,EAHsBjyD,EAGtBiyD,gBACA56B,EAJsBr3B,EAItBq3B,UACApnB,EALsBjQ,EAKtBiQ,KACA4hD,EANsB7xD,EAMtB6xD,eACAW,EAPsBxyD,EAOtBwyD,kBACAhB,EARsBxxD,EAQtBwxD,oBARsB,OAUtBztD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACMosB,GACFtzB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,kCACXc,EAAAH,QAAA/J,cAAA,QAAMyJ,QAAS,kBAAMkvD,MACjBzuD,EAAAH,QAAA/J,cAAC2H,EAAAgzB,SAAD,OAEJzwB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,SAASgN,EAAKzM,OAGlCO,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BAAf,mBAGAc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mCACXc,EAAAH,QAAA/J,cAAC8vD,EAAAe,YACGC,UAAA,EACA9sB,OAAS1S,OAAQ,SAEjBpnB,EAAAH,QAAA/J,cAACg6D,EAAAE,iBAAgBhB,SAAU9iD,EAAKhT,UAGxC8G,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAACghB,EAAAjX,SAAOX,UAAU,wCAAwCO,MAAM,EAAA4J,EAAA2C,UAAS,UAAWzM,QAAS,kBAAMkuD,EAAoBvhD,OAE3HlM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mCAAmCK,QAAS,kBAAM2uD,EAAgBJ,KAC7E9tD,EAAAH,QAAA/J,cAACgI,EAAA4yB,gBAAD,OAEJ1wB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oCAEP4uD,EAAerrD,IAAI,SAAC/L,EAAU49B,GAAX,OACft0B,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAK86B,GACjBt0B,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,6CAClBowD,oDAAqDv5D,EAASwC,QAAUgT,EAAKhT,QAEjFqG,QAAS,kBAAMquD,EAAsBl3D,UAMzDsJ,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mCAAmCK,QAAS,kBAAMsuD,EAAgBC,KAC7E9tD,EAAAH,QAAA/J,cAACiI,EAAA6yB,iBAAD,UAMhBm/B,EAAkBjzD,WACd8wD,sBAAuBzyD,UAAUmF,KACjCutD,gBAAuB1yD,UAAUmF,KACjC4tD,gBAAuB/yD,UAAUmF,KACjCgzB,UAAuBn4B,UAAUkF,KACjC6L,KAAuB/Q,UAAUxB,OACjCm0D,eAAuB3yD,UAAU4c,MACjC02C,kBAAuBtzD,UAAUmF,KACjCmtD,oBAAuBtyD,UAAUmF,gBAGtByvD,0GChFf,QAAAp7D,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,sDAIA,IAAMq7D,EAAkB,SAAA/zD,GAAkB,IAAf+yD,EAAe/yD,EAAf+yD,SACnBkB,SACJ,GAAIlB,EACA,OAAQA,GACJ,IAAK,YAeL,IAAK,kBACDkB,EACIlwD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,wGACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,sGACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,oNAGtB,MACJ,IAAK,WACDkkD,EACIlwD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,qGACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,mGACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,yEAGtB,MACJ,IAAK,MACDkkD,EACIlwD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,wJACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,+JACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,wGAGtB,MACJ,IAAK,OACDkkD,EACIlwD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,qLACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,+JAGtB,MACJ,IAAK,aACDkkD,EACIlwD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,wHACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,6HAGtB,MACJ,IAAK,WACDkkD,EACIlwD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,iIACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,gIAGtB,MACJ,IAAK,aACDkkD,EACIlwD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,sHACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,qHAGtB,MACJ,IAAK,QACDkkD,EACIlwD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,0HACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,wIAGtB,MACJ,IAAK,QACDkkD,EACIlwD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,2FACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,kHACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,iHACdhM,EAAAH,QAAA/J,cAAA,UAAK,EAAAuT,EAAA2C,UAAS,sFAGtB,MACJ,QACIkkD,EACIlwD,EAAAH,QAAA/J,cAAA,sBAOhB,OACIkK,EAAAH,QAAA/J,cAAA,WACKo6D,IAKbF,EAAgBlzD,WACZkyD,SAAU7zD,UAAUiF,UAGf4vD,8GC1HTr8D,OAAA0J,KAAA8yD,GAAA5yD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAq3D,EAAA32D,qBACA7F,OAAA0J,KAAA+yD,GAAA7yD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAs3D,EAAA52D,wWCDA7E,EAAA,QACAA,EAAA,IACAy7D,EAAAz7D,EAAA,+NAEMygC,6SACFnd,OACIukB,SAAS,KAWb4xB,cAAgB,SAACjuD,GACboC,EAAK8rD,YAAcluD,KAGvBm8B,mBAAqB,SAAChlC,GACdiL,EAAK8rD,cAAgB9rD,EAAK8rD,YAAY9xB,SAASjlC,EAAMQ,SAAWyK,EAAK0V,MAAMukB,SAC3Ej6B,EAAK4V,UAAWqkB,SAAS,OAIjC6zB,YAAc,WACV9tD,EAAK4V,UAAWqkB,SAAS,OAG7B8zB,WAAa,SAACh5D,GACLiL,EAAK8rD,YAAY9xB,SAASjlC,EAAMQ,SACjCyK,EAAK4V,UAAWqkB,SAAS,+UA7BZv/B,UAAMvB,0DAMvB/F,SAASo0B,iBAAiB,YAAanvB,KAAK0hC,mEAI5C3mC,SAASq0B,oBAAoB,YAAapvB,KAAK0hC,qDAuB1C,IAAAngC,EAAAvB,KACC21D,EACFvwD,EAAAH,QAAA/J,cAACs6D,EAAA16B,mBACGI,WAAYl7B,KAAKwzD,cACjBj3C,UAAWvc,KAAKG,MAAMoc,UACtBke,YAAaz6B,KAAKG,MAAMs6B,YACxBC,aAAc16B,KAAKG,MAAMu6B,aACzBM,WAAYh7B,KAAKqd,MAAMukB,QACvBplB,QAASxc,KAAKG,MAAMqc,QACpBye,UAAWj7B,KAAKG,MAAMT,SAASS,MAAMwE,QACrC0qB,QAASrvB,KAAKy1D,cAGtB,OACIrwD,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACKjK,UAAM+8B,SAASv3B,IAAI7H,KAAKG,MAAMT,SAAU,SAAA2/B,GAAA,OACrCh9B,UAAMuzD,aAAav2B,GACf16B,QAASpD,EAAKm0D,eAGrBC,YAMjBn7B,EAAWt4B,WACPqa,UAAchc,UAAUiF,OACxBi1B,YAAcl6B,UAAUiF,OACxB9F,SAAca,UAAUxB,OACxB27B,aAAcn6B,UAAUiF,OACxBgX,QAAcjc,UAAUiF,UAGnBg1B,4FCvET,QAAAzgC,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,KACA87D,EAAA97D,EAAA,wDAEA,IAAM+7D,EAAe,SAAAz0D,GAAA,IACjBuK,EADiBvK,EACjBuK,SACA2uB,EAFiBl5B,EAEjBk5B,cACAf,EAHiBn4B,EAGjBm4B,cAHiB,OAKjBp0B,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACMktB,EAAchf,YAAcgf,EAAc/0B,GACxCW,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,UACP8wD,yBAA0Bv8B,EAAchf,aAG3Cgf,EAAchd,SAAWpX,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BAA+Bk1B,EAAchd,UAG3FpX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sCAAqC,EAAAmK,EAAA2C,UAAS,OAAQooB,EAAc0uB,mBAAmBrjD,OACtGO,EAAAH,QAAA/J,cAAA,WAAKkK,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQ8tB,EAAc0uB,mBAAmB5pD,MAAOgG,UAAU,uCAAuCsH,SAAUA,KACvHxG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wCACQ,OAAlBi2B,GAA0Bn1B,EAAAH,QAAA/J,cAAC26D,EAAAG,eAAch5D,KAAMu9B,EAAgB,SAAW,WAGnFn1B,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAACmhB,EAAApX,SAAQsX,UAAU,OAAOjY,UAAU,iCAAiCmZ,cAAc,mCAAmCC,KAAK,OAAOlB,QAASgd,EAAchd,cAO7Ks5C,EAAa5zD,WACT0J,SAAerL,UAAUiF,OACzB+0B,cAAeh6B,UAAUkF,KACzB+zB,cAAej5B,UAAUxB,kBAGd+2D,wGC7Cf,QAAA/7D,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMi8D,EAAgB,SAAA30D,GAAyB,IAAtBrE,EAAsBqE,EAAtBrE,KAAMsH,EAAgBjD,EAAhBiD,UACvBkqD,SACJ,GAAIxxD,EACA,OAAQA,GACJ,IAAK,SACDwxD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUoL,SAAS,UAAU7uB,EAAE,iBAGlD,MACJ,IAAK,OACD4wD,EACIppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUoL,SAAS,UAAU7uB,EAAE,kBAGlD,MACJ,QACI4wD,EACIppD,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUoL,SAAS,UAAU7uB,EAAE,gVAK1D,OACIwH,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,YAAYoL,MAAM,8BAClGkiC,IAMbwH,EAAc9zD,WACVoC,UAAW/D,UAAUiF,OACrBxI,KAAWuD,UAAUiF,UAGhBwwD,kLC1CF/wD,iGCAP,QAAAlL,EAAA,QACAA,EAAA,IACAgM,EAAAhM,EAAA,GACAwJ,EAAAxJ,EAAA,SACAA,EAAA,MACAk8D,EAAAl8D,EAAA,wDAKA,IAAMm8D,EAAa,SAAA70D,GAA0C,IAAvCuK,EAAuCvK,EAAvCuK,SAAU6tB,EAA6Bp4B,EAA7Bo4B,cAAe90B,EAActD,EAAdsD,QACrC6V,IAAcif,EAAct8B,MAC9Bg5D,SACJ,GAAI37C,EAEA,QADmB,EAAAzU,EAAAqK,kBAAiBqpB,GAAgB,QAAS,UAEzD,IAAK,wBACD08B,EAAiB/wD,EAAAH,QAAA/J,cAAC+6D,EAAAG,WAAD,MACjB,MACJ,IAAK,sBACDD,EAAiB/wD,EAAAH,QAAA/J,cAAC+6D,EAAAI,aAAD,MACjB,MACJ,QACIF,EAAiB/wD,EAAAH,QAAA/J,cAAC+6D,EAAAK,cAAa95C,QAASid,EAAct8B,MAAMqf,UAKxE,OACIpX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sCAAsCK,QAASA,GAC1DS,EAAAH,QAAA/J,cAACqI,EAAA+rB,WAAUhrB,UAAU,4CAExBkW,EACG27C,EAEA/wD,EAAAH,QAAA/J,cAACq7D,EAAAtxD,SACGw0B,cAAeA,EAAc7R,IAC7Bhc,SAAUA,MAO9BsqD,EAAWh0D,WACP0J,SAAerL,UAAUiF,OACzBb,QAAepE,UAAUmF,KACzB+zB,cAAel5B,UAAUxB,kBAGdm3D,iFCnDf,QAAAn8D,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACA4U,EAAA5U,EAAA,+KAEA,IAAMy8D,EAAiB,SAAAn1D,GAAA,IAAGuK,EAAHvK,EAAGuK,SAAU6tB,EAAbp4B,EAAao4B,cAAb,OACnBr0B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oCACXc,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,4CAA2C,EAAAmK,EAAA2C,UAAS,mBAE1EhM,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,2CAA0C,EAAAmK,EAAA2C,UAAS,aAAnE,KACAhM,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,KAAGoJ,WAAW,EAAAU,EAAAC,SAAW,4CAA6C,UAAxDyC,KAAA,aAAmFkE,GAAY,IAAIW,cAAkBX,MAClI6tB,EAAc1X,YAGvB3c,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,2CAA0C,EAAAmK,EAAA2C,UAAS,UAAnE,KACAhM,EAAAH,QAAA/J,cAAA,YACIkK,EAAAH,QAAA/J,cAAA,KAAGoJ,WAAW,EAAAU,EAAAC,SAAW,4CAA6C,UAAxDyC,KAAA,aAAmFkE,GAAY,IAAIW,cAAkBX,MAClI6tB,EAAcvX,SAGvB9c,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,2CAA0C,EAAAmK,EAAA2C,UAAS,SAAnE,KADJ,KAC0F,EAAAzC,EAAA6nC,aAAuC,IAA3B/c,EAAc5hB,aAEpHzS,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,2CAA0C,EAAAmK,EAAA2C,UAAS,eAAnE,KADJ,IACgGqoB,EAActS,aAE9G/hB,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,2CAA0C,EAAAmK,EAAA2C,UAAS,kBAAnE,KADJ,IACmGqoB,EAAcwD,gBAEjH73B,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,2CAA0C,EAAAmK,EAAA2C,UAAS,eAAnE,KADJ,IACgGqoB,EAAcoJ,YAKtH2zB,EAAet0D,WACX0J,SAAerL,UAAUiF,OACzBi0B,cAAel5B,UAAUxB,kBAGdy3D,8FC7Cfz9D,OAAA0J,KAAAg0D,GAAA9zD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAu4D,EAAA73D,qBACA7F,OAAA0J,KAAAi0D,GAAA/zD,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAw4D,EAAA93D,qBACA7F,OAAA0J,KAAAk0D,GAAAh0D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAy4D,EAAA/3D,6GCFA,QAAA7E,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,0DAcSs8D,aAZY,kBACjBjxD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mCACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,wEAAuE,EAAAmK,EAAA2C,UAAS,gDAChGhM,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGX,UAAU,4EACVC,cAAc,2CACdC,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,oHCX3B,QAAArX,EAAA,QACAA,EAAA,uDAEA,IAAMu8D,EAAe,SAAAj1D,GAAA,IAAGmb,EAAHnb,EAAGmb,QAAH,OACjBpX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oCACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,kCAAkCkY,KAI1D85C,EAAap0D,WACTsa,QAASjc,UAAUiF,UAGd8wD,kHCbT,QAAAv8D,EAAA,IACAimC,EAAAjmC,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,0DAiBSq8D,WAfU,kBACfhxD,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mCACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,wEAAuE,EAAAmK,EAAA2C,UAAS,2CAChGhM,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGX,UAAU,4EACVC,cAAc,2CACdC,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,UACfzM,QAAS47B,oBAEbn7B,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,2CAA0C,EAAAmK,EAAA2C,UAAS,8BAAgC,gBAChGhM,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,uCAAuC4J,KAAK,gBAAe9I,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,wEAAuE,EAAAmK,EAAA2C,UAAS,wLChBzKnM,iGCAP,QAAAlL,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,KACA68D,EAAA78D,EAAA,wDAEA,IAAM88D,EAAe,SAAAx1D,GAAA,IAAGsD,EAAHtD,EAAGsD,QAAH,OACjBS,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAC07D,EAAAE,UAASxyD,UAAU,mCAExBc,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,oCAAmC,EAAAmK,EAAA2C,UAAS,oBAC1DhM,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGX,UAAU,kFACVE,YAAA,EACAG,QAASA,EACTE,MAAM,EAAA4J,EAAA2C,UAAS,YAEnBhM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,qCACX,EAAAmK,EAAA2C,UAAS,qEAKtBylD,EAAa30D,WACTyC,QAASpE,UAAUmF,gBAGRmxD,mGC5Bf,QAAA98D,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM+8D,EAAW,SAAAz1D,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACbc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYgoB,MAAM,6BAA6BpL,QAAQ,aAC7F9b,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,UAAUgB,UAAU,kBACxCroB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,gBAAgBioB,MAAM,IAAIC,OAAO,IAAIkB,EAAE,KAAKC,EAAE,MAAMuI,OAAO,OAAOtI,GAAG,MACrFxoB,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,cAAc6c,GAAG,IAAIC,GAAG,KAAKjjB,EAAE,IAAIkjB,KAAK,SAC1Djc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,gBAAgB4xB,OAAO,OAAOt4B,EAAE,2DAK5Dk5D,EAAS50D,WACLoC,UAAW/D,UAAUiF,UAGhBsxD,mHClBT,QAAA/8D,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAGa+V,oBAEPjS,KAAM,WAAciD,UAAWwlD,YAC/BzoD,KAAM,UAAciD,UAAWi2D,YAC/Bl5D,KAAM,aAAciD,UAAWk2D,YAC/Bn5D,KAAM,SAAciD,UAAWm2D,2FCXrC,QAAAl9D,EAAA,IACAyF,EAAAzF,EAAA,OAGAA,EAAA,QACAA,EAAA,IACAyR,EAAAzR,EAAA,QAGAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAEA,IAAMk9D,EAAS,SAAA51D,GAaT,IAZFqK,EAYErK,EAZFqK,OACA+I,EAWEpT,EAXFoT,MACAI,EAUExT,EAVFwT,WACA21B,EASEnpC,EATFmpC,gBACA5+B,EAQEvK,EARFuK,SACAk4C,EAOEziD,EAPFyiD,eACA9B,EAME3gD,EANF2gD,iBACAtmB,EAKEr6B,EALFq6B,aACAC,EAIEt6B,EAJFs6B,gBACAu7B,EAGE71D,EAHF61D,mBACA/8C,EAEE9Y,EAFF8Y,SACAlR,EACE5H,EADF4H,kBAEA,GAAIyyB,EACA,OACIt2B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iDACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,8BAA8BuQ,EAAWzH,KAAK,SAAArP,GAAA,OAAKA,EAAEO,QAAUmW,SAAc5P,MADjG,IAGIO,EAAAH,QAAA/J,cAAA,SAAGkK,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAW,+BAAgC,gIAA3CyC,IAAA,aAAsEkE,GAAY,IAAIW,cAAkBX,QAC3H,EAAAJ,EAAAokC,UAASlkC,EAAQ,IAI9B,IAAMyrD,GAAyB,EAAAnyD,EAAAC,UAAamyD,iBAAkBF,IAE9D,OACI9xD,EAAAH,QAAA/J,cAACg/B,EAAAj1B,SAASX,UAAU,6BAChBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW6yD,GACZ/xD,EAAAH,QAAA/J,cAACm8D,EAAApyD,SACGqyD,mBAAA,EACA37B,gBAAiBA,EACjBzlB,KAAMrB,EACNhX,KAAK,QACLS,MAAOmW,EACP0F,SAAUA,EACV7V,UAAU,yBAEZ4yD,GACE9xD,EAAAH,QAAA/J,cAACm8D,EAAApyD,SACGqyD,mBAAA,EACA37B,gBAAiBA,EACjBzlB,KAAMs0B,EACN3sC,KAAK,WACLS,MAAOsN,EACPuO,SAAUA,IAGlB/U,EAAAH,QAAA/J,cAACq8D,EAAAtyD,SACG8T,eAAe,yBACfC,gBAAgB,4BAChBG,eAAgBlQ,EAAkByC,OAClC0N,mBAAmB,EAAA5N,EAAAskC,kBAAiBlkC,GACpC0N,0BAAA,EACAC,UAAA,EACAoiB,gBAAiBA,EACjB3hB,WAAY,GACZnc,KAAK,SACLsc,SAAUA,EACVE,OAAQ68C,EAAqBtrD,EAAW,KACxC5O,KAAK,SACLsB,MAAOoN,KAGftG,EAAAH,QAAA/J,cAACs8D,EAAAvyD,SAAY6+C,eAAgBA,EAAgB3pC,SAAUA,EAAUrB,QAASkpC,MAKtFiV,EAAO/0D,WACHwJ,OAAQnL,UAAUiM,WACdjM,UAAUkM,OACVlM,UAAUiF,SAEdiP,MAAoBlU,UAAUiF,OAC9BqP,WAAoB6H,YAAcC,uBAClC6tB,gBAAoB9tB,YAAc+6C,iBAClC7rD,SAAoBrL,UAAUiF,OAC9Bs+C,eAAoBvjD,UAAUkF,KAC9Bu8C,iBAAoBzhD,UAAUkM,OAC9BivB,aAAoBn7B,UAAUkF,KAC9Bk2B,gBAAoBp7B,UAAUkF,KAC9ByxD,mBAAoB32D,UAAUkF,KAC9B0U,SAAoB5Z,UAAUmF,KAC9BuD,kBAAoB1I,UAAUxB,mBAGnB,EAAAS,EAAAwB,UAASi2D,mfCrGxBl9D,EAAA,IACA+L,EAAA/L,EAAA,GACAyF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,IACAixD,EAAAjxD,EAAA,IACA+zB,EAAA/zB,EAAA,QACAA,EAAA,UACAA,EAAA,MACAqtB,EAAArtB,EAAA,+NAOM29D,6SACFC,SAAWt1D,UAAMu1D,cACjBv6C,OACIw6C,YAAiB,EAAAzwC,EAAA0wC,kBAAiBnwD,EAAKxH,MAAM+V,KAAMvO,EAAKxH,MAAM7B,OAAOmO,OACrEsrD,iBAAiB,KAWrBpF,aAAe,SAACrhD,GACRA,EAAKhT,QAAUqJ,EAAKxH,MAAM7B,OAC1BqJ,EAAKxH,MAAMga,UAAWjd,QAAUW,KAAM8J,EAAKxH,MAAMtC,KAAMS,MAAOgT,EAAKhT,SAEvEqJ,EAAKirD,sBAGTY,cAAgB,SAACjuD,GAAD,OAAUoC,EAAK8rD,YAAcluD,KAE7Cm8B,mBAAqB,SAAChlC,GACdiL,EAAK8rD,cAAgB9rD,EAAK8rD,YAAY9xB,SAASjlC,EAAMQ,SAAWyK,EAAK0V,MAAM06C,iBAC3EpwD,EAAK4V,UAAWw6C,iBAAiB,OAIzCnF,iBAAmB,WACfjrD,EAAK4V,SAAS,SAACF,GAAD,OAAc06C,iBAAkB16C,EAAM06C,sBAGxDC,aAAe,SAACt7D,GACZ,IAAIiL,EAAKswD,iBACT,GAAsB,IAAlBv7D,EAAM6e,QAAV,CAMA7e,EAAMylD,iBACN,IAAM1hC,GAAQ,EAAA2G,EAAA0wC,kBAAiBnwD,EAAKxH,MAAM+V,KAAMvO,EAAKxH,MAAM7B,OACrDA,GAAQ,EAAA8oB,EAAA8wC,mBAAkBvwD,EAAKxH,MAAM+V,KAAMvO,EAAK0V,MAAMw6C,YAO5D,OAAQn7D,EAAM6e,SACV,KAAK,GACL,KAAK,GAPD5T,EAAK0V,MAAM06C,iBAAmBpwD,EAAKxH,MAAM7B,QAAUA,GACnDqJ,EAAKxH,MAAMga,UAAWjd,QAAUW,KAAM8J,EAAKxH,MAAMtC,KAAMS,WAE3DqJ,EAAKirD,mBAMD,MACJ,KAAK,GACD,GAAIjrD,EAAK0V,MAAM06C,gBAAiB,CAC5B,IAAMI,GAAa,EAAA/wC,EAAAgxC,cAAazwD,EAAK0V,MAAMw6C,WAAYp3C,EAAM7nB,QAC7D+O,EAAK4V,UAAWs6C,WAAYM,IAEhC,MACJ,KAAK,GACD,GAAIxwD,EAAK0V,MAAM06C,gBAAiB,CAC5B,IAAMM,GAAa,EAAAjxC,EAAAkxC,cAAa3wD,EAAK0V,MAAMw6C,WAAYp3C,EAAM7nB,QAC7D+O,EAAK4V,UAAWs6C,WAAYQ,SACpB1wD,EAAKxH,MAAMm3D,mBACnB3vD,EAAKirD,mBAET,MACJ,KAAK,IACIjrD,EAAK0V,MAAM06C,iBAAmBpwD,EAAKxH,MAAMm3D,mBAC1C3vD,EAAKirD,mBAET,MACJ,KAAK,GACGjrD,EAAK0V,MAAM06C,iBAAmBpwD,EAAKxH,MAAMm3D,mBACzC3vD,EAAKirD,mBAOjB,GAAyB,IAArBl2D,EAAMkC,IAAIhG,OAAc,CACxB,IAAM2/D,EAAO77D,EAAMkC,IAAI2N,cACjBisD,EAAa7wD,EAAKxH,MAAM+V,KAAKrO,IAAI,SAAA6lB,GAAA,OAAKA,EAAE7oB,KAAK,GAAG0H,gBAClDmtB,SAEA/xB,EAAK0V,MAAMw6C,aACXn+B,EAAM8+B,EAAW7oD,QAAQ4oD,EAAM5wD,EAAK0V,MAAMw6C,WAAa,SAE/Cv6D,IAARo8B,IAA8B,IAATA,IACrBA,EAAM8+B,EAAW7oD,QAAQ4oD,IAEzB7+B,GAAO,GACP/xB,EAAK4V,UAAWs6C,WAAYn+B,UA3D5B/xB,EAAK0V,MAAM06C,iBACXpwD,EAAKirD,8VAtCEvwD,UAAMvB,0DAQrB/F,SAASo0B,iBAAiB,YAAanvB,KAAK0hC,mEAI5C3mC,SAASq0B,oBAAoB,YAAapvB,KAAK0hC,qDAyF1C,IAAAngC,EAAAvB,KACL,GAAIA,KAAKG,MAAMw7B,gBACX,OACIv2B,EAAAH,QAAA/J,cAACu9D,EAAAxzD,SACGpH,KAAMmC,KAAKG,MAAMtC,KACjBS,MAAO0B,KAAKG,MAAM7B,MAClB4X,KAAMlW,KAAKG,MAAM+V,KACjBiE,SAAUna,KAAKG,MAAMga,WAMjC,IAAMu+C,GACFjrC,+BAAgCztB,KAAKqd,MAAMs7C,WAA3C,uBAMEV,GAAmB,EAAAnyD,EAAA8yD,aAAY54D,KAAKG,MAAM+V,SACzClW,KAAKG,MAAM+V,KAAKtd,OAAS,MAEzBG,OAAO0J,KAAKzC,KAAKG,MAAM+V,MAAMtd,OAAS,GAE7C,OACIwM,EAAAH,QAAA/J,cAAA,OACIyE,IAAKK,KAAKwzD,cACVlvD,WAAW,EAAAU,EAAAC,SAAW,qBAAsBjF,KAAKG,MAAMmE,WACnDu0D,iBAAsB74D,KAAKG,MAAMm3D,kBACjCwB,iBAAsB94D,KAAKqd,MAAM06C,gBACjCgB,qBAAsBd,KAG1B7yD,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,qBAClB+zD,6BAA8Bh5D,KAAKqd,MAAM06C,kBAE7CnzD,SAAUqzD,EAAmB,KAAO,IACpCtzD,QAAS3E,KAAK4yD,iBACdt3C,UAAWtb,KAAKg4D,cAEhB5yD,EAAAH,QAAA/J,cAAA,QAAM2C,KAAMmC,KAAKG,MAAMtC,KAAMS,MAAO0B,KAAKG,MAAM7B,MAAOgG,UAAU,2BAC3D,EAAA8iB,EAAA0sC,gBAAe9zD,KAAKG,MAAM+V,KAAMlW,KAAKG,MAAM7B,UAI/C25D,GAAoB7yD,EAAAH,QAAA/J,cAAC4yB,EAAAq+B,WAAU7nD,WAAW,EAAAU,EAAAC,SAAW,0BAClDg0D,+BAAgCj5D,KAAKG,MAAMm3D,sBAInDlyD,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,GAAIjiC,KAAKqd,MAAM06C,gBACf38D,QAAS,IACT8mC,YACIspB,gCAAoCxrD,KAAKG,MAAMm3D,kBAAoB,8BAAgC,IACnG7L,yCAAyCzrD,KAAKG,MAAMm3D,kBAAoB,mCAAqC,IAC7G5L,8BAAmC1rD,KAAKG,MAAMm3D,kBAAoB,6BAA+B,KAErG4B,UA1CS,kBAAM33D,EAAKgc,UAAWo7C,WAAYp3D,EAAKo2D,SAAShkC,QAAQwlC,eA2CjEh3B,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,kBACvBm0D,uBAAwBp5D,KAAKG,MAAMm3D,qBAGnClyD,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,QAClBo0D,aAAcr5D,KAAKG,MAAMm3D,oBAE7B33D,IAAKK,KAAK23D,SACVz4B,MAAOl/B,KAAKG,MAAMm3D,kBAAoBoB,OAAuBp7D,GAE7D8H,EAAAH,QAAA/J,cAAC8vD,EAAAe,YACGuN,YAAA,EACAtN,UAAA,EACAuN,cAAe,IACfC,sBAAuB,SAAAr5D,GAAA,OAASiF,EAAAH,QAAA/J,cAAA,MAAAmF,KAASF,GAAOmE,UAAU,mBAAmB46B,OAAS9gB,QAAS,YAC/Fq7C,sBAAuB,SAAAt5D,GAAA,OAASiF,EAAAH,QAAA/J,cAAA,MAAAmF,KAASF,GAAOmE,UAAU,mBAAmB46B,OAAS9gB,QAAS,cAE9F,EAAAtY,EAAA8yD,aAAY54D,KAAKG,MAAM+V,MACpB9Q,EAAAH,QAAA/J,cAACw+D,EAAAz0D,SACG00D,eAAgB35D,KAAKqd,MAAMw6C,WAC3B+B,MAAO55D,KAAKG,MAAM+V,KAClBrY,KAAMmC,KAAKG,MAAMtC,KACjBS,MAAO0B,KAAKG,MAAM7B,MAClBq0D,aAAc3yD,KAAK2yD,eAEvB55D,OAAO0J,KAAKzC,KAAKG,MAAM+V,MAAMrO,IAAI,SAAAjJ,GAAA,OAC7BwG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKA,GACjBwG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eAAe1F,GAC9BwG,EAAAH,QAAA/J,cAACw+D,EAAAz0D,SACG00D,eAAgBp4D,EAAK8b,MAAMw6C,WAC3B+B,MAAOr4D,EAAKpB,MAAM+V,KAAKtX,GACvBf,KAAM0D,EAAKpB,MAAMtC,KACjBS,MAAOiD,EAAKpB,MAAM7B,MAClBq0D,aAAcpxD,EAAKoxD,gCAcnE+E,EAASx1D,WACLoC,UAAmB/D,UAAUiF,OAC7B8xD,kBAAmB/2D,UAAUkF,KAC7Bk2B,gBAAmBp7B,UAAUkF,KAC7ByQ,KAAmB3V,UAAUiM,WACzBjM,UAAU4c,MACV5c,UAAUxB,SAEdlB,KAAU0C,UAAUiF,OACpB2U,SAAU5Z,UAAUmF,KACpBpH,MAAUiC,UAAUiM,WAChBjM,UAAUkM,OACVlM,UAAUiF,qBAIH,EAAAhG,EAAAwB,UAAS02D,kFCrPxB,QAAA39D,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM8/D,EAAQ,SAAAx4D,GAAA,IACVu4D,EADUv4D,EACVu4D,MACA/7D,EAFUwD,EAEVxD,KACAS,EAHU+C,EAGV/C,MACAq0D,EAJUtxD,EAIVsxD,aACAgH,EALUt4D,EAKVs4D,eALU,OAOVC,EAAM/xD,IAAI,SAACyJ,EAAMooB,GAAP,OACNt0B,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAK86B,GACjBt0B,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,cAClB60D,uBAA2Bx7D,IAAUgT,EAAKhT,MAC1Cy7D,0BAA2BJ,IAAmBjgC,IAElD96B,IAAK86B,EACL77B,KAAMA,EACNS,MAAOgT,EAAKhT,MACZqG,QAASguD,EAAa9zD,KAAK,KAAMyS,IAEjClM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,mBAAmBgN,EAAKzM,WAMxDg1D,EAAM33D,WACFywD,aAAgBpyD,UAAUmF,KAC1Bi0D,eAAgBp5D,UAAUkM,OAC1B5O,KAAgB0C,UAAUiF,OAC1BlH,MAAgBiC,UAAUiM,WACtBjM,UAAUkM,OACVlM,UAAUiF,oBAIHq0D,iFCvCf,QAAA9/D,EAAA,QACAA,EAAA,uDAEA,IAAMigE,EAAe,SAAA34D,GAAA,IACjBxD,EADiBwD,EACjBxD,KACAqY,EAFiB7U,EAEjB6U,KACA5X,EAHiB+C,EAGjB/C,MACA6b,EAJiB9Y,EAIjB8Y,SAJiB,OAMjB/U,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wCACXc,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,+BAA+BzG,KAAMA,EAAMS,MAAOA,EAAO6b,SAAUA,GAChFvY,MAAMq4D,QAAQ/jD,GACXA,EAAKrO,IAAI,SAACyJ,EAAMooB,GAAP,OACLt0B,EAAAH,QAAA/J,cAAA,UAAQ0D,IAAK86B,EAAKp7B,MAAOgT,EAAKhT,OAAQgT,EAAKzM,QAG/C9L,OAAO0J,KAAKyT,GAAMrO,IAAI,SAAAjJ,GAAA,OAClBwG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKA,GACjBwG,EAAAH,QAAA/J,cAAA,YAAU6e,MAAOnb,GACZsX,EAAKtX,GAAKiJ,IAAI,SAACyJ,EAAMooB,GAAP,OACXt0B,EAAAH,QAAA/J,cAAA,UAAQ0D,IAAK86B,EAAKp7B,MAAOgT,EAAKhT,OAAQgT,EAAKzM,eAS3Em1D,EAAa93D,WACTgU,KAAM3V,UAAUiM,WACZjM,UAAUxB,OACVwB,UAAU4c,QAEdtf,KAAU0C,UAAUiF,OACpB2U,SAAU5Z,UAAUmF,KACpBpH,MAAUiC,UAAUiM,WAChBjM,UAAUkM,OACVlM,UAAUiF,oBAIHw0D,8KC1Cf,IAAAl0D,EAAA/L,EAAA,GAEa+5D,iBAAiB,SAAC59C,EAAM5X,GACjC,IAAM01D,EAAc,SAAC79C,GAAD,OAAeA,EAAS/I,KAAK,SAAAkE,GAAA,OAAQA,EAAKhT,QAAUA,SAAcuG,MAClFA,EAAO,GASX,OARI,EAAAiB,EAAA8yD,aAAY1iD,GACZrR,EAAOmvD,EAAY99C,GAEnBnd,OAAO0J,KAAKyT,GAAMiK,KAAK,SAAAvhB,GAEnB,OADAiG,EAAOmvD,EAAY99C,EAAKtX,MAIzBiG,GAGEizD,mBAAmB,SAAC5hD,EAAM5X,GACnC,IAAM01D,EAAc,SAAC79C,GAAD,OAAcA,EAASokC,UAAU,SAAAjpC,GAAA,OAAQA,EAAKhT,QAAUA,KACxEgT,KASJ,OARI,EAAAxL,EAAA8yD,aAAY1iD,GACZ5E,GAAS7E,OAAQunD,EAAY99C,GAAOtd,OAAQsd,EAAKtd,QAEjDG,OAAO0J,KAAKyT,GAAMiK,KAAK,SAAAvhB,GAEnB,OADA0S,GAAS7E,OAAQunD,EAAY99C,EAAKtX,IAAOhG,OAAQsd,EAAKtX,GAAKhG,UAI5D0Y,GAGE4mD,oBAAoB,SAAChiD,EAAMuK,GACpC,IAAMuzC,EAAc,SAAC79C,GAAD,OAAcA,EAASsK,IACvChnB,SASJ,OARI,EAAAqM,EAAA8yD,aAAY1iD,GACZzc,EAASu6D,EAAY99C,GAErBnd,OAAO0J,KAAKyT,GAAMiK,KAAK,SAAAvhB,GAEnB,OADAnF,EAASu6D,EAAY99C,EAAKtX,KACZN,QAGf7E,EAAO6E,OAGL85D,eAAe,SAAC33C,EAAO7nB,GAEhC,OADoB6nB,EAAQ,EAAK,EAAK7nB,EAAS,EAAK6nB,EAAQ,GAInD63C,eAAe,SAAC73C,EAAO7nB,GAEhC,OADoB6nB,EAAQ,IAAO7nB,EAAS,EAAI6nB,EAAQ,kFClD5D,QAAA1mB,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,wDAEA,IAAMmgE,EAAc,SAAA74D,GAAA,IAChByiD,EADgBziD,EAChByiD,eACAhrC,EAFgBzX,EAEhByX,QACAqB,EAHgB9Y,EAGhB8Y,SAHgB,QAKd2pC,GACE1+C,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBACXc,EAAAH,QAAA/J,cAACq8D,EAAAtyD,SACGX,UAAU,4BACVyU,eAAe,6CACftU,GAAG,eACH5G,KAAK,gBACLsc,SAAUA,EACV7b,MAAM,WACNtB,KAAK,WACL8b,QAASA,IAEb1T,EAAAH,QAAA/J,cAAA,SAAOoJ,UAAU,sBAAsBmY,QAAQ,iBAAgB,EAAAhO,EAAA2C,UAAS,iBACxEhM,EAAAH,QAAA/J,cAACmhB,EAAApX,SACGsX,UAAU,OACVjY,UAAU,wBACVmZ,cAAc,6BACdC,KAAK,OACLlB,SAAS,EAAA/N,EAAA2C,UAAS,4DAKlC8oD,EAAYh4D,WACR4W,QAAgBvY,UAAUkM,OAC1Bq3C,eAAgBvjD,UAAUkF,KAC1B0U,SAAgB5Z,UAAUmF,gBAGfw0D,iFCxCf,QAAAngE,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACAogE,EAAApgE,EAAA,SAGAA,EAAA,SACAA,EAAA,KACA0U,EAAA1U,EAAA,sDAEA,IAAMg9D,EAAU,SAAA11D,GAOT,IANH2S,EAMG3S,EANH2S,UACAG,EAKG9S,EALH8S,UACAE,EAIGhT,EAJHgT,cACAqnB,EAGGr6B,EAHHq6B,aACAvhB,EAEG9Y,EAFH8Y,SACAlR,EACG5H,EADH4H,kBAEMmxD,EAAkC,IAAlB/lD,GAAsB,EAAA5F,EAAA2C,UAAS,YAAa,EAAA3C,EAAA2C,UAAS,YAE3E,GAAIsqB,EACA,OAAsB,IAAlBrnB,EAEIjP,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mDACV0P,GAKT5O,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mDACV0P,GAEL5O,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mDACV6P,IAMjB,IAAMkmD,EAAgC,IAAlBhmD,EAAsB,WAAa,SACvD,OACIjP,EAAAH,QAAA/J,cAACg/B,EAAAj1B,SACGX,UAAU,sDACVuY,OAAQu9C,EACRt9C,WAAA,GAEA1X,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAACq8D,EAAAtyD,SACGjI,KAAK,SACLa,KAAK,YACLS,MAAO0V,EACP1P,UAAA,6BAAwC+1D,EACxCthD,gBAAgB,EAAA/T,EAAAC,SAAW,yBAA0B,kCAArC,6BAAqGo1D,EAArG,UAChBlgD,SAAUA,EACVhB,eAAgBlQ,EAAkB+K,cAClCuF,UAAA,EACAK,WAAA,IAGe,IAAlBvF,GACGjP,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACq8D,EAAAtyD,SACGjI,KAAK,SACLa,KAAK,YACLS,MAAO6V,EACP7P,UAAU,WACVyU,eAAe,yBACfoB,SAAUA,EACVhB,eAAgBlQ,EAAkBkL,UAClCoF,UAAA,EACAK,WAAA,IAEJxU,EAAAH,QAAA/J,cAACi/D,EAAAG,eAAch2D,UAAU,kCACzBc,EAAAH,QAAA/J,cAACi/D,EAAAI,iBAAgBj2D,UAAU,wCAQnDyyD,EAAQ70D,WACJ8R,UAAmBzT,UAAUiF,OAC7B2O,UAAmB5T,UAAUiF,OAC7B6O,cAAmB9T,UAAUkM,OAC7BivB,aAAmBn7B,UAAUkF,KAC7B0U,SAAmB5Z,UAAUmF,KAC7BuD,kBAAmB1I,UAAUxB,mBAGlB,EAAAS,EAAAwB,UAAS+1D,+FC5FxBh+D,OAAA0J,KAAA+3D,GAAA73D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAs8D,EAAA57D,qBACA7F,OAAA0J,KAAAg4D,GAAA93D,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAu8D,EAAA77D,8GCDA,QAAA7E,EAAA,QACAA,EAAA,uDAEA,IAAMugE,EAAgB,SAAAj5D,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAClBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MAC5EpnB,EAAAH,QAAA/J,cAAA,QACIoJ,UAAU,cACVgoD,YAAY,KACZ7/B,SAAS,UACT7uB,EAAE,6IAKd08D,EAAcp4D,WACVoC,UAAW/D,UAAUiF,UAGhB80D,wHClBT,QAAAvgE,EAAA,QACAA,EAAA,uDAEA,IAAMwgE,EAAkB,SAAAl5D,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACpBc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWA,EAAWgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MAC5EpnB,EAAAH,QAAA/J,cAAA,QACIoJ,UAAU,cACVgoD,YAAY,KACZ7/B,SAAS,UACT7uB,EAAE,gJAKd28D,EAAgBr4D,WACZoC,UAAW/D,UAAUiF,UAGhB+0D,oLClBFt1D,kgBCAPlL,EAAA,QACAA,EAAA,IACAyF,EAAAzF,EAAA,OAGAA,EAAA,gOAEM2gE,6SACFC,gBAAkB,SAACrqD,GACf,IAAIsqD,mIAAoBjzD,EAAKxH,MAAMgQ,sBAKnC,OAHIxI,EAAKxH,MAAMgQ,oBAAoBvX,OAAS,IAAM+O,EAAKxH,MAAM06D,uBACzDD,EAAgBA,EAAc7kD,OAAO,SAAA+kD,GAAA,MAAmB,MAAbA,EAAGx8D,OAA8B,MAAbw8D,EAAGx8D,SAE/Ds8D,EAAcz6C,KAAK,SAAA26C,GAAA,OAAMA,EAAGx8D,QAAUgS,+UAPvBjO,UAAMvB,wDAW5B,IAAMi6D,EAAqB/6D,KAAKG,MAAMgQ,oBAAoB,GAAG7R,MACvD08D,EAAqBh7D,KAAKG,MAAM4oD,oBAAoBgS,GAE1D/6D,KAAKG,MAAM86D,iBAAkBp9D,MAASmC,KAAKG,MAAM06D,qBAAuB,WAAa,UAAxD,iBAAkFv8D,MAAOy8D,IACtH/6D,KAAKG,MAAM+6D,kBACP5qD,cAAeyqD,EACf/7C,SAAeg8C,gDAKnB,IAAMG,EAAen7D,KAAKG,MAAM06D,qBAC5B76D,KAAKG,MAAMi7D,uBAAyBp7D,KAAKG,MAAMk7D,qBAC7CC,EAAmBt7D,KAAKG,MAAM4oD,oBAAoB/oD,KAAKG,MAAMmQ,eAE/DtQ,KAAKG,MAAMmQ,gBAAkB6qD,GAC7Bn7D,KAAKG,MAAM86D,iBAAkBp9D,MAASmC,KAAKG,MAAM06D,qBAAuB,WAAa,UAAxD,iBAAkFv8D,MAAO0B,KAAKG,MAAMmQ,gBAGjItQ,KAAKG,MAAM6e,WAAas8C,GACxBt7D,KAAKG,MAAM86D,iBAAkBp9D,iBAAkBs9D,EAAgB78D,MAAO0B,KAAKG,MAAM6e,wDAKrF,IAAMu8C,GAAmCv7D,KAAKG,MAAM06D,sBAA4D,MAApC76D,KAAKG,MAAMk7D,sBAA0E,IAA1Cr7D,KAAKG,MAAMgQ,oBAAoBvX,OAChJ4iE,EAAkCx7D,KAAKG,MAAM06D,qBAC/C76D,KAAKG,MAAMi7D,uBAAyBp7D,KAAKG,MAAMk7D,qBAC7CC,EAAkCt7D,KAAKG,MAAM4oD,oBAAoB/oD,KAAKG,MAAMmQ,eAC5EmrD,GAAmCz7D,KAAK26D,gBAAgBa,GACxDE,GAAmC17D,KAAKG,MAAM06D,sBAAmD,aAA3B76D,KAAKG,MAAM0T,YACjF8nD,EAAkC37D,KAAKG,MAAM06D,sBAC5C76D,KAAKG,MAAM0T,cAAgB7T,KAAKG,MAAMy7D,sBAAwB57D,KAAKG,MAAMgQ,oBAAoBvX,OAAS,EAGzG6iE,GAA6BF,EAC7Bv7D,KAAK67D,mBAKLH,GACA17D,KAAKG,MAAMga,UAAWjd,QAAUW,KAAM,cAAeS,MAAO,cAG5Dq9D,GACA37D,KAAKG,MAAMga,UAAWjd,QAAUW,KAAM,cAAeS,MAAO0B,KAAKG,MAAMy7D,wBAGvE57D,KAAKG,MAAM6e,WAAas8C,GACxBt7D,KAAKG,MAAM86D,iBAAkBp9D,iBAAkBmC,KAAKG,MAAMmQ,cAAiBhS,MAAO0B,KAAKG,MAAM6e,6CAKjG,OACI5Z,EAAAH,QAAA/J,cAAC4gE,EAAA72D,QAAD5E,GACIs6D,gBAAiB36D,KAAK26D,iBAClB36D,KAAKG,iBAMzBu6D,EAAgBx4D,WACZk5D,uBAAwB76D,UAAUiF,OAClCo2D,qBAAwBr7D,UAAUiF,OAClCkL,qBAAwBnQ,UAAUiF,OAClCwZ,SAAwBze,UAAUiM,WAC9BjM,UAAUkM,OACVlM,UAAUiF,SAEdu2D,WAAYx7D,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,SAEdw2D,WAAYz7D,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,SAEdy2D,WAAY17D,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,SAEdmL,iBAAkBpQ,UAAUxB,OAC5Bm9D,WAAkB37D,UAAUiM,WACxBjM,UAAUkM,OACVlM,UAAUiF,SAEd22D,WAAY57D,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,SAEd8K,cAAqB/P,UAAUiF,OAC/B2K,oBAAqBuM,YAAcC,uBACnC3F,YAAqBzW,UAAUiM,WAC3BjM,UAAUiF,OACVjF,UAAUkM,SAEdkL,YAAsBpX,UAAUiF,OAChCqO,YAAsBtT,UAAUiF,OAChCujD,oBAAsBxoD,UAAUmF,KAChCm1D,qBAAsBt6D,UAAUkF,KAChCi2B,aAAsBn7B,UAAUkF,KAChCqiD,kBAAsBvnD,UAAU4c,MAChChD,SAAsB5Z,UAAUmF,KAChCw1D,iBAAsB36D,UAAUmF,KAChCu1D,gBAAsB16D,UAAUmF,KAChCka,YAAsBrf,UAAUxB,OAChC4S,SAAsB+K,YAAcC,uBACpC0+C,qBAAsB96D,UAAUiF,OAChCqL,WAAsBtQ,UAAUiM,WAC5BjM,UAAUkM,OACVlM,UAAUiF,SAEdqS,WAAmBtX,UAAUiF,OAC7ByN,OAAmB1S,UAAUiF,OAC7ByD,kBAAmB1I,UAAUxB,mBAGlB,EAAAS,EAAAwB,UAAS05D,0PC1IxBl7D,EAAAzF,EAAA,OACAA,EAAA,IACAg9B,EAAAh9B,EAAA,UACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,MACA8U,EAAA9U,EAAA,IACA4U,EAAA5U,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMusD,EAAW,SAAAjlD,GAwBX,IAvBF+5D,EAuBE/5D,EAvBF+5D,uBACAQ,EAsBEv6D,EAtBFu6D,qBACAlrD,EAqBErP,EArBFqP,qBACAsO,EAoBE3d,EApBF2d,SACA1O,EAmBEjP,EAnBFiP,cACAH,EAkBE9O,EAlBF8O,oBACAQ,EAiBEtP,EAjBFsP,iBACAwrD,EAgBE96D,EAhBF86D,WACAnlD,EAeE3V,EAfF2V,YACAW,EAcEtW,EAdFsW,YACA9D,EAaExS,EAbFwS,YACAk1C,EAYE1nD,EAZF0nD,oBACA4R,EAWEt5D,EAXFs5D,gBACAE,EAUEx5D,EAVFw5D,qBACAn/B,EASEr6B,EATFq6B,aACAvhB,EAQE9Y,EARF8Y,SACA8gD,EAOE55D,EAPF45D,gBACAC,EAME75D,EANF65D,iBACAG,EAKEh6D,EALFg6D,qBACAz7C,EAIEve,EAJFue,YACA/O,EAGExP,EAHFwP,WACA5H,EAEE5H,EAFF4H,kBACA6+C,EACEzmD,EADFymD,kBAEMsU,IACAv3D,MAAM,EAAA4J,EAAA2C,UAAS,YAAa9S,MAAO,aAGnC+9D,EAAeD,EAAYhvD,KAAK,SAAAkvD,GAAA,MAA2B,YAAjBA,EAAOh+D,QASvD,GARmC,IAA/B6R,EAAoBvX,QAAkC,MAAlB0X,EAChC+rD,GACAD,EAAYG,MAERF,GACRD,EAAYtjE,MAAO+L,MAAM,EAAA4J,EAAA2C,UAAS,YAAa9S,MAAO,YAGtDo9B,EAAc,CACd,IAAMvkB,GAAgB,EAAAxI,EAAA+D,UAASsE,GACzBwlD,GAAsBrsD,EAAoB/C,KAAK,SAAArP,GAAA,OAAKA,EAAEO,QAAUgS,SAAsBzL,KAC5F,OACIO,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mDACM,aAAhBuP,EACQmL,EADR,IACoBw9C,EACZrlD,EAAcnF,OAAO,sBAF7B,KAEuD2F,GAMpE,IAAM8kD,EAAqB,SAAAjqD,GAAgB,IAAbtV,EAAasV,EAAbtV,OAClBW,EAAgBX,EAAhBW,KAAMS,EAAUpB,EAAVoB,MACRo+D,EAAkB3T,EAAoBzqD,GAE5C28D,GAAkBp9D,OAAMS,UACxB48D,GACI5qD,cAAehS,EACf0gB,SAAe09C,KAyCnBziD,SAAWC,SACXvJ,EAAiBD,KACjBuJ,GAAY,EAAApL,EAAAkR,uBAAsBpP,EAAiBD,GAAsBuO,IAAK3O,GAC9E4J,GAAY,EAAArL,EAAAkR,uBAAsBpP,EAAiBD,GAAsBqO,IAAKzO,IAGlF,IAAMnQ,GACFw8D,cACI1iD,YACAC,YACAC,SA/CoB,SAAAtH,GAAgB,IAAb3V,EAAa2V,EAAb3V,OACnBW,EAAgBX,EAAhBW,KAAMS,EAAUpB,EAAVoB,MAGd28D,GAAkBp9D,KAFZ++D,aAA8B/B,EAAuBO,EAAyBC,GAE7C/8D,UACvC6b,GAAWjd,QAAUW,OAAMS,aA4C3Bu+D,cACI7/D,KAAkB,SAClBwc,kBAAkB,EAClBL,eAAkBlQ,EAAkB+V,eAItC89C,EAAaV,EAAYxjE,OAAS,GAAKuX,EAAoBvX,OAAS,EAE1E,OACIwM,EAAAH,QAAA/J,cAACg/B,EAAAj1B,SAASX,UAAU,8BACbw4D,GACC13D,EAAAH,QAAA/J,cAAC6hE,EAAA93D,QAAD5E,GACIxC,KAAK,WACL6sB,MAAO,GACPpsB,MAAO69D,GACHh8D,EAAMw8D,eAGhBG,GACE13D,EAAAH,QAAA/J,cAAC67B,EAAAzqB,SAAD,KACMuuD,GACEz1D,EAAAH,QAAA/J,cAAC8hE,EAAA/3D,SACG22D,qBAAsBA,EACtBR,uBAAwBA,EACxBqB,mBAAoBA,EACpBN,WAAYA,EACZhsD,oBAAqBA,EACrB6G,YAAaA,EACbolD,YAAaA,EACbvoD,YAAaA,EACbk1C,oBAAqBA,EACrBjB,kBAAmBA,EACnBmV,mBAAoB98D,EAAM08D,aAC1B1iD,SAAUA,EACV8gD,gBAAiBA,EACjBr7C,YAAaA,EACbs9C,mBAAoB/8D,EAAMw8D,aAC1B9rD,WAAYA,KAEjBgqD,GACCz1D,EAAAH,QAAA/J,cAACiiE,EAAAl4D,SACG8jD,oBAAqBA,EACrB0T,mBAAoBA,EACpBN,WAAYA,EACZhsD,oBAAqBA,EACrB8sD,mBAAoB98D,EAAM08D,aAC1BK,mBAAoB/8D,EAAMw8D,aAC1BtB,qBAAsBA,IAE9Bj2D,EAAAH,QAAA/J,cAACkiE,EAAAn4D,SACGpH,KAAM,uBACNsc,SA7FS,SAAA63C,GAAgB,IAAb90D,EAAa80D,EAAb90D,OACpBW,EAAgBX,EAAhBW,KAAMS,EAAUpB,EAAVoB,MACd28D,GAAkBp9D,OAAMS,UAGxB,IAAIk9D,EAAwBl9D,EAAQ88D,EAAyBC,EACxDV,EAAgBa,KACjBA,EAAwBrrD,EAAoB,GAAG7R,MAC/C28D,GAAkBp9D,MAASS,EAAQ,WAAa,UAA9B,iBAAwDA,MAAOk9D,KAGrF,IACM6B,GACF/sD,cAAekrD,EACfx8C,SAH2B+pC,EAAoByS,IAO9Cl9D,GAAyB,aAAhBuV,IACVwpD,EAAuBxpD,YAAc,YAGrCvV,GAASuV,IAAgB+nD,IACzByB,EAAuBxpD,YAAc+nD,GAGzCV,OAAsBmC,KAoEN/+D,MAAOu8D,OAQ/BvU,EAASpkD,WACLk5D,uBAAwB76D,UAAUiF,OAClCo2D,qBAAwBr7D,UAAUiF,OAClCkL,qBAAwBnQ,UAAUiF,OAClCwZ,SAAwBze,UAAUiM,WAC9BjM,UAAUkM,OACVlM,UAAUiF,SAEdmL,iBAAkBpQ,UAAUxB,OAC5Bo9D,WAAkB57D,UAAUiM,WACxBjM,UAAUkM,OACVlM,UAAUiF,SAEd8K,cAAqB/P,UAAUiF,OAC/B2K,oBAAqBuM,YAAcC,uBACnC3F,YAAqBzW,UAAUiM,WAC3BjM,UAAUiF,OACVjF,UAAUkM,SAEdkL,YAAsBpX,UAAUiF,OAChCqO,YAAsBtT,UAAUiF,OAChCujD,oBAAsBxoD,UAAUmF,KAChCi1D,gBAAsBp6D,UAAUmF,KAChCm1D,qBAAsBt6D,UAAUkF,KAChCi2B,aAAsBn7B,UAAUkF,KAChCqiD,kBAAsBvnD,UAAU4c,MAChChD,SAAsB5Z,UAAUmF,KAChCu1D,gBAAsB16D,UAAUmF,KAChCka,YAAsBrf,UAAUxB,OAChCs8D,qBAAsB96D,UAAUiF,OAChCqL,WAAsBtQ,UAAUiM,WAC5BjM,UAAUkM,OACVlM,UAAUiF,SAEdyD,kBAAmB1I,UAAUxB,kBAGlBunD,iFC7Nf,QAAAvsD,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,yDAEA,IAAMujE,EAAc,SAAAj8D,GAQd,IAPFiD,EAOEjD,EAPFiD,UACAomB,EAMErpB,EANFqpB,MACAzQ,EAKE5Y,EALF4Y,UACAC,EAIE7Y,EAJF6Y,UACArc,EAGEwD,EAHFxD,KACAS,EAEE+C,EAFF/C,MACA6b,EACE9Y,EADF8Y,SAeMojD,EAAa7yC,GAASA,EAAQ,GAEpC,OACItlB,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,eAAgBX,GAAak5D,sBAAyBl/D,EAAQ4b,GAAe5b,EAAQ2b,KAC5G7U,EAAAH,QAAA/J,cAAA,SAAOoJ,UAAU,sBAAsBmY,QAAQ,SAC3CrX,EAAAH,QAAA/J,cAAA,SACIuJ,GAAG,QACHH,UAAU,mDACVtH,KAAK,QACL+hB,IAAKw+C,EACLt+C,IAAKyL,EACLxQ,UAAWA,EACXD,UAAWA,EACXpc,KAAMA,EACN4/D,MAAM,IACNtjD,SA3BK,SAAC7f,GACdA,EAAE4C,OAAOoB,QAAUA,GACnB6b,GAAWjd,QAAUW,OAAMS,MAAOhE,EAAE4C,OAAOoB,UA0BnCsG,SAAS,IACTtG,MAAOA,IAEX8G,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBACXc,EAAAH,QAAA/J,cAACwiE,EAAAz4D,SACG3G,MAAOA,EACPosB,MAAOA,EACP/lB,QA7BA,SAACrK,EAAGmmB,GAChBA,IAAUniB,GACV6b,GAAWjd,QAAUW,OAAMS,MAAOmiB,SA+B9Brb,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,qBACV46B,OAAS3S,cAAuB,GAARjuB,EAAf,QAAgCA,EAAQ,EAAI,SAAW,QAAvD,QAGjB8G,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,gCACXi5D,KAGCj/D,GACF8G,EAAAH,QAAA/J,cAAA,aACK,EAAAuT,EAAA2C,UAAS,aAAc9S,GAAS,KAGzC8G,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,+BACXomB,MAQrB4yC,EAAYp7D,WACRoC,UAAY/D,UAAUiF,OACtB+3D,WAAYh9D,UAAUkM,OACtBwN,UAAY1Z,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,SAEd0U,UAAW3Z,UAAUiM,WACjBjM,UAAUkM,OACVlM,UAAUiF,SAEd3H,KAAU0C,UAAUiF,OACpB2U,SAAU5Z,UAAUmF,KACpBpH,MAAUiC,UAAUiM,WAChBjM,UAAUkM,OACVlM,UAAUiF,qBAIH,EAAAhG,EAAAwB,UAASs8D,kFCnGxB,QAAAvjE,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM4jE,EAAY,SAAAt8D,GAA+B,IAA5B/C,EAA4B+C,EAA5B/C,MAAOosB,EAAqBrpB,EAArBqpB,MAAO/lB,EAActD,EAAdsD,QACzBsqD,mIAAgBrtD,MAAM8oB,GAAOjoB,SACnC,OACI2C,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACK2iD,EAAUpnD,IAAI,SAAA6xB,GAAA,OACXt0B,EAAAH,QAAA/J,cAAA,QACI0D,IAAK86B,EACLp1B,WAAW,EAAAU,EAAAC,SAAW,4BAClB24D,mCAAqClkC,EAAM,IAAOja,SAASnhB,GAC3Du/D,mCAAqCnkC,EAAM,EAAKja,SAASnhB,KAE7DqG,QAAS,SAACrK,GAAD,OAAOqK,EAAQrK,EAAGo/B,EAAM,UAOrDikC,EAAUz7D,WACNyC,QAASpE,UAAUmF,KACnBglB,MAASnqB,UAAUiM,WACfjM,UAAUkM,OACVlM,UAAUiF,SAEdlH,MAAOiC,UAAUiM,WACbjM,UAAUkM,OACVlM,UAAUiF,oBAIHm4D,iFClCf,QAAA5jE,EAAA,QACAA,EAAA,IACAg9B,EAAAh9B,EAAA,UACA+zB,EAAA/zB,EAAA,uDAEA,IAAM+jE,EAAiB,SAAAz8D,GAIjB,IAHFxD,EAGEwD,EAHFxD,KACAsc,EAEE9Y,EAFF8Y,SACA7b,EACE+C,EADF/C,MAKMy/D,GAAiB,EAAA/4D,EAAAC,SACnB,+BACA,gBACE+4D,uCAAwC1/D,IAE9C,OACI8G,EAAAH,QAAA/J,cAAC67B,EAAAzqB,SAAD,KACIlH,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,yBAAyBK,QAVpC,WACXwV,GAAWjd,QAAUoB,OAAQA,EAAOT,YAU5BuH,EAAAH,QAAA/J,cAAC4yB,EAAAq+B,WAAU7nD,UAAWy5D,EAAgBhoC,cAAe,yCAKrE+nC,EAAe57D,WACXrE,KAAU0C,UAAUiF,OACpB2U,SAAU5Z,UAAUmF,KACpBpH,MAAUiC,UAAUkF,gBAGTq4D,6PChCf/jE,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,IACAg9B,EAAAh9B,EAAA,cACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,MACA8U,EAAA9U,EAAA,IACA4U,EAAA5U,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEA,IAAMkkE,EAAmB,SAAA58D,GAgBnB,IAfF+5D,EAeE/5D,EAfF+5D,uBACAQ,EAcEv6D,EAdFu6D,qBACAzrD,EAaE9O,EAbF8O,oBACAgsD,EAYE96D,EAZF86D,WACAM,EAWEp7D,EAXFo7D,mBACA1T,EAUE1nD,EAVF0nD,oBACA/xC,EASE3V,EATF2V,YACAolD,EAQE/6D,EARF+6D,YACAvoD,EAOExS,EAPFwS,YACAopD,EAME57D,EANF47D,mBACA9iD,EAKE9Y,EALF8Y,SACA8gD,EAIE55D,EAJF45D,gBACAr7C,EAGEve,EAHFue,YACAs9C,EAEE77D,EAFF67D,mBACArsD,EACExP,EADFwP,WAEIqtD,GAAuB,EAE3B,GAAoB,YAAhBrqD,EAA2B,CAC3B,IAAMsqD,GAA6B,EAAAtvD,EAAAuI,yBAAwBjH,GAC3D+tD,KAA0BrtD,IAAc,EAAAlC,EAAA+D,UAASsE,GAAe4I,GAAaw+C,QAAO,EAAAzvD,EAAA+D,UAASkN,GAAc,SAAWu+C,EAG1H,IAAME,GAA0B,EAAAr5D,EAAAC,SAAW,qBACvCq5D,WAAYJ,IAUhB,OACI94D,EAAAH,QAAA/J,cAAC67B,EAAAzqB,SAAD,KACM8vD,EAAYxjE,OAAS,GACnBwM,EAAAH,QAAA/J,cAACqjE,EAAAt5D,SACGi3B,YAAakgC,EACbv+D,KAAK,uBACLsc,SAbK,SAAA3H,GAAgB,IAAbtV,EAAasV,EAAbtV,OACZW,EAAgBX,EAAhBW,KAAMS,EAAUpB,EAAVoB,MAEd6b,GAAWjd,QAAUW,KAAM,cAAeS,WAC1C28D,GAAkBp9D,OAAMS,WAUZA,MAAOs9D,IAGG,aAAhB/nD,EACEzO,EAAAH,QAAA/J,cAAC67B,EAAAzqB,SAAD,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACT6L,EAAoBvX,OAAS,GAC3BwM,EAAAH,QAAA/J,cAACm8D,EAAApyD,SACGqyD,mBAAA,EACA37B,iBAAiB,EACjBzlB,KAAM/F,EACNtS,KAAK,yBACLsc,SAAUsiD,EACVn+D,MAAO88D,IAGc,MAA3BA,GACEh2D,EAAAH,QAAA/J,cAAC6hE,EAAA93D,QAAD5E,GACIxC,KAAK,WACL6sB,MAAO,GACPpsB,MAAO69D,GACHe,IAGiB,MAA3B9B,GACEh2D,EAAAH,QAAA/J,cAACsjE,EAAAv5D,SACGzG,KAAK,WACLX,KAAK,WACLqgE,qBAAsBA,IAGA,MAA3B9C,GAA6D,MAA3BA,GACjCh2D,EAAAH,QAAA/J,cAACq8D,EAAAtyD,QAAD5E,GACI0Y,eAAe,yBACfgB,MAAsC,IAA/B5J,EAAoBvX,OAAeuX,EAAoB,GAAGtL,KAAO,KACxEhH,KAAK,WACLS,MAAOyqD,EAAoBqS,IACvB6B,EACAC,MAKpB93D,EAAAH,QAAA/J,cAAC67B,EAAAzqB,SAAD,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW+5D,GACZj5D,EAAAH,QAAA/J,cAACsjE,EAAAv5D,SACGpH,KAAK,cACLqgE,qBAAsBA,IAGzBA,GACG94D,EAAAH,QAAA/J,cAACujE,EAAAx5D,QAAD,UAU5Bg5D,EAAiB/7D,WACbk5D,uBAAwB76D,UAAUiF,OAClCo2D,qBAAwBr7D,UAAUiF,OAClCi3D,mBAAwBl8D,UAAUmF,KAClCy2D,WAAwB57D,UAAUiM,WAC9BjM,UAAUkM,OACVlM,UAAUiF,SAEd2K,oBAAqBuM,YAAcC,uBACnC3F,YAAqBzW,UAAUiM,WAC3BjM,UAAUiF,OACVjF,UAAUkM,SAEd2vD,YAAqB77D,UAAU4c,MAC/BtJ,YAAqBtT,UAAUiF,OAC/BujD,oBAAqBxoD,UAAUmF,KAC/Bu3D,mBAAqB18D,UAAUxB,OAC/Bob,SAAqB5Z,UAAUmF,KAC/Bu1D,gBAAqB16D,UAAUmF,KAC/Bka,YAAqBrf,UAAUxB,OAC/Bm+D,mBAAqB38D,UAAUxB,OAC/B8R,WAAqBtQ,UAAUiM,WAC3BjM,UAAUkM,OACVlM,UAAUiF,oBAIHy4D,iFC/If,QAAAlkE,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,IACA83B,EAAA93B,EAAA,IACA4U,EAAA5U,EAAA,QAIAA,EAAA,yDAEA,IAAM2kE,EAAoB,SAAAr9D,GAcpB,IAbFsP,EAaEtP,EAbFsP,iBACAR,EAYE9O,EAZF8O,oBACA6G,EAWE3V,EAXF2V,YACAnD,EAUExS,EAVFwS,YACAqqD,EASE78D,EATF68D,qBACA1/D,EAQE6C,EARF7C,KACAX,EAOEwD,EAPFxD,KACAsc,EAME9Y,EANF8Y,SACAyF,EAKEve,EALFue,YACA/H,EAIExW,EAJFwW,WACAhH,EAGExP,EAHFwP,WACAoC,EAEE5R,EAFF4R,OACAhK,EACE5H,EADF4H,kBAEI01D,SACAC,SACAC,SACAnlD,SACEolD,GACF,EAAAnwD,EAAAuoC,UAAQ,EAAAvoC,EAAA+D,UAAS7B,GAAc+O,IAAe,EAAAjR,EAAA2D,aAAYuF,GAAcA,EAAa+H,EAAY5N,OAAO,aAEtG+sD,EAAqBpuD,EAAiBquD,MAAQruD,EAAiBquD,MAAM//C,IAAM,QAmBjF,OAjBIi/C,GACAU,EAAoBE,EAAgCvnD,QAAQigC,QAAQ,OACpEmnB,EAAoBG,EAAgCvnD,QAAQC,IACxD3G,EAAa,MAAakuD,EAAqB,YAEnDH,EAAoBE,EAAgCvnD,QAAQigC,QAAQ,OACpEmnB,EAAoBG,EAAgCvnD,QAAQC,IAAIunD,EAAoB,WAEpE,aAAhBlrD,GACA+qD,EAAgBpnD,IAAI,EAAG,OACvBqnD,GAAgB,EAChBnlD,GAAe,IAEfmlD,GAAgB,EAChBnlD,GAAe,GAIftU,EAAAH,QAAA/J,cAACsjE,EAAAv5D,SACGsX,UAAU,OACV0iD,uBAAA,EACAC,wBAAA,EACA/lD,eAAgBlQ,EAAkB+V,aAClC6/C,cAAeA,EACfM,oBAA8B,aAAT3gE,EACrBm9B,iBAAiB,EACjBjiB,aAAcA,EACdK,MAAsC,IAA/B5J,EAAoBvX,OAAeuX,EAAoB,GAAGtL,KAAO,KACxErG,KAAMA,EACNX,KAAMA,EACNsc,SAAUA,EACVilD,SAAUR,EACVS,SAAUV,EACV9tD,WAAYA,EACZqC,WAAYD,EACZ3U,MAAO0Y,KAKnB0nD,EAAkBx8D,WACd8c,SAAUze,UAAUiM,WAChBjM,UAAUiF,OACVjF,UAAUkM,SAEdkE,iBAAqBpQ,UAAUxB,OAC/BoR,oBAAqBuM,YAAcC,uBACnC3F,YAAqBzW,UAAUiM,WAC3BjM,UAAUiF,OACVjF,UAAUkM,SAEdoH,YAAsBtT,UAAUiF,OAChC04D,qBAAsB39D,UAAUkF,KAChCjH,KAAsB+B,UAAUiF,OAChC3H,KAAsB0C,UAAUiF,OAChC2U,SAAsB5Z,UAAUmF,KAChCka,YAAsBrf,UAAUxB,OAChC8R,WAAsBtQ,UAAUiM,WAC5BjM,UAAUkM,OACVlM,UAAUiF,SAEdqS,WAAmBtX,UAAUiF,OAC7ByN,OAAmB1S,UAAUiF,OAC7ByD,kBAAmB1I,UAAUxB,mBAGlB,EAAA8yB,EAAAlxB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAASsH,EAAZ+R,EAAY/R,OAAZ,OACIkQ,iBAAqBxX,EAAQ0nB,MAAMlQ,iBACnCR,oBAAqBhX,EAAQ0nB,MAAM1Q,oBACnC6G,YAAqB7d,EAAQ0nB,MAAM7J,YACnCnD,YAAqB1a,EAAQ0nB,MAAMhN,YACnCsG,SAAqBhhB,EAAQ0nB,MAAM1G,SACnCyF,YAAqBnf,EAAOmf,YAC5B/O,WAAqB1X,EAAQ0nB,MAAMhQ,WACnCgH,WAAqB1e,EAAQ0nB,MAAMhJ,WACnC5E,OAAqB9Z,EAAQ0nB,MAAM5N,OACnChK,kBAAqB9P,EAAQ0nB,MAAM5X,oBAX5B,CAaby1D,mfCjHF3kE,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,IACA+zB,EAAA/zB,EAAA,QAIAA,EAAA,KACA4U,EAAA5U,EAAA,IAOA0U,EAAA1U,EAAA,GACAqtB,EAAArtB,EAAA,SACAA,EAAA,gOAEMulE,6SACFjiD,OACIkiD,WAAuB,GACvBC,YACAC,uBAAuB,EACvBC,sBAAuB,EACvBphE,MAAuBqJ,EAAKxH,MAAM7B,MAClCqhE,eAmBJ/M,iBAAmB,WACfjrD,EAAK4V,SAAS,SAAAF,GAAA,OAAYoiD,uBAAwBpiD,EAAMoiD,4BAG5DG,eAAiB,SAACtlE,IACTqN,EAAKk4D,SAASl+B,SAASrnC,EAAE4C,SAAWyK,EAAK0V,MAAMoiD,wBAChD93D,EAAK4V,UAAWkiD,uBAAuB,IACjC93D,EAAK0V,MAAM/e,OAA6B,aAApBqJ,EAAKxH,MAAM3B,MACjCmJ,EAAKm4D,uBAAsB,EAAAnxD,EAAA0oC,YAAW1vC,EAAK0V,MAAM/e,MAAO,oBAKpEye,aAAe,WACPpV,EAAK0V,MAAM/e,QAAW,iBAAkBqJ,EAAKxH,OAAUwH,EAAKxH,MAAM4/D,eAClEp4D,EAAK4V,UAAWmiD,sBAAsB,OAI9C1iD,aAAe,WACXrV,EAAK4V,UAAWmiD,sBAAsB,OAG1CM,iBAAmB,SAAC36C,GAAgD,IAAjCo6C,IAAiC/9D,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,KAAAA,UAAA,GAC5DpD,EAAQ+mB,GACP,EAAA1W,EAAAopC,aAAYz5C,KAAUA,EAAQ,IAEX,aAApBqJ,EAAKxH,MAAM3B,KACXmJ,EAAKm4D,sBAAsBxhE,GAE3BqJ,EAAKm4D,uBAAsB,EAAAnxD,EAAA0oC,YAAW/4C,EAAO,gBAEjDqJ,EAAK4V,UAAWkiD,6BAGpBQ,cAAgB,SAAC3lE,GACb,IAAMgE,EAAQhE,EAAE4C,OAAOoB,MACjB4hE,GAAkB,EAAAvxD,EAAA0oC,aAAW,EAAA1oC,EAAAqpC,UAAQ,EAAArpC,EAAA+D,YAAYpU,GAAQ,eAC/DqJ,EAAKm4D,sBAAsBI,GAC3Bv4D,EAAKxH,MAAMga,SAAS7f,MAGxB6lE,qBAAuB,WACnBx4D,EAAK4V,UAAWjf,MAAO,MAAQqJ,EAAKk+B,aAChCl+B,EAAKy4D,UACLz4D,EAAKy4D,SAASC,mBAKtBP,sBAAwB,SAACxhE,GAAU,IAAAy1D,EACWpsD,EAAKxH,MAAvCm3C,EADuByc,EACvBzc,YAAa94C,EADUu1D,EACVv1D,KAAMqS,EADIkjD,EACJljD,WAG3B,GAFAlJ,EAAK4V,UAAWjf,SAASqJ,EAAKk+B,aAEjB,aAATrnC,EAAqB,CACrB,IAAM8hE,GAAiB,EAAA3xD,EAAA4oC,iBAAgBj5C,GACjCiiE,GAAiB,EAAA5xD,EAAA0oC,YAAW/4C,EAAO,eACzCqJ,EAAK4V,UAAWjf,MAAOgiE,EAAWf,WAAYgB,GAAkB54D,EAAKk+B,aAIzE,IAAM26B,EAAqB,aAAThiE,GAAuB,EAAAmQ,EAAA0oC,YAAW/4C,EAAO,eAAiBA,EAC5E,GAAIqJ,EAAKy4D,YAAa,EAAAzxD,EAAAopC,aAAYyoB,KAAcA,GAC5C,GAAKA,EAOD74D,EAAKy4D,SAAS7iD,UACV4H,eAAe,EAAAxW,EAAA0oC,YAAWmpB,GAC1Bn7C,eAAe,EAAA1W,EAAA0oC,YAAWmpB,SATnB,CACX,IAAMC,GAAe,EAAA9xD,EAAA0oC,YAAWxmC,EAAYymC,GAC5C3vC,EAAKy4D,SAAS7iD,UACV4H,cAAes7C,EACfp7C,cAAeo7C,QAY/B56B,YAAc,WAAM,IAAA66B,EACW/4D,EAAKxH,MAAxBtC,EADQ6iE,EACR7iE,KAAMsc,EADEumD,EACFvmD,SACVA,GACAA,GAAWjd,QAAUW,OAAMS,MAAOqJ,EAAK0V,MAAM/e,YA0BrDqiE,iBAAmB,WAAM,IAAAC,EACuCj5D,EAAKxH,MAAzDuZ,EADaknD,EACblnD,aAAclb,EADDoiE,EACCpiE,KAAMX,EADP+iE,EACO/iE,KAAMkc,EADb6mD,EACa7mD,MAAOZ,EADpBynD,EACoBznD,eACnCiB,EAAgBzS,EAAKxH,MAArBia,YACF9b,SAAOtB,SAAMmd,SAEjB,OAAQ3b,GACJ,IAAK,WACD2b,EAAWxS,EAAKs4D,cAChBjjE,EAAO,OACPsB,EAAQqJ,EAAK0V,MAAM/e,MACnB,MACJ,QACI8b,EAAcA,IAAe,EAAA3L,EAAA2C,UAAS,iBACtCpU,EAAO,OACPsB,GAAQ,EAAAqQ,EAAA0oC,YAAW1vC,EAAKxH,MAAM7B,MAAO,eAG7C,OACI8G,EAAAH,QAAA/J,cAACq8D,EAAAtyD,SACGX,UAAU,0BACVyU,eAAe,2CACfqC,YAAU,EACVD,aAAYxT,EAAK0V,MAAM/e,MACvB6a,eAAgBA,EAChBG,0BAA0B,EAC1BS,MAAOA,EACPL,aAAcA,EACd7b,KAAMA,EACNsc,SAAUA,EACVxV,QAASgD,EAAKirD,iBACdx4C,YAAaA,EACbpd,KAAMA,EACNsB,MAAOA,+UAtKE+D,UAAMvB,0DAWvB/F,SAASo0B,iBAAiB,QAASnvB,KAAK4/D,gBAAgB,GADxC,IAAApiD,EAEQxd,KAAKG,MAArB3B,EAFQgf,EAERhf,KAAMF,EAFEkf,EAEFlf,MACRuiE,EAAyB,aAATriE,GAAsB,EAAAmQ,EAAA0oC,aAAW,EAAA1oC,EAAAqpC,UAAQ,EAAArpC,EAAA+D,YAAY,GAAI,gBAAiB,EAAA/D,EAAA0oC,YAAW/4C,EAAO,eAElH0B,KAAK8/D,sBAAsBe,GAEvB7gE,KAAKG,MAAM++D,wBACXl/D,KAAK8gE,uBAAsB,EAAAnyD,EAAAgqC,iBAAgB34C,KAAKqd,MAAM/e,uDAK1DvD,SAASq0B,oBAAoB,QAASpvB,KAAK4/D,gBAAgB,sXAyFnCz6C,6GACK,EAAAiC,EAAA25C,kBAAiB57C,EAAenlB,KAAKG,MAAM+S,mBAAlE8tD,SACAxB,KACFG,KACJqB,EAAer+D,QAAQ,SAAAs+D,GACnB,IAAMC,EAAQD,EAAOC,MAAM3uD,MAAM,OAEpB,IADD2uD,EAAMvxD,QAAQ,aAEtBgwD,GAAY,EAAG,IAEnBH,EAAS1mE,MACLooE,QACAC,QAASF,EAAOE,YAIxBnhE,KAAKud,UACDiiD,WACAG,iJAyCC,IAAAp+D,EAAAvB,KACL,OAAIA,KAAKG,MAAMw7B,gBAEPv2B,EAAAH,QAAA/J,cAAA,OAAKyE,IAAK,SAAA4F,GAAUhE,EAAKs+D,SAAWt6D,GAASjB,UAAU,cACnDc,EAAAH,QAAA/J,cAAA,SACIuJ,GAAIzE,KAAKG,MAAMtC,KACfA,KAAMmC,KAAKG,MAAMtC,KACjByG,UAAU,iDACVtH,KAAK,OACLsB,MAAO0B,KAAKqd,MAAM/e,MAClBygB,IAAK/e,KAAKG,MAAMi/D,SAChBngD,IAAKjf,KAAKG,MAAMk/D,SAChBllD,SAAU,SAAC7f,GAGP,IAAM4C,EAAS5C,EAAE8mE,YAAYlkE,OAE7BmC,OAAO9B,WADP,WAA6BL,EAAOmkE,aAAe,IAChB,GAEnC9/D,EAAKy+D,iBAAiB1lE,EAAE4C,OAAOoB,UAGvC8G,EAAAH,QAAA/J,cAAA,SAAOoJ,UAAU,6BAA6BmY,QAASzc,KAAKG,MAAMtC,MAC7DmC,KAAKqd,MAAM/e,OAAS0B,KAAKG,MAAMia,YAChChV,EAAAH,QAAA/J,cAAC4yB,EAAAq+B,WAAU7nD,UAAU,4BAOjCc,EAAAH,QAAA/J,cAAA,OACIuJ,GAAIzE,KAAKG,MAAMsE,GACf9E,IAAK,SAAA4F,GAAUhE,EAAKs+D,SAAWt6D,GAC/BjB,UAAU,aACVyY,aAAc/c,KAAK+c,aACnBC,aAAchd,KAAKgd,cAEjBhd,KAAK2gE,mBACPv7D,EAAAH,QAAA/J,cAAC4yB,EAAA0+B,cACGloD,WAAW,EAAAU,EAAAC,SAAW,+CAClBq8D,8BAAgCthE,KAAKqd,MAAMqiD,qBAC3C6B,+BAAgCvhE,KAAKG,MAAM4Z,QAE/CpV,QAAS3E,KAAK4yD,mBAEjB5yD,KAAKG,MAAM4/D,cACR36D,EAAAH,QAAA/J,cAAC4yB,EAAAk/B,WACG1oD,WAAW,EAAAU,EAAAC,SAAW,4CAClBq8D,+BAAgCthE,KAAKqd,MAAMqiD,uBAE/C/6D,QAAS3E,KAAKqd,MAAMqiD,qBAAuB1/D,KAAKmgE,0BAAuB7iE,IAG/E8H,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,GAAIjiC,KAAKqd,MAAMoiD,sBACfrkE,QAAS,IACT8mC,YACIspB,uDAA4DxrD,KAAKG,MAAMoc,UAAvE,SACAkvC,gEAAiEzrD,KAAKG,MAAMoc,UAA5E,cACAmvC,qDAA2D1rD,KAAKG,MAAMoc,UAAtE,SAEJ4lB,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,sBAClBu8D,2BAAqD,SAAzBxhE,KAAKG,MAAMoc,aAG3CnX,EAAAH,QAAA/J,cAACumE,EAAAx8D,SACGtF,IAAK,SAAA4F,GAAUhE,EAAK6+D,SAAW76D,GAC/Bm8D,SAAU1hE,KAAKggE,iBACfc,sBAAuB9gE,KAAKG,MAAM++D,uBAC9Bl/D,KAAK8gE,sBAAsBjiE,KAAKmB,WAAQ1C,EAC5CkiE,SAAUx/D,KAAKqd,MAAMmiD,SACrBG,SAAU3/D,KAAKqd,MAAMsiD,SACrBgC,cAAe3hE,KAAKqd,MAAM/e,MAC1Bg5C,YAAat3C,KAAKG,MAAMm3C,YACxBunB,cAAe7+D,KAAKG,MAAM0+D,cAC1BM,oBAAqBn/D,KAAKG,MAAMg/D,oBAChC78B,OAAQtiC,KAAKG,MAAMmiC,OACnB+8B,SAAUr/D,KAAKG,MAAMk/D,SACrBD,SAAUp/D,KAAKG,MAAMi/D,SACrBvuD,WAAY7Q,KAAKG,MAAM0Q,WACvBvS,MAA2B,aAApB0B,KAAKG,MAAM3B,KAAsBwB,KAAKqd,MAAMkiD,WAAav/D,KAAKG,MAAM7B,oBASvGghE,EAAWsC,cACPtqB,YAAauqB,UAASD,aAAatqB,YACnC94C,KAAa,QAGjB8gE,EAAWp9D,UAAX7B,KACOwhE,UAAS3/D,WACZiX,eAAgB5Y,UAAU4c,MAC1BpD,MAAgBxZ,UAAUiF,oBAGf,EAAAhG,EAAAwB,UAASs+D,4GCvSxB,IAAA5wD,EAAA3U,EAAA,IACAgM,EAAAhM,EAAA,GAEA,IAAMinE,KACOD,8BAAA,IAAA1/D,2RAAAkJ,CAAAC,mBAAAC,KAAmB,SAAAC,EAAO0H,GAAP,IAAAU,EAAApa,EAAAqa,EAAAnZ,EAAAoZ,EAAAlK,EAAAmK,EAAaC,EAAbxR,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,GAAAA,UAAA,GAA0B,KAA1B,OAAA8I,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACvBsH,EADuB,CAAAxH,EAAAE,KAAA,eAAAF,EAAAuI,OAAA,uBAKtBf,KAAQ4uD,EALc,CAAAp2D,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAMajF,KAAG+M,gBAAgBR,GANhC,OAQxB,GAFMU,EANkBlI,EAAAwI,MAQpB,EAAArN,EAAAqK,kBAAiB0C,GAAyB,gBAAiB,YAC3D,IAASpa,EAAI,EAAGA,EAAIoa,EAAuB1D,cAAciE,QAAQza,OAAQF,IAErE,GADMqa,EAAaD,EAAuB1D,cAAciE,QAAQ3a,GAAGqa,WAE/D,IAASnZ,EAAI,EAAGA,EAAImZ,EAAWna,OAAQgB,IAEnC,GADMoZ,EAAUD,EAAWnZ,GAAGoZ,QAE1B,IAASlK,EAAI,EAAGA,EAAIkK,EAAQpa,OAAQkQ,IAC1BmK,EAASD,EAAQlK,GAClBk4D,EAAeluD,EAAuBQ,SAASlE,iBAChD4xD,EAAeluD,EAAuBQ,SAASlE,mBAEnD4xD,EAAeluD,EAAuBQ,SAASlE,eAAe6D,EAAOA,QACjEA,EAAOguD,OArBX,cAAAr2D,EAAAuI,OAAA,SA8BrB6tD,EAAe5uD,GAAMc,IA9BA,wBAAAtI,EAAAQ,SAAAV,OAAApN,MAAnB,gBAAA+nD,GAAA,OAAAhkD,EAAA9H,MAAAyG,KAAA0B,YAAAq/D,qKCLN97D,kWCAPlL,EAAA,QACAA,EAAA,IACA4U,EAAA5U,EAAA,IAGA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,6DAEM8nE,iBACF,SAAAA,EAAY1hE,gGAAOqB,CAAAxB,KAAA6hE,GAAA,IAAAl6D,mKAAA7F,CAAA9B,MAAA6hE,EAAA9/D,WAAAhJ,OAAAiJ,eAAA6/D,IAAA3oE,KAAA8G,KACTG,IADS2hE,EAAA5oE,KAAAyO,GAAA,IAEP2vC,EAAmCn3C,EAAnCm3C,YAAazmC,EAAsB1Q,EAAtB0Q,WAAYvS,EAAU6B,EAAV7B,MAC3BmiE,GAAe,EAAA9xD,EAAA+D,UAASpU,GAASuS,GAAYmB,OAAOslC,GAH3C,OAIf3vC,EAAK0V,OACD8H,cAAes7C,EACfp7C,cAAe/mB,EACfyjE,cAAe,OACfC,aAAe,GACfL,cAAe,IATJh6D,qUADAtF,UAAM08B,mDA2IhB,IAAAvhB,EAEkCxd,KAAKG,MADpCm3C,EADH95B,EACG85B,YAAaqqB,EADhBnkD,EACgBmkD,cAAer/B,EAD/B9kB,EAC+B8kB,OAAQu8B,EADvCrhD,EACuCqhD,cAAeM,EADtD3hD,EACsD2hD,oBACvDK,EAFChiD,EAEDgiD,SAAU3uD,EAFT2M,EAES3M,WAAY8uD,EAFrBniD,EAEqBmiD,SAFrBsC,EAGoDjiE,KAAKqd,MAAtD8H,EAHH88C,EAGG98C,cAAe48C,EAHlBE,EAGkBF,cAAe18C,EAHjC48C,EAGiC58C,cAClC68C,SAAiBC,SAUrB,OARIR,GACAO,EAAqBP,EAArB,KAAwD,IAAlBA,GAAsB,EAAAlzD,EAAA2C,UAAS,QAAS,EAAA3C,EAAA2C,UAAS,SACvF+wD,GAAa,IAEbD,GAAkB,EAAAzzD,EAAA2C,UAAS,6BAC3B+wD,GAAa,GAIb/8D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,WAAW6W,aAAYkK,GAClCjgB,EAAAH,QAAA/J,cAACknE,EAAAn9D,SACGkgB,cAAeA,EACf48C,cAAeA,EACf38C,iBAAkBplB,KAAKolB,iBACvBi9C,WAAYriE,KAAKqiE,WACjBC,WAAYtiE,KAAKsiE,aAErBl9D,EAAAH,QAAA/J,cAACqnE,EAAAt9D,SACGkgB,cAAeA,EACf48C,cAAeA,EACfzqB,YAAaA,EACblyB,iBAAkBplB,KAAKolB,iBACvBvU,WAAYA,EACZwU,cAAeA,EACfC,eAAgBtlB,KAAKslB,eACrBk6C,SAAUA,EACVL,oBAAqBA,EACrB6C,aAAchiE,KAAKqd,MAAM2kD,aACzBrC,SAAUA,EACV6C,YAAaxiE,KAAKwiE,YAClBxlD,aAAchd,KAAKgd,eAEvB5X,EAAAH,QAAA/J,cAACunE,EAAAx9D,SACGq9B,OAAQA,EACRq/B,cAAe3hE,KAAKqd,MAAMskD,eAAiBO,EAC3CC,WAAYA,EACZtD,cAAeA,EACfM,oBAAqBA,EACrBx6D,QAAS3E,KAAK0iE,kDAzK9BJ,WAAa,SAACK,GACVphE,EAAKgc,UAAWwkD,cAAeY,UAGnCN,WAAa,SAAC7B,GACVj/D,EAAKgc,UACD4H,eAAe,EAAAxW,EAAA+D,UAAS8tD,GAAUxuD,OAAOzQ,EAAKpB,MAAMm3C,cACrD,WACC,GAAI/1C,EAAKpB,MAAM2gE,sBAAuB,CAClC,IAAM8B,GAAiB,EAAAj0D,EAAAgqC,iBAAgB6nB,GACvCj/D,EAAKpB,MAAM2gE,sBAAsB8B,YAK7CJ,YAAc,SAAC9lE,GACX,IAAMQ,EAASR,EAAMwyB,cAEhBhyB,EAAOgxB,UAAUyT,SAAS,6BAAgCzkC,EAAOgxB,UAAUyT,SAAS,2BACrFzkC,EAAOoH,WAAa,yBACpB/C,EAAKgc,UACDykD,aAAe9kE,EAAO2lE,aAAa,aACnClB,cAAezkE,EAAO2lE,aAAa,0BAK/C7lD,aAAe,SAACtgB,GACZ,IAAMQ,EAASR,EAAMwyB,cAEjBhyB,EAAOgxB,UAAUyT,SAAS,2BAC1BzkC,EAAOgxB,UAAUE,OAAO,yBAExB7sB,EAAKgc,UACDykD,aAAe,KACfL,cAAe,cAK3BmB,mBAAqB,SAACxoE,GAAM,IAAAyoE,EAC8BxhE,EAAKpB,MAAnDm3C,EADgByrB,EAChBzrB,YAAa+nB,EADG0D,EACH1D,SAAUD,EADP2D,EACO3D,SAAUsC,EADjBqB,EACiBrB,SAEnCnwC,GAAc,EAAA5iB,EAAA+D,UAASpY,EAAE4C,OAAO8lE,QAAQ5wD,MAAMolC,QAAQ,OACtDyrB,EAAc1xC,EAAYla,UAAS,EAAA1I,EAAA+D,UAAS0sD,IAC5C8D,EAAc3xC,EAAYja,SAAQ,EAAA3I,EAAA+D,UAAS2sD,IAEjD,IAAI4D,IAAaC,EAAjB,CAIA,IAAMlsB,EAAiBzlB,EAAYvf,OAAOslC,GAC1C/1C,EAAKgc,UACD4H,cAAe6xB,EACf3xB,cAAe2xB,IAGf0qB,GACAA,EAAS1qB,UAIjB1xB,eAAiB,SAAChrB,EAAG0C,GAGjB,GAFI1C,GAAGA,EAAE6oE,kBAEI,QAATnmE,EAAJ,CAKA,IAKMoV,GAAO,EAAAzD,EAAA+D,UAASnR,EAAK8b,MAAM8H,eAAwB,WAATnoB,EAAoB,OAASA,GAAM1C,EAAE4C,OAAO8lE,QAAQhmE,GAAMuV,MAAM,KAAK,IAAIP,OAAOzQ,EAAKpB,MAAMm3C,aAEvI/1C,EAAK6jB,iBAAiBhT,EAAMpV,IAEhCuE,EAAKgc,UACD4H,cAAe/S,EACf2vD,eAVAqB,MAAQ,OACR5xC,KAAQ,QACR6xC,OAAQ,QAQgBrmE,IACzB,WACC,GAAIuE,EAAKpB,MAAM2gE,sBAAuB,CAClC,IAAM8B,GAAiB,EAAAj0D,EAAAgqC,iBAAgBvmC,GACvC7Q,EAAKpB,MAAM2gE,sBAAsB8B,WAnBrCrhE,EAAKuhE,mBAAmBxoE,SAwBhC+lE,cAAgB,WAAM,IAAAiD,EACkB/hE,EAAKpB,MAAjCm3C,EADUgsB,EACVhsB,YAAazmC,EADHyyD,EACGzyD,WAEf0yD,GAAe,EAAA50D,EAAA+D,UAAS7B,GAAYmB,OAAOslC,GACjD/1C,EAAKgc,UACD4H,cAAeo+C,EACfl+C,cAAe,GACf08C,cAAe,eAIvBW,SAAW,WAAM,IAAAc,EACqBjiE,EAAKpB,MAA/Bm3C,EADKksB,EACLlsB,YAAaoqB,EADR8B,EACQ9B,SAEf+B,GAAM,EAAA90D,EAAA+D,YAAWV,OAAOslC,GAC9B/1C,EAAKgc,UACD4H,cAAes+C,EACfp+C,cAAeo+C,EACf1B,cAAe,SAGfL,GACAA,EAAS+B,GAAK,SAItBr+C,iBAAmB,SAAChT,EAAMmI,GAAS,IAAAmpD,EACAniE,EAAKpB,MAA5Bk/D,EADuBqE,EACvBrE,SAAUD,EADasE,EACbtE,SAEZuE,GAAkB,EAAAh1D,EAAA+D,UAASN,GAAMmF,QAAQigC,QAAQj9B,GAEvD,OADwB,EAAA5L,EAAA+D,UAASN,GAAMmF,QAAQqsD,MAAMrpD,GAChClD,UAAS,EAAA1I,EAAA+D,UAAS0sD,KAChCuE,EAAgBrsD,SAAQ,EAAA3I,EAAA+D,UAAS2sD,SAsDhDwC,EAASD,cACLtqB,YAAa,aACb8nB,UAAa,EAAAzwD,EAAA+D,YAAWV,OAAO,cAC/BqtD,UAAa,EAAA1wD,EAAA+D,YAAW8E,IAAI,IAAK,KAAKxF,OAAO,eAGjD6vD,EAAS3/D,WACLo1C,YAAe/2C,UAAUiF,OACzBm8D,cAAephE,UAAUiM,WACrBjM,UAAUkM,OACVlM,UAAUiF,SAEd88B,OAAqB/hC,UAAUiF,OAC/B25D,oBAAqB5+D,UAAUkF,KAC/Bo5D,cAAqBt+D,UAAUkF,KAC/B+5D,SAAqBj/D,UAAUsjE,QAC3BtjE,UAAUujE,OACN5C,MAAS3gE,UAAU4c,MACnBgkD,QAAS5gE,UAAUiF,UAG3B65D,SAAU9+D,UAAUiM,WAChBjM,UAAUxB,OACVwB,UAAUiF,SAEd45D,SAAU7+D,UAAUiM,WAChBjM,UAAUxB,OACVwB,UAAUiF,SAEds7D,sBAAuBvgE,UAAUmF,KACjCg8D,SAAuBnhE,UAAUmF,KACjCmL,WAAuBtQ,UAAUiM,WAC7BjM,UAAUkM,OACVlM,UAAUiF,SAEdlH,MAAUiC,UAAUiF,OACpBm6D,SAAUp/D,UAAUsjE,QAAQtjE,UAAUkM,mBAG3Bo1D,iFC/Of,QAAA9nE,EAAA,QACAA,EAAA,IACAgqE,EAAAhqE,EAAA,wDAMA,IAAMiqE,EAAe,SAAC7jE,GAClB,IAAM8jE,GACF7xD,KAAQhN,EAAAH,QAAA/J,cAAC6oE,EAAAG,aAAoB/jE,GAC7BijE,MAAQh+D,EAAAH,QAAA/J,cAAC6oE,EAAAI,eAAoBhkE,GAC7BqxB,KAAQpsB,EAAAH,QAAA/J,cAAC6oE,EAAAK,cAAoBjkE,GAC7BkjE,OAAQj+D,EAAAH,QAAA/J,cAAC6oE,EAAAM,gBAAoBlkE,IAGjC,OACIiF,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACM23D,EAAc9jE,EAAM4hE,iBAKlCiC,EAAa9hE,WACT6/D,cAAexhE,UAAUiF,kBAGdw+D,8FC3BfjrE,OAAA0J,KAAA6hE,GAAA3hE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAomE,EAAA1lE,qBACA7F,OAAA0J,KAAA8hE,GAAA5hE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAqmE,EAAA3lE,qBACA7F,OAAA0J,KAAA+hE,GAAA7hE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAsmE,EAAA5lE,qBACA7F,OAAA0J,KAAAgiE,GAAA9hE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAumE,EAAA7lE,yRCHA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAg0C,EAAAh0C,EAAA,KACA2I,EAAA3I,EAAA,KAGA4U,EAAA5U,EAAA,IAOA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,wDAEA,IAoHamqE,iBAAe,SAAC/jE,GACzB,IAAMukE,EArHM,SAAArjE,GA6BZ,IAhBE,IAZF8jB,EAYE9jB,EAZF8jB,cACAmyB,EAWEj2C,EAXFi2C,YACA6nB,EAUE99D,EAVF89D,oBACAK,EASEn+D,EATFm+D,SACAwC,EAQE3gE,EARF2gE,aACA58C,EAOE/jB,EAPF+jB,iBACAvU,EAMExP,EANFwP,WACAwU,EAKEhkB,EALFgkB,cACAC,EAIEjkB,EAJFikB,eACAq6C,EAGEt+D,EAHFs+D,SACA6C,EAEEnhE,EAFFmhE,YACAxlD,EACE3b,EADF2b,aAMMkkD,KACAwD,KACAC,GAAqB,EAAAh2D,EAAA+D,YAAW8kC,QAAQ,OACxCotB,GAAqB,EAAAj2D,EAAA+D,UAASyS,GAC9B8yB,EAAqB2sB,EAAgBC,cAAgB,EACrDC,EAAqBF,EAAgBrtD,QAAQigC,QAAQ,SACrDutB,EAAqBH,EAAgBrtD,QAAQqsD,MAAM,SACnDoB,GAAqB,EAAAr2D,EAAA+D,UAAS2S,GAI3B3sB,GADiB,EAAAiW,EAAA4pC,WAAUqsB,EAAiB,GAAGhB,MAAM,SAAS1jD,MACvCxnB,EAAI,EAAGA,IACnCwoE,EAAMpoE,MAAK,EAAA6V,EAAA2pC,SAAQwsB,EAAoBpsE,GAAGsZ,OAAOslC,IAGrD,IAAK,IAAI5d,EAAM,EAAGA,EAAMue,EAAave,GAAO,EACxCwnC,EAAMpoE,KAAK8rE,EAAgBrtD,QAAQvF,OAAOslC,EAAY3pC,QAAQ,MAAM,EAAAogC,EAAAk3B,SAAQvrC,EAAK,EAAG,QAGxF,IAAMwrC,GAAsB,EAAAv2D,EAAAupC,WAAU0sB,EAAiB,GAAGptB,QAAQ,SAASt3B,MAC3E,GAAIglD,EAtBe,EAsBoB,GAAKhE,EAAMtoE,QAAU,GAExD,IAAK,IAAIF,EAAI,EAAGA,GAAK,EAAIwsE,EAxBV,EAwB4CxsE,IACvDwoE,EAAMpoE,MAAK,EAAA6V,EAAAqpC,SAAQ+sB,EAAkBrsE,EAAG,OAAOsZ,OAAOslC,SAElD4tB,GAERhE,EAAMpoE,MAAK,EAAA6V,EAAAqpC,SAAQ+sB,EAAkB,GAAG/yD,OAAOslC,IAGnD,IAAM6tB,GAAoB,EAAAx2D,EAAA+D,UAAS7B,GAAY2mC,QAAQ,OAiEvD,OA/DA0pB,EAAMr5D,IAAI,SAACuK,GACP,IAAMmf,GAAiB,EAAA5iB,EAAA+D,UAASN,GAAMolC,QAAQ,OACxC4tB,GAAiB,EAAAz2D,EAAA+D,UAASsvD,GAAcxqB,QAAQ,OAChD6tB,EAAiBhgD,GAAiBkM,EAAY6sC,OAAO4G,GACrDM,EAAiB/zC,EAAY6sC,OAAOuG,EAAc,OAElD1D,EAAkBzB,EAASzpD,OAAO,SAAArZ,GAAA,OAEpCA,EAAMwkE,MAAM9zD,KAAK,SAAAxP,GAAA,OAAKA,IAAMwU,IAAQ,EAAA1P,EAAAouB,kBAAiBlzB,MAAO,EAAA+Q,EAAA+D,UAASN,GAAM8N,UACzEqlD,IAAyBtE,EAAOroE,OAChC4sE,EAAuBvE,EAAOp5D,IAAI,SAAAnL,GAAA,QAAWA,EAAMykE,QAAQxhD,MAAM,6BAA4B,GAC7FnD,EAAuBykD,EAAOp5D,IAAI,SAAAnL,GAAA,OAASA,EAAMykE,UAAS,IAAM,GAChEsE,GAAuB,EAAA92D,EAAA4oC,iBAAgBnlC,GACvCszD,EAAuBn0C,EAAY6D,UAAUuvC,EAAcK,GAC3DW,EAAuBp0C,EAAY6D,UAAUuvC,EAAcS,GAC3DQ,EAAkCxgD,EAAiBmM,EAAa,OAChE7sB,EAEFkhE,GAEK/0D,IAAe0gB,EAAYla,SAAS8tD,IACtC5zC,EAAYja,SAAQ,EAAA3I,EAAAqpC,SAAQmtB,EAAmB,MAE/CxF,EAASx/C,KAAK,SAAAD,GAAA,OAAO,EAAAvR,EAAA+D,UAASN,GAAM8N,QAAUA,KAE9CqlD,IAAeC,EAGhBK,EAAiBt0C,EAAY6xC,UAAYwB,EAAgBxB,QAE/DsB,EAAK5rE,KACDsM,EAAAH,QAAA/J,cAAA,QACI0D,IAAKwT,EACL9N,WAAW,EAAAU,EAAAC,SAAW,kBAClB6gE,yBAAmCT,EACnCU,wBAAmCT,EACnCU,kCAAmCX,GAAalG,IAAwBmG,EACxEW,iCAAmCX,GAAYnG,EAC/C+G,2BAAmCxhE,EACnCyhE,wBAAmCN,EACnCO,gCAAmCT,GAAoBxG,EACvDkH,0BAAmCX,GAAcvG,IAErDx6D,QAASD,OAAcpH,EAAY,SAAChD,GAAD,OAAOgrB,EAAehrB,EAAG,QAC5DgsE,YAAWl0D,EACXm0D,gBAAkBd,EAAlB,KAAkE,IAAxBA,GAA4B,EAAAh3D,EAAA2C,UAAS,QAAS,EAAA3C,EAAA2C,UAAS,SACjGoxD,YAAaA,EACbxlD,aAAcA,IAEXuoD,GAAcC,KAAqBK,IAAmBD,GACrDxgE,EAAAH,QAAA/J,cAACmhB,EAAApX,SACGsX,UAAU,MACVjY,UAAU,yBACVmZ,cAAc,8BACdC,KAAK,MACLlB,QAASA,IAGhB+U,EAAYnf,WAKlBsyD,EAIM8B,CAAQrmE,GAAO0H,IAAI,SAAAqY,GAAA,OAAOA,IAEvC,OACI9a,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uCACTvL,OAAO0J,KAAKouB,qBACThpB,IAAI,SAACyJ,EAAMooB,GAAP,OACDt0B,EAAAH,QAAA/J,cAAA,QAAM0D,IAAK86B,EAAKp1B,UAAU,uCAAuCusB,oBAAkBvf,MAGzFozD,IAKdR,EAAatC,cACTpC,YACAG,aAGJuE,EAAahiE,UAAb7B,KACO6kB,WACHoyB,YAAqB/2C,UAAUiF,OAC/B25D,oBAAqB5+D,UAAUkF,KAC/B+5D,SAAqBj/D,UAAUsjE,QAC3BtjE,UAAUujE,OACN5C,MAAS3gE,UAAU4c,MACnBgkD,QAAS5gE,UAAUiF,UAG3Bw8D,aAAczhE,UAAUiF,OACxBwX,aAAczc,UAAUmF,KACxB88D,YAAcjiE,UAAUmF,KACxBmL,WAActQ,UAAUiM,WACpBjM,UAAUkM,OACVlM,UAAUiF,SAEdm6D,SAAUp/D,UAAUsjE,QAAQtjE,UAAUkM,6RC3K1C1S,EAAA,QACAA,EAAA,IACA2I,EAAA3I,EAAA,KACA4U,EAAA5U,EAAA,QACAA,EAAA,0DAEaoqE,iBAAiB,SAAA9iE,GAKxB,IAJF8jB,EAIE9jB,EAJF8jB,cACAC,EAGE/jB,EAHF+jB,iBACAC,EAEEhkB,EAFFgkB,cACAC,EACEjkB,EADFikB,eAEMiM,GAAuB,EAAA5iB,EAAA+D,UAASyS,GAChCshD,GAAuB,EAAA93D,EAAA+D,UAAS2S,GAEtC,OACIjgB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wCACTvL,OAAO0J,KAAK+sB,iBAAe3nB,IAAI,SAACu7D,EAAO1pC,GACrC,IAAM2rC,EAAcjC,IAAUqD,EAAqBlvD,QAAQvF,OAAO,QAAUy0D,EAAqBrI,OAAO7sC,EAAa,QAC/G7sB,EAAc0gB,EAAiBmM,EAAYha,QAAQ6rD,MAAMA,GAAQ,SACvE,OACIh+D,EAAAH,QAAA/J,cAAA,QACI0D,IAAK86B,EACLp1B,WAAW,EAAAU,EAAAC,SAAW,kBAClB6gE,yBAA4BT,EAC5Ba,2BAA4BxhE,IAEhCC,QAASD,OAAcpH,EAAY,SAAChD,GAAD,OAAOgrB,EAAehrB,EAAG,UAC5DosE,aAAYtD,GAEX5zC,gBAAc4zC,SASxBlhE,UAAf7B,KAAgC6kB,gsBCvChCnrB,EAAA,QACAA,EAAA,IACA4U,EAAA5U,EAAA,QACAA,EAAA,MACA4sE,EAAA5sE,EAAA,yDAEaqqE,gBAAgB,SAAA/iE,GAWzB,IANE,IAJF8jB,EAIE9jB,EAJF8jB,cACAC,EAGE/jB,EAHF+jB,iBACAC,EAEEhkB,EAFFgkB,cACAC,EACEjkB,EADFikB,eAEM0/C,GAAkB,EAAAr2D,EAAA+D,UAAS2S,GAC3BkM,GAAkB,EAAA5iB,EAAA+D,UAASyS,GAF/ByhD,GAGuC,EAAAD,EAAAr1C,WAAUC,GAAahf,MAAM,KAHpEs0D,EAAAp0D,EAAAm0D,EAAA,GAGKE,EAHLD,EAAA,GAGsBE,EAHtBF,EAAA,GAKIG,KACGx1C,GAAQs1C,EAAkB,EAAGt1C,IAASu1C,EAAgB,EAAGv1C,IAC9Dw1C,EAAMluE,KAAK04B,GAEf,OACIpsB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uCACT0iE,EAAMn/D,IAAI,SAAC2pB,EAAMkI,GACf,IAAMutC,EAA0B,IAARvtC,GAAqB,KAARA,EAC/Bh1B,EAAkB0gB,EAAiBmM,EAAYha,QAAQia,KAAKA,GAAO,QACzE,OACIpsB,EAAAH,QAAA/J,cAAA,QACI0D,IAAK86B,EACLp1B,WAAW,EAAAU,EAAAC,SAAW,kBAClB6gE,yBAA4Bt0C,IAASwzC,EAAgBxzC,OACrD20C,wBAA4Bc,EAC5Bf,2BAA4BxhE,IAEhCC,QAASD,OAAcpH,EAAY,SAAChD,GAAD,OAAOgrB,EAAehrB,EAAG,SAC5D4sE,YAAW11C,GAEVA,QASXtvB,UAAd7B,KAA+B6kB,ksBC7C/BnrB,EAAA,QACAA,EAAA,IACA4U,EAAA5U,EAAA,QACAA,EAAA,MACA4sE,EAAA5sE,EAAA,yDAIasqE,kBAAkB,SAAAhjE,GAY3B,IAPE,IAJF8jB,EAIE9jB,EAJF8jB,cACAC,EAGE/jB,EAHF+jB,iBACAC,EAEEhkB,EAFFgkB,cACAC,EACEjkB,EADFikB,eAEM0/C,GAAkB,EAAAr2D,EAAA+D,UAAS2S,GAC3BkM,GAAkB,EAAA5iB,EAAA+D,UAASyS,GAG3BgiD,KACFC,IAHoB,EAAAT,EAAAl1C,YAAWF,GAAahf,MAAM,KAAK,GAG9B,GACpB7Z,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAM2qE,GAAS,EAAAsD,EAAAr1C,YAAU,EAAA3iB,EAAA+D,YAAW8e,KAAK41C,IACzCD,EAAQruE,KAAKuqE,GACb+D,GAAY/D,EAAO9wD,MAAM,KAAK,GAAK,EAEvC,OACInN,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yCACT6iE,EAAQt/D,IAAI,SAACw7D,EAAQ3pC,GAAQ,IAAA2tC,EACchE,EAAO9wD,MAAM,KAD3B+0D,EAAA70D,EAAA40D,EAAA,GACpBP,EADoBQ,EAAA,GACHP,EADGO,EAAA,GAErBjC,GAAgByB,IAAoB9B,EAAgBxzC,OACpD9sB,EAAe0gB,EAAiBmM,EAAYha,QAAQia,KAAKs1C,GAAkB,SAC7E1hD,EAAiBmM,EAAYha,QAAQia,KAAKu1C,GAAgB,QACxDQ,EAA2B,IAAR7tC,GAAqB,KAARA,EACtC,OACIt0B,EAAAH,QAAA/J,cAAA,QACI0D,IAAK86B,EACLp1B,WAAW,EAAAU,EAAAC,SAAW,kBAClB6gE,yBAA4BT,EAC5Ba,2BAA4BxhE,EAC5ByhE,wBAA4BoB,IAEhC5iE,QAASD,OAAcpH,EAAY,SAAChD,GAAD,OAAOgrB,EAAehrB,EAAG,WAC5DktE,cAAanE,GAEZA,QASTnhE,UAAhB7B,KAAiC6kB,0FCrDjC,QAAAnrB,EAAA,QACAA,EAAA,IACA+zB,EAAA/zB,EAAA,IACA0U,EAAA1U,EAAA,sDAEA,IAAM0tE,EAAiB,SAAApmE,GAAA,IACnBihC,EADmBjhC,EACnBihC,OACAu8B,EAFmBx9D,EAEnBw9D,cACAM,EAHmB99D,EAGnB89D,oBACAwC,EAJmBtgE,EAInBsgE,cACAQ,EALmB9gE,EAKnB8gE,WACAx9D,EANmBtD,EAMnBsD,QANmB,OAQnBS,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACOuyD,GAAiBv8B,GAAU68B,IAC1B/5D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACTg+B,GAAUl9B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,kBAAkBg+B,GAC5C68B,GAAuB/5D,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,kBAAhB,IAAuC69D,EAAsC,IAAzB,EAAA1zD,EAAA2C,UAAS,eAAqBuwD,GACzG9C,GACEz5D,EAAAH,QAAA/J,cAAC4yB,EAAAy+B,mBACGjoD,UAAU,iBACVK,QAASA,OAQjC8iE,EAAevlE,WACXy/D,cAAqBphE,UAAUiF,OAC/B88B,OAAqB/hC,UAAUiF,OAC/B25D,oBAAqB5+D,UAAUkF,KAC/Bo5D,cAAqBt+D,UAAUkF,KAC/B08D,WAAqB5hE,UAAUkF,KAC/Bd,QAAqBpE,UAAUmF,gBAGpB+hE,iFCtCf,QAAA1tE,EAAA,QACAA,EAAA,QACAA,EAAA,IACA+zB,EAAA/zB,EAAA,IAKA2I,EAAA3I,EAAA,KACA4U,EAAA5U,EAAA,QAMAA,EAAA,MACA4sE,EAAA5sE,EAAA,wDAIA,IAAM2tE,EAAiB,SAAArmE,GAQjB,IAPF8jB,EAOE9jB,EAPF8jB,cACA48C,EAME1gE,EANF0gE,cACA4F,EAKEtmE,EALFsmE,uBACA1I,EAIE59D,EAJF49D,sBACA75C,EAGE/jB,EAHF+jB,iBACAi9C,EAEEhhE,EAFFghE,WACAC,EACEjhE,EADFihE,WAEMsF,EAAmC,SAAlB7F,EACjB8F,EAAmC,UAAlB9F,EACjB+F,EAAmC,SAAlB/F,EACjBgG,EAAmC,WAAlBhG,EACjBxwC,GAAiB,EAAA5iB,EAAA+D,UAASyS,GAE5BkzB,EAAe,EACfyvB,IAAgBzvB,EAAe,IAC/B0vB,IAAgB1vB,EAAe,KAEnC,IAAM2vB,GAAU,EAAArB,EAAAl1C,YAAWF,EAAYha,SACjC8rD,GAAU,EAAAsD,EAAAr1C,WAAUC,EAAYha,SAChCwvD,GAAiBe,EAAezE,EAAS2E,GAASz1D,MAAM,KAAK,GAE7D01D,EAA0B7iD,GAAiB,EAAAzW,EAAA4pC,WAAUhnB,EAAa,GAAI,SACtE22C,EAA0B9iD,GAAiB,EAAAzW,EAAA6pC,UAASjnB,EAAa8mB,GAAe,SAChF8vB,EAA0B/iD,GAAiB,EAAAzW,EAAAupC,WAAU3mB,EAAa,GAAI,SACtE62C,EAA0BhjD,GAAiB,EAAAzW,EAAAypC,UAAS7mB,EAAa8mB,GAAe,SAChFgwB,EAA0BjjD,EAAiBmM,EAAYha,QAAQia,KAAKu1C,GAAgB,SAAW9H,EAErG,OACI75D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAACotE,EAAArjE,SACGX,WAAW,EAAAU,EAAAC,SAAW,0CAClBsjE,0BAA2BL,IAE/BvjE,QAASujE,OAAwB5qE,EAAY,kBAAM+kE,GAAW,EAAA1zD,EAAA6pC,UAASrzB,EAAekzB,MAEtFjzC,EAAAH,QAAA/J,cAAC4yB,EAAA2+B,uBAAsBnoD,UAAU,oBAErCc,EAAAH,QAAA/J,cAACotE,EAAArjE,SACGX,WAAW,EAAAU,EAAAC,SAAW,2CAClBsjE,0BAA2BN,IAE/BO,WAAYZ,EACZjjE,QAASsjE,OAAyB3qE,EAAY,kBAAM+kE,GAAW,EAAA1zD,EAAA4pC,WAAUpzB,EAAe,MAExF/f,EAAAH,QAAA/J,cAAC4yB,EAAAgI,iBAAgBxxB,UAAU,oBAG/Bc,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACMs7D,GACExiE,EAAAH,QAAA/J,cAACotE,EAAArjE,SACGX,UAAU,sCACVkkE,WAAYZ,EACZ7tD,MAAOyV,gBAAc+B,EAAYvf,OAAO,QACxCrN,QAAS,kBAAMgjE,OAAyBrqE,EAAYglE,EAAW,aAGpEsF,GAAgBC,IACfziE,EAAAH,QAAA/J,cAACotE,EAAArjE,SACGX,WAAW,EAAAU,EAAAC,SAAW,uCAClBwjE,0BAA2BJ,IAE/BtuD,MAAOwX,EAAYvf,OAAO,QAC1BrN,QAAS,kBAAM0jE,OAA0B/qE,EAAYglE,EAAW,YAGrEwF,GAAgBC,IACf3iE,EAAAH,QAAA/J,cAACotE,EAAArjE,SACGX,WAAW,EAAAU,EAAAC,SAAW,uCAClBwjE,0BAA2BJ,IAE/B1jE,QAAS0jE,OAA0B/qE,EAAY,kBAAMglE,EAAW,YAE9DwF,MAAqBzE,EACrB0E,MAAqBC,IAKnC5iE,EAAAH,QAAA/J,cAACotE,EAAArjE,SACGX,WAAW,EAAAU,EAAAC,SAAW,2CAClBsjE,0BAA2BJ,IAE/BK,WAAYZ,EACZjjE,QAASwjE,OAAyB7qE,EAAY,kBAAM+kE,GAAW,EAAA1zD,EAAAupC,WAAU/yB,EAAe,MAExF/f,EAAAH,QAAA/J,cAAC4yB,EAAAkI,kBAAiB1xB,UAAU,oBAEhCc,EAAAH,QAAA/J,cAACotE,EAAArjE,SACGX,WAAW,EAAAU,EAAAC,SAAW,0CAClBsjE,0BAA2BH,IAE/BzjE,QAASyjE,OAAwB9qE,EAAY,kBAAM+kE,GAAW,EAAA1zD,EAAAypC,UAASjzB,EAAekzB,MAEtFjzC,EAAAH,QAAA/J,cAAC4yB,EAAA4+B,wBAAuBpoD,UAAU,sBAMlDojE,EAAexlE,WACXijB,cAAwB5kB,UAAUiF,OAClCu8D,cAAwBxhE,UAAUiF,OAClCmiE,uBAAwBpnE,UAAUkF,KAClCw5D,sBAAwB1+D,UAAUkF,KAClC2f,iBAAwB7kB,UAAUmF,KAClC28D,WAAwB9hE,UAAUmF,KAClC48D,WAAwB/hE,UAAUmF,gBAGvBgiE,iFCnIf,QAAA3tE,EAAA,QACAA,EAAA,uDAEA,IAAM2uE,EAAiB,SAAArnE,GAAA,IACnB3B,EADmB2B,EACnB3B,SACA4E,EAFmBjD,EAEnBiD,UACAkkE,EAHmBnnE,EAGnBmnE,UACAzuD,EAJmB1Y,EAInB0Y,MACApV,EALmBtD,EAKnBsD,QALmB,OAOnBS,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,MACOk8D,GACCpjE,EAAAH,QAAA/J,cAAA,UACIoJ,UAAWA,EACXK,QAASA,GAERoV,EACAra,KAMjBgpE,EAAexmE,WACXxC,SAAUa,UAAUiM,WAChBjM,UAAU4c,MACV5c,UAAUxB,OACVwB,UAAUiF,SAEdlB,UAAW/D,UAAUiF,OACrBgjE,UAAWjoE,UAAUkF,KACrBsU,MAAWxZ,UAAUiF,OACrBb,QAAWpE,UAAUmF,gBAGVgjE,oKCnCRzjE,iGCAP,QAAAlL,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,IACA4U,EAAA5U,EAAA,QAGAA,EAAA,MACA4uE,EAAA5uE,EAAA,wDAIA,IAAM6uE,EAAoB,SAAAvnE,GAOpB,IANF2V,EAME3V,EANF2V,YACAW,EAKEtW,EALFsW,YACAC,EAIEvW,EAJFuW,mBACAkwC,EAGEzmD,EAHFymD,kBACA3tC,EAEE9Y,EAFF8Y,SACAyF,EACEve,EADFue,YAEMipD,GAAqB,EAAAl6D,EAAA+D,UAASsE,GAC9B8xD,GAAwB,EAAAn6D,EAAAuoC,SAAQ2xB,EAAmBtxD,QAASuwC,EAAkB,IAC9EihB,GAAwB,EAAAp6D,EAAAuoC,SAAQ2xB,EAAmBtxD,QAASK,EAAmBrY,OAAO,GAAG,IACzFypE,GAAkB,EAAAr6D,EAAAuoC,SAAQ2xB,EAAmBtxD,QAASI,GACtDsxD,GAAkB,EAAAt6D,EAAA+D,UAASkN,GAE3BspD,GAAa,EAAAP,EAAAQ,eACfF,EAAgB1xD,QAChBuxD,EAAqBvxD,QACrBwxD,GACEK,GAAgB,EAAAT,EAAAU,iBAClBJ,EAAgB1xD,QAChByxD,EACAF,GACJ,OACI1jE,EAAAH,QAAA/J,cAACujE,EAAAx5D,SACG6S,SAAUoxD,EAAW9lD,IACrBjJ,SAAUA,EACVtc,KAAK,cACLuc,YAAY,QACZvC,WAAYqxD,EAAW/lD,MACvBimD,cAAeA,KAK3BR,EAAkB1mE,WACd8U,YAAazW,UAAUiM,WACnBjM,UAAUiF,OACVjF,UAAUkM,SAEdkL,YAAoBpX,UAAUiF,OAC9BoS,mBAAoBrX,UAAU4c,MAC9Btf,KAAoB0C,UAAUiF,OAC9B2U,SAAoB5Z,UAAUmF,KAC9Bka,YAAoBrf,UAAUxB,mBAGnB,EAAA8yB,EAAAlxB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAASsH,EAAZ+R,EAAY/R,OAAZ,OACI0P,oBAAqBhX,EAAQ0nB,MAAM1Q,oBACnCwH,YAAqBxe,EAAQ0nB,MAAMlJ,YACnCX,YAAqB7d,EAAQ0nB,MAAM7J,YACnCY,mBAAqBze,EAAQ0nB,MAAMjJ,mBACnCkwC,kBAAqB3uD,EAAQ0nB,MAAMinC,kBACnC3tC,SAAqBhhB,EAAQ0nB,MAAM1G,SACnCyF,YAAqBnf,EAAOmf,cARrB,CAUbgpD,qKCnEK3jE,0iBCAPlL,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,QACAA,EAAA,UACAA,EAAA,KACAuJ,EAAAvJ,EAAA,+NAEMuvE,6SACFjsD,OAAUukB,SAAS,KAUnB2nC,eAAiB,WACb5hE,EAAK4V,SAAS,SAACF,GAAD,OAAcukB,SAAUvkB,EAAMukB,cAGhD4nC,aAAe,SAACC,GAEZ,IAAMnrE,EAAuB,iBAAf,IAAOmrE,EAAP,YAAAzzD,EAAOyzD,IAAmBA,EAAIvsE,OAAOksE,cAAgBK,EAE/DnrE,IAAUqJ,EAAKxH,MAAMipE,eACrBzhE,EAAKxH,MAAMga,UAAWjd,QAAUW,KAAM8J,EAAKxH,MAAMtC,KAAMS,cAI/DorE,QAAU,SAACnkE,GACFA,IACiB,UAAlBA,EAAKokE,SAIThiE,EAAK8rD,YAAcluD,EAHfoC,EAAKiiE,eAAiBrkE,MAM9Bm8B,mBAAqB,SAAChlC,GACdiL,EAAK8rD,cAAgB9rD,EAAK8rD,YAAY9xB,SAASjlC,EAAMQ,SACjDyK,EAAK0V,MAAMukB,SACXj6B,EAAK4V,UAAWqkB,SAAS,+UApChBv/B,UAAMvB,0DAIvB/F,SAASo0B,iBAAiB,YAAanvB,KAAK0hC,mEAI5C3mC,SAASq0B,oBAAoB,YAAapvB,KAAK0hC,qDAkC/C,IADKlkB,EAUDxd,KAAKG,MAPLipE,EAHC5rD,EAGD4rD,cACAvrE,EAJC2f,EAID3f,KACA89B,EALCne,EAKDme,gBACAvhB,EANCoD,EAMDpD,YACAtC,EAPC0F,EAOD1F,SACAD,EARC2F,EAQD3F,WACA5O,EATCuU,EASDvU,kBAEJ,OACI7D,EAAAH,QAAA/J,cAAA,OACIyE,IAAKK,KAAK0pE,QACVplE,WAAW,EAAAU,EAAAC,SAbE,oIAaFyC,IACDmiE,uBAA0B7pE,KAAKG,MAAMoxD,WAG3C51B,EACMv2B,EAAAH,QAAA/J,cAAA,SACE8B,KAAK,OACLyH,GAAOolE,oBACPvrE,MAAO8qE,EACPjvD,SAAUna,KAAKwpE,aACf3rE,KAAMA,EACNkhB,IAAKlH,EACLoH,IAAKnH,IAGL1S,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACq8D,EAAAtyD,SACGkU,eAAgBlQ,EAChBjM,KAAK,OACL0c,cAAA,EACAjV,GAAOolE,oBACPvlE,WAAW,EAAAU,EAAAC,SAAc4kE,qBACzBvrE,MAAO8qE,EACPzkE,QAAS3E,KAAKupE,eACd1rE,KAAMA,EACNuc,YAAaA,IAEjBhV,EAAAH,QAAA/J,cAACoI,EAAA2yB,WAAU3xB,UAAculE,sBACzBzkE,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,GAAKjiC,KAAKqd,MAAMukB,QAChBM,YACIspB,MAAW,6BACXC,UAAW,kCACXC,KAAW,6BAEftwD,QAAS,IACT+mC,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAC4uE,EAAA7kE,SACG6S,SAAUA,EACVD,WAAYA,EACZvT,UAAW,YACX6V,SAAUna,KAAKwpE,aACfO,SAxDX,cAyDWX,cAAeA,gBAWvDE,EAAWpnE,WACP4V,SAAUvX,UAAUiM,WAChBjM,UAAUkM,OACVlM,UAAUiF,OACVjF,UAAUxB,SAEdghE,aAAiBx/D,UAAUkF,KAC3Bk2B,gBAAiBp7B,UAAUkF,KAC3B5H,KAAiB0C,UAAUiF,OAC3B2U,SAAiB5Z,UAAUmF,KAC3B6rD,QAAiBhxD,UAAUiF,OAC3B4U,YAAiB7Z,UAAUiF,OAC3B4jE,cAAiB7oE,UAAUiF,OAC3BqS,WAAiBtX,UAAUiM,WACvBjM,UAAUkM,OACVlM,UAAUiF,OACVjF,UAAUxB,qBAIH,EAAAS,EAAAwB,UAASsoE,6fC3IxBvvE,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACA4U,EAAA5U,EAAA,uSAEA,IAAMiwE,EAAS,SAAA3oE,GAOT,IANF0oE,EAME1oE,EANF0oE,SACAX,EAKE/nE,EALF+nE,cACAtxD,EAIEzW,EAJFyW,SACAD,EAGExW,EAHFwW,WACAsC,EAEE9Y,EAFF8Y,SACA7V,EACEjD,EADFiD,UAEM2lE,EAAwBpyD,GACxB,EAAAlJ,EAAA+D,UAASmF,IACT,EAAAlJ,EAAA+D,YACAw3D,EAAwBpyD,GACxB,EAAAnJ,EAAA+D,UAASoF,IACT,EAAAnJ,EAAA+D,YAAWT,KAAK,MAAMF,OAAO,MAAM2lC,QAAQ,MAAMyyB,aAAa,OAC9DC,GAAwB,EAAAz7D,EAAA+D,YAP5B23D,EAQ4BjB,EAAc72D,MAAM,KARhD+3D,EAAA73D,EAAA43D,EAAA,GAQMp4D,EARNq4D,EAAA,GAQYv4D,EARZu4D,EAAA,GASI/4D,KAAWtP,OAAA8N,EAAInO,MAAM,IAAIa,SAAQoF,IAAI,SAAC2J,GAAD,OAAK,IAAIA,GAAIjS,OAAO,KACzDkS,KAAWxP,OAAA8N,EAAInO,MAAM,IAAIa,SAAQoF,IAAI,SAAC2J,GAAD,OAAK,IAAQ,EAAJA,GAAQjS,OAAO,KAE7DgrE,EAAe,SAACvtE,EAAMwtE,EAAeC,GACvC,MADyE/oE,UAAA9I,OAAA,QAAA0E,IAAAoE,UAAA,KAAAA,UAAA,KACvD+oE,EAAY,KAAAC,EACSD,EAAWl4D,MAAM,KAD1Bo4D,EAAAl4D,EAAAi4D,EAAA,GAClBE,EADkBD,EAAA,GACPE,EADOF,EAAA,IAEZ,MAAT3tE,GAAgBwtE,IAAkBI,GAAwB,MAAT5tE,GAAgBwtE,IAAkBK,IACpF1wD,GAAqB,MAATnd,EAAewtE,EAAgBI,GAA3C,KAAiE,MAAT5tE,EAAewtE,EAAgBK,MAKnG,OACIzlE,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAc8kE,EAAd,cAAqCzlE,IACjDc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAcylE,EAAd,cACD3kE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAcylE,EAAd,qBACD3kE,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAc8kE,EAAd,wBAA+C,gBAAgB3kE,EAAAH,QAAA/J,cAAA,eAAS,EAAAuT,EAAA2C,UAAS,UACjGhM,EAAAH,QAAA/J,cAAA,WACKqW,EAAM1J,IAAI,SAACqK,EAAGtT,GACXwrE,EAAkBn4D,KAAKC,GAAGH,OAAOA,GACjC,IAAM+4D,EAAaV,EAAkBh1C,UAAU60C,EAAmBC,IAC3DE,EAAkBh1C,UAAU60C,EAAmBC,EAAiB,UACvE,OACI9kE,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAc8kE,EAAd,uBAAAriE,KACDqiE,EADC,iCAC2C93D,IAASC,GADpDxK,KAEDqiE,EAFC,kCAE2Ce,IACtDlsE,IAAKA,EACL+F,QAAS,WAAQ4lE,EAAa,IAAKr4D,EAAGk3D,EAAe0B,KAEpD54D,OAMrB9M,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAcylE,EAAd,uBACD3kE,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAc8kE,EAAd,wBAA+C,gBAAgB3kE,EAAAH,QAAA/J,cAAA,eAAS,EAAAuT,EAAA2C,UAAS,YACjGhM,EAAAH,QAAA/J,cAAA,WACKuW,EAAQ5J,IAAI,SAACkjE,EAAInsE,GACdwrE,EAAkBn4D,KAAKA,GAAMF,OAAOg5D,GACpC,IAAMD,EAAaV,EAAkBh1C,UAAU60C,EAAmBC,EAAiB,UACnF,OACI9kE,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAc8kE,EAAd,uBAAAriE,KACDqiE,EADC,iCAC2Ch4D,IAAWg5D,GADtDrjE,KAEDqiE,EAFC,kCAE2Ce,IACtDlsE,IAAKA,EACL+F,QAAS,WAAQ4lE,EAAa,IAAKQ,EAAI3B,EAAe0B,KAErDC,UAWrCf,EAAO9nE,WACHoC,UAAW/D,UAAUiF,OACrBsS,SAAWvX,UAAUiM,WACjBjM,UAAUkM,OACVlM,UAAUiF,OACVjF,UAAUxB,SAEdob,SAAe5Z,UAAUmF,KACzBqkE,SAAexpE,UAAUiF,OACzB4jE,cAAe7oE,UAAUiM,WACrBjM,UAAUkM,OACVlM,UAAUiF,OACVjF,UAAUxB,SAEd8Y,WAAYtX,UAAUiM,WAClBjM,UAAUkM,OACVlM,UAAUiF,OACVjF,UAAUxB,oBAIHirE,iFCxGf,IAAMgB,EAAiB,SACnB34D,EACA44D,GAFmB,OAGlB54D,EAAKN,OAAO7F,KAAK+jD,MAAM59C,EAAKN,SAAWk5D,GAAYA,IAE3C5B,kBAAkB,SAC3BzpD,EACAwpD,EACA8B,GAEA,IAAI5sE,EAAQ8qE,EAAc/xD,SAAS6zD,GAC7BA,EAAiB7zD,SAASuI,GACtBA,EACAsrD,EACJ9B,EAGN,OADA9qE,EAAQ0sE,EAAe1sE,EAAO,IACjB0T,OAAO,UAGXm3D,gBAAgB,SACzBvpD,EACAsrD,EACAnzD,GAEA,IAAMmxD,GACF/lD,MAAOvD,EAAYvI,SAAS6zD,GACtBA,EACAtrD,EACNwD,IAAKrL,GAIT,OADAmxD,EAAW/lD,MAAQ6nD,EAAe9B,EAAW/lD,MAAO,GAC7C+lD,0PCjCX1pE,EAAAzF,EAAA,OACAA,EAAA,IACAg9B,EAAAh9B,EAAA,cACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEA,IAAMoxE,EAAiB,SAAA9pE,GAQjB,IAPFo7D,EAOEp7D,EAPFo7D,mBACAN,EAME96D,EANF86D,WACAhsD,EAKE9O,EALF8O,oBACA44C,EAIE1nD,EAJF0nD,oBACAkU,EAGE57D,EAHF47D,mBACAC,EAEE77D,EAFF67D,mBACA7B,EACEh6D,EADFg6D,qBAQM+P,GAAaj7D,EAAoBgQ,KAAK,SAAA26C,GAAA,MAAmB,MAAbA,EAAGx8D,QAErD,OACI8G,EAAAH,QAAA/J,cAAC67B,EAAAzqB,SAAD,KACM6D,EAAoBvX,OAAS,GAC3BwM,EAAAH,QAAA/J,cAACqjE,EAAAt5D,SACGi3B,YAZc,SAACmvC,GAC3B,IAAMC,EAAeD,EAAIt1D,OAAO,SAAA+kD,GAAA,MAAmB,MAAbA,EAAGx8D,OAA8B,MAAbw8D,EAAGx8D,QAC7D,OAAIgtE,EAAa1yE,QAAU,KAEpB0yE,EAQkBC,CAAsBp7D,GACnCtS,KAAK,uBACLsc,SAAUsiD,EACVn+D,MAAO+8D,IAGY,MAAzBA,GACEj2D,EAAAH,QAAA/J,cAAC6hE,EAAA93D,QAAD5E,GACIxC,KAAK,WACLS,MAAO69D,EACPzxC,MAAO,IACHwyC,IAGe,MAAzB7B,GACEj2D,EAAAH,QAAA/J,cAACsjE,EAAAv5D,SACGsX,UAAU,OACV/d,KAAK,WACLX,KAAK,aAGe,MAAzBw9D,GAAyD,MAAzBA,GAC/Bj2D,EAAAH,QAAA/J,cAACq8D,EAAAtyD,QAAD5E,GACI0Y,eAAe,yBACflb,KAAK,WACLkc,MAAOqxD,EAAYj7D,EAAoB,GAAGtL,KAAO,KACjDvG,MAAOyqD,EAAoBsS,IACvB4B,EACAC,MAOxBiO,EAAejpE,WACXu6D,mBAAoBl8D,UAAUmF,KAC9By2D,WAAoB57D,UAAUiM,WAC1BjM,UAAUkM,OACVlM,UAAUiF,SAEd2K,oBAAsBuM,YAAcC,uBACpCosC,oBAAsBxoD,UAAUmF,KAChCu3D,mBAAsB18D,UAAUxB,OAChCm+D,mBAAsB38D,UAAUxB,OAChCs8D,qBAAsB96D,UAAUiF,kBAGrB2lE,iFC7Ef,IAAA3rE,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,wDAEA,IAAMi9D,EAAY,SAAA31D,GAIX,IAHHq6B,EAGGr6B,EAHHq6B,aACA+sB,EAEGpnD,EAFHonD,WACAtuC,EACG9Y,EADH8Y,SAEA,GAAIuhB,EACA,OACIt2B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBACP,EAAAmK,EAAA2C,UAAS,cADjB,KACmCq3C,GAI3C,IAAM+iB,mIAAe5pE,MAAM,GAAGa,SAC9B,OACI2C,EAAAH,QAAA/J,cAACg/B,EAAAj1B,SACGX,UAAU,4BACVuY,QAAQ,EAAApO,EAAA2C,UAAS,yBACjB0L,WAAA,GAEA1X,EAAAH,QAAA/J,cAACuwE,EAAAxmE,SACGymE,iBAAkBF,EAAUA,EAAS3jE,IAAI,SAAAnP,GAAA,OAAKA,EAAI,KAClDmF,KAAK,aACLsc,SAAUA,EACVwxD,iBAAkBljB,MAMlCuO,EAAU90D,WACNw5B,aAAcn7B,UAAUkF,KACxBgjD,WAAcloD,UAAUiM,WACpBjM,UAAUkM,OACVlM,UAAUiF,SAEd2U,SAAU5Z,UAAUmF,iBAGT,EAAAlG,EAAAwB,UAASg2D,kFC7CxB,QAAAj9D,EAAA,QACAA,EAAA,QACAA,EAAA,uDAMA,IAAM6xE,EAAiB,SAAAvqE,GAKjB,IAJFqqE,EAIErqE,EAJFqqE,gBACA7tE,EAGEwD,EAHFxD,KACAsc,EAEE9Y,EAFF8Y,SACAwxD,EACEtqE,EADFsqE,gBAEMhZ,EAAe,SAACrhD,IACbA,EAAKpU,OAAO2lE,aAAa,gBAAkB8I,GAC5CxxD,GAAWjd,QAAUW,OAAMS,OAAQgT,EAAKpU,OAAO2lE,aAAa,kBAIpE,OACIz9D,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mBACVonE,EAAgB7jE,IAAI,SAACgkE,EAAanyC,GAAd,OACjBt0B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBAAuB1F,IAAK86B,GACtCmyC,EAAYhkE,IAAI,SAAAnP,GAAA,OACb0M,EAAAH,QAAA/J,cAAA,QACI0D,IAAKlG,EACL4L,WAAW,EAAAU,EAAAC,SAAW,8BAAgC6mE,uCAAwCH,IAAoBjzE,IAClHyiB,aAAYziB,EACZiM,QAASguD,GAERj6D,UAS7BkzE,EAAe1pE,WACXwpE,gBAAiBnrE,UAAUsjE,QAAQtjE,UAAU4c,OAC7Ctf,KAAiB0C,UAAUiF,OAC3B2U,SAAiB5Z,UAAUmF,KAC3BimE,gBAAiBprE,UAAUkM,kBAGhBm/D,yPCzCFhwC,yBAAyB,SAAC96B,GAAD,QAAAW,EAAAC,UAAA9I,OAAekH,EAAf8B,MAAAH,EAAA,EAAAA,EAAA,KAAA+yB,EAAA,EAAAA,EAAA/yB,EAAA+yB,IAAe10B,EAAf00B,EAAA,GAAA9yB,UAAA8yB,GAAA,OAClCz7B,OAAOgzE,oBAAoBjrE,EAAUoB,eAAiBsF,OAClD,SAACslC,EAAKk/B,GAAN,OAAA3rE,KACOysC,EACAm/B,gBAAkBD,GAAlB/pE,OAA2BnC,WAJnC,IAgBDmsE,EAAoB,SAACD,GAAoB,QAAAE,EAAAxqE,UAAA9I,OAAXkH,EAAW8B,MAAAsqE,EAAA,EAAAA,EAAA,KAAArqE,EAAA,EAAAA,EAAAqqE,EAAArqE,IAAX/B,EAAW+B,EAAA,GAAAH,UAAAG,GAC3C,IAAMzB,EAAQN,EAAOsN,KAAK,SAAAkE,GAAA,OAAQ06D,KAAQ16D,QAC1C,OAAQ06D,KAAQ5rE,wHAARsH,IAAmBskE,EAAO5rE,EAAM4rE,uFCxB5C,QAAAjyE,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,yDAEA,IAAMoyE,EAAc,kBAChB/mE,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACo3D,EAAArtD,QAAD,MACAG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eACXc,EAAAH,QAAA/J,cAACkxE,EAAAnnE,QAAD,OAEJG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAACs3D,EAAAvtD,QAAD,SAKZknE,EAAYjqE,WACRi3B,iBAAkB54B,UAAUkF,gBAGjB0mE,8UCtBfpyE,EAAA,QACAA,EAAA,UACAA,EAAA,6DAEMsyE,cACF,SAAAA,EAAYlsE,gGAAOqB,CAAAxB,KAAAqsE,GAAA,IAAA1kE,mKAAA7F,CAAA9B,MAAAqsE,EAAAtqE,WAAAhJ,OAAAiJ,eAAAqqE,IAAAnzE,KAAA8G,KACTG,IADS,OAEfwH,EAAK0V,OACD9J,MAAM,GAEV5L,EAAK2kE,kBAAoB3kE,EAAK2kE,kBAAkBztE,KAAvB8I,GACzBA,EAAK4kE,kBAAoB5kE,EAAK4kE,kBAAkB1tE,KAAvB8I,GANVA,qUADItF,UAAM08B,8DAWzB/+B,KAAKud,UACDhK,MAAM,gDAKVvT,KAAKud,UACDhK,MAAM,qCAKV,OACInO,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBAAgBK,QAAS3E,KAAKusE,mBACzCnnE,EAAAH,QAAA/J,cAACq3D,EAAAttD,SAAYy2B,cAAA,KAGjBt2B,EAAAH,QAAA/J,cAACy5D,EAAA1vD,SACGwQ,MAAM,iBACNuY,QAAShuB,KAAKqd,MAAM9J,KACpB8b,QAASrvB,KAAKssE,mBAEdlnE,EAAAH,QAAA/J,cAACq3D,EAAAttD,SAAY02B,iBAAA,yBAOlB0wC,iFC7Cf,IAAA7sE,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,yDAEA,IAAMyyE,EAAkB,SAAAnrE,GAAA,IACpB6hC,EADoB7hC,EACpB6hC,OACAC,EAFoB9hC,EAEpB8hC,eACAC,EAHoB/hC,EAGpB+hC,aACAP,EAJoBxhC,EAIpBwhC,SAJoB,OAMpBz9B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,YAAYu+B,GAC3Bz9B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eAAc,EAAAmK,EAAA2C,UAAS,iBAAtC,IAAyD8xB,GACzD99B,EAAAH,QAAA/J,cAACuxE,EAAAxnE,SACGwQ,OAAO,EAAAhH,EAAA2C,UAAS,wBAChBwoD,MAAOx2B,IAEXh+B,EAAAH,QAAA/J,cAACuxE,EAAAxnE,SACGwQ,OAAO,EAAAhH,EAAA2C,UAAS,mBAChBwoD,MAAOz2B,MAKnBqpC,EAAgBtqE,WACZghC,OAAgB3iC,UAAUiF,OAC1B29B,eAAgB5iC,UAAUxB,OAC1BqkC,aAAgB7iC,UAAUxB,OAC1B8jC,SAAgBtiC,UAAUiF,mBAGf,EAAAhG,EAAAwB,UAASwrE,kFCjCxB,IAAAhtE,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACAgM,EAAAhM,EAAA,sDAEA,IAAM2yE,EAAe,SAAArrE,GAAA,IACjBu4D,EADiBv4D,EACjBu4D,MACAnkD,EAFiBpU,EAEjBoU,MAFiB,OAIhBA,IAAS,EAAA1P,EAAAwB,eAAcqyD,GAClB,GAEEx0D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eAAemR,GAC5B1c,OAAO0J,KAAKm3D,GAAO/xD,IAAI,SAAAjJ,GAAA,OACrBwG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,YAAY1F,IAAKA,GAC5BwG,EAAAH,QAAA/J,cAAA,WAAM0D,GACNwG,EAAAH,QAAA/J,cAAA,WAAM0+D,EAAMh7D,SAOpC8tE,EAAaxqE,WACT03D,MAAOr5D,UAAUxB,OACjB0W,MAAOlV,UAAUiF,mBAGN,EAAAhG,EAAAwB,UAAS0rE,kFC7BxB,QAAA3yE,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACAs4B,EAAAt4B,EAAA,wDAEA,IAAM4yE,EAAgB,SAAAtrE,GAAgB,IAAbsiB,EAAatiB,EAAbsiB,OACfipD,GAAkB,EAAAv6C,EAAAw6C,mBAClBC,EAAkBF,EAAcG,UAAUt3D,MAC1Cu3D,EAAkBJ,EAAcjpD,GAAQlO,MACxCw3D,EAAkBL,EAAcG,UAAUrvD,KAC1CwvD,EAAkBN,EAAcjpD,GAAQjG,KAE9C,OACItY,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,kBAAmB0e,IAC1Cve,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,kBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iBACV4oE,EACAF,GAEL5nE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACV2oE,EACAH,MAOrBH,EAAczqE,WACVyhB,OAAQpjB,UAAUy1C,OAAO,YAAa,MAAO,qBAGlC,EAAAx2C,EAAAwB,UAAS2rE,2GCjCxB,QAAA5yE,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,yDAEa8yE,kBAAkB,kBAC3BE,WAAat3D,OAAO,EAAAhH,EAAA2C,UAAS,sBAAuBsM,KAAMtY,EAAAH,QAAA/J,cAACiyE,EAAAloE,QAAD,OAC1DmoE,KAAa33D,OAAO,EAAAhH,EAAA2C,UAAS,gBAAuBsM,KAAMtY,EAAAH,QAAA/J,cAACiiC,EAAAl4B,QAAD,OAC1DooE,MAAa53D,OAAO,EAAAhH,EAAA2C,UAAS,iBAAuBsM,KAAMtY,EAAAH,QAAA/J,cAACiiC,EAAAl4B,QAAD,wFCR9D,IAAAzF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,uDAEA,IAAMuzE,EAAW,kBACbloE,EAAAH,QAAA/J,cAAA,OAAKoxB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACnE9b,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,IAAIC,GAAG,IAAIjjB,EAAE,IAAIkjB,KAAK,YACjCjc,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOoL,SAAS,UAAU7uB,EAAE,gHAKnD0vE,EAASprE,WACLqrE,aAAchtE,UAAUiF,OACxBgoE,WAAcjtE,UAAUiF,mBAGb,EAAAhG,EAAAwB,UAASssE,sSClBxBvzE,EAAA,QACAA,EAAA,IACAyJ,EAAAzJ,EAAA,KACA0U,EAAA1U,EAAA,OACAA,EAAA,yDAEA,IAAMo8D,EAAiB,SAAA90D,GAAuB,IAApBrE,EAAoBqE,EAApBrE,KAAMwf,EAAcnb,EAAdmb,QACxBixD,EAAM,GASV,OAPIA,EADmB,iBAAnB,IAAOjxD,EAAP,YAAAxG,EAAOwG,IACDpX,EAAAH,QAAA/J,cAACwyE,EAAAzoE,SACHwgB,IAAKjJ,EAAQiJ,IACbC,UAAWlJ,EAAQkJ,YAGjBlJ,EAGNpX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oBACXc,EAAAH,QAAA/J,cAACsI,EAAAgqB,WAAUxwB,KAAMA,IACjBoI,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,kBAAkBmpE,IAAO,EAAAh/D,EAAA2C,UAAS,6DAK3D+kD,EAAej0D,WACXsa,QAASjc,UAAUiM,WACfjM,UAAUujE,OACNp+C,UAAWnlB,UAAUxB,OACrB0mB,IAAWllB,UAAUiF,SAEzBjF,UAAUiF,SAEdxI,KAAMuD,UAAUiF,kBAGL2wD,uGCnCf,wDAAAp8D,EAAA,IAEA,IAAM4zE,EAA8B,SAACxtE,GAAU,IACnCmuB,EAA4BnuB,EAA5BmuB,QAAYs/C,yHADuBl3C,CACPv2B,GADO,YAG3C,IAAKmuB,EAAS,MAAM,IAAIlxB,MAAM,mBAE9B,OAAOiF,UAAMnH,cACTozB,EAAQ/hB,cACRqhE,IAIKhoD,eAAe,SAACynB,EAAU3nB,GAKnC,IAJA,IAAM6zB,KACF9zB,EAAc4nB,EACdwgC,EAAc,KAEXpoD,EAAI7sB,QAAQ,CACf,IAAM+mB,EAAQ8F,EAAI9F,MAAM,cAExB,IAAKA,EAAO,CACR45B,EAAIzgD,KAAK2sB,GACT,MALW,IASRqoD,EAGHnuD,EAHA,GACGouD,EAEHpuD,EAFA,GACAc,EACAd,EADAc,MAGEutD,EAASvoD,EAAIlmB,MAAM,EAAGkhB,GAG5B,GAFAgF,EAAMA,EAAIlmB,MAAMkhB,EAAQqtD,EAAIl1E,QAExBi1E,EAAa,CACb,IAAMI,EAAeJ,EAAf,IAA8BE,EAC9BnZ,EAAYlvC,EAAUuoD,GACtB3oE,EAAYjD,UAAM6rE,eAAetZ,GAAWA,EAAU+Y,EAA4B/Y,GAExF,IAAKvyD,UAAM6rE,eAAe5oE,GAAU,MAAM,IAAIlI,MAAJ,sBAAgC6wE,EAAhC,2CAC1C,IAAK3oE,EAAS,MAAM,IAAIlI,MAAJ,gBAA0BywE,EAA1B,OAA4CI,EAA5C,kBAAuE5gC,EAAvE,eAEpBkM,EAAIzgD,KAAKuJ,UAAMuzD,aAAatwD,GAAW1G,IAAK6hB,EAAO/gB,SAAUsuE,KAC7DH,EAAc,UAEVG,EAAOp1E,QAAQ2gD,EAAIzgD,KAAKk1E,GAExBD,KAAUroD,EACV6zB,EAAIzgD,KAAK4sB,EAAUqoD,IAEnBF,EAAcE,EAI1B,GAAIF,EAAa,MAAM,IAAIzwE,MAAJ,gBAA0BywE,EAA1B,kBAAuDxgC,EAAvD,eAGvB,OAAOkM,EAAI/xC,OAAO,SAAC6jE,EAAK13C,GACpB,IAAMw6C,EAAO9C,EAAIA,EAAIzyE,OAAS,GAM9B,MALoB,iBAATu1E,GAAwC,iBAAZx6C,EACnC03C,EAAIA,EAAIzyE,OAAS,GAAKu1E,EAAOx6C,EAE7B03C,EAAIvyE,KAAK66B,GAEN03C,uFCjEf,QAAAtxE,EAAA,QACAA,EAAA,IACA+zB,EAAA/zB,EAAA,uDAIA,IAAMq0E,EAAgB,SAAA/sE,GAAA,IAAAgtE,EAAAhtE,EAClBmb,eADkBlf,IAAA+wE,EACR,GADQA,EAElB/pC,EAFkBjjC,EAElBijC,aAFkB,OAGf9nB,EACHpX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,WACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBACXc,EAAAH,QAAA/J,cAAA,OAAKoxB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACnE9b,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,UAAQimB,GAAG,IAAIC,GAAG,IAAIjjB,EAAE,IAAIkjB,KAAK,YACjCjc,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOoL,SAAS,UAAU7uB,EAAE,oLAInDwH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBAAgBkY,GAC/BpX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBAAgBK,QAAS2/B,GACpCl/B,EAAAH,QAAA/J,cAAC4yB,EAAAwB,UAAD,QAZK,MAiBjB8+C,EAAclsE,WACVsa,QAAcjc,UAAUiF,OACxB8+B,aAAc/jC,UAAUmF,gBAGb0oE,oQC/BRhqC,yBACA5H,2BACA8xC,2BACAnqC,yGCHP,IAAA3kC,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,yDAEA,IAAMqqC,EAAe,SAAA/iC,GAIf,IAHF6hB,EAGE7hB,EAHF6hB,cACAkQ,EAEE/xB,EAFF+xB,YACA2Q,EACE1iC,EADF0iC,SAEMwqC,EAAex1E,OAAO0J,KAAK2wB,GAAahU,OAAOvX,IAAI,SAAA4rB,GAAA,OAAaL,EAAYK,KAC5Enf,GAAS4O,EAAco3B,WACvBk0B,EAAeD,EAAahvE,OAAO,GAAG,OACtCkvE,KAAgBxsE,6HAAA8N,CAAInO,MAAM0S,GAAO7R,SAAQoF,IAAI,SAAAnP,GAE/C,IAAMg2E,EAAYh2E,EAAI,IAAM4b,GAASk6D,EAAav6C,QAAUu6C,KAC5D,OAAOD,EAAa71E,KAAO61E,EAAa71E,GAAGu7B,QAAUs6C,EAAa71E,GAAKg2E,IAG3E,OACItpE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,UACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBAAe,EAAAmK,EAAA2C,UAAS,eACvChM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,cACTmqE,EAAc5mE,IAAI,SAAC8xB,EAAMD,GAAP,OAChBt0B,EAAAH,QAAA/J,cAACyzE,EAAA1pE,SAAa2pE,WAAYj1C,EAAMk1C,aAAcn1C,EAAM,EAAG96B,IAAK86B,OAGpEt0B,EAAAH,QAAA/J,cAAC4zE,EAAA7pE,SACGie,cAAeA,EACfwZ,SAAUqH,EACVnH,eAAgBmH,MAMhCK,EAAaliC,WACTghB,cAAe3iB,UAAUxB,OACzBq0B,YAAe7yB,UAAUxB,OACzBglC,SAAexjC,UAAUkF,iBAGd,EAAAjG,EAAAwB,UAASojC,kFC5CxB,QAAArqC,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,sDAEA,IAAMg1E,EAAe,SAAA1tE,GAGf,IAAA2tE,EAAA3tE,EAFFutE,kBAEEtxE,IAAA0xE,OADFH,EACExtE,EADFwtE,aAEMI,GAAc,EAAAjqE,EAAAC,SAChB,cACA2pE,EAAW76C,OAAS,MAAQ,QAC1Bo6C,KAAMS,EAAW36C,UAGvB,OACI7uB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,cACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW2qE,GAAcL,EAAW96C,OACzC1uB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBAAe,EAAAmK,EAAA2C,UAAS,aAAcy9D,OAKjEE,EAAa7sE,WACT0sE,WAAcruE,UAAUxB,OACxB8vE,aAActuE,UAAUkM,mBAGb,EAAAjN,EAAAwB,UAAS+tE,kFC7BxB,IAAAvvE,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,wDAEA,IAAMm1E,EAAW,SAAA7tE,GAAA,IACb6hB,EADa7hB,EACb6hB,cACA4Z,EAFaz7B,EAEby7B,UAFa,OAIb13B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,aACXc,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAACwyE,EAAAzoE,SACGwgB,IAAI,sCACJC,WACIkG,EAAKxmB,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SACFrG,IAAKk+B,EAAUG,eACfrxB,SAAUsX,EAActX,SACxBF,OAAQoxB,EAAUzY,iBAKlCjf,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,6CAA8C0rB,EAAUG,oBAI/EiyC,EAAShtE,WACLghB,cAAe3iB,UAAUxB,OACzB+9B,UAAev8B,UAAUxB,mBAGd,EAAAS,EAAAwB,UAASkuE,kFCjCxB,QAAAn1E,EAAA,IACAyF,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,MACA2pC,EAAA3pC,EAAA,SAIAA,EAAA,yDAEA,IAAMu0E,EAAiB,SAAAjtE,GAAkC,IAA/BiD,EAA+BjD,EAA/BiD,UAAW4e,EAAoB7hB,EAApB6hB,cAE7BnB,EAIAmB,EAJAnB,UACAnW,EAGAsX,EAHAtX,SACAoW,EAEAkB,EAFAlB,YACA6B,EACAX,EADAW,OAGE6yB,GAAmB,EAAAhT,EAAAnf,oBAAmBrB,GACtCisD,GAAmB,EAAAzrC,EAAA7e,WAAU3B,GAC7B6gB,GAAmB,EAAAL,EAAA9f,SAAQV,GAEjC,OACI9d,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,UAAWX,IAClCc,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,mBACfhM,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,qBACfhM,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,iBAEnBhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,UACXc,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQqW,EAAWnW,SAAUA,KAExCxG,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQgrC,EAAkB9qC,SAAUA,KAE/CxG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWuf,GAAU,EAAI,SAAW,QACrCze,EAAAH,QAAA/J,cAAC8+B,EAAA/0B,SAAMyG,OAAQmY,EAAQjY,SAAUA,EAAUC,UAAA,OAGhDk4B,GACC3+B,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,YAAM,EAAAuT,EAAA2C,UAAS,mBACfhM,EAAAH,QAAA/J,cAAA,cACKi0E,GAAcntD,EACX5c,EAAAH,QAAA/J,cAAC0zD,EAAA3pD,SAAc6S,SAAUkK,IAEzB,MAKhB5c,EAAAH,QAAA/J,cAACk0E,EAAAnqE,QAAD,QAKZqpE,EAAepsE,WACXoC,UAAe/D,UAAUiF,OACzB0d,cAAe3iB,UAAUxB,OACzBosD,YAAe5qD,UAAUmF,iBAGd,EAAAlG,EAAAwB,UAASstE,kFClExB,QAAAv0E,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,QACAA,EAAA,yDAEA,IAAMs1E,EAAe,SAAAhuE,GAAA,IACjB6hB,EADiB7hB,EACjB6hB,cACA4vB,EAFiBzxC,EAEjByxC,kBACA7tB,EAHiB5jB,EAGjB4jB,iBACAkmC,EAJiB9pD,EAIjB8pD,YAJiB,OAKfjoC,EAAco3B,WAAa,KAC7Bl1C,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,QACXc,EAAAH,QAAA/J,cAACo0E,EAAArqE,SACGie,cAAeA,EACf4vB,kBAAmBA,EACnB7tB,iBAAkBA,EAClBkmC,YAAaA,MAKzBkkB,EAAantE,WACTghB,cAAmB3iB,UAAUxB,OAC7B+zC,kBAAmBvyC,UAAUkF,KAC7Bwf,iBAAmB1kB,UAAUkF,KAC7B0lD,YAAmB5qD,UAAUmF,iBAGlB,EAAAmsB,EAAAlxB,SACX,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAAH,OACI+pB,cAAmB/pB,EAAQ2C,SAASonB,cACpC4vB,kBAAmB35C,EAAQ2C,SAASg3C,kBACpC7tB,iBAAmB9rB,EAAQ2C,SAASmpB,iBACpCkmC,YAAmBhyD,EAAQ2C,SAASqvD,cAL7B,CAObkkB,kFCnCF,IAAA7vE,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,SACAA,EAAA,wDAEA,IAAMw1E,EAAa,SAAAluE,GAKb,IAJF6hB,EAIE7hB,EAJF6hB,cACA4vB,EAGEzxC,EAHFyxC,kBACA7tB,EAEE5jB,EAFF4jB,iBACAkmC,EACE9pD,EADF8pD,YAEMqkB,EAAevqD,GACf,EAAAxW,EAAA2C,UAAS,qJACT8R,EAAcusD,iBAEpB,OACIrqE,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACmhB,EAAApX,SAAQsX,UAAU,OAAOmB,KAAK,WAAWlB,QAASgzD,IACnDpqE,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGX,UAAU,uCACVI,aAAcugB,GAAoB6tB,EAClCjuC,MAAM,EAAA4J,EAAA2C,UAAS,QACfzM,QAASwmD,MAMzBokB,EAAWrtE,WACPghB,cAAmB3iB,UAAUxB,OAC7B+zC,kBAAmBvyC,UAAUkF,KAC7Bwf,iBAAmB1kB,UAAUkF,KAC7B0lD,YAAmB5qD,UAAUmF,iBAGlB,EAAAlG,EAAAwB,UAASuuE,kFCrCxB,IAAA/vE,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACA+zB,EAAA/zB,EAAA,uDAEA,IAAMoqC,EAAkB,SAAA9iC,GAAA,IACpB6hB,EADoB7hB,EACpB6hB,cADoB,OAGpB9d,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACXc,EAAAH,QAAA/J,cAAC4yB,EAAAzB,UAAS/nB,UAAU,2BACpBc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAA0B4e,EAAc2f,YAIhEsB,EAAgBjiC,WACZ2gC,SAAUtiC,UAAUiF,mBAGT,EAAAhG,EAAAwB,UAASmjC,kFClBxB,QAAApqC,EAAA,QACAA,EAAA,QACAA,EAAA,IACAyJ,EAAAzJ,EAAA,KACA2J,EAAA3J,EAAA,KACAoK,EAAApK,EAAA,KACAmK,EAAAnK,EAAA,SACAA,EAAA,MACAqjC,EAAArjC,EAAA,wDAKA,IAAM21E,EAAQ,SAAAruE,GAGR,IAFFjJ,EAEEiJ,EAFFjJ,KACAu3E,EACEtuE,EADFsuE,mBAEMC,EAAU,SAACC,GACbF,EAAmBv3E,GAEc,mBAAtBA,EAAK03E,cACZ13E,EAAK03E,aAAa13E,EAAMy3E,IAI1BlrE,EAAU,kBAAMirE,GAAQ,IAM9B,OAJIx3E,EAAK23E,oBAAwCzyE,IAAvBlF,EAAK23E,gBAC3BxyE,WAAWqyE,EAASx3E,EAAKqpD,OAASpkB,iBAIlCj4B,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeq4B,YAAUE,UAAWplC,EAAK0hD,SAAUjc,QAAMzlC,EAAK4E,KAAK2rD,gBACzFhkD,QAASA,GAETS,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACK,UAAdlM,EAAK4E,MAAsBoI,EAAAH,QAAA/J,cAACsI,EAAAgqB,WAAUlpB,UAAU,qBAClC,SAAdlM,EAAK4E,MAAsBoI,EAAAH,QAAA/J,cAACwI,EAAAqa,cAAazZ,UAAU,qBACrC,YAAdlM,EAAK4E,MAAsBoI,EAAAH,QAAA/J,cAACgJ,EAAAmyB,aAAY/xB,UAAU,qBACpC,YAAdlM,EAAK4E,MAAsBoI,EAAAH,QAAA/J,cAACiJ,EAAAmyB,aAAYhyB,UAAU,sBAExDc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,kBACVlM,EAAKokB,SAEVpX,EAAAH,QAAA/J,cAAC80E,EAAA/qE,SAAYN,QAASA,MAKlC+qE,EAAMxtE,WACF9J,KAAMmI,UAAUujE,OACZgM,aAAevvE,UAAUmF,KACzB+7C,MAAelhD,UAAUkM,OACzBsjE,cAAexvE,UAAUkF,KACzB+W,QAAejc,UAAUgF,KACzBu0C,SAAev5C,UAAUiF,OACzBxI,KAAeuD,UAAUiF,SAE7BmqE,mBAAoBpvE,UAAUmF,gBAGnBgqE,iFC9Df,QAAA31E,EAAA,QACAA,EAAA,uDAEA,IAAMk2E,EAAc,SAAA5uE,GAAA,IAAGsD,EAAHtD,EAAGsD,QAAH,OAChBS,EAAAH,QAAA/J,cAAA,UACIoJ,UAAU,sBACVtH,KAAK,SACL2H,QAASA,KAIjBsrE,EAAY/tE,WACRyC,QAASpE,UAAUmF,KAAK0sB,sBAGb69C,8UCffl2E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,QACAA,EAAA,6DAEMm2E,grBAAqB7tE,UAAMvB,+CAEpB,IAAAS,EAAAvB,KACL,OACIoF,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,QAASjF,KAAKG,MAAM25C,WAEvC95C,KAAKG,MAAMupD,eAAe7hD,IAAI,SAACsoE,EAAO1rE,GAAR,OAC1BW,EAAAH,QAAA/J,cAACk1E,EAAAnrE,SACGrG,IAAK6F,EACLrM,KAAM+3E,EACNR,mBAAoBpuE,EAAKpB,MAAMwvE,iCAS3DO,EAAahuE,WACT43C,SAAoBv5C,UAAUiF,OAC9BmqE,mBAAoBpvE,UAAUmF,KAC9BgkD,eAAoBnpD,UAAUsjE,QAC1BtjE,UAAUujE,OACNgM,aAAevvE,UAAUmF,KACzB+7C,MAAelhD,UAAUkM,OACzBsjE,cAAexvE,UAAUkF,KACzB+W,QAAejc,UAAUgF,KACzBu0C,SAAev5C,UAAUiF,OACzBxI,KAAeuD,UAAUiF,sBAKtB,EAAAqsB,EAAAlxB,SACX,SAAAU,GAAA,IAAGX,EAAHW,EAAGX,GAAH,OACIivE,mBAAoBjvE,EAAGivE,mBACvBjmB,eAAoBhpD,EAAGgpD,iBAHhB,CAKbwmB,kFC7CF,QAAAn2E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAosB,EAAApsB,EAAA,KACAixD,EAAAjxD,EAAA,IACA83B,EAAA93B,EAAA,uDAEA,IAAMs2E,EAAc,SAAAhvE,GAAA,IAChB3B,EADgB2B,EAChB3B,SAAU86C,EADMn5C,EACNm5C,iBACVl4B,EAFgBjhB,EAEhBihB,uBAFgB,OAIhBld,EAAAH,QAAA/J,cAAA,OACIuJ,GAAG,eACHH,WAAW,EAAAU,EAAAC,SAAW,gBAClBqrE,sCAAuChuD,EACvCiuD,8BAAuC/1B,KAI3Cp1C,EAAAH,QAAA/J,cAAC8vD,EAAAe,YACGC,UAAA,EACA9sB,OAAS1S,OAAQ,uBAEhB9sB,KAKb2wE,EAAYnuE,WACRxC,SAAwB8wE,UAAWjhD,IACnCjN,uBAAwBkuD,UAAW/qE,iBAGxB,EAAA0gB,EAAAsqD,aAAW,EAAA5+C,EAAAlxB,SACtB,SAAA6R,GAAA,IAAGrZ,EAAHqZ,EAAGrZ,QAAH,OACImpB,uBADJ9P,EAAY9R,GACmB4hB,uBAC3Bk4B,iBAAwBrhD,EAAQqD,YAAYg+C,mBAH1B,CAKxB61B,mFCtCF,QAAAt2E,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,QACAA,EAAA,MACA22E,EAAA32E,EAAA,wDAMA,IAAM42E,EAAS,SAAAtvE,GAAA,IACXuvE,EADWvvE,EACXuvE,2BACA/pD,EAFWxlB,EAEXwlB,aACAvE,EAHWjhB,EAGXihB,uBACA+mC,EAJWhoD,EAIXgoD,sBACAtjB,EALW1kC,EAKX0kC,eACAmmB,EANW7qD,EAMX6qD,sBACA2kB,EAPWxvE,EAOXwvE,qBAPW,OASXzrE,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qCAEPuiB,GACAzhB,EAAAH,QAAA/J,cAACw1E,EAAAI,iBACGxuD,uBAAwBA,EACxB4pC,sBAAuBA,KAInC9mD,EAAAH,QAAA/J,cAACw1E,EAAAK,eAAcptD,OAAQoiB,IACvB3gC,EAAAH,QAAA/J,cAAC81E,EAAA/rE,QAAD,MACAG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iBACXc,EAAAH,QAAA/J,cAACw1E,EAAAO,iBAAD,MACA7rE,EAAAH,QAAA/J,cAACw1E,EAAAQ,gBACGC,oBAAqBP,EACrBQ,oBAAqB/nB,EACrBgoB,eAAgBR,OAMhCF,EAAOzuE,WACH0uE,2BAA4BrwE,UAAUkF,KACtCohB,aAA4BtmB,UAAUkF,KACtC6c,uBAA4B/hB,UAAUkF,KACtC4jD,sBAA4B9oD,UAAUkF,KACtCsgC,eAA4BxlC,UAAUxB,OACtCmtD,sBAA4B3rD,UAAUmF,KACtCmrE,qBAA4BtwE,UAAUmF,iBAG3B,EAAAmsB,EAAAlxB,SACX,SAAA6R,GAAA,IAAGhS,EAAHgS,EAAGhS,OAAQC,EAAX+R,EAAW/R,OAAQC,EAAnB8R,EAAmB9R,GAAnB,OACImmB,aAA4BrmB,EAAOqmB,aACnCkf,eAA4BtlC,EAAOslC,eACnC6qC,2BAA4BlwE,EAAG4oD,sBAC/BhnC,uBAA4B5hB,EAAG4hB,uBAC/B+mC,sBAA4B3oD,EAAG2oD,sBAC/B6C,sBAA4BxrD,EAAGwrD,sBAC/B2kB,qBAA4BnwE,EAAGmwE,uBARxB,CAUbF,kFC9DF,QAAA52E,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,IACA4U,EAAA5U,EAAA,uDAEA,IAAM4Y,EAAa,SAAAtR,GAAqB,IAAlBue,EAAkBve,EAAlBue,YACZ0xD,GAAW,EAAA3iE,EAAA6nC,aAAY52B,GAE7B,OACIxa,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eAAegtE,IAItC3+D,EAAWzQ,WACP0d,YAAarf,UAAUxB,mBAGZ,EAAA8yB,EAAAlxB,SACX,SAAA6R,GAAA,OACIoN,YADJpN,EAAG/R,OACqBmf,cAFb,CAIbjN,+FCrBF5Z,OAAA0J,KAAA8uE,GAAA5uE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAqzE,EAAA3yE,qBACA7F,OAAA0J,KAAA+uE,GAAA7uE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAszE,EAAA5yE,qBACA7F,OAAA0J,KAAAgvE,GAAA9uE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAuzE,EAAA7yE,qBACA7F,OAAA0J,KAAAivE,GAAA/uE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAwzE,EAAA9yE,8GCHA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,wDAEA,IAAMg3E,EAAgB,SAAA1vE,GAAA,IAAGsiB,EAAHtiB,EAAGsiB,OAAH,OAClBve,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,2BACXc,EAAAH,QAAA/J,cAACmhB,EAAApX,SAAQsX,UAAU,MAAMC,SAAS,EAAA/N,EAAA2C,UAAS,wBAA0BuS,EAAOguD,UAAW,EAAAljE,EAAA2C,UAAS,2BAC5FhM,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SACZ,0BACI2sE,kCAAqD,YAAjBjuD,EAAOkuD,MAC3CC,iCAAqD,WAAjBnuD,EAAOkuD,MAC3CE,kCAAqD,YAAjBpuD,EAAOkuD,aAO/Dd,EAAc7uE,WACVyhB,OAAQpjB,UAAUxB,UAGbgyE,sXCxBTh3E,EAAA,QACAA,EAAA,IACA22E,EAAA32E,EAAA,4DAEMk3E,cACF,SAAAA,EAAY9wE,gGAAOqB,CAAAxB,KAAAixE,GAAA,IAAAtpE,mKAAA7F,CAAA9B,MAAAixE,EAAAlvE,WAAAhJ,OAAAiJ,eAAAivE,IAAA/3E,KAAA8G,KACTG,IADS,OAAAwH,EAoBnBqqE,aAAe,WACX,IAAMC,EAAiBtqE,EAAKuqE,eAAetd,QAAQz0C,KAAK,SAAAsO,GAAA,OAAM1zB,SAAS0zB,KACvE9mB,EAAK4V,UAAW00D,oBAtBDtqE,EAyBnBwqE,iBAAmB,SAAC73E,GAChBA,EAAE6oE,kBAEF,IAAMiP,EAAYzqE,EAAK0V,MAAM40D,eACvBxjD,EAAY2jD,EAAUr3E,SAAWA,SAASs3E,gBAC1CC,EAAY3qE,EAAKuqE,eAAeE,EAAU,WAAa,aAAahlE,KAAK,SAAAmlE,GAAA,OAAO9jD,EAAG8jD,KAErFD,EACA7jD,EAAG6jD,KAEH3qE,EAAK4V,UAAW00D,gBAAgB,KAjCpCtqE,EAAK0V,OACD40D,gBAAgB,GAEpBtqE,EAAKuqE,gBACDx1E,OAAY,mBAAqB,yBAA2B,sBAAwB,sBACpFk4D,SAAY,oBAAqB,0BAA2B,uBAAwB,uBACpF4d,WAAY,oBAAqB,0BAA2B,uBAAwB,uBACpFC,UAAY,iBAAqB,uBAA2B,sBAAwB,qBATzE9qE,qUADQtF,UAAMvB,0DAeb,IAAAS,EAAAvB,KAChBA,KAAKkyE,eAAex1E,MAAMiG,QAAQ,SAACjG,GAC/B3B,SAASo0B,iBAAiBzyB,EAAO6E,EAAKywE,cAAc,sCAwBxD,IAAMU,GAAyB,EAAA1tE,EAAAC,SAAW,gBAAiB,gBACvD0tE,wBAAyB3yE,KAAKqd,MAAM40D,iBAExC,OACI7sE,EAAAH,QAAA/J,cAAA,KACIgT,KAAK,eACL5J,UAAWouE,EACX/tE,QAAS3E,KAAKmyE,kBAEd/sE,EAAAH,QAAA/J,cAACw1E,EAAAkC,cAAatuE,UAAU,6BAM/B2sE,wHC5DT,QAAAl3E,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM64E,EAAe,SAAAvxE,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACjBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,YAAYoL,MAAM,8BACnGlnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,8BAA8B1G,EAAE,6DAA6DyjB,KAAK,OAAO8U,cAAc,SAASD,OAAO,cAI/J08C,EAAa1wE,WACToC,UAAW/D,UAAUiF,UAGhBotE,qHCdT,QAAA74E,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM84E,EAAgB,SAAAxxE,GAAmB,IAAhBiD,EAAgBjD,EAAhBiD,UACfkqD,EACFppD,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAA0B+c,KAAK,OAAOirC,YAAY,KAAK7/B,SAAS,UAAU7uB,EAAE,6fAIpG,OACIwH,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYgoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,aACnHstC,IAKbqkB,EAAc3wE,WACVoC,UAAW/D,UAAUiF,OACrBxI,KAAWuD,UAAUiF,UAGhBqtE,qHCvBT,QAAA94E,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM+4E,EAAe,SAAAzxE,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACjBc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYgoB,MAAM,6BAA6BpL,QAAQ,aAC7F9b,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,0BAA0B+c,KAAK,UAAUzjB,EAAE,inCAInEk1E,EAAa5wE,WACToC,UAAW/D,UAAUiF,UAGhBstE,uHCdT,QAAA/4E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA22E,EAAA32E,EAAA,wDAEA,IAAM+2E,EAAkB,SAAAzvE,GAGlB,IAFFihB,EAEEjhB,EAFFihB,uBACA4pC,EACE7qD,EADF6qD,sBAEM6mB,GAAyB,EAAA/tE,EAAAC,SAAW,eAAgB,gBACtD+tE,uBAAwB1wD,IAE5B,OACIld,EAAAH,QAAA/J,cAAA,KACIgT,KAAK,eACL5J,UAAWyuE,EACXpuE,QAASunD,GAET9mD,EAAAH,QAAA/J,cAACw1E,EAAAmC,eAAcvuE,UAAU,sCAKrCwsE,EAAgB5uE,WACZogB,uBAAwB/hB,UAAUkF,KAClCymD,sBAAwB3rD,UAAUmF,QAG7BorE,yHC5BT,QAAA/2E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,IACA22E,EAAA32E,EAAA,SACAA,EAAA,yDAEA,IAAMm3E,EAAiB,SAAA7vE,GAIjB,IAHF8vE,EAGE9vE,EAHF8vE,oBACAC,EAEE/vE,EAFF+vE,oBACAC,EACEhwE,EADFgwE,eAEM4B,GAAwB,EAAAjuE,EAAAC,SAAW,cAAe,gBACpDiuE,sBAAuB9B,IAE3B,OACIhsE,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,KACIgT,KAAK,eACLvJ,QAAS0sE,EACT/sE,UAAW2uE,GAEX7tE,EAAAH,QAAA/J,cAACw1E,EAAAoC,cAAaxuE,UAAU,oCAE5Bc,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,GAAImvC,EACJh2E,QAAS,IACT8mC,YACIspB,MAAW,yBACXC,UAAW,8BACXC,KAAW,yBAEfvpB,eAAA,GAEA/8B,EAAAH,QAAA/J,cAACi4E,EAAAluE,SACG28B,QAASwvC,EACTR,2BAA4BO,EAC5BhyC,aAAckyC,OAOlCH,EAAehvE,WACXivE,oBAAqB5wE,UAAUkF,KAC/B2rE,oBAAqB7wE,UAAUkF,KAC/B4rE,eAAqB9wE,UAAUmF,QAG1BwrE,6VClDTn3E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAq5E,EAAAr5E,EAAA,KACAs5E,EAAAt5E,EAAA,+NAKMu5E,6SACF9f,cAAgB,SAACjuD,GACboC,EAAK8rD,YAAcluD,KAIvBm8B,mBAAqB,SAAChlC,GAClB,IAAM62E,GAAwB72E,EAAMQ,OAAOgxB,UAAUyT,SAAS,cAAe,mCACzEh6B,EAAK8rD,cAAgB9rD,EAAK8rD,YAAY9xB,SAASjlC,EAAMQ,SAAWyK,EAAKxH,MAAMyhC,SAAW2xC,GACtF5rE,EAAKxH,MAAMg/B,0VATM98B,UAAM08B,8DAc3BhkC,SAASo0B,iBAAiB,YAAanvB,KAAK0hC,mEAI5C3mC,SAASq0B,oBAAoB,YAAapvB,KAAK0hC,qDAW/C,IAAM8xC,GAAwB,EAAAxuE,EAAAC,SAAW,mBACrCwuE,mCAAoCzzE,KAAKG,MAAMyhC,UAE7C8xC,GAAkC,EAAA1uE,EAAAC,SAAW,8BAC/C0uE,mCAAoC3zE,KAAKG,MAAMywE,6BAEnD,OACIxrE,EAAAH,QAAA/J,cAAA,OAAKyE,IAAKK,KAAKwzD,cAAelvD,UAAWkvE,GACrCpuE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWovE,GACZtuE,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,4BAA2B,EAAAmK,EAAA2C,UAAS,aACpDhM,EAAAH,QAAA/J,cAACk4E,EAAAQ,MAAKr3D,UAAU,SAASs3D,gBAAgB,8BAA8B39D,KAAMo9D,EAAeQ,oBAEhG1uE,EAAAH,QAAA/J,cAACm4E,EAAAU,iBAAD,kDAnBR,OACInoD,GAAK/O,QAAQ,EAAApO,EAAA2C,UAAS,WAAY4iE,QAASC,mBAC3CpoD,GAAKhP,QAAQ,EAAApO,EAAA2C,UAAS,SAAU4iE,QAASE,2BAuBrDZ,EAAepxE,WACX0uE,2BAA4BrwE,UAAUkF,KACtCm8B,QAA4BrhC,UAAUkF,KACtC05B,aAA4B5+B,UAAUmF,gBAG3B4tE,8FC/Dfv6E,OAAA0J,KAAA0xE,GAAAxxE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAi2E,EAAAv1E,qBACA7F,OAAA0J,KAAAy7B,GAAAv7B,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAggC,EAAAt/B,qBACA7F,OAAA0J,KAAA2xE,GAAAzxE,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAk2E,EAAAx1E,kWCFA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAq6E,EAAAr6E,EAAA,+NAEM65E,6SACFv2D,OACIg3D,iBAAkB,OAGtBC,aAAe,SAAC7zD,GACZ9Y,EAAK4V,UAAW82D,iBAAkB5zD,+UANvBpe,UAAM08B,mDASZ,IAAAx9B,EAAAvB,KACCu0E,EAAcv0E,KAAKG,MAAM+V,KAAKlW,KAAKqd,MAAMg3D,kBAAkBL,QAC3DQ,GAAsB,EAAAxvE,EAAAC,SAAW,gBAAX,kBAA8CjF,KAAKG,MAAMoc,WAQrF,OACInX,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWkwE,GACZpvE,EAAAH,QAAA/J,cAACk5E,EAAAj2C,aACGS,OAAQ5+B,KAAKqd,MAAMg3D,iBACnBl6D,SAAU,SAAAykB,GAAA,OAAUr9B,EAAK+yE,aAAa11C,KAGlC7lC,OAAO0J,KAAKzC,KAAKG,MAAM+V,MAAMrO,IAAI,SAAAjJ,GAAA,OAC7BwG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKA,GACjBwG,EAAAH,QAAA/J,cAAA,QACIoJ,UAjBH,SAACmwE,GAAD,OAAe,EAAAzvE,EAAAC,SACpC1D,EAAKpB,MAAM0zE,gBACX,eACEa,UAAaD,GACfA,GAamCE,CAAiBpzE,EAAKpB,MAAM+V,KAAKtX,GAAK8e,MACjDjI,MAAOlU,EAAKpB,MAAM+V,KAAKtX,GAAKie,QAE3Btb,EAAKpB,MAAM+V,KAAKtX,GAAKie,YAM1CzX,EAAAH,QAAA/J,cAACq5E,EAAD,gBAMhBX,EAAK1xE,WACDqa,UAAiBhc,UAAUiF,OAC3BquE,gBAAiBtzE,UAAUiF,OAC3B0Q,KAAiB3V,UAAUujE,OACvBjnD,OAAQtc,UAAUiF,OAClBkY,KAAQnd,UAAUiF,YAIjBouE,+OC1DFM,0BACAD,4BACAF,0GCFP,QAAAh6E,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACA83B,EAAA93B,EAAA,QACAA,EAAA,yDAEA,IAAMm6E,EAAgB,SAAA7yE,GAAA,IAClBuzE,EADkBvzE,EAClBuzE,iBACAC,EAFkBxzE,EAElBwzE,qBACAC,EAHkBzzE,EAGlByzE,kBACAC,EAJkB1zE,EAIlB0zE,YACAC,EALkB3zE,EAKlB2zE,gBACAC,EANkB5zE,EAMlB4zE,aANkB,OAQlB7vE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gCACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,oCACXc,EAAAH,QAAA/J,cAACg6E,EAAAjwE,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,YACfsuB,OAAQu1C,EACRx1C,WAAYq1C,EACZ51C,MAAM,wBAEV95B,EAAAH,QAAA/J,cAACg6E,EAAAjwE,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,qBACfsuB,OAAQq1C,EACRt1C,UAAWm1C,IAEfxvE,EAAAH,QAAA/J,cAACg6E,EAAAjwE,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,mBACfsuB,OAAQs1C,EACRv1C,UAAWo1C,OAM3BX,EAAchyE,WACV0yE,iBAAsBr0E,UAAUkF,KAChCovE,qBAAsBt0E,UAAUkF,KAChCqvE,kBAAsBv0E,UAAUkF,KAChCsvE,YAAsBx0E,UAAUmF,KAChCsvE,gBAAsBz0E,UAAUmF,KAChCuvE,aAAsB10E,UAAUmF,iBAGrB,EAAAmsB,EAAAlxB,SACX,SAAA6R,GAAA,IAAG9R,EAAH8R,EAAG9R,GAAH,OACIo0E,kBAAsBp0E,EAAGiiB,wBACzBiyD,iBAAsBl0E,EAAGmiB,4BACzBgyD,qBAAsBn0E,EAAGq8C,2BACzBg4B,YAAsBr0E,EAAGy0E,qBACzBH,gBAAsBt0E,EAAG00E,qBACzBH,aAAsBv0E,EAAG20E,oBAPlB,CASbnB,kFCtDF,QAAAn6E,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACA+zB,EAAA/zB,EAAA,IACA83B,EAAA93B,EAAA,QACAA,EAAA,yDAEA,IAAMk6E,EAAkB,SAAA5yE,GAAA,IACpBi0E,EADoBj0E,EACpBi0E,cACAC,EAFoBl0E,EAEpBk0E,aACAC,EAHoBn0E,EAGpBm0E,sBACAt8C,EAJoB73B,EAIpB63B,mBACAu8C,EALoBp0E,EAKpBo0E,aACAC,EANoBr0E,EAMpBq0E,eACAC,EAPoBt0E,EAOpBs0E,2BACAr8C,EARoBj4B,EAQpBi4B,mBARoB,OAUpBl0B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gCACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sCACXc,EAAAH,QAAA/J,cAACg6E,EAAAjwE,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,YACfzM,QAAS8wE,GAETrwE,EAAAH,QAAA/J,cAAC4yB,EAAA6+B,iBACGroD,UAAW,iCACXtH,MAAOs4E,GAAiB,MAAM/oE,iBAGtCnH,EAAAH,QAAA/J,cAACg6E,EAAAjwE,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,aACfquB,UAAW81C,EACX71C,OAAQg2C,IAEZtwE,EAAAH,QAAA/J,cAACg6E,EAAAjwE,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,yBACfquB,UAAW+1C,EACX91C,OAAQi2C,IAEZvwE,EAAAH,QAAA/J,cAACg6E,EAAAjwE,SACGpH,MAAM,EAAA4Q,EAAA2C,UAAS,iBACfquB,UAAWvG,EACXwG,OAAQpG,OAMxB26C,EAAgB/xE,WACZozE,cAA4B/0E,UAAUiF,OACtC+vE,aAA4Bh1E,UAAUkF,KACtC0rE,oBAA4B5wE,UAAUkF,KACtC+vE,sBAA4Bj1E,UAAUkF,KACtCyzB,mBAA4B34B,UAAUkF,KACtCgwE,aAA4Bl1E,UAAUmF,KACtCgwE,eAA4Bn1E,UAAUmF,KACtCiwE,2BAA4Bp1E,UAAUmF,KACtC4zB,mBAA4B/4B,UAAUmF,iBAG3B,EAAAmsB,EAAAlxB,SACX,SAAA6R,GAAA,IAAG/R,EAAH+R,EAAG/R,OAAQC,EAAX8R,EAAW9R,GAAX,OACI40E,cAA4B70E,EAAOu8C,iBACnCu4B,aAA4B70E,EAAG0hB,gBAC/B+uD,oBAA4BzwE,EAAG4oD,sBAC/BksB,sBAA4B90E,EAAG8hB,uBAC/B0W,mBAA4Bx4B,EAAGm6B,oBAC/B46C,aAA4B/0E,EAAGk1E,mBAC/BF,eAA4Bh1E,EAAGg1E,eAC/BC,2BAA4Bj1E,EAAGi1E,2BAC/Br8C,mBAA4B54B,EAAG44B,qBAVxB,CAYb26C,kFCvEF,QAAAl6E,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,QACAA,EAAA,yDAEA,IAAMg6E,EAAmB,SAAA1yE,GAAA,IACrBmgC,EADqBngC,EACrBmgC,KACAxG,EAFqB35B,EAErB25B,WACA66C,EAHqBx0E,EAGrBw0E,eAHqB,OAKrBzwE,EAAAH,QAAA/J,cAAC46E,EAAA7wE,SACGu8B,KAAMA,EACNxG,WAAYA,EACZ66C,eAAgBA,KAIxB9B,EAAiB7xE,WACbs/B,KAAgBjhC,UAAUmF,KAC1BmwE,eAAgBt1E,UAAUkF,KAC1Bu1B,WAAgBz6B,UAAUkF,iBAGf,EAAAosB,EAAAlxB,SACX,SAAA6R,GAAA,IAAG9R,EAAH8R,EAAG9R,GAAH,OACI8gC,KAAgB9gC,EAAGq1E,mBACnBF,eAAgBn1E,EAAG2oD,sBACnBruB,WAAgBt6B,EAAG4oD,wBAJZ,CAMbyqB,kFC7BF,QAAAh6E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACA+zB,EAAA/zB,EAAA,IAGAs3C,EAAAt3C,EAAA,wDAIA,IAAMi8E,EAAiB,SAAA30E,GAA0C,IAAvCmgC,EAAuCngC,EAAvCmgC,KAAMxG,EAAiC35B,EAAjC25B,WAAY66C,EAAqBx0E,EAArBw0E,eAClCI,GAAwB,EAAAjxE,EAAAC,SAAW,8CACrCixE,mDAAoDl7C,GAAc66C,IAGtE,OACIzwE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAW2xE,GACZ7wE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mCAAmCK,QAAS68B,GACvDp8B,EAAAH,QAAA/J,cAAC4yB,EAAA+H,UAASvxB,UAAU,gCACpBc,EAAAH,QAAA/J,cAAA,aAAO,EAAAuT,EAAA2C,UAAS,cAEpBhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uCACVvL,OAAO0J,MAAK,EAAA4uC,EAAAK,wBAAuB7pC,IAAI,SAAAjJ,GAAA,OACpCwG,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAKA,GACjBwG,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iCACXc,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,iCAAiC4J,MAAM,EAAAmjC,EAAAS,QAAOlzC,IACvDwG,EAAAH,QAAA/J,cAAC4yB,EAAA6+B,iBACGroD,UAAW,oEACXtH,KAAM4B,EAAI+O,QAAQ,SAAU,KAAKpB,gBAErCnH,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,mCAAkC,EAAA+sC,EAAAK,uBAAsB9yC,YAUxGo3E,EAAe9zE,WACXs/B,KAAgBjhC,UAAUmF,KAC1BmwE,eAAgBt1E,UAAUkF,KAC1Bu1B,WAAgBz6B,UAAUkF,gBAGfuwE,iFC/Cf,QAAAj8E,EAAA,QACAA,EAAA,IACAosB,EAAApsB,EAAA,KACAyR,EAAAzR,EAAA,IACAo8E,EAAAp8E,EAAA,SAQAA,EAAA,MACA83B,EAAA93B,EAAA,uDAEA,IAAMq8E,EAAS,SAAA/0E,GAiBT,IAhBF+oB,EAgBE/oB,EAhBF+oB,QACAmgB,EAeElpC,EAfFkpC,YACAJ,EAcE9oC,EAdF8oC,eACAv+B,EAaEvK,EAbFuK,SACAyqE,EAYEh1E,EAZFg1E,kBACAC,EAWEj1E,EAXFi1E,mBACA/sB,EAUEloD,EAVFkoD,0BACA1iC,EASExlB,EATFwlB,aACA6R,EAQEr3B,EARFq3B,UACA0O,EAOE/lC,EAPF+lC,WACA74B,EAMElN,EANFkN,QACAgoE,EAKEl1E,EALFk1E,eACA/sB,EAIEnoD,EAJFmoD,iBACAgtB,EAGEn1E,EAHFm1E,kBACAC,EAEEp1E,EAFFo1E,kBACAC,EACEr1E,EADFq1E,qBAaA,OAVAr3E,OAAO8vB,iBAAiB,sBAAuB,SAAA70B,GAC3C6E,QAAQw3E,IAAI,yCAEZr8E,EAAE6nD,iBAEFq0B,EAAkBl8E,GAClBm8E,MAKArxE,EAAAH,QAAA/J,cAAA,UAAQoJ,UAAU,UACdc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACVo0B,GAAatzB,EAAAH,QAAA/J,cAACi7E,EAAAS,iBAAD,MACdxxE,EAAAH,QAAA/J,cAACi7E,EAAAU,WAAUjd,MAAOkd,aAEtB1xE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBACTilD,GAA6B1iC,GAC3BzhB,EAAAH,QAAA/J,cAACi7E,EAAAY,kBACGzyE,UAAU,mBACV0yE,aAAcxtB,EACd7kD,QAAS0xE,IAGfxvD,EACEzhB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACi7E,EAAAc,aACG7sD,SAAS,EAAA5e,EAAAa,aAAYT,EAAUwe,GAAS,GACxC8sD,mBAAoB3sC,EACpBnD,WAAYA,EACZmvC,eAAgBA,EAChB3qE,SAAUA,EACV2C,QAASA,EACT4oE,aAAcb,EACdn3C,aAAcu3C,OAEbvsC,IAAkB/C,IACvBhiC,EAAAH,QAAA/J,cAACi7E,EAAAiB,eAAc9yE,UAAU,sBAErB8iC,GACJhiC,EAAAH,QAAA/J,cAACi7E,EAAAkB,eAAc/yE,UAAU,sBAI7Bc,EAAAH,QAAA/J,cAACi7E,EAAAmB,aAAYhzE,UAAU,0BASnD8xE,EAAOl0E,WACHkoB,QAA2B7pB,UAAUiF,OACrC+kC,YAA2BhqC,UAAUkF,KACrC0kC,eAA2B5pC,UAAUiF,OACrCoG,SAA2BrL,UAAUiF,OACrC6wE,kBAA2B91E,UAAUmF,KACrC4wE,mBAA2B/1E,UAAUkF,KACrC8vE,aAA2Bh1E,UAAUkF,KACrC8jD,0BAA2BhpD,UAAUkF,KACrCohB,aAA2BtmB,UAAUkF,KACrCizB,UAA2Bn4B,UAAUkF,KACrC2hC,WAA2B7mC,UAAUkF,KACrC8I,QAA2BhO,UAAUiF,OACrC+wE,eAA2Bh2E,UAAUmF,KACrC8jD,iBAA2BjpD,UAAUxB,OACrCy3E,kBAA2Bj2E,UAAUmF,KACrC+wE,kBAA2Bl2E,UAAUmF,KACrCgxE,qBAA2Bn2E,UAAUmF,iBAK1B,EAAAygB,EAAAsqD,aAAW,EAAA5+C,EAAAlxB,SACtB,SAAA6R,GAAA,IAAGhS,EAAHgS,EAAGhS,OAAQE,EAAX8R,EAAW9R,GAAX,OACI0pB,QAA2B5pB,EAAO4pB,QAClCmgB,YAA2B/pC,EAAO+pC,YAClCJ,eAA2B3pC,EAAO2pC,eAClCv+B,SAA2BpL,EAAOoL,SAClCib,aAA2BrmB,EAAOqmB,aAClCugB,WAA2B5mC,EAAO4mC,WAClC74B,QAA2B/N,EAAO+N,QAClC8nE,kBAA2B31E,EAAG21E,kBAC9BC,mBAA2B51E,EAAG0oD,wBAC9BmsB,aAA2B70E,EAAG0hB,gBAC9BmnC,0BAA2B7oD,EAAG6oD,0BAC9B7wB,UAA2Bh4B,EAAGg4B,UAC9B8wB,iBAA2B9oD,EAAG8oD,iBAC9BgtB,kBAA2B91E,EAAG81E,kBAC9BC,kBAA2B/1E,EAAG+1E,kBAC9BC,qBAA2Bh2E,EAAGg2E,uBAjBZ,CAmBxBN,gGClIFr9E,OAAA0J,KAAA80E,GAAA50E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAq5E,EAAA34E,qBACA7F,OAAA0J,KAAA+0E,GAAA70E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAs5E,EAAA54E,qBACA7F,OAAA0J,KAAAg1E,GAAA90E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAu5E,EAAA74E,qBACA7F,OAAA0J,KAAAi1E,GAAA/0E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAw5E,EAAA94E,qBACA7F,OAAA0J,KAAAk1E,GAAAh1E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAy5E,EAAA/4E,qBACA7F,OAAA0J,KAAAm1E,GAAAj1E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA05E,EAAAh5E,qBACA7F,OAAA0J,KAAAo1E,GAAAl1E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA25E,EAAAj5E,qBACA7F,OAAA0J,KAAAq1E,GAAAn1E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAA45E,EAAAl5E,4GCPA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAqnC,EAAArnC,EAAA,IACAg+E,EAAAh+E,EAAA,KACA+zB,EAAA/zB,EAAA,uDAIA,IAAMk9E,EAAc,SAAA51E,GAAA,IAChB+oB,EADgB/oB,EAChB+oB,QACAxe,EAFgBvK,EAEhBuK,SACA2C,EAHgBlN,EAGhBkN,QACA4oE,EAJgB91E,EAIhB81E,aACAD,EALgB71E,EAKhB61E,mBACA9vC,EANgB/lC,EAMhB+lC,WACAmvC,EAPgBl1E,EAOhBk1E,eACAp3C,EARgB99B,EAQhB89B,aARgB,OAUhB/5B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBACXc,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,YAClB+yE,iBAAwBb,EACxBc,uBAAwB7wC,IAE5BziC,QAASw6B,GAET/5B,EAAAH,QAAA/J,cAAA,KACIoJ,UAAU,eACVmR,MAAOlH,GAENA,EAJL,UAOuB,IAAZ6b,GACPhlB,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,qBACTc,EAAAH,QAAA/J,cAAA,QACIoJ,WAAW,EAAAU,EAAAC,SAAW,gIAAXyC,IAAA,aAAsCkE,GAAY,IAAIW,cAAkBX,MAEtFwe,GAGThlB,EAAAH,QAAA/J,cAAC4yB,EAAAq+B,WAAU7nD,UAAU,yBAAyB+nD,SAAS,KAE3DjnD,EAAAH,QAAA/J,cAACkmC,EAAAY,eACGC,GAAIk1C,EACJ/7E,QAAS,IACT8mC,YACIspB,MAAW,+BACXC,UAAW,oCACXC,KAAW,+BAEfvpB,eAAA,GAEA/8B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAC68E,EAAAG,iBACGl9C,WAAYm8C,EACZz3C,OAAQP,EACR+3C,mBAAoBA,EACpBX,eAAgBA,QAOpCU,EAAY/0E,WACR0pC,aAAoBrrC,UAAUiF,OAC9B4kB,QAAoB7pB,UAAUiF,OAC9BoG,SAAoBrL,UAAUiF,OAC9B2xE,aAAoB52E,UAAUkF,KAC9ByxE,mBAAoB32E,UAAUkF,KAC9B2hC,WAAoB7mC,UAAUkF,KAC9B8I,QAAoBhO,UAAUiF,OAC9B+wE,eAAoBh2E,UAAUmF,KAC9By5B,aAAoB5+B,UAAUmF,QAGzBuxE,0GC9ETl+E,OAAA0J,KAAA01E,GAAAx1E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAi6E,EAAAv5E,6WCAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAgM,EAAAhM,EAAA,GACAq+E,EAAAr+E,EAAA,KACAs+E,EAAAt+E,EAAA,KACA2U,EAAA3U,EAAA,IACA83B,EAAA93B,EAAA,8NAEMm+E,6SACF1kB,cAAgB,SAACjuD,GACboC,EAAK8rD,YAAcluD,KAGvBm8B,mBAAqB,SAAChlC,GAClB,IAAM47E,GAAwB57E,EAAMQ,OAAOgxB,UAAUyT,SAAS,YAC1Dh6B,EAAK8rD,cAAgB9rD,EAAK8rD,YAAY9xB,SAASjlC,EAAMQ,SAClDyK,EAAKxH,MAAM66B,YAAcs9C,GAC5B3wE,EAAKxH,MAAMu/B,YAInB64C,aAAe,WACX5wE,EAAKxH,MAAMu/B,SACP/3B,EAAKxH,MAAMmiB,wBACX3a,EAAKxH,MAAM+rD,yBAEf,EAAAx9C,EAAA6jB,4VAlBsBlwB,UAAMvB,0DAsB5B/F,SAASo0B,iBAAiB,YAAanvB,KAAK0hC,mEAI5C3mC,SAASq0B,oBAAoB,YAAapvB,KAAK0hC,0XAGpCnzB,qFACXvO,KAAKG,MAAMu/B,SACP1/B,KAAKG,MAAMq4E,kBAAoBjqE,mEAC7BvO,KAAKG,MAAM6rC,cAAcz9B,uIAG1B,IAAAhN,EAAAvB,KACL,IAAKA,KAAKG,MAAM0mB,aAAc,OAAO,EAGrC,IAAM4xD,EAAgBz4E,KAAKG,MAAM6qC,aAAaj1B,OAAO,SAAA+2B,GAAA,OAAQA,EAAI1F,aAC3DsxC,EAAgB14E,KAAKG,MAAM6qC,aAAa59B,KAAK,SAAA0/B,GAAA,OAAOA,EAAI1F,aAExDuxC,EAAqBF,EAAc7/E,OAAS,GAAI,EAAA6V,EAAA2C,UAAS,kBAAmB,EAAA3C,EAAA2C,UAAS,gBAE3F,OACIhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,qBAAqB3E,IAAKK,KAAKwzD,kBAGnCxzD,KAAKG,MAAM6qC,aAAapyC,SAAU6/E,EAAc7/E,SACnDwM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,4BACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,4BACXq0E,GAELvzE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BAEPm0E,EAAc5wE,IAAI,SAACsjC,GAAD,OACd/lC,EAAAH,QAAA/J,cAAA,OACI0D,IAAKusC,EAAQ58B,QACbjK,WAAW,EAAAU,EAAAC,SAAW,yBAClB2zE,kCAAoCztC,EAAQ58B,UAAYhN,EAAKpB,MAAMq4E,kBAEvE7zE,QAASpD,EAAKs3E,SAASh6E,KAAd0C,EAAyB4pC,EAAQ58B,UAE1CnJ,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAW,oBACbc,EAAAH,QAAA/J,cAACk9E,EAAAU,sBACGx0E,UAAA,gDAA2D6mC,EAAQztB,KACnE1gB,KAAMmuC,EAAQztB,OAEjBytB,EAAQ58B,gBAStBvO,KAAKG,MAAM+2E,qBAAsBl3E,KAAKG,MAAM8qC,aAAaf,iBAC5D9kC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,oCAAmC,EAAAmK,EAAA2C,UAAS,wBAMvE,EAAArL,EAAAwB,eAAcmxE,IACftzE,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,+BACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,6BACX,EAAAmK,EAAA2C,UAAS,oBAEdhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAAA,OACIoJ,WAAW,EAAAU,EAAAC,SAAW,yBAClB2zE,kCAAoC54E,KAAKG,MAAM44E,kBAAoB/4E,KAAKG,MAAMq4E,kBAElF7zE,QAAS3E,KAAK64E,SAASh6E,KAAKmB,KAAMA,KAAKG,MAAM44E,kBAE7C3zE,EAAAH,QAAA/J,cAAA,QAAMoJ,WAAW,EAAAU,EAAAC,SAAW,mBAAoB,8BAC3CjF,KAAKG,MAAM44E,uBAM3B/4E,KAAKG,MAAM+2E,qBAAsBl3E,KAAKG,MAAMinC,aACjDhiC,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,6BACXc,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,oCAAmC,EAAAmK,EAAA2C,UAAS,6BAGhEhM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,uBAAuBK,QAAS3E,KAAKu4E,cAChDnzE,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,8BAA6B,EAAAmK,EAAA2C,UAAS,YACtDhM,EAAAH,QAAA/J,cAACm9E,EAAAW,YAAW10E,UAAU,qDAO1C4zE,EAAgBh2E,WACZ8oC,aAAwBzqC,UAAU4c,MAClCq7D,gBAAwBj4E,UAAUiF,OAClCqhB,aAAwBtmB,UAAUkF,KAClC6c,uBAAwB/hB,UAAUkF,KAClCyxE,mBAAwB32E,UAAUkF,KAClC2hC,WAAwB7mC,UAAUkF,KAClCu1B,WAAwBz6B,UAAUkF,KAClC8wE,eAAwBh2E,UAAUmF,KAClCg6B,OAAwBn/B,UAAUmF,KAClCwmD,sBAAwB3rD,UAAUmF,KAClCulC,aAAwB1qC,UAAUxB,OAClCg6E,gBAAwBx4E,UAAUiF,QAGtC,IAAMyzE,GAAmB,EAAApnD,EAAAlxB,SACrB,SAAAkS,GAAA,IAAGrS,EAAHqS,EAAGrS,OAAQE,EAAXmS,EAAWnS,GAAX,OACIsqC,aAAwBxqC,EAAOwqC,aAC/BwtC,gBAAwBh4E,EAAO+N,QAC/BsY,aAAwBrmB,EAAOqmB,aAC/BugB,WAAwB5mC,EAAO4mC,WAC/B4E,cAAwBxrC,EAAOwrC,cAC/Bf,aAAwBzqC,EAAOyqC,aAC/B8tC,gBAAwBv4E,EAAO04E,wBAC/B52D,uBAAwB5hB,EAAG4hB,uBAC3B4pC,sBAAwBxrD,EAAGwrD,wBAVV,CAavBgsB,KAE2BA,gBAApBe,8FC9JTlgF,OAAA0J,KAAA02E,GAAAx2E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAi7E,EAAAv6E,qHCAA,QAAA7E,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAM++E,EAAuB,SAAAz3E,GAAyB,IAAtBrE,EAAsBqE,EAAtBrE,KAAMsH,EAAgBjD,EAAhBiD,UAC9B80E,SACJ,GAAIp8E,EACA,OAAQA,GACJ,IAAK,MACDo8E,EACIh0E,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,UAAUpL,KAAK,QACvBjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,gFAAgFyjB,KAAK,YAC7Fjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+FAA+FyjB,KAAK,YAC5Gjc,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,QACJjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8iBAEZwH,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,WACJjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,yUAEZwH,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,QACJjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,uWACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0FACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8MAEZwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,mCAAmCyjB,KAAK,YAChDjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,qaAAqayjB,KAAK,YAClbjc,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUzjB,EAAE,+KAG/B,MACJ,IAAK,MACDw7E,EACIh0E,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,UAAUpL,KAAK,QACvBjc,EAAAH,QAAA/J,cAAA,UAAQmmB,KAAK,UAAUF,GAAG,KAAKC,GAAG,KAAKjjB,EAAE,OACzCiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,yvBAAyvByjB,KAAK,UAG9wB,MACJ,IAAK,MACD+3D,EACIh0E,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,UAAUpL,KAAK,QACvBjc,EAAAH,QAAA/J,cAAA,UAAQmmB,KAAK,UAAUF,GAAG,KAAKC,GAAG,KAAKjjB,EAAE,OACzCiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,2uBAA2uByjB,KAAK,UAGhwB,MACJ,IAAK,MACD+3D,EACIh0E,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,UAAUpL,KAAK,QACvBjc,EAAAH,QAAA/J,cAAA,UAAQg7B,OAAO,UAAU5U,YAAY,OAAOH,GAAG,KAAKC,GAAG,KAAKjjB,EAAE,UAC9DiH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUzjB,EAAE,sBACvBwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUzjB,EAAE,4BACvBwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOzjB,EAAE,qCACpBwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUzjB,EAAE,uBACvBwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUzjB,EAAE,6BACvBwH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOzjB,EAAE,wCAG5B,MACJ,IAAK,MACDw7E,EACIh0E,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,UAAUpL,KAAK,QACvBjc,EAAAH,QAAA/J,cAAA,UAAQmmB,KAAK,UAAUF,GAAG,KAAKC,GAAG,KAAKjjB,EAAE,OACzCiH,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,WACJjc,EAAAH,QAAA/J,cAAA,QAAMoxD,YAAY,KAAK1uD,EAAE,oCACzBwH,EAAAH,QAAA/J,cAAA,QAAMoxD,YAAY,MAAM1uD,EAAE,0CAC1BwH,EAAAH,QAAA/J,cAAA,QAAMoxD,YAAY,KAAK1uD,EAAE,kCACzBwH,EAAAH,QAAA/J,cAAA,QAAMoxD,YAAY,MAAM1uD,EAAE,uCAC1BwH,EAAAH,QAAA/J,cAAA,QAAMoxD,YAAY,KAAK1uD,EAAE,6EAIrC,MACJ,IAAK,MACDw7E,EACIh0E,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,UAAUpL,KAAK,QACvBjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,gFAAgFyjB,KAAK,YAC7Fjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+FAA+FyjB,KAAK,YAC5Gjc,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,WACJjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,ogCAIpB,MACJ,IAAK,MACDw7E,EACIh0E,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,UAAUpL,KAAK,QACvBjc,EAAAH,QAAA/J,cAAA,UAAQmmB,KAAK,OAAOF,GAAG,KAAKC,GAAG,KAAKjjB,EAAE,OACtCiH,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,WACJjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,+dAEZwH,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,WACJjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,iKACRwH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wRAIpB,MACJ,IAAK,MACDw7E,EACIh0E,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,UAAUpL,KAAK,QACvBjc,EAAAH,QAAA/J,cAAA,UAAQmmB,KAAK,UAAUF,GAAG,KAAKC,GAAG,KAAKjjB,EAAE,OACzCiH,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,OAAOzjB,EAAE,sIAG5B,MACJ,IAAK,MACDw7E,EACIh0E,EAAAH,QAAA/J,cAAA,KAAGmmB,KAAK,OAAOoL,SAAS,WACpBrnB,EAAAH,QAAA/J,cAAA,UAAQmmB,KAAK,OAAOF,GAAG,KAAKC,GAAG,KAAKjjB,EAAE,OACtCiH,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,8fAA8fyjB,KAAK,UAAUoL,SAAS,YAC9hBrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,wgBAAwgByjB,KAAK,UAAUoL,SAAS,YACxiBrnB,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,oDAAoDyjB,KAAK,UAAUoL,SAAS,YACpFrnB,EAAAH,QAAA/J,cAAA,QAAMmmB,KAAK,UAAUoL,SAAS,UAAU7uB,EAAE,yxDAGlD,MACJ,IAAK,MACDw7E,EACIh0E,EAAAH,QAAA/J,cAAA,KAAGuxB,SAAS,UAAUpL,KAAK,QACvBjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,0EAA0EyjB,KAAK,YACvFjc,EAAAH,QAAA/J,cAAA,QAAM0C,EAAE,icAAicyjB,KAAK,UAQle,OACIjc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYioB,MAAM,KAAKC,OAAO,KAAKtL,QAAQ,YAAYoL,MAAM,8BAClG8sD,IAMbN,EAAqB52E,WACjBoC,UAAW/D,UAAUiF,OACrBxI,KAAWuD,UAAUiF,UAGhBszE,0HC9IT,QAAA/+E,EAAA,QACAA,EAAA,QACAA,EAAA,uDAEA,IAAMi/E,EAAa,SAAA33E,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OACfc,EAAAH,QAAA/J,cAAA,OAAKoJ,WAAW,EAAAU,EAAAC,SAAW,cAAeX,GAAYgoB,MAAM,6BAA6BpL,QAAQ,aAC7F9b,EAAAH,QAAA/J,cAAA,QACIoJ,UAAU,cACV+c,KAAK,OACLirC,YAAY,KACZ7/B,SAAS,UACT7uB,EAAE,6bAKdo7E,EAAW92E,WACPoC,UAAW/D,UAAUiF,UAGhBwzE,mHCpBT,QAAAj/E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,wDAEA,IAAMs9E,EAAgB,SAAAh2E,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAClBc,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGX,WAAW,EAAAU,EAAAC,SAAWX,EAAW,qCACjCE,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,cAMvBimE,EAAcn1E,WACVoC,UAAW/D,UAAUiF,UAGhB6xE,yHCpBT,QAAAt9E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,wDAEA,IAAMg9E,EAAmB,SAAA11E,GAInB,IAHFiD,EAGEjD,EAHFiD,UACA0yE,EAEE31E,EAFF21E,aACAryE,EACEtD,EADFsD,QAeA,OACIS,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGX,WAAW,EAAAU,EAAAC,SAAWX,EAAW,qCACjCE,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,WACfzM,QAjBW,WACXqyE,IACAA,EAAaqC,SACbrC,EAAasC,WACRvuE,KAAK,SAAAwuE,GAC4B,aAA1BA,EAAcC,SACd70E,WAgBxBoyE,EAAiB70E,WACboC,UAAc/D,UAAUiF,OACxBb,QAAcpE,UAAUmF,KACxBsxE,aAAcz2E,UAAUxB,UAGnBg4E,uHCxCT,QAAAh9E,EAAA,QACAA,EAAA,QACAA,EAAA,IACAimC,EAAAjmC,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,wDAEA,IAAMu9E,EAAc,SAAAj2E,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAH,OAChBc,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGX,WAAW,EAAAU,EAAAC,SAAWX,EAAW,yCACjCE,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,UACfzM,QAAS47B,qBAIjB+2C,EAAYp1E,WACRoC,UAAW/D,UAAUiF,UAGhB8xE,oHCpBT,QAAAv9E,EAAA,QACAA,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,wDAEA,IAAMq9E,EAAgB,SAAA/1E,GAAA,IAAGiD,EAAHjD,EAAGiD,UAAWK,EAAdtD,EAAcsD,QAAd,OAClBS,EAAAH,QAAA/J,cAACghB,EAAAjX,SACGR,GAAG,kBACHH,WAAW,EAAAU,EAAAC,SAAWX,EAAW,qCACjCE,YAAA,EACAK,MAAM,EAAA4J,EAAA2C,UAAS,WACfzM,QAASA,KAIjByyE,EAAcl1E,WACVoC,UAAW/D,UAAUiF,OACrBb,QAAWpE,UAAUmF,QAGhB0xE,kHCrBT,QAAAr9E,EAAA,QACAA,EAAA,QACAA,EAAA,MACA6mC,EAAA7mC,EAAA,wDAEA,IAAM88E,EAAY,SAAAx1E,GAAA,IAAGu4D,EAAHv4D,EAAGu4D,MAAH,OACdx0D,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0DACXc,EAAAH,QAAA/J,cAACmkD,EAAAp6C,SAAOsnB,MAAM,OAAOC,OAAO,YAE7BotC,EAAMhhE,QACTwM,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBAEPs1D,EAAM/xD,IAAI,SAACyJ,EAAMooB,GAAP,OACNt0B,EAAAH,QAAA/J,cAAC0lC,EAAAvZ,YAAWzoB,IAAK86B,EAAKjD,GAAInlB,EAAK2vB,QAAS38B,UAAU,oBAAoBkyB,aAAa,6BAC/EpxB,EAAAH,QAAA/J,cAAA,QAAMua,MAAOnE,EAAKzM,KAAMP,UAAU,0BAA0BgN,EAAKoM,KAAMpM,EAAKzM,YASpGgyE,EAAU30E,WACN03D,MAAOr5D,UAAUsjE,QAAQtjE,UAAUujE,OAC/BpmD,KAAMnd,UAAUujE,OACZx/D,UAAW/D,UAAUiF,SAEzBy7B,QAAS1gC,UAAUiF,OACnBX,KAAStE,UAAUiF,aAIlBqxE,2FC9BT,wDAAA98E,EAAA,IAJA,IAAIsG,EAAWtH,OAAO0O,QAAU,SAAUvK,GAAU,IAAK,IAAIxE,EAAI,EAAGA,EAAIgJ,UAAU9I,OAAQF,IAAK,CAAE,IAAIwuD,EAASxlD,UAAUhJ,GAAI,IAAK,IAAIkG,KAAOsoD,EAAcnuD,OAAOC,UAAUC,eAAeC,KAAKguD,EAAQtoD,KAAQ1B,EAAO0B,GAAOsoD,EAAOtoD,IAAY,OAAO1B,aAKvO,SAACmE,GAGXA,EADFyuD,OAFsB,IAIpB3vD,EAPN,SAAkCqQ,EAAK/N,GAAQ,IAAIvF,KAAa,IAAK,IAAIxE,KAAK8X,EAAW/N,EAAKkN,QAAQjX,IAAM,GAAkBK,OAAOC,UAAUC,eAAeC,KAAKsX,EAAK9X,KAAcwE,EAAOxE,GAAK8X,EAAI9X,IAAM,OAAOwE,EAOrMw5B,CAAyBr1B,GAAO,WAE5C,OAAOgB,UAAMnH,cACX,MACAmF,GAAWisB,MAAO,6BAA8BC,MAAO,KAAMC,OAAQ,KAAMtL,QAAS,mBAAqB/gB,GACzGkC,UAAMnH,cAAc,QAAUmmB,KAAM,OAAQzjB,EAAG,qEAC/CyE,UAAMnH,cAAc,QAAUmmB,KAAM,UAAWzjB,EAAG,wEAClDyE,UAAMnH,cAAc,QAAUmmB,KAAM,UAAWzjB,EAAG,yxCChBtD,QAAA7D,EAAA,QACAA,EAAA,QACAA,EAAA,IACAw8B,EAAAx8B,EAAA,uDAEA,IAAMutB,EAAa,SAAAjmB,GAAA,IAAG3B,EAAH2B,EAAG3B,SAAU4E,EAAbjD,EAAaiD,UAAWmyB,EAAxBp1B,EAAwBo1B,GAAxB,OACfrxB,EAAAH,QAAA/J,cAACq7B,EAAA8M,MACG/+B,WAAW,EAAAU,EAAAC,SAAW,gBAAiBX,EAAW,UAClDmyB,GAAIA,GAEH/2B,IAIT4nB,EAAWplB,WACPxC,SAAWa,UAAUxB,OACrBuF,UAAW/D,UAAUiF,OACrBixB,GAAWl2B,UAAUiF,kBAGV8hB,6PCpBfvtB,EAAA,IACAw8B,EAAAx8B,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,mEAEqB,SAACoG,GAAD,OACjBiF,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMorD,UAASC,SAAUlrD,EAAAH,QAAA/J,cAACm/B,EAAAp1B,QAAD,OACtBG,EAAAH,QAAA/J,cAACq7B,EAAAkjD,OAAD,MAEQ,EAAA9iD,EAAA1xB,WAAkB4C,IAAI,SAAC+e,EAAO8S,GAAR,OAClBt0B,EAAAH,QAAA/J,cAACw+E,EAAAz0E,QAAD5E,GAAoBzB,IAAK86B,GAAS9S,EAAWzmB,wFCXjE,QAAApG,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAM4/E,EAAc,SAAAt4E,GAAA,IAChBg/B,EADgBh/B,EAChBg/B,cACAC,EAFgBj/B,EAEhBi/B,QACAs5C,EAHgBv4E,EAGhBu4E,SAHgB,OAKhBx0E,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,gBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBACT+7B,GACEj7B,EAAAH,QAAA/J,cAACmlC,GAAc/7B,UAAU,qCAGjCc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,yBACXc,EAAAH,QAAA/J,cAAC2+E,EAAA50E,SACGwgB,IAAI,8DACJC,WACI2iB,MAAOjjC,EAAAH,QAAA/J,cAAA,KAAGgT,KAAK,eAAevJ,QAAS27B,IACvCw5C,MAAO10E,EAAAH,QAAA/J,cAAA,KAAGgT,KAAK,eAAevJ,QAASi1E,UAO3DD,EAAYz3E,WACRm+B,cAAe9/B,UAAUmF,KACzB46B,QAAe//B,UAAUmF,KACzBk0E,SAAer5E,UAAUmF,gBAGdi0E,iFCjCR,IAAMI,iBAAgB,aAChBv5C,gBAAgBu5C,2GCD7B,QAAAhgF,EAAA,IACAk9B,EAAAl9B,EAAA,IACAs+E,EAAAt+E,EAAA,SACAA,EAAA,2DAYS68E,iBAVgB,kBACrBxxE,EAAAH,QAAA/J,cAACm9E,EAAA2B,cACGz9D,UAAU,OACVmB,KAAMtY,EAAAH,QAAA/J,cAAC+7B,EAAAk2B,cAAD,MACNxvC,WAAW,uBAEXvY,EAAAH,QAAA/J,cAAC++E,EAAAh1E,QAAD,6gBCXRlL,EAAA,QACAA,EAAA,QACAA,EAAA,IACA+rB,EAAA/rB,EAAA,+NAEMmgF,6SACF78D,OAAU88D,cAAc,KAExBn5C,cAAgB,WACZr5B,EAAK4V,UACD48D,cAAexyE,EAAK0V,MAAM88D,0VALZ93E,UAAMvB,+CASnB,IAAAS,EAAAvB,KACGm6E,EAAiBn6E,KAAKqd,MAAtB88D,aADH38D,EAEmBxd,KAAKG,MAArB0E,EAFH2Y,EAEG3Y,KAAM+0D,EAFTp8C,EAESo8C,MAERwgB,GACFC,WAAYF,EAAe,UAAY,UAErCG,GAAoB,EAAAt1E,EAAAC,SAAW,eACjC68B,KAAQq4C,IAENI,GAAqB,EAAAv1E,EAAAC,SAAW,gBAClC68B,KAAQq4C,IAEZ,OACI/0E,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,cAAcK,QAAS3E,KAAKghC,eACvC57B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAWg2E,GAAoBz1E,IAEzCO,EAAAH,QAAA/J,cAAA,OACIoJ,UAAWi2E,EACXr7C,MAAOk7C,GAEPh1E,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,eACVs1D,EAAM/xD,IAAI,SAACyJ,EAAMooB,GAAP,OACPt0B,EAAAH,QAAA/J,cAAC4qB,EAAA+a,WAADxgC,GAAYzB,IAAK86B,GAASpoB,GAAM0vB,cAAez/B,EAAKy/B,+BAShFk5C,EAAYh4E,WACR03D,MAAOr5D,UAAU4c,MACjBtY,KAAOtE,UAAUiF,UAGZ00E,mHCpDT,QAAAngF,EAAA,QACAA,EAAA,QACAA,EAAA,yDAEA,IAAMygF,EAAe,SAAAn5E,GAAA,IACjBwD,EADiBxD,EACjBwD,KACA46B,EAFiBp+B,EAEjBo+B,UACAC,EAHiBr+B,EAGjBq+B,OAHiB,OAKjBt6B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,sBAAsBK,QAAS+6B,GAC1Ct6B,EAAAH,QAAA/J,cAAA,YAAO2J,GACPO,EAAAH,QAAA/J,cAACykC,EAAA16B,SACG26B,QAASH,MAKrB+6C,EAAat4E,WACT2C,KAAWtE,UAAUiF,OACrBi6B,UAAWl/B,UAAUkF,KACrBi6B,OAAWn/B,UAAUmF,QAGhB80E,iXCvBTzgF,EAAA,QACAA,EAAA,QACAA,EAAA,IACA83B,EAAA93B,EAAA,IACAisB,EAAAjsB,EAAA,+NAEMigF,6SACFS,WAAa,WAAM,IACPl+D,EAAc5U,EAAKxH,MAAnBoc,UACU,SAAdA,EACA5U,EAAKxH,MAAMu6E,iBACU,UAAdn+D,GACP5U,EAAKxH,MAAMw6E,6BAInBC,YAAc,WACVjzE,EAAKxH,MAAM4gC,yVAXQ1+B,UAAMvB,+CAcpB,IAAA0c,EAC6Cxd,KAAKG,MAA/Cwd,EADHH,EACGG,WAAYD,EADfF,EACeE,KAAMnB,EADrBiB,EACqBjB,UAAW7c,EADhC8d,EACgC9d,SAE/Bm7E,GAAe,EAAA71E,EAAAC,SAAW,uBAAX,yBAA4D0Y,GAEjF,OACIvY,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAWu2E,EAAcl2E,QAAS3E,KAAKy6E,YACvC/8D,GAELtY,EAAAH,QAAA/J,cAAC8qB,EAAAqb,QACG9kB,UAAWA,EACXmkB,SAAU1gC,KAAK46E,aAEdl7E,aAOrBs6E,EAAa93E,WACTqa,UAAWhc,UAAUiF,OACrB9F,SAAWa,UAAUiM,WACjBjM,UAAU4c,MACV5c,UAAUxB,SAEdujC,OAAa/hC,UAAUmF,KACvBq7B,YAAaxgC,UAAUmF,KACvBgY,KAAand,UAAUujE,OACnBx/D,UAAW/D,UAAUiF,SAEzBmY,WAAyBpd,UAAUiF,OACnCk1E,eAAyBn6E,UAAUmF,KACnCi1E,wBAAyBp6E,UAAUmF,MAGvC,IAAM88B,GAAmB,EAAA3Q,EAAAlxB,SACrB,SAAA6R,GAAA,IAAG9R,EAAH8R,EAAG9R,GAAH,OACIg6E,eAAyBh6E,EAAGg6E,eAC5BC,wBAAyBj6E,EAAGi6E,wBAC5B55C,YAAyBrgC,EAAGqgC,cAJX,CAMvBi5C,KAE2BA,aAApBx3C,iFCjET,QAAAzoC,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,GACAs+E,EAAAt+E,EAAA,KAGA+gF,EAAA/gF,EAAA,KACAk9B,EAAAl9B,EAAA,QAIAA,EAAA,KACA2U,EAAA3U,EAAA,IACA83B,EAAA93B,EAAA,uDAEA,IAAMghF,EAAa,SAAA15E,GAAA,IACfk0E,EADel0E,EACfk0E,aACA1uD,EAFexlB,EAEfwlB,aACA6R,EAHer3B,EAGfq3B,UACApW,EAJejhB,EAIfihB,uBAEA4W,EANe73B,EAMf63B,mBACAw8C,EAPer0E,EAOfq0E,eACAxpB,EARe7qD,EAQf6qD,sBACA5yB,EATej4B,EASfi4B,mBATe,OAYfl0B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,0BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACVo0B,GACDtzB,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KACIlH,EAAAH,QAAA/J,cAACm9E,EAAAx3C,YACGh8B,MAAM,EAAA4J,EAAA2C,UAAS,SACfsM,KAAMtY,EAAAH,QAAA/J,cAAC+7B,EAAAm2B,WAAU9oD,UAAU,gBAC3B28B,QAASva,UAAO7F,QAEpBzb,EAAAH,QAAA/J,cAACm9E,EAAAx3C,YACGh8B,MAAM,EAAA4J,EAAA2C,UAAS,aACfsM,KAAMtY,EAAAH,QAAA/J,cAAC+7B,EAAAqB,eAAch0B,UAAU,gBAC/B28B,QAASva,UAAOvqB,YAEpBiJ,EAAAH,QAAA/J,cAACm9E,EAAAx3C,YACGh8B,MAAM,EAAA4J,EAAA2C,UAAS,aACfsM,KAAMtY,EAAAH,QAAA/J,cAAC+7B,EAAAsB,eAAcj0B,UAAU,gBAC/B28B,QAASva,UAAOpqB,YAEpB8I,EAAAH,QAAA/J,cAAA,WACAkK,EAAAH,QAAA/J,cAACm9E,EAAAmC,cACG31E,MAAM,EAAA4J,EAAA2C,UAAS,aACfsuB,OAAQg2C,EACRj2C,UAAW81C,IASfnwE,EAAAH,QAAA/J,cAACm9E,EAAAmC,cACG31E,MAAM,EAAA4J,EAAA2C,UAAS,iBACfsuB,OAAQpG,EACRmG,UAAWvG,SAInBrS,IAAgB6R,IACpBtzB,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,iBACXc,EAAAH,QAAA/J,cAACm9E,EAAAx3C,YACGnjB,KAAMtY,EAAAH,QAAA/J,cAAC4/E,EAAA9B,YAAW10E,UAAU,gBAC5BO,MAAM,EAAA4J,EAAA2C,UAAS,UACf8vB,cAAe,WACP5e,GACA4pC,KAEJ,EAAAx9C,EAAA6jB,uBAQpBwoD,EAAW74E,WACPqzE,aAA4Bh1E,UAAUkF,KACtCohB,aAA4BtmB,UAAUkF,KACtCizB,UAA4Bn4B,UAAUkF,KACtC6c,uBAA4B/hB,UAAUkF,KACtC+vE,sBAA4Bj1E,UAAUkF,KACtCyzB,mBAA4B34B,UAAUkF,KACtCiwE,eAA4Bn1E,UAAUmF,KACtCwmD,sBAA4B3rD,UAAUmF,KACtCiwE,2BAA4Bp1E,UAAUmF,KACtC4zB,mBAA4B/4B,UAAUmF,iBAG3B,EAAAmsB,EAAAlxB,SACX,SAAA6R,GAAA,IAAGhS,EAAHgS,EAAGhS,OAAQE,EAAX8R,EAAW9R,GAAX,OACImmB,aAA4BrmB,EAAOqmB,aACnC0uD,aAA4B70E,EAAG0hB,gBAC/BsW,UAA4Bh4B,EAAGg4B,UAC/BpW,uBAA4B5hB,EAAG4hB,uBAC/BkzD,sBAA4B90E,EAAG8hB,uBAC/B0W,mBAA4Bx4B,EAAGm6B,oBAC/B66C,eAA4Bh1E,EAAGg1E,eAC/BxpB,sBAA4BxrD,EAAGwrD,sBAC/BypB,2BAA4Bj1E,EAAGi1E,2BAC/Br8C,mBAA4B54B,EAAG44B,qBAXxB,CAabyhD,qHC7GF,wDAAAhhF,EAAA,IACAk9B,EAAAl9B,EAAA,IACAs+E,EAAAt+E,EAAA,KACAihF,EAAAjhF,EAAA,OAYSkhF,0BAVyB,kBAC9B71E,EAAAH,QAAA/J,cAACm9E,EAAA2B,cACGz9D,UAAU,QACVmB,KAAMtY,EAAAH,QAAA/J,cAAC+7B,EAAAg2B,SAAD,MACNtvC,WAAW,iBAEXvY,EAAAH,QAAA/J,cAAC8/E,EAAAE,cAAD,oGCXRniF,OAAA0J,KAAA04E,GAAAx4E,QAAA,SAAA/D,GAAA,YAAAA,GAAA,eAAAA,GAAA7F,OAAAiF,eAAA7D,EAAAyE,GAAAX,YAAA,EAAAC,IAAA,kBAAAi9E,EAAAv8E,8GCAA,QAAA7E,EAAA,QACAA,EAAA,IACAqhF,EAAArhF,EAAA,KACAs+E,EAAAt+E,EAAA,wDAEA,IAAMmhF,EAAgB,SAAA75E,GAAA,IAAG6U,EAAH7U,EAAG6U,KAAH,OAClB9Q,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,KAEQ4J,GAAQA,EAAKtd,OACTsd,EAAKrO,IAAI,SAACyJ,EAAMooB,GAAP,OACLt0B,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,UAAS1N,IAAK86B,GACjBt0B,EAAAH,QAAA/J,cAACm9E,EAAAx3C,YAAWh8B,KAAMyM,EAAKooB,QAI/Bt0B,EAAAH,QAAA/J,cAACkgF,EAAAC,kBAAD,QAMhBH,EAAch5E,WACVgU,KAAM3V,UAAUxB,UAGXm8E,0HCzBT,wDAAAnhF,EAAA,IACA0U,EAAA1U,EAAA,GACAk9B,EAAAl9B,EAAA,MAgBSshF,kBAdiB,kBACtBj2E,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,8BACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,wBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,aACXc,EAAAH,QAAA/J,cAAC+7B,EAAAg2B,SAAD,OAEJ7nD,EAAAH,QAAA/J,cAAA,WACIkK,EAAAH,QAAA/J,cAAA,WAAK,EAAAuT,EAAA2C,UAAS,qBACdhM,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,6BAA4B,EAAAmK,EAAA2C,UAAS,iICZrE,wDAAArX,EAAA,IACA0U,EAAA1U,EAAA,GACAk9B,EAAAl9B,EAAA,IAGAi9B,EAAAj9B,EAAA,KAEA,IAAM+8E,IAEEp5D,KAAStY,EAAAH,QAAA/J,cAAC+7B,EAAAm2B,WAAU9oD,UAAU,iBAC9BO,MAAS,EAAA4J,EAAA2C,UAAS,SAClB6vB,QAASva,SAAO7F,QAIhBnD,KAAStY,EAAAH,QAAA/J,cAAC+7B,EAAAsB,eAAcj0B,UAAU,iBAClCO,MAAS,EAAA4J,EAAA2C,UAAS,WAClB6vB,QAASva,SAAOpqB,sBAITw6E,iFCrBf,IAAAt3E,EAAAzF,EAAA,OACAA,EAAA,QACAA,EAAA,IACAosB,EAAApsB,EAAA,SACAA,EAAA,UACAA,EAAA,MACA83B,EAAA93B,EAAA,uDAEA,IAAMuhF,EAAS,SAACn7E,GACZ,OAAIA,EAAMqa,UACCpV,EAAAH,QAAA/J,cAACqoC,EAAAt+B,QAAmB9E,EAAMhD,OAG9BiI,EAAAH,QAAA/J,cAACqgF,EAAAt2E,SAAa4hB,aAAc1mB,EAAM0mB,gBAG7Cy0D,EAAOp5E,WACH/E,MAAcuf,YAAcq4C,yBAC5Bv6C,UAAcja,UAAUkF,KACxBohB,aAActmB,UAAUkF,iBAKb,EAAA0gB,EAAAsqD,aAAW,EAAA5+C,EAAAlxB,SACtB,SAAAU,GAAA,IAAGb,EAAHa,EAAGb,OAAQC,EAAXY,EAAWZ,OAAX,OACIomB,aAAcrmB,EAAOqmB,aACrB1pB,MAAcsD,EAAOtD,MACrBqd,UAAc/Z,EAAO+Z,YAJH,CAMxB8gE,sKC9BKr2E,iGCAP,QAAAlL,EAAA,QACAA,EAAA,IACA0U,EAAA1U,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,MACA83B,EAAA93B,EAAA,uDAEA,IAAMkhC,aAAA,IAAA55B,2RAAAkJ,CAAAC,mBAAAC,KAAY,SAAAC,EAAOlK,GAAP,OAAAgK,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRtK,EAAOwrC,cAAcxrC,EAAO04E,yBADpB,wBAAAtuE,EAAAQ,SAAAV,OAAApN,MAAZ,gBAAA+nD,GAAA,OAAAhkD,EAAA9H,MAAAyG,KAAA0B,YAAAu5B,GAIAugD,EAAW,WACbn8E,OAAOmO,SAASU,KAAOw2C,UAAI1S,OAAO,YAGhCypC,EAAuB,SAAAjpE,GAAA,IAAGhS,EAAHgS,EAAGhS,OAAQw6B,EAAXxoB,EAAWwoB,WAAX,OACzB51B,EAAAH,QAAA/J,cAACwgF,EAAAz2E,SACGwQ,OAAO,EAAAhH,EAAA2C,UAAS,WAChBuqE,qBAAqB,EAAAltE,EAAA2C,UAAS,oCAC9BwqE,oBAAoB,EAAAntE,EAAA2C,UAAS,sBAC7B6pB,UAAW,kBAAMA,EAAUz6B,IAC3Bg7E,SAAUA,EACVxgD,WAAYA,GAEZ51B,EAAAH,QAAA/J,cAACwyE,EAAAzoE,SAASwgB,IAAI,6FAItBg2D,EAAqBv5E,WACjB1B,OAAYD,UAAUxB,OACtBi8B,WAAYz6B,UAAUkF,MAG1B,IAAMo2E,GAAoB,EAAAhqD,EAAAlxB,SACtB,SAAAkS,GAAA,IAAGrS,EAAHqS,EAAGrS,OAAH,OACIw6B,YAAax6B,EAAOw4B,2BACpBx4B,WAHkB,CAKxBi7E,aACaI,iFCxCf,QAAA9hF,EAAA,QACAA,EAAA,uDAEA,IAAM+hF,EAAgB,SAAAz6E,GAQhB,IAPFu6E,EAOEv6E,EAPFu6E,mBACAl8E,EAME2B,EANF3B,SACAi8E,EAKEt6E,EALFs6E,oBACA1gD,EAIE55B,EAJF45B,UACAugD,EAGEn6E,EAHFm6E,SACAxgD,EAEE35B,EAFF25B,WACAvlB,EACEpU,EADFoU,MAEA,OAAIulB,EAEI51B,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,mBACXc,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,2BACXc,EAAAH,QAAA/J,cAAA,MAAIoJ,UAAU,2BAA2BmR,GACzCrQ,EAAAH,QAAA/J,cAAA,KAAGoJ,UAAU,4BAA4B5E,GACzC0F,EAAAH,QAAA/J,cAAA,OAAKoJ,UAAU,2BACXc,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,4DACVK,QAAS62E,GAETp2E,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,gCAAgCs3E,IAEpDx2E,EAAAH,QAAA/J,cAAA,OACIoJ,UAAU,4DACVK,QAASs2B,GAET71B,EAAAH,QAAA/J,cAAA,QAAMoJ,UAAU,gCAAgCq3E,OAQjEv2E,EAAAH,QAAA/J,cAACkK,EAAAH,QAAMqH,SAAP,OAGXwvE,EAAc55E,WACV05E,mBAAqBr7E,UAAUiF,OAC/Bm2E,oBAAqBp7E,UAAUiF,OAC/Bw1B,WAAqBz6B,UAAUkF,KAC/B+1E,SAAqBj7E,UAAUmF,KAC/Bu1B,UAAqB16B,UAAUmF,KAC/B+P,MAAqBlV,UAAUiF,kBAGpBs2E,wMChDNC,2EADF92E,2GCAQ,WACwC,kBAAmB+2E,WAClE38E,OAAO8vB,iBAAiB,OAAQ,WAC5B,IAAI8sD,EAAY58E,OAAOmO,SAASS,SAE1BiuE,GADND,EAAY,eAAe1uE,KAAK0uE,GAAa58E,OAAOmO,SAASS,SAASN,QAAQ,aAAc,IAAM,IAC5F,oBACNquE,UAAUG,cACLC,SAASF,GACTnxE,KAAK,SAAAsxE,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBl/D,QACb2+D,UAAUG,cAAcO,WAKxBv9E,QAAQw3E,IAAI,6CAKZx3E,QAAQw3E,IAAI,2CAM/BgG,MAAM,SAAAx/E,GACHgC,QAAQhC,MAAM,4CAA6CA,UAM/D4+E,WAAT,WACC,kBAAmBC,WACnBA,UAAUG,cAAcS,MAAM7xE,KAAK,SAAAsxE,GAC/BA,EAAaN","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"ec0fdf888709d95d798f\",\"account_password\":\"9ccb2c552e51b96b7820\",\"api_toke\":\"160a0af78979cf60e8f4\",\"authorized_application\":\"761fa9de94b3f584ba5d\",\"cashier_password\":\"862d9cc346ead5fbb9f8\",\"contract\":\"03668ef21bca8a2bd72d\",\"financial_assessment\":\"c4c4944b61eff4062dbb\",\"limits\":\"2cdb09d11f74182058ef\",\"login_history\":\"eb5af7bff93daab6184b\",\"personal_details\":\"355956db8fa84b541982\",\"portfolio\":\"91dcb3fd2afaf95379ce\",\"self_exclusion\":\"c0e1eef79e2adc12be0e\",\"settings\":\"48b79ed317cc6861cda4\",\"statement\":\"e0f13bf6bbff1e703e0e\",\"vendors~smart_chart\":\"b2aabdfb0ce5712f2e26\",\"smart_chart\":\"940c3f3f657275c3bca8\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([268,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date-time';\n","export * from './icon-arrow.jsx';\nexport * from './icon-back.jsx';\nexport * from './icon-calendar-today.jsx';\nexport * from './icon-calendar.jsx';\nexport * from './icon-chevron-double-left.jsx';\nexport * from './icon-chevron-double-right.jsx';\nexport * from './icon-chevron-left.jsx';\nexport * from './icon-chevron-right.jsx';\nexport * from './icon-country-flag.jsx';\nexport * from './icon-clear.jsx';\nexport * from './icon-clock.jsx';\nexport * from './icon-close.jsx';\nexport * from './icon-error.jsx';\nexport * from './icon-exclamation.jsx';\nexport * from './icon-info-blue.jsx';\nexport * from './icon-info-outline.jsx';\nexport * from './icon-flag.jsx';\nexport * from './icon-minimize.jsx';\nexport * from './icon-minus.jsx';\nexport * from './icon-plus.jsx';\nexport * from './icon-question.jsx';\nexport * from './icon-red-dot.jsx';\nexport * from './icon-success.jsx';\nexport * from './icon-warning.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            <span className={classNames('btn__text', classNameSpan)}>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","export * from './icon-bell.jsx';\nexport * from './icon-cashier.jsx';\nexport * from './icon-hamburger.jsx';\nexport * from './icon-portfolio.jsx';\nexport * from './icon-statement.jsx';\nexport * from './icon-trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { IconMinus }             from 'Assets/Common/icon-minus.jsx'; // implicit import here { IconMinus, IconPlus } from 'Assets/Common' breaks compilation\nimport { IconPlus }              from 'Assets/Common/icon-plus.jsx';\nimport Button                    from './button.jsx';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    classNameInput,\n    classNamePrefix,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_read_only = false,\n    is_signed = false,\n    is_unit_at_right = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    unit,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (unit) {\n            e.target.value = e.target.value.replace(unit, '').trim();\n        }\n\n        if (e.target.value === value && type !== 'checkbox') {\n            return;\n        }\n\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n            const signed_regex = is_signed ? '[+\\-\\.0-9]$' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const incrementValue = () => {\n        if  (max_is_disabled) return;\n\n        const increment_value = (+value) + 1;\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n\n        const decrement_value = (+value) - 1;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    let display_value = value;\n\n    if (unit) {\n        display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n    }\n\n    const is_increment_input = is_incrementable && type === 'number';\n\n    const input =\n        <input\n            checked={checked ? 'checked' : ''}\n            className={classNames(is_increment_input ? 'input-wrapper__input' : '', 'input', { 'input--error': has_error }, classNameInput)}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-value={data_value}\n            data-tip={data_tip}\n            id={id}\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            onChange={changeValue}\n            onClick={onClick}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={display_value || ''}\n            autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n        />;\n\n    const input_increment =\n        <div className='input-wrapper'>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--increment'}\n                is_disabled={max_is_disabled}\n                onClick={incrementValue}\n                tabIndex='-1'\n            >\n                <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n            </Button>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--decrement'}\n                is_disabled={min_is_disabled}\n                onClick={decrementValue}\n                tabIndex='-1'\n            >\n                <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n            </Button>\n            { input }\n        </div>;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip className={classNames('', { 'with-label': label })} alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-field__label'>{label}</label>\n                }\n                {!!prefix &&\n                    <span className={classNames(classNamePrefix, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                }\n                {!!helper &&\n                    <span className='input-field__helper'>{helper}</span>\n                }\n                {is_increment_input ? input_increment : input}\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked                 : PropTypes.number,\n    className               : PropTypes.string,\n    classNameInput          : PropTypes.string,\n    classNamePrefix         : PropTypes.string,\n    error_messages          : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits       : PropTypes.number,\n    helper                  : PropTypes.string,\n    id                      : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconInfoBlue }    from 'Assets/Common/icon-info-blue.jsx';\nimport { IconInfoOutline } from 'Assets/Common/icon-info-outline.jsx';\nimport { IconQuestion }    from 'Assets/Common/icon-question.jsx';\nimport { IconRedDot }      from 'Assets/Common/icon-red-dot.jsx';\n\nclass Tooltip extends React.Component {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip')}\n                data-tooltip={message}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <IconInfoOutline\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <IconInfoBlue\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <IconQuestion className={icon_class} />}\n                {icon === 'dot'      && <IconRedDot className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const loading_class = classNames('block-ui__loading', className);\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.string,\n    updateSelected  : PropTypes.func,\n};\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill-template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","export * from './drawer-header.jsx';\nexport * from './drawer-item.jsx';\nexport * from './drawer-items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer-toggle.jsx';\nexport * from './toggle-drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary-link.jsx';\nexport ButtonLink         from './button-link.jsx';\nexport default            from './binary-routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport { IconError };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconInfoBlue = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#2196F3' />\n            <g fill='#FFF' transform='translate(6.5 4)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <rect width='2' height='5' x='.5' y='3' rx='1' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconInfoBlue.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoBlue };\n","export * from './icon-trade-types.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","export default from './range-slider.jsx';\n","import { localize } from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export * from './icon-maximize.jsx';\nexport * from './icon-positions.jsx';\nexport * from './icon-settings.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","export default from './error-component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","import ContractType from '../Helpers/contract-type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal_checked',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3.613 8.5l3.26 3.668a.5.5 0 1 1-.747.664l-4-4.5a.5.5 0 0 1 0-.664l4-4.5a.5.5 0 0 1 .748.664L3.614 7.5H13.5a.5.5 0 1 1 0 1H3.613z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconClock = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <g fill='none' fillRule='nonzero' stroke='#5C5C5C'>\n            <circle cx='8' cy='8' r='7.5' />\n            <path strokeLinecap='round' strokeLinejoin='round' d='M8 3.5v5h3.5' />\n        </g>\n    </svg>\n);\n\nIconClock.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClock };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconInfoOutline = ({ className, onMouseEnter, onMouseLeave }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        height='16'\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        viewBox='0 0 16 16'\n        width='16'\n        xmlns='http://www.w3.org/2000/svg'\n    >\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.16)' fillRule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM8 6a.75.75 0 1 0 0-1.5A.75.75 0 0 0 8 6zm0 1a.5.5 0 0 0-.5.5v4a.5.5 0 1 0 1 0v-4A.5.5 0 0 0 8 7z' />\n    </svg>\n);\n\nIconInfoOutline.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoOutline };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconQuestion = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='#FFF' fillRule='evenodd'>\n            <path d='M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm0-1A7 7 0 1 0 8 1a7 7 0 0 0 0 14z' fillRule='nonzero' />\n            <path d='M7.39 9.518c.007-.373.052-.668.134-.885.082-.216.25-.456.503-.72l.646-.636c.276-.298.415-.618.415-.96 0-.33-.09-.588-.272-.774-.18-.187-.444-.28-.789-.28-.335 0-.605.084-.809.254a.842.842 0 0 0-.306.682H6c.007-.508.196-.918.57-1.23.373-.313.859-.469 1.457-.469.622 0 1.106.16 1.453.478.347.318.52.755.52 1.31 0 .55-.266 1.091-.799 1.625l-.538.508c-.24.255-.36.62-.36 1.097h-.912zm-.039 1.492a.5.5 0 0 1 .136-.355c.09-.096.224-.144.402-.144.178 0 .312.048.404.144a.493.493 0 0 1 .139.355.477.477 0 0 1-.139.351c-.092.093-.226.139-.404.139-.178 0-.312-.046-.402-.139a.481.481 0 0 1-.136-.35z' />\n        </g>\n    </svg>\n);\n\nIconQuestion.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuestion };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconRedDot = ({ className }) => (\n    <svg className={className} width='4' height='4' xmlns='http://www.w3.org/2000/svg'>\n        <circle cx='1163' cy='626' r='2' transform='translate(-1161 -624)' fill='#E31C4B' fillRule='nonzero' />\n    </svg>\n);\n\nIconRedDot.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconRedDot };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconSuccess = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4CAF50' />\n            <path fill='#FFF' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconSuccess.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSuccess };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconWarning = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V4a1 1 0 0 1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconWarning.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconWarning };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account-password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api-token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized-applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier-password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial-assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login-history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal-details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self-exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon-trade-categories.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport UILoader          from 'App/Components/Elements/ui-loader.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract-info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='btn--primary btn-purchase'\n                has_effect\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n            >\n                <React.Fragment>\n                    <div className='btn-purchase__effect-main' />\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__content'>\n                        <div className='btn-purchase__trade-type'>\n                            <IconTradeType type={type.toLowerCase()} className='btn-purchase__trade-type-icon' />\n                            <span className='btn-purchase__trade-type-text'>{localize('[_1]', trade_types[type])}</span>\n                        </div>\n                    </div>\n                    <div className='btn-purchase__info'>\n                        <div className='btn-purchase__return'>{is_disabled ? '---,-' : info.returns}</div>\n                        <div className='btn-purchase__profit'>\n                            {is_disabled ? '--,--' : <Money amount={info.profit} currency={currency} className='btn-purchase__currency' />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Button>\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader classNameBlock='purchase-container__loading' />\n                        }\n                        <ContractInfo\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', `popconfirm--${alignment}`, {\n        [`popconfirm--${alignment}--open`]: is_visible,\n        'popconfirm--open'                : is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm__title'>\n                <IconExclamation className='popconfirm__icon_exclamation' />\n                <h4 className='popconfirm__header'>{message}</h4>\n            </div>\n            <div className='popconfirm__button-wrapper'>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onClose}\n                >\n                    <span className='popconfirm__button-text'>{cancel_text}</span>\n                </div>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onConfirm}\n                >\n                    <span className='popconfirm__button-text'>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                        this.props.ui_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules, ui }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n        ui_store       : ui,\n    })\n)(TradeParams);\n","export default from './dropdown.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Button     from './button.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={val.text}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return <div className='button-menu'>{menu}</div>;\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","export default from './trading-date-picker.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport SellInfo     from '../Sell/sell-info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs-item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-dialog__row' onClick={toggle || onClick}>\n        <span className='settings-dialog__row-name'>{name}</span>\n        {toggle ?\n            <SwitchButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst SwitchButton = ({ style, toggled }) => {\n    const toggle_style = style || 'switch-button';\n    const icon_class = classNames(toggle_style, {\n        [`${toggle_style}--toggled`]: toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nSwitchButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default SwitchButton;\n","export * from './icon-logout.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer-header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            <IconPortfolio className='portfolio-empty__icon' />\n            <span className='portfolio-empty__text'>{localize('No running contract')}</span>\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date-picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui-loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details-contents.jsx';\nimport DetailsHeader   from '../Components/Details/details-header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn btn--link btn--secondary btn--secondary--orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span className='btn__text'>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n\n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract-error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxLongcode }      from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = InfoBoxLongcode;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 209,\n\t\"./ja.js\": 209\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 476;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance, true);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base-store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid  = LocalStore.get('active_loginid');\n        this.accounts = LocalStore.getObject(storage_key);\n        this.switched = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract-store';\nimport PortfolioStore  from './Portfolio/portfolio-store';\nimport SmartChartStore from './SmartChart/smart-chart-store';\nimport StatementStore  from './Statement/statement-store';\nimport TradeStore      from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }    from './Helpers/chart-barriers';\nimport { createChartMarkers }    from './Helpers/chart-markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base-store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon-entry-spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon-flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const is_number      = typeof value === 'number';\n    // need to explicitly convert date string to a JS Date object then pass that into Moment\n    // to get rid of the warning: Deprecation warning: moment construction falls back to js Date\n    const formatted_date = moment(new Date(value)).format('YYYY-MM-DD');\n    return is_number ? epochToMoment(value) : moment.utc(formatted_date);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport {\n    epochToMoment,\n    getDiffDuration }              from 'Utils/Date';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport {\n    getDurationUnitText,\n    getDurationUnitValue }         from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndSpotTime,\n    isUserSold,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            // TODO: Refactor with contract-store and use common helpers to handle contract result\n            WS.proposalOpenContract(contract_id).then(action((proposal_response) => {\n                // populate result details box for specified positions card\n                this.populateResultDetails(proposal_response);\n            }));\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        portfolio_position.purchase_time = (proposal.is_forward_starting === 1) ?\n            proposal.date_start\n            :\n            proposal.purchase_time;\n\n        portfolio_position.bid_price        = proposal.bid_price;\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.underlying_code  = proposal.underlying;\n        portfolio_position.underlying_name  = proposal.display_name;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.tick_count       = proposal.tick_count;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.positions.findIndex(pos => +pos.id === +contract_id);\n        const bid_price = this.positions[i].bid_price;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        const is_contract_mode = this.root_store.modules.smart_chart.is_contract_mode;\n        // TODO: Refactor with ContractStore for re-drawing of chart markers and barriers\n        // Toast messages are temporary UI for prompting user of sold contracts\n        if (!is_contract_mode && response.error) {\n            // If unable to sell due to error, give error via toast message if not in contract mode\n            this.root_store.ui.addToastMessage({\n                message: response.error.message,\n                type   : 'error',\n            });\n        // Check if still in contract_mode\n        } else if (is_contract_mode && !response.error) {\n            WS.forget('proposal_open_contract', this.root_store.modules.contract.updateProposal, { contract_id: response.sell.contract_id });\n            WS.proposalOpenContract(response.sell.contract_id).then(action((proposal_response) => {\n                // update contract store proposal after sell\n                this.root_store.modules.contract.updateProposal(proposal_response);\n                this.populateResultDetails(proposal_response);\n            }));\n            // update contract store sell info after sell\n            this.root_store.modules.contract.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n        }\n    }\n\n    populateResultDetails(response) {\n        const contract_response = response.proposal_open_contract;\n        const i = this.positions.findIndex(pos => +pos.id === +contract_response.contract_id);\n        const sell_time = isUserSold(contract_response) ?\n            +contract_response.date_expiry\n            :\n            getEndSpotTime(contract_response);\n        const duration_diff =\n            getDiffDuration(\n                epochToMoment(this.positions[i].purchase_time || this.positions[i].date_start),\n                epochToMoment(this.positions[i].expiry_time)\n            );\n        const duration = this.positions[i].tick_count ?\n            this.positions[i].tick_count\n            :\n            getDurationUnitValue(duration_diff);\n\n        this.positions[i].id_sell       = +contract_response.transaction_ids.sell;\n        this.positions[i].barrier       = +contract_response.barrier;\n        this.positions[i].duration      = duration;\n        this.positions[i].duration_unit = getDurationUnitText(duration_diff);\n        this.positions[i].entry_spot    = +contract_response.entry_spot;\n        this.positions[i].sell_time     = sell_time;\n        this.positions[i].result        = getDisplayStatus(contract_response);\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        let i = this.positions.findIndex(pos => +pos.id === +contract_id);\n        // check if position to be removed is out of range from the maximum amount rendered in drawer\n        if (this.positions.length > 4) i += 1;\n        this.positions.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n        payout,\n        purchase,\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n    };\n};\n","import { localize } from '_common/localize';\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n\n    if (duration_ms >= 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60 * 24));\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        return Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / (1000));\n    }\n    return Math.floor(duration_ms / (1000));\n};\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        s: { name: localize('seconds') },\n        m: { name: localize('minutes') },\n        h: { name: localize('hours') },\n        d: { name: localize('days') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            return unit_map.d.name;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            return unit_map.h.name;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            return unit_map.m.name;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nconst store_name = 'smart_chart_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties, store_name });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format-response';\nimport BaseStore                        from '../../base-store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url-helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query-string';\nimport getValidationRules                from './Constants/validation-rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract-type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_allow_equal             = false;\n    @observable is_equal_checked           = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            store_name,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => [\n                this.symbol,\n                this.contract_type,\n                this.duration_unit,\n                this.expiry_type,\n                this.duration_units_list,\n                this.contract_types_list,\n            ],\n            () => {\n                this.changeAllowEquals();\n            },\n            { delay: 500 }\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, checked } = e.target;\n        let { value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (value === 'is_equal') {\n            if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type)) {\n                if (checked) {\n                    this.is_equal_checked = 1;\n                    value = 'rise_fall_equal';\n                } else {\n                    this.is_equal_checked = 0;\n                    value = 'rise_fall';\n                }\n            }\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        e.preventDefault();\n        WS.forgetAll('proposal').then(this.requestProposal());\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        WS.forgetAll('proposal');\n\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    changeAllowEquals() {\n        const hasCallPutEqual = (contract_type_list) => {\n            if (!contract_type_list) return false;\n\n            return getPropertyValue(contract_type_list, 'Up/Down')\n                .some(contract => contract.value === 'rise_fall_equal');\n        };\n        const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n            if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n            const contract_list = Object.keys(contract_type_list || {})\n                .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n            \n            const contract_duration_list = contract_list\n                .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n            // Check whether rise fall equal is exists and has the current store duration unit\n            return hasCallPutEqual(contract_type_list) ? contract_duration_list\n                .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n                .some(duration => duration.value === duration_unit) : false;\n        };\n        const check_callput_equal_duration = hasDurationForCallPutEqual(this.contract_types_list,\n            this.duration_unit, this.contract_start_type);\n\n        if (!(/^(rise_fall|rise_fall_equal)$/.test(this.contract_type))) {\n            this.is_allow_equal = false;\n            this.is_equal_checked = 0;\n        }\n\n        if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type) && (check_callput_equal_duration || this.expiry_type === 'endtime') && hasCallPutEqual(this.contract_types_list)) {\n            this.is_allow_equal = true;\n        } else {\n            this.is_allow_equal = false;\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query-string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base-store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('theme--dark'));\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base-name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport PositionsDrawer             from './Components/Elements/PositionsDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast-message.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <React.Fragment>\n                <div className='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PositionsDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer className='footer'>\n                    <Footer />\n                </footer>\n            </React.Fragment>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './positions-drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { CSSTransition }              from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconMinimize }               from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            active_contract_id,\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            toggleDrawer,\n            server_time,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            // Show only 4 most recent open contracts\n            body_content = active_positions.slice(0, 4).map((portfolio_position) => (\n                <CSSTransition\n                    key={portfolio_position.id}\n                    in={!!(portfolio_position.underlying_code)}\n                    timeout={150}\n                    classNames={{\n                        enter    : 'positions-drawer-card__wrapper--enter',\n                        enterDone: 'positions-drawer-card__wrapper--enter-done',\n                        exit     : 'positions-drawer-card__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <PositionsDrawerCard\n                        active_position={active_contract_id}\n                        onClickSell={onClickSell}\n                        onClickRemove={onClickRemove}\n                        server_time={server_time}\n                        key={portfolio_position.id}\n                        currency={currency}\n                        {...portfolio_position}\n                    />\n                </CSSTransition>\n            ));\n        }\n\n        return (\n            <div className={classNames('positions-drawer', { 'positions-drawer--open': is_positions_drawer_on })}>\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconMinimize />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n                <div className='positions-drawer__footer'>\n                    {/* TODO: Toggle to popup the Reports Dialog once Dialog is available */}\n                    <a className='btn btn--link btn--alternate' href='javascript:;'>\n                        <span className='btn__text'>\n                            {localize('Go to Reports')}\n                        </span>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id    : PropTypes.string,\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    server_time           : PropTypes.object,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, modules, client, ui }) => ({\n        server_time           : common.server_time,\n        currency              : client.currency,\n        active_contract_id    : modules.contract.contract_id,\n        active_positions      : modules.portfolio.active_positions,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        is_loading            : modules.portfolio.is_loading,\n        onClickSell           : modules.portfolio.onClickSell,\n        onClickRemove         : modules.portfolio.removePositionById,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        toggleDrawer          : ui.togglePositionsDrawer,\n    })\n)(PositionsDrawer);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className, classNamePath, is_bold = false }) => (\n    is_bold ?\n        <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                className={classNames(classNamePath, 'color1-fill')}\n                fill='#000'\n                fillOpacity='.8'\n                fillRule='evenodd'\n                d='M8 9.586l5.293-5.293a1 1 0 0 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 1.414-1.414L8 9.586z'\n            />\n        </svg>\n        :\n        <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                className={classNames(classNamePath, 'color1-fill')}\n                fill='rgba(0, 0, 0, 0.8)'\n                fillRule='nonzero'\n                d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z'\n            />\n        </svg>\n);\n\nIconArrow.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconArrow };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, classNamePath, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path className={classNamePath || 'color1-fill'} fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    onClick      : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={classNames('inline-icon', className)}\n        onClick={onClick}\n    >\n        <path className='color1-fill' fill='#000' fillOpacity='.8' fillRule='nonzero' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCountryFlag = ({ type, className }) => {\n    let IconCountry;\n    if (type) {\n        switch (type) {\n            case 'de':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#333' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#FFCD00' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#F10000' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'es':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#DD172C' mask='url(#b)' d='M0 0h24v4H0zm0 12h24v4H0z' />\n                            <path fill='#FFD133' mask='url(#b)' d='M0 4h24v8H0z' />\n                            <g mask='url(#b)'>\n                                <path fill='#FFEDB1' d='M5.333 7.333h1.334V8H5.333z' />\n                                <path d='M4.054 7.3l.167 2.007a1.138 1.138 0 0 0 1.112 1.026c.566 0 1.065-.461 1.112-1.026L6.613 7.3c.014-.174-.105-.3-.288-.3H4.341c-.176 0-.301.133-.287.3z' stroke='#A41517' strokeWidth='.667' />\n                                <path fill='#A41517' d='M4 8h2.667v.667H6L5.333 10l-.666-1.333H4zM2 6h1.333v4.667H2zm5.333 0h1.333v4.667H7.333zM4 5.333c0-.368.306-.666.673-.666h1.32c.372 0 .674.296.674.666v.33A.33.33 0 0 1 6.34 6H4.327A.327.327 0 0 1 4 5.664v-.33z' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'fr':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#001F9B' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF002D' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'id':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#E12237' mask='url(#b)' d='M0 0h24v8H0z' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 8h24v8H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'it':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#1BB65D' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#E43D4C' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'pl':\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M0 14.16c0 1.01.805 1.827 1.797 1.827h20.406c.992 0 1.797-.818 1.797-1.826V8H0v6.16z' fill='#F44336' />\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84V8h24V1.84C24 .83 23.195.012 22.203.012z' fill='#FFF' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n            case 'pt':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#128415' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF2936' mask='url(#b)' d='M8 0h16v16H8z' />\n                            <circle stroke='#FAF94F' mask='url(#b)' cx='8' cy='8' r='3.5' />\n                            <g mask='url(#b)'>\n                                <path d='M6.5 6.341c0-.188.145-.341.333-.341h2.334c.184 0 .333.152.333.341v2.327C9.5 9.404 8.907 10 8.175 10h-.35C7.093 10 6.5 9.41 6.5 8.668V6.341z' fill='#FFF' />\n                                <path d='M8 8.92c.414 0 .75-1.086.75-1.5a.75.75 0 1 0-1.5 0c0 .414.336 1.5.75 1.5z' fill='#1D50B5' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'ru':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#FFF' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#E53B35' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#0C47B7' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'th':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#F12532' xlinkHref='#a' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 3h24v10H0z' />\n                            <path fill='#322B6C' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'vi':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#EA403F' xlinkHref='#a' />\n                            <path fill='#FFFE4E' mask='url(#b)' d='M12 10.45l-2.939 2.095 1.084-3.442-2.9-2.148 3.609-.033L12 3.5l1.146 3.422 3.61.033-2.901 2.148 1.084 3.442z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_cn':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M7.742 7.186h1.04V13h-1.04V7.186zm7.453 5.77h-.952l-.255-.927.996.032c.244 0 .366-.161.366-.474V6.883h-4.11v-.938h5.15v5.922c0 .723-.399 1.09-1.196 1.09zM9.968 7.64h4.175v4.207H9.968V7.639zm3.2 3.355v-.863h-2.203v.863h2.203zM10.965 9.31h2.203v-.842h-2.203v.842zM9.082 5.503c.576.496 1.019.938 1.329 1.327l-.775.517c-.333-.41-.776-.863-1.33-1.38l.776-.464zm-.3-.874a7.406 7.406 0 0 1-.896 1.23L7 5.298C7.664 4.586 8.13 3.82 8.417 3l1.02.216c-.067.183-.145.356-.211.518h2.746v.895h-1.461c.232.324.42.636.564.917l-.93.334a9.512 9.512 0 0 0-.73-1.251h-.632zm4.707 0a6.6 6.6 0 0 1-.686 1.068l-.886-.561c.543-.658.93-1.37 1.152-2.125l1.007.216c-.066.172-.121.345-.177.507H17v.895h-1.661c.21.291.387.572.531.83l-.93.335a9.04 9.04 0 0 0-.697-1.165h-.754z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_tw':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M8.602 4.413c-.13.151-.26.302-.38.432h3.605c0 .431-.011.83-.033 1.175h.617v.648h-.67l-.098.68h.444v.528h-.563c-.022.065-.033.119-.054.173l.314.237c-.585.291-1.18.54-1.786.744a165.06 165.06 0 0 1 2.23-.075c.454-.227.908-.475 1.374-.734l.725.475a18.267 18.267 0 0 1-4.091 1.683 126.13 126.13 0 0 0 4.177-.248c-.238-.173-.487-.356-.746-.53l.725-.441c1.028.647 1.818 1.208 2.37 1.704l-.812.561a12.63 12.63 0 0 0-.768-.69c-.93.054-1.818.108-2.663.15v1.263c0 .56-.335.852-.995.852h-1.018l-.173-.82c.314.033.617.054.899.054.205 0 .313-.108.313-.302v-1.003c-1.287.065-2.478.108-3.56.14l-.217-.841c.282.01.552.021.823.021.78-.162 1.59-.42 2.446-.766l-2.468.087-.151-.712c.368 0 .617-.033.768-.097a12.58 12.58 0 0 0 1.44-.637c.021-.086.054-.173.075-.248H7.574c.075-.41.14-.81.205-1.208h-.703V6.02h.779c.043-.312.076-.614.097-.916a6.4 6.4 0 0 1-.422.366L7 4.834c.595-.442 1.115-1.047 1.548-1.823l.844.183c-.098.173-.195.345-.292.507h3.181v.712h-3.68zm0 2.168l-.13.766h1.656a7.341 7.341 0 0 0-1.147-.41l.227-.356h-.606zm1.558.766h.671a9.43 9.43 0 0 0 .13-.766h-1.71c.422.12.8.249 1.147.4l-.238.366zm.844-1.219l.033-.766H8.742c-.021.26-.054.518-.086.766h1.504a6.009 6.009 0 0 0-1.017-.399l.249-.356c.39.108.757.26 1.093.432l-.206.323h.725zm2.587-1.337a3.23 3.23 0 0 0 .941 1.424c.347-.41.617-.885.79-1.424h-1.731zm.335 1.985a4.244 4.244 0 0 1-.876-1.316 7.07 7.07 0 0 1-.52.582l-.54-.647c.562-.583 1.049-1.381 1.46-2.395l.877.194c-.108.28-.227.54-.346.788h2.813v.809h-.627c-.195.776-.52 1.413-.953 1.93.498.324 1.093.594 1.786.82l-.465.81c-.78-.28-1.429-.615-1.948-1.004-.542.432-1.202.745-1.96.95l-.475-.745c.714-.172 1.298-.431 1.774-.776zm-.173 4.347c1.082.259 2.078.583 2.976.97l-.519.81a16.903 16.903 0 0 0-2.965-1.025l.508-.755zm-3.798.043l.54.615c-.8.453-1.785.83-2.943 1.133l-.379-.799c1.126-.237 2.056-.56 2.782-.949z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            default: // en\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84v12.322c0 1.008.805 1.826 1.797 1.826h20.406c.992 0 1.797-.818 1.797-1.826V1.839C24 .831 23.195.013 22.203.013z' fill='#0D47A1' />\n                            <path d='M23.975 1.537A1.806 1.806 0 0 0 22.203.013h-.468l-7.666 5.102V.013H9.931v5.102L2.265.013h-.468C.906.013.167.673.025 1.537l6.552 4.361H0v4.204h6.577l-6.552 4.36a1.806 1.806 0 0 0 1.772 1.525h.468l7.666-5.102v5.102h4.138v-5.102l7.666 5.102h.468c.891 0 1.63-.66 1.772-1.524l-6.552-4.361H24V5.898h-6.577l6.552-4.36z' fill='#FFF' />\n                            <path d='M13.241.013V6.74H24v2.52H13.241v6.726H10.76V9.26H0V6.74h10.759V.013h2.482zM1.162 15.87a1.8 1.8 0 0 1-.73-.52l7.956-5.247h1.52L1.162 15.87zm15.075-5.767l7.527 4.963a1.82 1.82 0 0 1-.576.623l-8.471-5.586h1.52zM.19 1.022C.316.767.5.545.725.374l8.378 5.525h-1.52L.19 1.023zm15.399 4.876h-1.52L22.824.125a1.8 1.8 0 0 1 .735.517l-7.97 5.256z' fill='#F44336' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='24' height='16' viewBox='0 0 24 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconCountry}\n        </svg>\n\n    );\n};\n\nIconCountryFlag.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconCountryFlag };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconFlag = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n        <g fillRule='nonzero' fill='none'>\n            <path d='M-6-4h32v32H-6z' />\n            <path className='color1-fill' d='M2 2h18a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2v5a1 1 0 0 1-2 0V1a1 1 0 1 1 2 0v1zm6 2v4h4V4H8zm4 4v4h4V8h-4zm4-4v4h4V4h-4zm0 8v4h4v-4h-4zm-8 0v4h4v-4H8zM4 8v4h4V8H4z' fill='#7F8397' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconFlag };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinimize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#000' fillOpacity='0.8' fillRule='nonzero' d='M0 7h16v2H0z' />\n    </svg>\n);\n\nIconMinimize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMinimize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='14' viewBox='0 0 16 14'>\n        <g fill='none' fillRule='evenodd'>\n            <path fill='#000' fillOpacity='0.16' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2z' />\n            <path fill='#FFF' fillRule='nonzero' d='M1 8.128l2.804 1.557A2.5 2.5 0 0 0 5.018 10h5.964a2.5 2.5 0 0 0 1.214-.315L15 8.128V12.5a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5V8.128zm0-1.144V3.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v3.484L11.71 8.81a1.5 1.5 0 0 1-.728.189H5.018a1.5 1.5 0 0 1-.728-.189L1 6.984zM6.5 8h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0 0 1z' />\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { CSSTransition }     from 'react-transition-group';\nimport { localize }          from '_common/localize';\nimport ContractTypeCell      from 'Modules/Portfolio/Components/contract-type-cell.jsx';\nimport ProgressSlider        from './ProgressSlider';\nimport ResultDetails         from './result-details.jsx';\nimport ResultOverlay         from './result-overlay.jsx';\nimport { getTimePercentage } from './helpers';\nimport Money                 from '../money.jsx';\nimport BinaryLink            from '../../Routes/binary-link.jsx';\nimport { getContractPath }   from '../../Routes/helpers';\nimport Button                from '../../Form/button.jsx';\n\n// TODO: Break into smaller components once design is finalized\nconst PositionsDrawerCard = ({\n    active_position,\n    barrier,\n    className,\n    currency,\n    duration,\n    duration_unit,\n    entry_spot,\n    expiry_time,\n    id,\n    id_sell,\n    indicative,\n    is_valid_to_sell,\n    profit_loss,\n    purchase,\n    purchase_time,\n    onClickSell,\n    onClickRemove,\n    result,\n    sell_time,\n    server_time,\n    status,\n    tick_count,\n    type,\n    underlying_code,\n    underlying_name,\n}) => {\n    const percentage = getTimePercentage(server_time, purchase_time, expiry_time);\n    return (\n        <div className={classNames('positions-drawer-card__wrapper', className)}>\n            <ResultOverlay\n                id={id}\n                onClickRemove={onClickRemove}\n                result={result}\n            />\n            <BinaryLink\n                className={classNames(\n                    'positions-drawer-card', {\n                        'positions-drawer-card--active': (parseInt(active_position) === id),\n                        'positions-drawer-card--green' : (percentage >= 50) && !result,\n                        'positions-drawer-card--orange': (percentage < 50 && percentage >= 20) && !result,\n                        'positions-drawer-card--red'   : (percentage < 20) && !result,\n                    }\n                )}\n                to={getContractPath(id)}\n            >\n                <React.Fragment>\n                    <div className={classNames(\n                        'positions-drawer-card__grid',\n                        'positions-drawer-card__grid-underlying-trade'\n                    )}\n                    >\n                        <div className='positions-drawer-card__underlying-name'>\n                            <div\n                                className={classNames(\n                                    'icons-underlying',\n                                    `icons-underlying__ic-${underlying_code || 'unknown'}`\n                                )}\n                            />\n                            <span className='positions-drawer-card__symbol'>{underlying_name}</span>\n                        </div>\n                        <div className='positions-drawer-card__type'>\n                            <ContractTypeCell type={type} />\n                        </div>\n                    </div>\n                    <ProgressSlider\n                        remaining_time={expiry_time}\n                        percentage={percentage}\n                        ticks_count={tick_count}\n                        has_result={!!(result)}\n                    />\n                    <div className={classNames(\n                        'positions-drawer-card__grid',\n                        'positions-drawer-card__grid-profit-payout'\n                    )}\n                    >\n                        <div className={classNames(\n                            'positions-drawer-card__profit-loss',\n                            'positions-drawer-card__profit-loss-label',\n                        )}\n                        >\n                            {localize('Potential P/L:')}\n                        </div>\n                        <div className={classNames(\n                            'positions-drawer-card__indicative',\n                            'positions-drawer-card__indicative-label',\n                        )}\n                        >\n                            {localize('Potential Payout:')}\n                        </div>\n                        <div className={classNames(\n                            'positions-drawer-card__profit-loss', {\n                                'positions-drawer-card__profit-loss--negative': (profit_loss < 0),\n                                'positions-drawer-card__profit-loss--positive': (profit_loss > 0),\n                            })}\n                        >\n                            <Money amount={Math.abs(profit_loss)} currency={currency} />\n                        </div>\n                        <div className={`positions-drawer-card__indicative positions-drawer-card__indicative--${status}`}>\n                            <Money amount={indicative} currency={currency} />\n                        </div>\n                    </div>\n                    <div className='positions-drawer-card__purchase-price'>\n                        <span className='positions-drawer-card__purchase-label'>\n                            {localize('Purchase price')}\n                        </span>\n                        <Money amount={purchase} currency={currency} />\n                    </div>\n                </React.Fragment>\n            </BinaryLink>\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        className='btn--primary btn--primary--orange'\n                        is_disabled={!is_valid_to_sell}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n            <ResultDetails\n                barrier={barrier}\n                contract_end_time={sell_time}\n                contract_start_time={purchase_time}\n                duration={duration}\n                duration_unit={duration_unit}\n                entry_spot={entry_spot}\n                tick_count={tick_count}\n                has_result={!!(result)}\n                id_sell={id_sell}\n            />\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.string,\n    barrier        : PropTypes.number,\n    className      : PropTypes.string,\n    currency       : PropTypes.string,\n    duration       : PropTypes.number,\n    duration_unit  : PropTypes.string,\n    entry_spot     : PropTypes.number,\n    exit_spot      : PropTypes.number,\n    expiry_time    : PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id              : PropTypes.number,\n    id_sell         : PropTypes.number,\n    indicative      : PropTypes.number,\n    is_valid_to_sell: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.bool,\n    ]),\n    onClickRemove: PropTypes.func,\n    onClickSell  : PropTypes.func,\n    profit_loss  : PropTypes.number,\n    purchase     : PropTypes.number,\n    purchase_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    result   : PropTypes.string,\n    sell_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    server_time    : PropTypes.object,\n    status         : PropTypes.string,\n    tick_count     : PropTypes.number,\n    type           : PropTypes.string,\n    underlying_code: PropTypes.string,\n    underlying_name: PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' className='color1-fill' fill='#2A3052'fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path className='color1-fill' fill='#2A3052'd='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('trade-type-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './positions-progress-slider.jsx';\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    has_result,\n    ticks_count,\n    current_tick,\n    percentage,\n    remaining_time,\n}) => {\n    if (!percentage && !ticks_count || has_result || !remaining_time) return <div className='progress-slider--completed' />;\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {/* TODO: enable ticks slider once it is completed */}\n            {(ticks_count < -1) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={remaining_time} />\n                    </span>\n                    {/* Calculate line width based on percentage of time left */}\n                    <div className='progress-slider__track'>\n                        <div\n                            className={classNames('progress-slider__line', {\n                                'progress-slider__line--green' : (percentage >= 50),\n                                'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                'progress-slider__line--red'   : (percentage < 20),\n                            })}\n                            style={{ width: `${percentage}%` }}\n                        />\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className     : PropTypes.string,\n    current_tick  : PropTypes.number,\n    has_result    : PropTypes.bool,\n    percentage    : PropTypes.number,\n    remaining_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default ProgressSlider;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst ProgressTicks = ({ current_tick, ticks_count }) => {\n    const arr_ticks = [...Array(ticks_count).keys()];\n    return (\n        // TODO: Update and show once design for ticks progress bar is finalized\n        <div style={{ display: 'none' }}>\n            <span className='progress-slider__ticks-caption'>\n                {localize('Tick [_1]', current_tick)}\n            </span>\n            <div className='progress-slider__track--ticks'>\n                <div className='progress-slider__ticks'>\n                    {arr_ticks.map(idx =>\n                        <span\n                            key={idx}\n                            className={classNames('ticks__step', {\n                                'ticks__step--active': (idx + 1) === parseInt(current_tick),\n                                'ticks__step--marked': (idx + 1) < parseInt(current_tick),\n                            })}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconArrow }     from 'Assets/Common';\nimport { localize }      from '_common/localize';\nimport {\n    epochToMoment,\n    toGMTFormat }        from 'Utils/Date';\n\nclass ResultDetails extends React.PureComponent {\n    state = {\n        is_open: false,\n    };\n\n    toggleDetails = () => {\n        this.setState({ is_open: !this.state.is_open });\n    }\n\n    render() {\n        const {\n            barrier,\n            contract_end_time,\n            contract_start_time,\n            duration,\n            duration_unit,\n            entry_spot,\n            has_result,\n            id_sell,\n            tick_count,\n        } = this.props;\n        if (!has_result) return null;\n        return (\n            <React.Fragment>\n                <div className='result-details__separator' />\n                <CSSTransition\n                    in={this.state.is_open}\n                    timeout={250}\n                    classNames={{\n                        enter    : 'result-details__wrapper--enter',\n                        enterDone: 'result-details__wrapper--enter-done',\n                        exit     : 'result-details__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='result-details__wrapper'>\n                        <div className='result-details__grid'>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('Reference ID')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {id_sell}\n                                </span>\n                            </div>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('Duration')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {tick_count ? `${tick_count} ${localize('ticks')}` : `${duration} ${duration_unit}`}\n                                </span>\n                            </div>\n                        </div>\n                        <div className='result-details__grid'>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('Barrier')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {barrier.toFixed(2)}\n                                </span>\n                            </div>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('Entry spot')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {entry_spot.toFixed(2)}\n                                </span>\n                            </div>\n                        </div>\n                        <div className='result-details__grid'>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('Start time')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {toGMTFormat(epochToMoment(contract_start_time))}\n                                </span>\n                            </div>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('End time')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {toGMTFormat(epochToMoment(contract_end_time))}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </CSSTransition>\n                <div\n                    className={classNames('result-details__toggle', {\n                        'result-details__toggle--is-open': this.state.is_open,\n                    })}\n                    onClick={this.toggleDetails}\n                >\n                    <IconArrow />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nResultDetails.propTypes = {\n    barrier          : PropTypes.number,\n    contract_end_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    contract_start_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration     : PropTypes.number,\n    duration_unit: PropTypes.string,\n    entry_spot   : PropTypes.number,\n    has_result   : PropTypes.bool,\n    id_sell      : PropTypes.number,\n    tick_count   : PropTypes.number,\n};\n\nexport default ResultDetails;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport IconCheck         from 'Images/app_2/portfolio/ic-check.svg';\nimport IconCross         from 'Images/app_2/portfolio/ic-cross.svg';\nimport { localize }      from '_common/localize';\n\nconst ResultOverlay = ({\n    id,\n    onClickRemove,\n    result,\n}) => (\n    <React.Fragment>\n        <CSSTransition\n            in={!!(result)}\n            timeout={250}\n            classNames={{\n                enter    : 'positions-drawer-card__result--enter',\n                enterDone: 'positions-drawer-card__result--enter-done',\n                exit     : 'positions-drawer-card__result--exit',\n            }}\n            unmountOnExit\n        >\n            <div className={classNames('positions-drawer-card__result', {\n                'positions-drawer-card__result--won' : (result === 'won'),\n                'positions-drawer-card__result--lost': (result === 'lost'),\n            })}\n            >\n                <span\n                    className='result__close-btn'\n                    onClick={() => onClickRemove(id)}\n                />\n                <span className={classNames('result__caption', {\n                    'result__caption--won' : (result === 'won'),\n                    'result__caption--lost': (result === 'lost'),\n                }\n                )}\n                >\n                    {\n                        (result === 'won') ?\n                            <React.Fragment>\n                                {localize('won')}\n                                <IconCheck className='result__icon' />\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                {localize('lost')}\n                                <IconCross className='result__icon' />\n                            </React.Fragment>\n                    }\n                </span>\n            </div>\n        </CSSTransition>\n    </React.Fragment>\n);\n\nResultOverlay.propTypes = {\n    id           : PropTypes.number,\n    onClickRemove: PropTypes.func,\n    result       : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"#4BBFAB\" }),\n      React.createElement(\"path\", { fill: \"#FFF\", fillRule: \"nonzero\", d: \"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" })\n    )\n  );\n});","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"#E31C4B\", fillRule: \"nonzero\" }),\n      React.createElement(\"path\", { stroke: \"#FFF\", strokeLinecap: \"round\", d: \"M10.5 5.5l-5 5m5 0l-5-5\" })\n    )\n  );\n});","export * from './duration-percentage';\n","import moment from 'moment';\n\n// TODO: Refactor and simplify, handle tick duration\nexport const getTimePercentage = (start_time, purchase_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(purchase_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(start_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) percentage = 1;\n\n    return Math.round(percentage);\n};\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form-layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract-details.jsx';\nimport InfoBox              from '../../Contract/Containers/info-box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_last_digit_stats = ['match_diff', 'even_odd', 'over_under'].includes(this.props.contract_type);\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames={{\n                            enter    : 'contract--enter',\n                            enterDone: 'contract--enter-done',\n                            exit     : 'contract--exit',\n                        }}\n                        unmountOnExit\n                    >\n                        <div className='contract__wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    contract_type   : PropTypes.string,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        contract_type    : modules.trade.contract_type,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen-large.jsx';\nimport ScreenSmall  from './screen-small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import classNames           from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract-type-dialog.jsx';\nimport ContractTypeList      from './contract-type-list.jsx';\nimport TradeTypeInfoDialog   from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem     from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open     : false,\n            is_info_dialog_open: false,\n            item               : {},\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(navigationList[nextIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[0]);\n        }\n    };\n\n    handlePrevClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(navigationList[prevIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({ is_info_dialog_open: false, is_dialog_open: false });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getNavigationList = () => {\n        const navigationList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && navigationList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return navigationList;\n    };\n\n    render() {\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={'contract-type-widget'}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': this.state.is_dialog_open,\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <IconTradeCategory category={this.props.value} className='contract-type-widget__icon-wrapper' />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                        handleInfoClick={this.handleInfoClick}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={this.props.is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={this.state.is_info_dialog_open}\n                    title={this.state.item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_mobile={this.props.is_mobile}\n                        item={this.state.item}\n                        navigationList={this.getNavigationList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category, className }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)}>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category : PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    list           : MobxPropTypes.objectOrObservableObject,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconInfoOutline }            from 'Assets/Common';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`contract-type-item ${value === contract.value ? 'contract-type-item--selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <IconTradeCategory category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <IconInfoOutline />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { Scrollbars }       from 'tt-react-custom-scrollbars';\nimport { IconBack }         from 'Assets/Common/icon-back.jsx';\nimport { IconChevronLeft }  from 'Assets/Common/icon-chevron-left.jsx';\nimport { IconChevronRight } from 'Assets/Common/icon-chevron-right.jsx';\nimport { TradeCategories }  from 'Assets/Trading/Categories/trade-categories.jsx';\nimport Button               from 'App/Components/Form/button.jsx';\nimport { localize }         from '_common/localize';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_mobile,\n    item,\n    navigationList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <IconBack />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__gif'>\n            gif explanation\n        </div>\n        <div className='trade-type-info-dialog__content'>\n            <Scrollbars\n                autoHide\n                style={{ height: '100%' }}\n            >\n                <TradeCategories category={item.value} />\n            </Scrollbars>\n        </div>\n        <div>\n            <Button className='trade-type-info-dialog__choose-button' text={localize('Choose')} onClick={() => onSubmitButtonClick(item)} />\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(navigationList)} >\n                <IconChevronLeft />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                {\n                    navigationList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className={classNames('trade-type-info-navigation__circle-button', {\n                                    'trade-type-info-navigation__circle-button--active': contract.value === item.value,\n                                })}\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(navigationList)} >\n                <IconChevronRight />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    navigationList       : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n\nconst TradeCategories = ({ category }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>\n                            { localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }\n                        </p>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to the barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.') }</p>\n                        <p>{ localize('If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to either the Low barrier or the High barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period') }</p>\n                        <p>{ localize('If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.') }</p>\n                        <p>{ localize('If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).') }</p>\n                        <p>{ localize('If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.') }</p>\n                        <p>{ localize('If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Touches\", you win the payout if the market touches the barrier at any time during the contract period.') }</p>\n                        <p>{ localize('If you select \"Does Not Touch\", you win the payout if the market never touches the barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('Asian options settle by comparing the last tick with the average spot over the period.') }</p>\n                        <p>{ localize('If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.') }</p>\n                        <p>{ localize('If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.') }</p>\n                        <p>{ localize('If the last tick is equal to the average of the ticks, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <p>\n                        not found\n                    </p>\n                );\n                break;\n        }\n    }\n    return (\n        <div>\n            {TradeTypeTemplate}\n        </div>\n    );\n};\n\nTradeCategories.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { TradeCategories };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm-element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm-element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    })\n                ))}\n                {popconfirm_element}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    proposal_info,\n}) => (\n    <React.Fragment>\n        {(proposal_info.has_error || !proposal_info.id) ?\n            <div\n                className={classNames({\n                    'trade-container__error': proposal_info.has_error,\n                })}\n            >\n                {proposal_info.message && <span className='trade-container__error-info'>{proposal_info.message}</span>}\n            </div>\n            :\n            <div className='trade-container__price'>\n                <div className='trade-container__price-info'>\n                    <div className='trade-container__price-info-basis'>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                    <div><Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} /></div>\n                    <div className='trade-container__price-info-movement'>\n                        {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                    </div>\n                </div>\n                <span>\n                    <Tooltip alignment='left' className='trade-container__price-tooltip' classNameIcon='trade-container__price-tooltip-i' icon='info' message={proposal_info.message} />\n                </span>\n            </div>\n        }\n    </React.Fragment>\n);\n\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","export default from './message-box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon-close.jsx';\nimport PurchaseResult       from './purchase-result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-container__error'>\n            <div className='purchase-container__error-close-btn' onClick={onClick}>\n                <IconClose className='purchase-container__error-close-btn-ic' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-container__error-result'>\n        <div>\n            <strong className='purchase-container__error-result-header'>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Buy Price')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Payout')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error-balance.jsx';\nexport * from './error-general.jsx';\nexport * from './error-login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='purchase-container__error-login-btn btn--secondary btn--secondary--orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-container__error-result'>\n        <span className='purchase-container__error-info'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='purchase-container__error-login-btn btn--secondary btn--secondary--orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p className='purchase-container__error-login-prompt'>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a className='purchase-container__error-login-link' href='javascript:;'><span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase-lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon-lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-container__lock'>\n        <div>\n            <IconLock className='purchase-container__lock-icon' />\n        </div>\n        <h4 className='purchase-container__lock-header'>{localize('Purchase Locked')}</h4>\n        <Button\n            className='purchase-container__lock-button btn--flat btn--secondary btn--secondary--orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='purchase-container__lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect className='color1-stroke' width='9' height='7' x='.5' y='6.5' stroke='none' rx='1' />\n            <circle className='color1-fill' cx='5' cy='10' r='1' fill='none' />\n            <path className='color1-stroke' stroke='none' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\n// import StartDate from 'Modules/Trading/Components/Form/TradeParams/start-date.jsx';\n\nexport const form_components = [\n    // { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input-field.jsx';\nimport AllowEquals               from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_allow_equal,\n    is_equal_checked,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames({ 'three-columns': !is_single_currency });\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <div className={amount_container_class}>\n                <Dropdown\n                    is_alignment_left\n                    is_nativepicker={is_nativepicker}\n                    list={basis_list}\n                    name='basis'\n                    value={basis}\n                    onChange={onChange}\n                    className='dropdown--no-margin'\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        is_alignment_left\n                        is_nativepicker={is_nativepicker}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                }\n                <InputField\n                    classNameInput='trade-container__input'\n                    classNamePrefix='trade-container__currency'\n                    error_messages={validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_autocomplete_disabled\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n            <AllowEquals is_allow_equal={is_allow_equal} onChange={onChange} checked={is_equal_checked} />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_allow_equal    : PropTypes.bool,\n    is_equal_checked  : PropTypes.number,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', {\n                        'dropdown__display--clicked': this.state.is_list_visible,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                {\n                    !is_single_option && <IconArrow className={classNames('dropdown__select-arrow', {\n                        'dropdown__select-arrow--left': this.props.is_alignment_left,\n                    })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={classNames('list__item', {\n                    'list__item--selected'   : value === item.value,\n                    'list__item--highlighted': highlightedIdx === idx,\n                })}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span className='list__item-text'>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nItems.propTypes = {\n    handleSelect  : PropTypes.func,\n    highlightedIdx: PropTypes.number,\n    name          : PropTypes.string,\n    value         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from '_common/localize';\nimport Tooltip        from 'App/Components/Elements/tooltip.jsx';\nimport InputField     from 'App/Components/Form/input-field.jsx';\n\nconst AllowEquals = ({\n    is_allow_equal,\n    checked,\n    onChange,\n}) => (\n    !!is_allow_equal &&\n        <div className='allow-equals'>\n            <InputField\n                className='allow-equals__input-field'\n                classNameInput='allow-equals__input trade-container__input'\n                id='allow_equals'\n                name='contract_type'\n                onChange={onChange}\n                value='is_equal'\n                type='checkbox'\n                checked={checked}\n            />\n            <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n            <Tooltip\n                alignment='left'\n                className='allow-equals__tooltip'\n                classNameIcon='allow-equals__tooltip-info'\n                icon='info'\n                message={localize('Win payout if exit spot is also equal to entry spot.')}\n            />\n        </div>\n);\n\nAllowEquals.propTypes = {\n    checked       : PropTypes.number,\n    is_allow_equal: PropTypes.bool,\n    onChange      : PropTypes.func,\n};\n\nexport default AllowEquals;\n","import classNames     from 'classnames';\nimport { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    IconBarrierUp,\n    IconBarrierDown } from 'Assets/Trading/Barriers';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport InputField     from 'App/Components/Form/input-field.jsx';\nimport { localize }   from '_common/localize';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n    \n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <IconBarrierUp className='trade-container__barriers--up' />\n                        <IconBarrierDown className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","export * from './icon-barrier-up.jsx';\nexport * from './icon-barrier-down.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierUp = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M8.5 4.207V12.5a.5.5 0 1 1-1 0V4.207L4.854 6.854a.5.5 0 1 1-.708-.708l3.5-3.5a.5.5 0 0 1 .708 0l3.5 3.5a.5.5 0 1 1-.708.708L8.5 4.207z'\n        />\n    </svg>\n);\n\nIconBarrierUp.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierUp };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierDown = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M7.5 11.793V3.5a.5.5 0 0 1 1 0v8.293l2.646-2.647a.5.5 0 1 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 11.793z'\n        />\n    </svg>\n);\n\nIconBarrierDown.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierDown };\n","export default from './duration-wrapper.jsx';\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport Duration                 from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : new_duration_value,\n        });\n    }\n\n    componentDidMount() {\n        const current_unit = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration = this.props.getDurationFromUnit(this.props.duration_unit);\n\n        if (this.props.duration_unit !== current_unit) {\n            this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: this.props.duration_unit });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${current_unit}`, value: this.props.duration });\n        }\n    }\n\n    componentWillReact() {\n        const simple_is_missing_duration_unit = !this.props.is_advanced_duration && this.props.simple_duration_unit === 'd' && this.props.duration_units_list.length === 4;\n        const current_duration_unit           = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration                = this.props.getDurationFromUnit(this.props.duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_not_type_duration     = !this.props.is_advanced_duration && this.props.expiry_type !== 'duration';\n        const advanced_has_wrong_expiry       = this.props.is_advanced_duration\n            && this.props.expiry_type !== this.props.advanced_expiry_type && this.props.duration_units_list.length > 1;\n\n        // intercept changes to current contracts duration_units_list - if they are missing change duration_unit and value in trade_store and ui_store\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n            return;\n        }\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (advanced_has_wrong_expiry) {\n            this.props.onChange({ target: { name: 'expiry_type', value: this.props.advanced_expiry_type } });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${this.props.duration_unit}`, value: this.props.duration });\n        }\n    }\n\n    render() {\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_d: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_h: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_m: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_s      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(DurationWrapper);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from '_common/localize';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    validation_errors,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        onChangeUiStore({ name: duration_name, value });\n        onChange({ target: { name, value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    let max_value, min_value;\n    if (duration_min_max[contract_expiry_type]) {\n        max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n    }\n\n    const props = {\n        shared_input: {\n            max_value,\n            min_value,\n            onChange: changeDurationValue,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n            error_messages  : validation_errors.duration || [],\n        },\n    };\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    ticks={10}\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_t      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick-steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    return (\n        <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n            <label className='range-slider__label' htmlFor='range'>\n                <input\n                    id='range'\n                    className='input trade-container__input range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='range-slider__ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '1.6rem' : '1rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span className='range-slider__caption--first'>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span className='range-slider__caption--last'>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active': (idx + 1) === parseInt(value),\n                        'range-slider__ticks-step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { IconArrow }       from 'Assets/Common';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <IconArrow className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/input-field.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                            // validation_errors={validation_errors.expiry_date} TODO: add validation_errors for expiry date\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default AdvancedDuration;\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\n\nconst TradingDatePicker = ({\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const moment_contract_start_date_time =\n        setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (expiry_type === 'duration') {\n        min_date_expiry.add(1, 'day');\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={validation_errors.duration || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={expiry_date}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n    })\n)(TradingDatePicker);\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }             from 'Assets/Common';\nimport InputField           from 'App/Components/Form/input-field.jsx';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from '_common/localize';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        this.setState({\n            holidays,\n            weekends,\n        });\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <IconClear\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from '_common/localize';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","export * from './calendar-days.jsx';\nexport * from './calendar-months.jsx';\nexport * from './calendar-years.jsx';\nexport * from './calendar-decades.jsx';\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { padLeft }      from '_common/string_util';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr } from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    subDays,\n    subMonths,\n    toMoment }          from 'Utils/Date';\nimport { localize }     from '_common/localize';\nimport CommonPropTypes  from './types';\nimport Tooltip          from '../../tooltip.jsx';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date)\n            || moment_date.isAfter(addDays(moment_start_date, 1)))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Tooltip\n                        alignment='top'\n                        className='calendar__cell-tooltip'\n                        classNameIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport CommonPropTypes   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\nimport { localize }          from '_common/localize';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport { month_headers }    from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date         : PropTypes.string,\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","export default from './trading-time-picker.jsx';\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime  = setTime(moment_expiry_date.clone(), market_open_times[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n    \n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","export default from './time-picker.jsx';\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../input-field.jsx';\nimport { IconClock } from '../../../../Assets/Common/icon-clock.jsx';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={selected_time}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <IconClock className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h).minute(minute);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment)\n                                && to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute(Math.round(time.minute() / interval) * interval);\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    let value = selected_time.isBefore(market_open_time)\n        ? market_open_time.isBefore(server_time)\n            ? server_time\n            : market_open_time\n        : selected_time;\n\n    value = getClosestTime(value, 5);\n    return value.format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/input-field.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit: PropTypes.func,\n    duration_t        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n};\n\nexport default SimpleDuration;\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile-widget.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-container'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full-screen-dialog.jsx';\nimport TradeParams      from '../../Containers/trade-params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details-group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport IconTick     from 'Assets/Contract/icon-tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconError } from 'Assets/Common/icon-error.jsx';\nimport { localize }  from '_common/localize';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error__container'>\n            <IconError type={type} />\n            <p className='error__message'>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit    from './info-box-digit.jsx';\nexport InfoBoxExpired  from './info-box-expired.jsx';\nexport InfoBoxGeneral  from './info-box-general.jsx';\nexport InfoBoxLongcode from './info-box-longcode.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit-display.jsx';\nimport InfoBoxExpired from './info-box-expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining-time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract-sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell-button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='btn--secondary btn--secondary--green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { IconFlag } from 'Assets/Common';\n\nconst InfoBoxLongcode = ({\n    contract_info,\n}) => (\n    <div className='info-box-longcode'>\n        <IconFlag className='info-box-longcode-icon' />\n        <span className='info-box-longcode-text'>{contract_info.longcode}</span>\n    </div>\n);\n\nInfoBoxLongcode.propTypes = {\n    longcode: PropTypes.string,\n};\n\nexport default observer(InfoBoxLongcode);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport classNames       from 'classnames';\nimport { IconError }    from 'Assets/Common/icon-error.jsx';\nimport { IconInfoBlue } from 'Assets/Common/icon-info-blue.jsx';\nimport { IconWarning }  from 'Assets/Common/icon-warning.jsx';\nimport { IconSuccess }  from 'Assets/Common/icon-success.jsx';\nimport CloseButton      from './close-button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }             from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                { data.type === 'ERROR'   && <IconError className='toast__icon-type' /> }\n                { data.type === 'INFO'    && <IconInfoBlue className='toast__icon-type' /> }\n                { data.type === 'SUCCESS' && <IconSuccess className='toast__icon-type' /> }\n                { data.type === 'WARNING' && <IconWarning className='toast__icon-type' /> }\n            </div>\n            <div className='toast__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({\n    children, is_contract_mode,\n    is_positions_drawer_on,\n}) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-positions-drawer': is_positions_drawer_on,\n            'app-contents--contract-mode'        : is_contract_mode,\n        })}\n    >\n        {/* Calculate height of user screen and offset height of header and footer */}\n        <Scrollbars\n            autoHide\n            style={{ height: 'calc(100vh - 83px)' }}\n        >\n            {children}\n        </Scrollbars>\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_positions_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ modules, ui }) => ({\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_language_dialog_visible,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_settings_dialog_on,\n    network_status,\n    togglePositionsDrawer,\n    toggleSettingsDialog,\n}) => (\n    <React.Fragment>\n        <div className='footer__links footer__links--left'>\n            {\n                is_logged_in &&\n                <TogglePositions\n                    is_positions_drawer_on={is_positions_drawer_on}\n                    togglePositionsDrawer={togglePositionsDrawer}\n                />\n            }\n        </div>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer__links'>\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_language_visible={is_language_dialog_visible}\n                is_settings_visible={is_settings_dialog_on}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePositionsDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        network_status            : common.network_status,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network-status.jsx';\nexport * from './toggle-fullscreen.jsx';\nexport * from './toggle-positions.jsx';\nexport * from './toggle-settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport classNames        from 'classnames';\n\nconst IconPositions = ({ className }) => {\n    const IconType = (\n        <g fill='none' fillRule='evenodd'>\n            <path className='color1-fill color3-fill' fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2zM1 8.128V12.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V8.128l-2.804 1.557a2.5 2.5 0 0 1-1.214.315H5.018a2.5 2.5 0 0 1-1.214-.315L1 8.128zm0-1.144L4.29 8.81A1.5 1.5 0 0 0 5.018 9h5.964a1.5 1.5 0 0 0 .728-.189L15 6.984V3.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v3.484zM6.5 8a.5.5 0 0 1 0-1h3a.5.5 0 0 1 0 1h-3z' />\n        </g>\n    );\n\n    return (\n        <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n            {IconType}\n        </svg>\n    );\n};\n\nIconPositions.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPositions };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPositions } from 'Assets/Footer';\n\nconst TogglePositions = ({\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames('ic-positions', 'footer__link', {\n        'ic-positions--active': is_positions_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n        >\n            <IconPositions className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings-dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer__icon ic-settings__icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames={{\n                    enter    : 'settings-dialog--enter',\n                    enterDone: 'settings-dialog--enter-done',\n                    exit     : 'settings-dialog--exit',\n                }}\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings ic-settings--active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'settings-dialog__container--show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog__container', {\n            'settings-dialog__container--hide': this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-dialog__header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' classNameHeader='settings-dialog__tab-header' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs-item.jsx';\nexport * from './tabs-wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs-wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', `tab-container--${this.props.alignment}`);\n        const tab_header_class = (icon_name) => classNames(\n            this.props.classNameHeader,\n            'tab__header',\n            { 'tab__icon': icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment      : PropTypes.string,\n    classNameHeader: PropTypes.string,\n    list           : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings-chart.jsx';\nexport GeneralSettings  from './settings-general.jsx';\nexport LanguageSettings from './settings-language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings-control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='settings-dialog__tab-content'>\n        <div className='settings-dialog__chart-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconCountryFlag } from 'Assets/Common';\nimport { connect }         from 'Stores/connect';\nimport SettingsControl     from '../../Components/Elements/SettingsDialog/settings-control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='settings-dialog__tab-content'>\n        <div className='settings-dialog__general-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <IconCountryFlag\n                    className={'settings-dialog__language-flag'}\n                    type={(curr_language || 'EN').toLowerCase()}\n                />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language-dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport {\n    IconBack,\n    IconCountryFlag }  from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('settings-dialog__language-dialog-container', {\n        'settings-dialog__language-dialog-container--show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='settings-dialog__language-header' onClick={hide}>\n                <IconBack className='settings-dialog__arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='settings-dialog__language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='settings-dialog__language-row'>\n                            <a className='settings-dialog__language-link' href={getURL(key)} >\n                                <IconCountryFlag\n                                    className={'settings-dialog__language-row-flag settings-dialog__language-flag'}\n                                    type={key.replace(/(\\s|_)/, '-').toLowerCase()}\n                                />\n                                <span className='settings-dialog__language-name'>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { withRouter }  from 'react-router';\nimport { formatMoney } from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    DepositButton,\n    InstallPWAButton,\n    LoginButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    UpgradeButton }    from 'App/Components/Layout/Header';\nimport header_links    from 'App/Constants/header-links';\nimport { connect }     from 'Stores/connect';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    is_virtual,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='header__menu-right'>\n                    <div className='acc-info__container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                className='acc-info__button'\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    is_virtual={is_virtual}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                                { !!(can_upgrade_to && is_virtual) &&\n                                <UpgradeButton className='acc-info__button' />\n                                }\n                                { !(is_virtual) &&\n                                <DepositButton className='acc-info__button' />\n                                }\n                            </React.Fragment>\n                            :\n                            <LoginButton className='acc-info__button' />\n                        }\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    can_upgrade_to           : PropTypes.string,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool,\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    is_virtual               : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func,\n    pwa_prompt_event         : PropTypes.object, // TODO: add click handler\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        can_upgrade_to           : client.can_upgrade_to,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        is_virtual               : client.is_virtual,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account-info.jsx';\nexport * from './deposit-button.jsx';\nexport * from './install-pwa-button.jsx';\nexport * from './login-button.jsx';\nexport * from './upgrade-button.jsx';\nexport * from './menu-links.jsx';\nexport * from './toggle-menu-drawer.jsx';\nexport * from './toggle-notifications-drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    is_virtual,\n    onClickUpgrade,\n    toggleDialog,\n}) => (\n    <div className='acc-info__wrapper'>\n        <div\n            className={classNames('acc-info', {\n                'acc-info--show'      : is_dialog_on,\n                'acc-info--is-virtual': is_virtual,\n            })}\n            onClick={toggleDialog}\n        >\n            <p\n                className='acc-info__id'\n                title={loginid}\n            >\n                {loginid}&nbsp;\n            </p>\n            {\n                typeof balance !== 'undefined' &&\n                <p className='acc-info__balance'>\n                    <span\n                        className={classNames('symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })}\n                    />\n                    {balance}\n                </p>\n            }\n            <IconArrow className='acc-info__select-arrow' is_bold={true} />\n        </div>\n        <CSSTransition\n            in={is_dialog_on}\n            timeout={200}\n            classNames={{\n                enter    : 'acc-switcher__wrapper--enter',\n                enterDone: 'acc-switcher__wrapper--enter-done',\n                exit     : 'acc-switcher__wrapper--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='acc-switcher__wrapper'>\n                <AccountSwitcher\n                    is_visible={is_dialog_on}\n                    toggle={toggleDialog}\n                    is_upgrade_enabled={is_upgrade_enabled}\n                    onClickUpgrade={onClickUpgrade}\n                />\n            </div>\n        </CSSTransition>\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_virtual        : PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account-switcher.jsx';\n","import classNames               from 'classnames';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport { isEmptyObject }        from '_common/utility';\nimport { IconAccountsCurrency } from 'Assets/Header/AccountsCurrency';\nimport { IconLogout }           from 'Assets/Header/Drawer';\nimport { requestLogout }        from 'Services/index';\nimport { connect }              from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggle();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        requestLogout();\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n        // TODO: Once we allow other real accounts (apart from CR), assign correct title and group accounts into list with correct account title/types\n        // e.g - Real, Financial, Gaming, Investment\n        const real_accounts = this.props.account_list.filter(acc => !acc.is_virtual);\n        const vrt_account   = this.props.account_list.find(acc => acc.is_virtual);\n\n        const main_account_title = real_accounts.length > 1 ? localize('Real accounts') : localize('Real account');\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef}>\n                {\n                    // Make sure this block is not rendered if there are no real accounts\n                    !!(this.props.account_list.length && real_accounts.length) &&\n                    <div className='acc-switcher__list-group'>\n                        <span className='acc-switcher__list-title'>\n                            {main_account_title}\n                        </span>\n                        <div className='acc-switcher__accounts'>\n                            {\n                                real_accounts.map((account) => (\n                                    <div\n                                        key={account.loginid}\n                                        className={classNames('acc-switcher__account', {\n                                            'acc-switcher__account--selected': (account.loginid === this.props.account_loginid),\n                                        })}\n                                        onClick={this.doSwitch.bind(this, account.loginid)}\n                                    >\n                                        <span className={'acc-switcher__id'}>\n                                            <IconAccountsCurrency\n                                                className={`acc-switcher__id-icon acc-switcher__id-icon--${account.icon}`}\n                                                type={account.icon}\n                                            />\n                                            {account.loginid}\n                                        </span>\n                                    </div>\n                                ))\n                            }\n                        </div>\n\n                        {   // TODO: Add link to account opening page for upgrade or multi account page for new account.\n                            // Update text below for handling types of account to create :- e.g - Investment\n                            !!(this.props.is_upgrade_enabled && this.props.upgrade_info.can_open_multi) &&\n                            <div className='acc-switcher__new-account'>\n                                <span className='acc-switcher__new-account-title'>{localize('Add new account')}</span>\n                            </div>\n                        }\n                    </div>\n                }\n                {\n                    !isEmptyObject(vrt_account) &&\n                    <div className='acc-switcher__list--virtual'>\n                        <span className='acc-switcher__list-title'>\n                            {localize('Virtual account')}\n                        </span>\n                        <div className='acc-switcher__accounts'>\n                            <div\n                                className={classNames('acc-switcher__account', {\n                                    'acc-switcher__account--selected': (this.props.virtual_loginid === this.props.account_loginid),\n                                })}\n                                onClick={this.doSwitch.bind(this, this.props.virtual_loginid)}\n                            >\n                                <span className={classNames('acc-switcher__id', 'acc-switcher__id--virtual')}>\n                                    {this.props.virtual_loginid}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { !!(this.props.is_upgrade_enabled && this.props.is_virtual) &&\n                <div className='acc-switcher__new-account'>\n                    <span className='acc-switcher__new-account-title'>{localize('Upgrade to Real Account')}</span>\n                </div>\n                }\n                <div className='acc-switcher__logout' onClick={this.handleLogout}>\n                    <span className='acc-switcher__logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='acc-switcher__logout-icon drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list          : PropTypes.array,\n    account_loginid       : PropTypes.string,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_upgrade_enabled    : PropTypes.bool,\n    is_virtual            : PropTypes.bool,\n    is_visible            : PropTypes.bool,\n    onClickUpgrade        : PropTypes.func,\n    toggle                : PropTypes.func,\n    togglePositionsDrawer : PropTypes.func,\n    upgrade_info          : PropTypes.object,\n    virtual_loginid       : PropTypes.string,\n};\n\nconst account_switcher = connect(\n    ({ client, ui }) => ({\n        account_list          : client.account_list,\n        account_loginid       : client.loginid,\n        is_logged_in          : client.is_logged_in,\n        is_virtual            : client.is_virtual,\n        switchAccount         : client.switchAccount,\n        upgrade_info          : client.upgrade_info,\n        virtual_loginid       : client.virtual_account_loginid,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","export * from './icon_accounts_currency.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconAccountsCurrency = ({ type, className }) => {\n    let IconCurrency;\n    if (type) {\n        switch (type) {\n            case 'aud':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#FFF'>\n                            <path d='M6.853 15.319l.674-.84-1.04.188-.362-1.008-.393 1.008-1.062-.188.675.821-.701.821 1.069-.168.36.988.393-.987 1.09.194zM14.819 16.06l.382-.475-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.606-.095.204.56.222-.56.618.111zM14.819 5.542l.382-.477-.59.107-.205-.57-.222.57-.603-.107.383.466-.397.465.606-.095.204.56.222-.56.618.11zM17.291 8.263l.382-.476-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11zM12.68 9.473l.382-.476-.59.107-.204-.572-.223.572-.602-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11z' />\n                        </g>\n                        <g fill='#283991'>\n                            <path d='M2.099 3.87c-.157.202-.307.41-.448.623h1.07L2.1 3.87zM7.26 9.993h.962l-.963-.962zM4.068 1.947c-.23.169-.45.348-.664.536l.664.663v-1.2zM3.105 9.993h.963V9.03zM9.993 0c-.948 0-1.864.135-2.734.382v2.764L9.993.412V0zM9.993 9.072V7.684H8.606zM.412 9.993l2.31-2.309H.272A10.004 10.004 0 0 0 0 9.994h.412zM8.605 4.493h1.388V3.105z' />\n                        </g>\n                        <g fill='#FFF'>\n                            <path d='M9.993 9.363v-.291L8.606 7.684h1.387v-.496H7.818zM2.722 4.493H1.65c-.107.162-.209.328-.307.497H3.45l-1.25-1.25a9.019 9.019 0 0 0-.1.13l.623.623zM4.068 9.03v.963h.497v-1.69l-1.69 1.69h.23zM7.26.382c-.168.047-.334.099-.497.155v3.336l3.23-3.23v-.23L7.26 3.146V.382zM4.05 7.684l.018-.017.48-.48H.401c-.048.165-.091.33-.13.497h2.45l-2.31 2.31h1.33l2.309-2.31z' />\n                            <path d='M.412 9.993l2.31-2.309-2.31 2.31zM9.993 4.99v-.497H8.605l1.388-1.388v-1.33L6.78 4.99z' />\n                            <path d='M9.993 3.105L8.605 4.493l1.388-1.388zM4.068 3.146l-.664-.663c-.235.207-.461.425-.676.653l1.34 1.34.014.015.483.482V1.605c-.169.11-.335.222-.497.342v1.2zM7.26 9.03l.962.963H9.49L6.763 7.266v2.727h.496z' />\n                        </g>\n                        <path d='M4.068 4.476l.034.034-.034-.034z' fill='#D32030' />\n                        <path d='M8.314 7.684l-.496-.496h2.175V4.99H6.78l-.016.017V4.99h.016l3.214-3.214V.643l-3.23 3.23V.537a9.957 9.957 0 0 0-2.198 1.068v3.368l.017.017h-.017v-.017l-.483-.482.003.002h-.017v-.017l-1.34-1.34c-.184.195-.36.396-.528.605L3.449 4.99H1.344a9.918 9.918 0 0 0-.942 2.198h4.145l.018-.018v.018h-.018l-.479.48v.017h-.017L1.74 9.993h1.134l1.69-1.69v1.69h2.198V7.266L9.49 9.993h.375c.043-.044.087-.089.129-.135v-.495l-1.68-1.679z' fill='#F44336' />\n                        <path fill='#D32030' d='M6.763 3.873l3.23-3.23zM4.092 7.709v-.042l-.041.042zM4.589 7.17l-.042.042h.042zM6.763 5.03l.04-.04h-.04zM4.068 4.517h.04l-.006-.007-.034-.034zM4.606 5.013l-.041-.04v.04z' />\n                    </g>\n                );\n                break;\n            case 'bch':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#8DC351' cx='10' cy='10' r='10' />\n                        <path d='M13.254 6.584c-.485-1.233-1.7-1.344-3.117-1.069l-.505-1.758-1.07.307.492 1.712c-.281.08-.568.169-.852.256L7.708 4.31l-1.07.306.504 1.758c-.23.071-.456.141-.678.205l-.002-.006-1.476.423.328 1.144s.786-.243.777-.224c.433-.124.646.087.75.292l.575 2.003a.951.951 0 0 1 .115-.025l-.113.032.804 2.807c.02.142.002.382-.3.47.017.008-.779.222-.779.222l.155 1.34 1.392-.4c.26-.074.516-.142.766-.213l.51 1.778 1.07-.306-.505-1.76c.287-.075.573-.155.858-.237l.501 1.752 1.07-.307-.508-1.775c1.77-.62 2.899-1.434 2.57-3.169-.263-1.396-1.077-1.82-2.169-1.772.53-.494.758-1.161.401-2.063zm-.406 4.231c.381 1.33-1.937 1.83-2.662 2.04l-.676-2.357c.725-.208 2.94-1.069 3.338.318v-.001zm-1.451-3.181c.346 1.21-1.592 1.612-2.196 1.785l-.613-2.137c.604-.173 2.447-.909 2.809.352z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'btc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#F7931A' cx='10' cy='10' r='10' />\n                        <path d='M14.493 8.762c.196-1.31-.802-2.014-2.165-2.484l.442-1.775-1.08-.269-.431 1.729c-.284-.072-.575-.138-.866-.204l.434-1.74-1.08-.269-.442 1.774c-.235-.053-.466-.106-.69-.162l.001-.006-1.49-.372-.287 1.154s.802.184.785.195c.437.11.516.399.503.629l-.504 2.022a.96.96 0 0 1 .113.035l-.115-.028-.706 2.833c-.054.132-.19.332-.496.256.012.016-.785-.196-.785-.196l-.536 1.237 1.406.35c.262.066.518.135.77.199l-.447 1.795 1.08.269.442-1.775c.295.08.581.153.861.223l-.441 1.767 1.08.27.447-1.792c1.842.349 3.227.208 3.81-1.458.47-1.341-.023-2.116-.992-2.62.706-.163 1.237-.627 1.38-1.587zm-2.469 3.462c-.333 1.342-2.592.616-3.325.434l.594-2.378c.733.183 3.08.545 2.731 1.944zm.335-3.48c-.305 1.22-2.185.6-2.794.447l.537-2.156c.61.152 2.574.435 2.257 1.708z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'dai':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle stroke='#F7B14A' strokeWidth='.625' cx='10' cy='10' r='9.688' />\n                        <path fill='#FFCC80' d='M3.75 10H10v6.25z' />\n                        <path fill='#FFB74D' d='M10 3.75v8.125L3.75 10z' />\n                        <path fill='#FFF' d='M5.625 10L10 5.625v2.5L8.125 10z' />\n                        <path fill='#F7C57B' d='M16.25 10H10v6.25z' />\n                        <path fill='#F7B14A' d='M10 3.75v8.125L16.25 10z' />\n                        <path fill='#FFF' d='M14.375 10L10 5.625v2.5L11.875 10z' />\n                    </g>\n                );\n                break;\n            case 'eth' :\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#EBF0F1' cx='10' cy='10' r='10' />\n                        <g fill='#12100B'>\n                            <path fillOpacity='.8' d='M10.311 2.5v10.353l4.686-2.715z' />\n                            <path fillOpacity='.45' d='M10.311 2.5l-4.686 7.638 4.686 2.718z' />\n                            <path fillOpacity='.8' d='M10.311 13.73v3.767L15 11.01z' />\n                            <path fillOpacity='.45' d='M10.311 17.497v-3.768L5.625 11.01z' />\n                            <path fillOpacity='.6' d='M10.311 12.858l4.686-2.72-4.686-2.093zM5.625 10.137l4.686 2.721V8.045z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'eur':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#F8D12E'>\n                            <path d='M9.976 1.733l.244.75h.789l-.639.464.244.75-.638-.464-.638.464.244-.75-.639-.464h.79zM9.976 15.894l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM13.862 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM16.514 5.604l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM16.577 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.639-.464h.79zM3.534 5.604l.244.75h.788l-.638.464.244.75-.638-.463-.638.463.243-.75-.638-.464h.79zM17.129 8.757l.243.75h.79l-.639.463.244.75-.638-.463-.639.464.244-.75-.638-.464h.789zM2.931 8.757l.244.75h.789l-.639.463.244.75-.638-.463-.638.464.244-.75-.638-.464h.788zM3.448 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.638-.464h.789zM13.977 14.942l.243.75h.79l-.639.464.244.75-.638-.464-.639.464.244-.75-.638-.464h.79zM6.215 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM5.928 14.894l.243.75h.79l-.639.464.244.75-.638-.464-.638.464.243-.75-.638-.464h.789z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'gbp':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <g fill='#283991'>\n                            <path d='M2.067 3.912a9.964 9.964 0 0 0-1.723 3.48h5.203l-3.48-3.48zM19.656 7.391a9.964 9.964 0 0 0-1.723-3.48l-3.48 3.48h5.203zM.344 12.609a9.965 9.965 0 0 0 1.723 3.48l3.48-3.48H.344zM16.088 2.067a9.964 9.964 0 0 0-3.48-1.723v5.203l3.48-3.48zM3.912 17.933a9.964 9.964 0 0 0 3.48 1.723v-5.203l-3.48 3.48zM7.391.344a9.965 9.965 0 0 0-3.48 1.723l3.48 3.48V.344zM12.609 19.656a9.965 9.965 0 0 0 3.48-1.723l-3.48-3.48v5.203zM14.453 12.609l3.48 3.48a9.964 9.964 0 0 0 1.723-3.48h-5.203z' />\n                        </g>\n                        <g fill='#F44336'>\n                            <path d='M19.915 8.696h-8.61V.085a10.1 10.1 0 0 0-2.61 0v8.61H.086a10.1 10.1 0 0 0 0 2.61h8.61v8.61a10.099 10.099 0 0 0 2.61 0v-8.61h8.61a10.099 10.099 0 0 0 0-2.61z' />\n                            <path d='M12.609 12.609l4.462 4.462c.205-.205.401-.42.588-.642l-3.82-3.82h-1.23zM7.391 12.609L2.93 17.07c.205.205.42.401.642.588l3.82-3.82v-1.23zM7.394 7.391L2.932 2.93c-.206.205-.401.42-.588.642l3.82 3.82h1.23zM12.609 7.391L17.07 2.93c-.205-.205-.42-.401-.642-.588l-3.82 3.82v1.23z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'ltc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#BFBBBB' cx='10' cy='10' r='10' />\n                        <path fill='#FFF' d='M6.517 12.009l-.892.346.43-1.724.902-.363L8.258 5h3.206l-.95 3.873.882-.357-.425 1.718-.892.357-.53 2.177h4.826L13.829 15H5.783z' />\n                    </g>\n                );\n                break;\n            case 'usd':\n                IconCurrency = (\n                    <g fill='none' fillRule='evenodd'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <path d='M12.18 1.833h3.583A9.951 9.951 0 0 0 10.578.018h-.308c.906.114 1.323.783 1.91 1.815zm.926 3.628h5.799a9.976 9.976 0 0 0-1.186-1.814h-5.066c.179.564.33 1.173.453 1.814zm6.839 3.629a9.913 9.913 0 0 0-.331-1.814h-6.19c.062.594.103 1.202.123 1.814h6.398zm-.345 3.629a9.885 9.885 0 0 0 .341-1.814h-6.24c-.022.612-.064 1.22-.127 1.814h6.025zm-6.789 3.629h4.865a9.985 9.985 0 0 0 1.203-1.815h-5.61a15.76 15.76 0 0 1-.458 1.815zm-2.818 3.627a9.845 9.845 0 0 0 5.698-1.812h-3.616c-.642 1.122-1.066 1.812-2.082 1.812z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M4.223 1.833h8.288C11.924.8 11.176.132 10.27.018h-.861a9.95 9.95 0 0 0-5.186 1.815zM2.268 3.647A9.983 9.983 0 0 0 1.082 5.46H13.73a15.962 15.962 0 0 0-.453-1.814H2.267zM.041 9.09h14.077c-.02-.612-.062-1.22-.124-1.814H.373A9.9 9.9 0 0 0 .04 9.09zm.346 3.629H13.99a25.53 25.53 0 0 0 .127-1.814H.046a9.87 9.87 0 0 0 .341 1.814zm.721 1.814a9.97 9.97 0 0 0 1.202 1.815h10.952c.18-.564.334-1.173.458-1.815H1.108zm8.462 5.433l.061.002c.12.004.24.007.362.007 1.016 0 1.845-.69 2.487-1.813H4.295a9.843 9.843 0 0 0 5.275 1.804z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M9.787.005A9.99 9.99 0 0 0 .043 9.093h9.744V.005z' fill='#283991' fillRule='nonzero' />\n                        <path fill='#EFEFEF' fillRule='nonzero' d='M2 5.65l.152.468h.493l-.399.289.152.468L2 6.585l-.4.29.153-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.399.289.152.468L2 8.238l-.4.29.153-.468-.399-.29h.493zM3.656 3.17l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.468-.399-.29h.494zm0 1.653l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.469-.399-.289h.494zm0 1.653l.152.468h.493l-.399.29.153.467-.399-.289-.399.29.152-.469-.399-.289h.494zM.742 7.701L.59 7.233l.398-.289H.496L.484 6.91a9.53 9.53 0 0 0-.148.507l.007-.005.399.29zM1.6 5.222l.4-.29.398.29-.152-.468.399-.29h-.493l-.153-.467-.152.468h-.182a9.409 9.409 0 0 0-.099.154l.187.135-.152.468zm2.056-2.769l.399.29-.153-.468.4-.29h-.286a9.92 9.92 0 0 0-.7.573l-.06.185.4-.29zm1.258-.537l.398-.29.4.29-.153-.468.399-.289h-.493l-.021-.063a9.895 9.895 0 0 0-.494.268l.116.084-.152.468zm.398.428l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm1.657-5.786l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.469-.399-.289h.493zm0 1.653l.152.468h.493l-.398.29.152.467-.4-.289-.398.29.152-.469-.399-.289h.493zM8.625.691l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.289h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494z' />\n                    </g>\n                );\n                break;\n            case 'ust':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M10 0c5.523 0 10 4.477 10 10s-4.478 10-10 10S0 15.524 0 10 4.477 0 10 0' fill='#53AE94' />\n                        <path d='M11.234 8.668V7.18h3.402V4.913H5.373V7.18h3.402v1.486c-2.765.127-4.844.675-4.844 1.331 0 .656 2.08 1.204 4.844 1.331v4.765h2.46v-4.765c2.76-.127 4.835-.675 4.835-1.33s-2.075-1.203-4.835-1.33m0 2.256c-.07.004-.426.025-1.22.025-.635 0-1.081-.018-1.239-.026v.002c-2.443-.108-4.266-.534-4.266-1.043 0-.509 1.824-.934 4.266-1.042v1.661c.16.011.618.038 1.25.038.758 0 1.14-.032 1.21-.038V8.84c2.437.109 4.257.534 4.257 1.042 0 .507-1.82.933-4.258 1.041' fill='#FFF' />\n                    </g>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'>\n            {IconCurrency}\n        </svg>\n\n    );\n};\n\nIconAccountsCurrency.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconAccountsCurrency };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path\n            className='color1-fill'\n            fill='#000'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M14.293 8.5H8.5a.5.5 0 0 1 0-1h5.793l-1.647-1.646a.5.5 0 1 1 .708-.708l2.5 2.5a.5.5 0 0 1 0 .708l-2.5 2.5a.5.5 0 1 1-.708-.708L14.293 8.5zM11 10.962a.5.5 0 0 1 1 0v1.692C12 13.4 11.38 14 10.625 14h-5.25C4.619 14 4 13.401 4 12.654V3.346C4 2.6 4.62 2 5.375 2h5.25C11.381 2 12 2.599 12 3.346v1.692a.5.5 0 0 1-1 0V3.346C11 3.16 10.836 3 10.625 3h-5.25C5.165 3 5 3.159 5 3.346v9.308c0 .187.164.346.375.346h5.25c.21 0 .375-.159.375-.346v-1.692z'\n        />\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst DepositButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Deposit')}\n        // TODO: Redirect to Deposit page in Cashier\n        // onClick={redirectToCashierDeposit}\n    />\n);\n\nDepositButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { DepositButton };\n","import classNames   from 'classnames';\nimport React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    className,\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className={classNames(className, 'btn--primary btn--primary--orange')}\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    className   : PropTypes.string,\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='header__navbar-icons header__navbar-icons--binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                        <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}</span>\n                    </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport UILoader           from 'App/Components/Elements/ui-loader.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='login-prompt__icon-svg disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu-drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='header__menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer-item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <SwitchButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('header__navbar-icons', `header__navbar-icons--${icon_class}`);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_positions_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePositionsDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_positions_drawer_on) {\n                        togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePositionsDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { EmptyNotification } from './empty-notification.jsx';\nimport { DrawerItem }        from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <EmptyNotification />\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    list: PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport { IconBell } from 'Assets/Header/NavBar';\n\nconst EmptyNotification = () => (\n    <div className='no-notifications-container'>\n        <div className='notification-message'>\n            <div className='bell-icon'>\n                <IconBell />\n            </div>\n            <div>\n                <h4>{localize('No Notifications')}</h4>\n                <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n            </div>\n        </div>\n    </div>\n);\n\nexport { EmptyNotification };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='header__icon' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        // TODO: Combine portfolio and statement into reports page\n        icon   : <IconStatement className='header__icon' />,\n        text   : localize('Reports'),\n        link_to: routes.statement,\n    },\n];\n\nexport default header_links;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial-of-service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='full-page-modal__dialog'>\n                    <h1 className='full-page-modal__header'>{title}</h1>\n                    <p className='full-page-modal__content'>{children}</p>\n                    <div className='full-page-modal__footer'>\n                        <div\n                            className='full-page-modal__button btn btn--flat effect btn--primary'\n                            onClick={onCancel}\n                        >\n                            <span className='full-page-modal__button-text'>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='full-page-modal__button btn btn--flat effect btn--primary'\n                            onClick={onConfirm}\n                        >\n                            <span className='full-page-modal__button-text'>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register-service-worker';\nexport { unregister } from './register-service-worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}