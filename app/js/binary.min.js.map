{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Stores/base-store.js","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/index.js","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui-loader.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws-methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon-flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Assets/Common/icon-error.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-blue.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Form/button-toggle-menu.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/Constants/date-time.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining-time.jsx","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query-string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon-back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clock.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-outline.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-question.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-red-dot.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-success.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-warning.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes-config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract-type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm-element.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-price-move.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade-params.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs-wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/switch-button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route-with-sub-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty-portfolio-message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract-type-cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/digits.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info-box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network-monitor.js","webpack:///./src/javascript/app_2/Services/socket-general.js","webpack:///./src/javascript/app_2/Services/outdated-browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client-store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative-validation-rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common-store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon-entry-spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date-time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade-store.js","webpack:///./src/javascript/app_2/Utils/URL/url-helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract-type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui-store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base-name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar-today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-country-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minimize.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-plus.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon-trade-types.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-details.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./src/images/app_2/portfolio/ic-check.svg","webpack:///./src/images/app_2/portfolio/ic-cross.svg","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/helpers/duration-percentage.js","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form-layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon-trade-categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/trade-categories.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message-box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase-result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase-lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/items.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/native-select.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/App/Components/Form/InputField/input-field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/increment-buttons.jsx","webpack:///./src/javascript/app_2/App/Components/Form/InputField/input.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-up.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-down.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/helpers.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/dialog.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/end-time.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number-selector.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile-widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon-tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-component.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill-template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-prediction.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit-display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/digit-spot.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-particles.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/LastDigitPrediction/last-digit-pointer.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract-error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-expired.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-button.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-longcode.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close-button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast-message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app-contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server-time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network-status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-positions.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language-dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account-info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/index.js","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/icon_accounts_currency.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon-logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/deposit-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install-pwa-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/upgrade-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu-links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Routes/button-link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login-prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app-config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle-drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-notifications-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/empty-notification.jsx","webpack:///./src/javascript/app_2/App/Constants/header-links.js","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial-of-service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register-service-worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_dateTime","forEach","_iconArrow","_iconBack","_iconCalendarToday","_iconCalendar","_iconChevronDoubleLeft","_iconChevronDoubleRight","_iconChevronLeft","_iconChevronRight","_iconCountryFlag","_iconClear","_iconClock","_iconClose","_iconError","_iconExclamation","_iconInfoBlue","_iconInfoOutline","_iconFlag","_iconMinimize","_iconMinus","_iconPlus","_iconQuestion","_iconRedDot","_iconSuccess","_iconWarning","Button","_ref$className","className","classNameSpan","has_effect","id","is_disabled","onClick","tabIndex","text","wrapperClassName","classes","_classnames2","default","effect","button","_react2","disabled","wrapper","node","string","bool","func","_logout","BinarySocketGeneral","WS","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","_iconBell","_iconCashier","_iconHamburger","_iconPortfolio","_iconStatement","_iconTrade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_Date","_barrier","_duration","_startDate","_contract","ContractType","available_contract_types","available_categories","contract_types","trading_times","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","isTimeValid","split","_ref2","_slicedToArray","toMoment","ServerTime","getTradingTimes","_ref3","trading_times_response","submarkets","symbols","symbol","underlying","abrupt","sent","markets","echo_req","open","times","close","_x2","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","clone","add","isSameOrBefore","getExpiryTime","expiry_time","market_close_times","start_time","end_time","market_close_time","end_moment","expiry_sessions","minDate","diff","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getContractCategories","contract_types_list","Tooltip","state","show_tooltip_balloon_icon","onMouseEnter","setState","onMouseLeave","_props","alignment","classNameIcon","icon","message","icon_class","data-tooltip","data-tooltip-pos","IconInfoOutline","IconInfoBlue","tooltip__balloon-icon--show","IconQuestion","IconRedDot","Fieldset","header","is_center","fieldset_header_class","fieldset_info_class","array","getChartConfig","contract_info","start","date_start","end","date_expiry","granularity","calculateGranularity","chart_type","end_epoch","start_epoch","hour_to_granularity_map","duration","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","unit","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","some","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","classNameBlock","loading_class","block_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","payout","theme","is_dark_mode_on","positions_drawer","is_positions_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","pushDataLayer","CommonPropTypes","calendar_date","isPeriodDisabled","selected_date","updateSelected","_fillTemplate","Localize","str","replacers","localized","fillTemplate","_drawerHeader","_drawerItem","_drawerItems","_drawer","_drawerToggle","_toggleDrawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","is_forced","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","IconError","transform","x","y","rx","_iconTradeTypes","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","IconClose","any","ButtonToggleMenu","buttons_arr","onChange","menu","val","idx","button-menu__button--active","_button2","selected_value","changeValue","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","week_headers_abbr","getDaysOfTheWeek","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","getDecade","moment_date","year","getCentury","_iconMaximize","_iconPositions","_iconSettings","_connect","RemainingTime","_ref$end_time","unix","remaining_time","formatDuration","getDiffDuration","isRequired","_ui","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","exit","spot","digit","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconBack","IconChevronLeft","classNamePath","IconChevronRight","IconClock","stroke","strokeLinecap","strokeLinejoin","IconSuccess","IconWarning","_reactRouterDom","active_class","to","_objectWithoutProperties","_routesConfig2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","routesConfig","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contractTypeWidget2","_iconTradeCategories","_PopConfirm","_Types","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","info","purchase_button","stake","IconTradeType","returns","_money2","is_purchase_error","_fieldset2","_PurchaseLock2","_MessageBox2","_uiLoader2","_contractInfo2","has_increased","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","_classNames","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","IconPriceMove","IconType","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","ui_store","renderCards","MobxPropTypes","arrayOrObservableArray","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabsItem","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","toggle","_switchButton2","toggled","SwitchButton","toggle_style","_iconLogout","_login","_appConfig","Route","render","_loginPrompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","handleClickOutside","contains","is_open","drawer_bg_class","drawer--show","drawer_class","CSSTransition","in","classNames","enter","enterDone","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","ContractTypeCell","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","has_error","_detailsHeader2","display_status","_detailsContents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_LastDigitPrediction","Digits","is_trade_page","is_ended","LastDigitPrediction","_InfoBox","InfoBox","removeError","sell_info","box_class","ended","Contents","InfoBoxLongcode","_contractError2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","upgrade_info","getBasicUpgradeInfo","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarativeValidationRules","input","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCrypto","isCryptocurrency","has_tooltip","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chartBarriers","_chartMarkers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","transaction_id","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","label","align","_iconEntrySpot2","_iconFlag2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","epochToMoment","epoch","isValid","isUTC","is_number","formatted_date","Date","setTime","moment_obj","convertToUnix","formatDate","date_format","daysFromTodayTo","startOf","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","addDays","num_of_days","addMonths","num_of_months","addYears","num_of_years","subDays","subMonths","subYears","date_1","date_2","getStartOfMonth","_formatResponse","positions","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","populateResultDetails","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","profit_loss","underlying_code","underlying_name","display_name","tick_count","findIndex","is_contract_mode","contract_response","duration_diff","getDurationUnitValue","id_sell","getDurationUnitText","unshift","clearTable","initializePortfolio","purchase","portfolio_pos","active_positions","portfolioHandler","transactionHandler","parseFloat","details","obj_duration","duration_ms","asMilliseconds","unit_map","_chartBarrierStore","_chartMarkerStore","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","date_str","balance_after","toTitleCase","action_type","refid","desc","_purchase","_queryString","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validationRules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor36","changeDurationValidationRules","changeAllowEquals","delay","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","checked","is_equal_checked","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","obj_old_values","prev_currency","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","getProposalInfo","setChartBarrier","query_params","duration_options","hasCallPutEqual","contract_type_list","check_callput_equal_duration","contract_duration_list","rise_fall_equal","hasDurationForCallPutEqual","is_allow_equal","_ref6","_callee4","_context4","refresh","prepareTradeStore","_x4","runInAction","_callee6","_context6","_this9","query_string","URL","search","query_encoded","encodeURIComponent","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","start_moment_clone","_value$split","_value$split2","_proposal_response$ec","Duration","StartDate","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeStartDate","onChangeExpiry","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","market_open_times","createProposalRequestForContract","ask_price","display_value","contract_basis","obj_contract_basis","toFixed","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","getDurationFromUnit","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_baseName2","_header2","_errorBoundary2","_appContents2","_routes2","_PositionsDrawer2","_toastMessage2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","_ttReactCustomScrollbars","PositionsDrawer","active_contract_id","is_empty","onClickSell","onClickRemove","toggleDrawer","body_content","_emptyPortfolioMessage2","_positionsDrawerCard2","active_position","positions-drawer--open","IconMinimize","Scrollbars","autoHide","removePositionById","togglePositionsDrawer","IconArrow","_ref$is_bold","is_bold","fillOpacity","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconCountryFlag","IconCountry","xlinkHref","mask","strokeOpacity","IconClear","IconMinus","IconPlus","IconBell","IconCashier","IconHamburger","IconTrade","_helpers2","PositionsDrawerCard","percentage","getTimePercentage","_resultOverlay2","_binaryLink2","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--orange","positions-drawer-card--red","_contractTypeCell2","_ProgressSlider2","ticks_count","has_result","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","_resultDetails2","contract_end_time","contract_start_time","ProgressSlider","current_tick","_positionsProgressTicks2","_remainingTime2","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","ProgressTicks","arr_ticks","ticks__step--active","ticks__step--marked","ResultDetails","toggleDetails","result-details__toggle--is-open","ResultOverlay","positions-drawer-card__result--won","positions-drawer-card__result--lost","result__caption--won","result__caption--lost","_icCheck2","_icCross2","styles","_durationPercentage","duration_from_purchase","round","SmartChart","form_wrapper_class","should_show_last_digit_stats","Suspense","fallback","_digits2","_infoBox2","onSymbolChange","updateChartType","updateGranularity","_test2","_formLayout2","is_contract_visible","_contractDetails2","Test","setVisibility","stateVisibility","container","fontSize","lineHeight","zIndex","background","padding","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","entries","v","_ref4","FormLayout","_screenSmall2","_screenLarge2","ScreenLarge","sidebar__items--slideout","_contractType2","_tradeParams2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","onSubmitButtonClick","handleInfoVisibility","handleInfoClick","handleNavigationClick","handleNextClick","navigationList","navigationLength","nextIndex","list_item","handlePrevClick","prevIndex","setWrapperRef","wrapper_ref","is_dialog_open","is_info_dialog_open","onWidgetClick","onBackButtonClick","getDisplayText","_this$props","findInArray","getNavigationList","contract-type-widget__display--clicked","IconTradeCategory","category","_contractTypeDialog2","_contractTypeList2","_tradeTypeInfoDialog2","_tradeTypeInfoItem2","IconCategory","ContractTypeDialog","_fullScreenDialog2","element","ContractTypeList","_contractTypeItem2","objectOrObservableObject","ContractTypeItem","TradeTypeInfoDialog","_tradeCategories","TradeTypeInfoItem","TradeCategories","trade-type-info-navigation__circle-button--active","TradeTypeTemplate","_popconfirm","_popconfirmElement","handleClose","handleOpen","popconfirm_element","cloneElement","_iconPriceMove","ContractInfo","trade-container__error","_tooltip2","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchaseResult2","PurchaseResult","_errorBalance","_errorGeneral","_errorLogin","_iconLock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_buttonToggleMenu2","_DropDown2","trade-container__currency-options","classNameDisplay","has_symbol","is_alignment_left","_InputField2","trade-container__amount--has-currency-options","classNameInlinePrefix","classNameInput","error_messages","fractional_digits","inline_prefix","is_autocomplete_disabled","is_float","is_incrementable","is_negative_disabled","max_length","_allowEquals2","observableObject","Dropdown","list_ref","createRef","curr_index","getItemFromValue","is_list_visible","onKeyPressed","is_single_option","getValueFromIndex","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","_nativeSelect2","left_alignment_style","list_width","isArrayLike","dropdown--left","dropdown--show","dropdown--disabled","dropdown__display--clicked","dropdown__display--has-symbol","onKeyDown","dropdown__select-arrow--left","onEntered","offsetWidth","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","renderThumbHorizontal","_items2","items","Items","list__item--selected","getCurrencyName","NativeSelect","isArray","InputField","classNamePrefix","data_tip","data_value","helper","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","_ref$is_unit_at_right","is_unit_at_right","max_value","min_value","placeholder","prefix","required","has_valid_length","max_is_disabled","min_is_disabled","getDecimals","array_value","incrementValue","increment_value","decimal_places","new_value","pow","calculateDecrementedValue","decrement_value","decrementValue","is_increment_input","_input2","signed_regex","is_not_completed_number","has_zero_at_end","is_scientific_notation","input--error","increment_buttons","_incrementButtons2","input_tooltip","with-label","htmlFor","IncrementButtons","Input","autoComplete","data-for","data-tip","data-value","maxLength","readOnly","AllowEquals","_Barriers","barrier_title","input_class","IconBarrierUp","IconBarrierDown","_iconBarrierUp","_iconBarrierDown","DurationWrapper","hasDurationUnit","duration_list","is_advanced_duration","du","new_duration_unit","new_duration_value","onChangeUiStore","onChangeMultiple","current_unit","advanced_duration_unit","simple_duration_unit","current_duration","simple_is_missing_duration_unit","current_duration_unit","has_missing_duration_unit","simple_is_not_type_duration","advanced_has_wrong_expiry","advanced_expiry_type","setDurationUnit","_duration2","duration_d","duration_h","duration_m","duration_s","duration_t","expiry_list","has_end_time","expiry","pop","duration_unit_text","changeDurationUnit","duration_value","shared_input","duration_name","number_input","has_toggle","_RangeSlider2","_advancedDuration2","number_input_props","shared_input_props","_simpleDuration2","_durationToggle2","new_trade_store_values","RangeSlider","first_tick","range-slider__error","steps","_tickSteps2","TickSteps","range-slider__ticks-step--active","range-slider__ticks-step--marked","DurationToggle","icon_className","advanced-simple-toggle__icon--active","AdvancedDuration","is_24_hours_contract","has_intraday_duration_unit","isSame","endtime_container_class","has-time","_DatePicker2","_TimePicker2","TradingDatePicker","max_date_duration","min_date_expiry","has_today_btn","moment_contract_start_date_time","max_daily_duration","daily","disable_year_selector","disable_trading_events","has_range_selection","min_date","max_date","DatePicker","date_value","holidays","is_datepicker_visible","is_clear_btn_visible","weekends","onClickOutside","mainNode","updateDatePickerValue","is_clearable","onSelectCalendar","onChangeInput","formatted_value","clearDatePickerInput","calendar","resetCalendar","new_date_value","new_date","current_date","_this$props2","renderInputField","_this$props3","initial_value","onChangeCalendarMonth","getTradingEvents","trading_events","events","dates","descrip","nativeEvent","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","_Calendar2","onSelect","duration_date","defaultProps","Calendar","_initialiseProps","calendar_view","hovered_date","_state","default_message","is_minimum","_calendarHeader2","navigateTo","switchView","_calendarBody2","onMouseOver","_calendarFooter2","setToday","view","start_of_month","getAttribute","updateSelectedDate","_props2","dataset","is_before","is_after","stopPropagation","month","decade","_props3","default_date","_props4","now","_props5","start_of_period","endOf","arrayOf","shape","_panels","CalendarBody","calendar_body","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendarDays","_calendarMonths","_calendarYears","_calendarDecades","days","moment_today","moment_cur_date","daysInMonth","moment_month_start","moment_month_end","moment_selected","padLeft","start_of_next_month","moment_start_date","moment_hovered","is_active","is_today","has_events","is_closes_early","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","getDays","moment_selected_date","data-month","_helper","_getDecade$split","_getDecade$split2","start_of_decade","end_of_decade","years","is_other_decade","data-year","decades","min_year","_decade$split","_decade$split2","is_other_century","data-decade","CalendarFooter","CalendarHeader","disable_month_selector","is_date_view","is_month_view","is_year_view","is_decade_view","century","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","_calendarButton2","calendar__nav--disabled","is_hidden","calendar__btn--disabled","CalendarButton","_endTime","TradingTimePicker","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","getBoundaries","selected_time","getSelectedTime","TimePicker","toggleDropDown","handleChange","arg","saveRef","nodeName","target_element","prefix_class","_dialog2","preClass","Dialog","start_time_moment","end_time_moment","milliseconds","to_compare_moment","_selected_time$split","_selected_time$split2","selectOption","current_value","prev_value","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","start_time_reset_minute","is_hour_enabled","is_minute_enabled","is_enabled","mm","getClosestTime","interval","market_open_time","SimpleDuration","has_label","arr","filtered_arr","filterMinutesAndTicks","arr_five","_numberSelector2","arr_arr_numbers","selected_number","NumberSelector","arr_numbers","number-selector__selection--selected","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobileWidget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_detailsGroup2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_iconTick2","won","lost","IconTick","circle_color","tick_color","msg","_localize3","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","last","display_array","from","getBarrier","num","querySelectorAll","offsetLeft","latest_digit","is_won","is_lost","_digitDisplay2","_lastDigitPointer2","_lastDigitParticles2","DigitDisplay","is_latest","is_selected","digits__digit--win","digits__digit--loss","_digitSpot2","_digit2","Digit","digits__digit-value--latest","digits__digit-value--selected","digits__digit-value--blink","digits__digit-value--win","digits__digit-value--loss","DigitSpot","digits__digit-spot-last--win","digits__digit-spot-last--loss","LastDigitParticles","digits__particles--explode","marginLeft","LastDigitPointer","digits__icon--win","digits__icon--loss","ContractError","_ref$message","InfoBoxExpired","InfoBoxGeneral","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","profit_percentage","percentage_text","_sellInfo2","SellInfo","is_started","_contractSell2","ContractSell","_sellButton2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","_closeButton2","CloseButton","ToastMessage","toast","_ToastMessage2","AppContents","app-contents--show-positions-drawer","app-contents--contract-mode","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","TogglePositions","NetworkStatus","_serverTime2","ToggleFullScreen","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","gmt_time","_networkStatus","_toggleFullscreen","_togglePositions","_toggleSettings","tooltip","network-status__circle--offline","class","network-status__circle--online","network-status__circle--blinker","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","IconMaximize","IconPositions","IconSettings","toggle_positions_class","ic-positions--active","toggle_settings_class","ic-settings--active","_settingsDialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings-dialog__container--show","settings_dialog_container_class","settings-dialog__container--hide","Tabs","classNameHeader","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabsWrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","icon_name","tab__icon","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settingsControl2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_languageDialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","settings-dialog__language-dialog-container--show","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","UpgradeButton","DepositButton","LoginButton","_accountInfo","_depositButton","_installPwaButton","_loginButton","_upgradeButton","_menuLinks","_toggleMenuDrawer","_toggleNotificationsDrawer","_AccountSwitcher","acc-info--show","acc-info--is-virtual","AccountSwitcher","_accountSwitcher","_AccountsCurrency","_Drawer","accounts_toggle_btn","handleLogout","account_loginid","real_accounts","vrt_account","main_account_title","acc-switcher__account--selected","doSwitch","IconAccountsCurrency","virtual_loginid","IconLogout","account_switcher","virtual_account_loginid","_icon_accounts_currency","IconCurrency","prompt","userChoice","choice_result","outcome","Switch","_routeWithSubRoutes2","LoginPrompt","onSignup","_localize2","3_2","website_name","ToggleDrawer","_menuDrawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer__parent-item--show","drawer_items_class","drawer__items--show","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","ToggleNotificationsDrawer","Notifications","_notifications","_emptyNotification","EmptyNotification","Routes","_Routes2","onCancel","DenialOfServiceModal","_fullPageModal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"268cec870949be027a68\",\"account_password\":\"b427ea7f728732c191b6\",\"api_toke\":\"50c7fb79c334dd2ec894\",\"authorized_application\":\"bbb53aef127e6baac871\",\"cashier_password\":\"a82cc6791b6cf42ed84d\",\"contract\":\"26bfcf09556593d00792\",\"financial_assessment\":\"8f48d796b894b2ea6abc\",\"limits\":\"a990e95ea47d7c775bed\",\"login_history\":\"de9060d3deb75a2ec6ce\",\"personal_details\":\"4292955b71fe02dcd411\",\"portfolio\":\"eb59c4b1bf13ac60401f\",\"self_exclusion\":\"d0b0d3ee3bc7eebb59c7\",\"settings\":\"a6dde82a3ce115514e97\",\"statement\":\"9abb0b2df4d5b5833223\",\"vendors~smart_chart\":\"9c7f890a82d988c55492\",\"smart_chart\":\"b0ef82daa88f1a4d70c0\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([267,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date-time';\n","export * from './icon-arrow.jsx';\nexport * from './icon-back.jsx';\nexport * from './icon-calendar-today.jsx';\nexport * from './icon-calendar.jsx';\nexport * from './icon-chevron-double-left.jsx';\nexport * from './icon-chevron-double-right.jsx';\nexport * from './icon-chevron-left.jsx';\nexport * from './icon-chevron-right.jsx';\nexport * from './icon-country-flag.jsx';\nexport * from './icon-clear.jsx';\nexport * from './icon-clock.jsx';\nexport * from './icon-close.jsx';\nexport * from './icon-error.jsx';\nexport * from './icon-exclamation.jsx';\nexport * from './icon-info-blue.jsx';\nexport * from './icon-info-outline.jsx';\nexport * from './icon-flag.jsx';\nexport * from './icon-minimize.jsx';\nexport * from './icon-minus.jsx';\nexport * from './icon-plus.jsx';\nexport * from './icon-question.jsx';\nexport * from './icon-red-dot.jsx';\nexport * from './icon-success.jsx';\nexport * from './icon-warning.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            <span className={classNames('btn__text', classNameSpan)}>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","export * from './icon-bell.jsx';\nexport * from './icon-cashier.jsx';\nexport * from './icon-hamburger.jsx';\nexport * from './icon-portfolio.jsx';\nexport * from './icon-statement.jsx';\nexport * from './icon-trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconInfoBlue }    from 'Assets/Common/icon-info-blue.jsx';\nimport { IconInfoOutline } from 'Assets/Common/icon-info-outline.jsx';\nimport { IconQuestion }    from 'Assets/Common/icon-question.jsx';\nimport { IconRedDot }      from 'Assets/Common/icon-red-dot.jsx';\n\nclass Tooltip extends React.Component {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip')}\n                data-tooltip={message}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <IconInfoOutline\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <IconInfoBlue\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <IconQuestion className={icon_class} />}\n                {icon === 'dot'      && <IconRedDot className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","export default from './input-field.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const loading_class = classNames('block-ui__loading', className);\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.string,\n    updateSelected  : PropTypes.func,\n};\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill-template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","export * from './drawer-header.jsx';\nexport * from './drawer-item.jsx';\nexport * from './drawer-items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer-toggle.jsx';\nexport * from './toggle-drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary-link.jsx';\nexport ButtonLink         from './button-link.jsx';\nexport default            from './binary-routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg className='chart-spot__icon' xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport { IconError };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconInfoBlue = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#2196F3' />\n            <g fill='#FFF' transform='translate(6.5 4)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <rect width='2' height='5' x='.5' y='3' rx='1' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconInfoBlue.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoBlue };\n","export * from './icon-trade-types.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Button     from './button.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={val.text}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return <div className='button-menu'>{menu}</div>;\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","export default from './range-slider.jsx';\n","import { localize } from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export * from './icon-maximize.jsx';\nexport * from './icon-positions.jsx';\nexport * from './icon-settings.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","export default from './error-component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info.current_spot, spot_time);\n\n    const is_expired = contract_info.is_expired;\n    const exit = (exit_time in digits_info) || !is_expired ? {} :\n        createDigitInfo(contract_info.exit_tick, exit_time);\n\n    return {\n        ...entry,\n        ...current,\n        ...exit,\n    };\n};\n\nconst createDigitInfo = (spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            spot,\n        },\n    };\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","import ContractType from '../Helpers/contract-type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal_checked',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3.613 8.5l3.26 3.668a.5.5 0 1 1-.747.664l-4-4.5a.5.5 0 0 1 0-.664l4-4.5a.5.5 0 0 1 .748.664L3.614 7.5H13.5a.5.5 0 1 1 0 1H3.613z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconClock = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <g fill='none' fillRule='nonzero' stroke='#5C5C5C'>\n            <circle cx='8' cy='8' r='7.5' />\n            <path strokeLinecap='round' strokeLinejoin='round' d='M8 3.5v5h3.5' />\n        </g>\n    </svg>\n);\n\nIconClock.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClock };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconInfoOutline = ({ className, onMouseEnter, onMouseLeave }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        height='16'\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        viewBox='0 0 16 16'\n        width='16'\n        xmlns='http://www.w3.org/2000/svg'\n    >\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.16)' fillRule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM8 6a.75.75 0 1 0 0-1.5A.75.75 0 0 0 8 6zm0 1a.5.5 0 0 0-.5.5v4a.5.5 0 1 0 1 0v-4A.5.5 0 0 0 8 7z' />\n    </svg>\n);\n\nIconInfoOutline.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoOutline };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconQuestion = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='#FFF' fillRule='evenodd'>\n            <path d='M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm0-1A7 7 0 1 0 8 1a7 7 0 0 0 0 14z' fillRule='nonzero' />\n            <path d='M7.39 9.518c.007-.373.052-.668.134-.885.082-.216.25-.456.503-.72l.646-.636c.276-.298.415-.618.415-.96 0-.33-.09-.588-.272-.774-.18-.187-.444-.28-.789-.28-.335 0-.605.084-.809.254a.842.842 0 0 0-.306.682H6c.007-.508.196-.918.57-1.23.373-.313.859-.469 1.457-.469.622 0 1.106.16 1.453.478.347.318.52.755.52 1.31 0 .55-.266 1.091-.799 1.625l-.538.508c-.24.255-.36.62-.36 1.097h-.912zm-.039 1.492a.5.5 0 0 1 .136-.355c.09-.096.224-.144.402-.144.178 0 .312.048.404.144a.493.493 0 0 1 .139.355.477.477 0 0 1-.139.351c-.092.093-.226.139-.404.139-.178 0-.312-.046-.402-.139a.481.481 0 0 1-.136-.35z' />\n        </g>\n    </svg>\n);\n\nIconQuestion.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuestion };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconRedDot = ({ className }) => (\n    <svg className={className} width='4' height='4' xmlns='http://www.w3.org/2000/svg'>\n        <circle cx='1163' cy='626' r='2' transform='translate(-1161 -624)' fill='#E31C4B' fillRule='nonzero' />\n    </svg>\n);\n\nIconRedDot.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconRedDot };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconSuccess = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4CAF50' />\n            <path fill='#FFF' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconSuccess.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSuccess };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconWarning = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V4a1 1 0 0 1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconWarning.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconWarning };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account-password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api-token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized-applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier-password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial-assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login-history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal-details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self-exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon-trade-categories.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport UILoader          from 'App/Components/Elements/ui-loader.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract-info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='btn--primary btn-purchase'\n                has_effect\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n            >\n                <React.Fragment>\n                    <div className='btn-purchase__effect-main' />\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__content'>\n                        <div className='btn-purchase__trade-type'>\n                            <IconTradeType type={type.toLowerCase()} className='btn-purchase__trade-type-icon' />\n                            <span className='btn-purchase__trade-type-text'>{localize('[_1]', trade_types[type])}</span>\n                        </div>\n                    </div>\n                    <div className='btn-purchase__info'>\n                        <div className='btn-purchase__return'>{is_disabled ? '---,-' : info.returns}</div>\n                        <div className='btn-purchase__profit'>\n                            {is_disabled ? '--,--' : <Money amount={info.profit} currency={currency} className='btn-purchase__currency' />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Button>\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader classNameBlock='purchase-container__loading' />\n                        }\n                        <ContractInfo\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', `popconfirm--${alignment}`, {\n        [`popconfirm--${alignment}--open`]: is_visible,\n        'popconfirm--open'                : is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm__title'>\n                <IconExclamation className='popconfirm__icon_exclamation' />\n                <h4 className='popconfirm__header'>{message}</h4>\n            </div>\n            <div className='popconfirm__button-wrapper'>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onClose}\n                >\n                    <span className='popconfirm__button-text'>{cancel_text}</span>\n                </div>\n                <div\n                    className='popconfirm__button btn btn--flat effect'\n                    onClick={onConfirm}\n                >\n                    <span className='popconfirm__button-text'>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className, classNamePath }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className={classNamePath || undefined} fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className={classNamePath || undefined} fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path className={classNamePath || undefined} fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                        this.props.ui_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules, ui }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n        ui_store       : ui,\n    })\n)(TradeParams);\n","export default from './dropdown.jsx';\n","export default from './trading-date-picker.jsx';\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs-item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-dialog__row' onClick={toggle || onClick}>\n        <span className='settings-dialog__row-name'>{name}</span>\n        {toggle ?\n            <SwitchButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst SwitchButton = ({ style, toggled }) => {\n    const toggle_style = style || 'switch-button';\n    const icon_class = classNames(toggle_style, {\n        [`${toggle_style}--toggled`]: toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nSwitchButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default SwitchButton;\n","export * from './icon-logout.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer__header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='drawer__icons drawer__icons-btn-close' onClick={closeBtn}>\n                        <IconClose className='drawer__icons-icon-close' />\n                    </div>\n                    <div className='drawer__notifications'>\n                        <h4 className='drawer__notifications-header'>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='drawer__icons drawer__icons-btn-close' onClick={closeBtn}>\n                        <IconClose className='drawer__icons-icon-close' />\n                    </div>\n                    <div className='drawer__icons drawer__brand-logo'>\n                        <div className='drawer__image' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer__item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' className='drawer__item-link' onClick={custom_action}>\n                        <span className='drawer__item-link-text'>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink className='drawer__item-link' to={link_to}>\n                        <span className='drawer__item-link-text'>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer-header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer__bg', {\n            'drawer--show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', { [`drawer--${alignment}`]: alignment });\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames={{\n                    enter    : 'drawer__container--enter',\n                    enterDone: 'drawer__container--enter-done',\n                    exit     : 'drawer__container--exit',\n                }}\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            <IconPortfolio className='portfolio-empty__icon' />\n            <span className='portfolio-empty__text'>{localize('No running contract')}</span>\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date-picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui-loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details-contents.jsx';\nimport DetailsHeader   from '../Components/Details/details-header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn btn--link btn--secondary btn--secondary--orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span className='btn__text'>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n\n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { connect }             from 'Stores/connect';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }             from 'Stores/Modules/Contract/Helpers/logic';\nimport { LastDigitPrediction } from '../Components/LastDigitPrediction';\n\nconst Digits = ({\n    contract_info,\n    digits_info,\n    display_status,\n    is_trade_page,\n}) => {\n    const { barrier, contract_type } = contract_info;\n    const is_digit = isDigitContract(contract_type);\n    const is_ended = isEnded(contract_info);\n\n    return (\n        <React.Fragment>\n            { contract_type && is_digit &&\n                <LastDigitPrediction\n                    barrier={+barrier}\n                    contract_type={contract_type}\n                    digits_info={digits_info}\n                    is_ended={is_ended}\n                    is_trade_page={is_trade_page}\n                    status={display_status}\n                />\n            }\n        </React.Fragment>\n    );\n};\n\nDigits.propTypes = {\n    contract_info : PropTypes.object,\n    digits_info   : PropTypes.object,\n    display_status: PropTypes.string,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        digits_info   : modules.contract.digits_info,\n        display_status: modules.contract.display_status,\n    })\n)(Digits);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract-error.jsx';\nimport { InfoBoxLongcode } from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    removeError,\n    sell_info,\n}) => {\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    const Contents = InfoBoxLongcode;\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 210,\n\t\"./ja.js\": 210\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 475;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance, true);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base-store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid  = LocalStore.get('active_loginid');\n        this.accounts = LocalStore.getObject(storage_key);\n        this.switched = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract-store';\nimport PortfolioStore  from './Portfolio/portfolio-store';\nimport SmartChartStore from './SmartChart/smart-chart-store';\nimport StatementStore  from './Statement/statement-store';\nimport TradeStore      from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }    from './Helpers/chart-barriers';\nimport { createChartMarkers }    from './Helpers/chart-markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base-store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon-entry-spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon-flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg className='chart-spot__icon' xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n        <div className='chart-marker-line__label'>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', `chart-spot--${align}`, `chart-spot--${status}`)}>\n        <div className='chart-spot__content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='chart-spot__arrow' />\n        <div className='chart-spot__spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const is_number      = typeof value === 'number';\n    // need to explicitly convert date string to a JS Date object then pass that into Moment\n    // to get rid of the warning: Deprecation warning: moment construction falls back to js Date\n    const formatted_date = moment(new Date(value)).format('YYYY-MM-DD');\n    return is_number ? epochToMoment(value) : moment.utc(formatted_date);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport {\n    epochToMoment,\n    getDiffDuration }              from 'Utils/Date';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport {\n    getDurationUnitText,\n    getDurationUnitValue }         from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndSpotTime,\n    isUserSold,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            // TODO: Refactor with contract-store and use common helpers to handle contract result\n            WS.proposalOpenContract(contract_id).then(action((proposal_response) => {\n                // populate result details box for specified positions card\n                this.populateResultDetails(proposal_response);\n            }));\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        portfolio_position.purchase_time = (proposal.is_forward_starting === 1) ?\n            proposal.date_start\n            :\n            proposal.purchase_time;\n\n        portfolio_position.bid_price        = proposal.bid_price;\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.underlying_code  = proposal.underlying;\n        portfolio_position.underlying_name  = proposal.display_name;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.tick_count       = proposal.tick_count;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.positions.findIndex(pos => +pos.id === +contract_id);\n        const bid_price = this.positions[i].bid_price;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        const is_contract_mode = this.root_store.modules.smart_chart.is_contract_mode;\n        // TODO: Refactor with ContractStore for re-drawing of chart markers and barriers\n        // Toast messages are temporary UI for prompting user of sold contracts\n        if (!is_contract_mode && response.error) {\n            // If unable to sell due to error, give error via toast message if not in contract mode\n            this.root_store.ui.addToastMessage({\n                message: response.error.message,\n                type   : 'error',\n            });\n        // Check if still in contract_mode\n        } else if (is_contract_mode && !response.error) {\n            WS.forget('proposal_open_contract', this.root_store.modules.contract.updateProposal, { contract_id: response.sell.contract_id });\n            WS.proposalOpenContract(response.sell.contract_id).then(action((proposal_response) => {\n                // update contract store proposal after sell\n                this.root_store.modules.contract.updateProposal(proposal_response);\n                this.populateResultDetails(proposal_response);\n            }));\n            // update contract store sell info after sell\n            this.root_store.modules.contract.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n        }\n    }\n\n    populateResultDetails(response) {\n        const contract_response = response.proposal_open_contract;\n        const i = this.positions.findIndex(pos => +pos.id === +contract_response.contract_id);\n        const sell_time = isUserSold(contract_response) ?\n            +contract_response.date_expiry\n            :\n            getEndSpotTime(contract_response);\n        const duration_diff =\n            getDiffDuration(\n                epochToMoment(this.positions[i].purchase_time || this.positions[i].date_start),\n                epochToMoment(this.positions[i].expiry_time)\n            );\n        const duration = this.positions[i].tick_count ?\n            this.positions[i].tick_count\n            :\n            getDurationUnitValue(duration_diff);\n\n        this.positions[i].id_sell       = +contract_response.transaction_ids.sell;\n        this.positions[i].barrier       = +contract_response.barrier;\n        this.positions[i].duration      = duration;\n        this.positions[i].duration_unit = getDurationUnitText(duration_diff);\n        this.positions[i].entry_spot    = +contract_response.entry_spot;\n        this.positions[i].sell_time     = sell_time;\n        this.positions[i].result        = getDisplayStatus(contract_response);\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        let i = this.positions.findIndex(pos => +pos.id === +contract_id);\n        // check if position to be removed is out of range from the maximum amount rendered in drawer\n        if (this.positions.length > 4) i += 1;\n        this.positions.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n        payout,\n        purchase,\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n    };\n};\n","import { localize } from '_common/localize';\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n\n    if (duration_ms >= 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60 * 24));\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        return Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        return Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / (1000));\n    }\n    return Math.floor(duration_ms / (1000));\n};\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        s: { name: localize('seconds') },\n        m: { name: localize('minutes') },\n        h: { name: localize('hours') },\n        d: { name: localize('days') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            return unit_map.d.name;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            return unit_map.h.name;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            return unit_map.m.name;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nconst store_name = 'smart_chart_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties, store_name });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format-response';\nimport BaseStore                        from '../../base-store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url-helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query-string';\nimport getValidationRules                from './Constants/validation-rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract-type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_allow_equal             = false;\n    @observable is_equal_checked           = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount     = 10;\n    @observable basis      = '';\n    @observable basis_list = [];\n    @observable currency   = '';\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            store_name,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => [\n                this.symbol,\n                this.contract_type,\n                this.duration_unit,\n                this.expiry_type,\n                this.duration_units_list,\n                this.contract_types_list,\n            ],\n            () => {\n                this.changeAllowEquals();\n            },\n            { delay: 500 }\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        this.currency           = this.root_store.client.currency;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, checked } = e.target;\n        let { value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (value === 'is_equal') {\n            if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type)) {\n                if (checked) {\n                    this.is_equal_checked = 1;\n                    value = 'rise_fall_equal';\n                } else {\n                    this.is_equal_checked = 0;\n                    value = 'rise_fall';\n                }\n            }\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        e.preventDefault();\n        WS.forgetAll('proposal').then(this.requestProposal());\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false, obj_old_values = {}) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        WS.forgetAll('proposal');\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values))\n        ) {\n            const prev_currency = obj_old_values &&\n            !isEmptyObject(obj_old_values) &&\n            obj_old_values.currency ? obj_old_values.currency : this.currency;\n            if (isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency)) {\n                obj_new_values.amount = is_changed_by_user && obj_new_values.amount ?\n                    obj_new_values.amount : getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    changeAllowEquals() {\n        const hasCallPutEqual = (contract_type_list) => {\n            if (!contract_type_list) return false;\n\n            return getPropertyValue(contract_type_list, 'Up/Down')\n                .some(contract => contract.value === 'rise_fall_equal');\n        };\n        const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n            if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n            const contract_list = Object.keys(contract_type_list || {})\n                .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n\n            const contract_duration_list = contract_list\n                .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n            // Check whether rise fall equal is exists and has the current store duration unit\n            return hasCallPutEqual(contract_type_list) ? contract_duration_list\n                .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n                .some(duration => duration.value === duration_unit) : false;\n        };\n        const check_callput_equal_duration = hasDurationForCallPutEqual(this.contract_types_list,\n            this.duration_unit, this.contract_start_type);\n\n        if (!(/^(rise_fall|rise_fall_equal)$/.test(this.contract_type))) {\n            this.is_allow_equal = false;\n            this.is_equal_checked = 0;\n        }\n\n        if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type) && (check_callput_equal_duration || this.expiry_type === 'endtime') && hasCallPutEqual(this.contract_types_list)) {\n            this.is_allow_equal = true;\n        } else {\n            this.is_allow_equal = false;\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.processNewValuesAsync(\n                { currency: this.root_store.client.currency },\n                { currency: this.currency }\n            );\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_encoded = encodeURIComponent(query_string);\n        const query_params = new URLSearchParams(query_encoded);\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['stake', 'payout'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['stake', 'payout'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['stake', 'payout'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['stake', 'payout'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['stake', 'payout'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query-string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base-store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('theme--dark'));\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base-name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport PositionsDrawer             from './Components/Elements/PositionsDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast-message.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <React.Fragment>\n                <div className='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PositionsDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer className='footer'>\n                    <Footer />\n                </footer>\n            </React.Fragment>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './positions-drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { CSSTransition }              from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconMinimize }               from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            active_contract_id,\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            toggleDrawer,\n            server_time,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            // Show only 4 most recent open contracts\n            body_content = active_positions.slice(0, 4).map((portfolio_position) => (\n                <CSSTransition\n                    key={portfolio_position.id}\n                    in={!!(portfolio_position.underlying_code)}\n                    timeout={150}\n                    classNames={{\n                        enter    : 'positions-drawer-card__wrapper--enter',\n                        enterDone: 'positions-drawer-card__wrapper--enter-done',\n                        exit     : 'positions-drawer-card__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <PositionsDrawerCard\n                        active_position={active_contract_id}\n                        onClickSell={onClickSell}\n                        onClickRemove={onClickRemove}\n                        server_time={server_time}\n                        key={portfolio_position.id}\n                        currency={currency}\n                        {...portfolio_position}\n                    />\n                </CSSTransition>\n            ));\n        }\n\n        return (\n            <div className={classNames('positions-drawer', { 'positions-drawer--open': is_positions_drawer_on })}>\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconMinimize />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n                <div className='positions-drawer__footer'>\n                    {/* TODO: Toggle to popup the Reports Dialog once Dialog is available */}\n                    <a className='btn btn--link btn--alternate' href='javascript:;'>\n                        <span className='btn__text'>\n                            {localize('Go to Reports')}\n                        </span>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id    : PropTypes.string,\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    server_time           : PropTypes.object,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, modules, client, ui }) => ({\n        server_time           : common.server_time,\n        currency              : client.currency,\n        active_contract_id    : modules.contract.contract_id,\n        active_positions      : modules.portfolio.active_positions,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        is_loading            : modules.portfolio.is_loading,\n        onClickSell           : modules.portfolio.onClickSell,\n        onClickRemove         : modules.portfolio.removePositionById,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        toggleDrawer          : ui.togglePositionsDrawer,\n    })\n)(PositionsDrawer);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className, classNamePath, is_bold = false }) => (\n    is_bold ?\n        <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                className={classNames(classNamePath, 'color1-fill')}\n                fill='#000'\n                fillOpacity='.8'\n                fillRule='evenodd'\n                d='M8 9.586l5.293-5.293a1 1 0 0 1 1.414 1.414l-6 6a1 1 0 0 1-1.414 0l-6-6a1 1 0 0 1 1.414-1.414L8 9.586z'\n            />\n        </svg>\n        :\n        <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                className={classNames(classNamePath, 'color1-fill')}\n                fill='rgba(0, 0, 0, 0.8)'\n                fillRule='nonzero'\n                d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z'\n            />\n        </svg>\n);\n\nIconArrow.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconArrow };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, classNamePath, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path className={classNamePath || 'color1-fill'} fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    onClick      : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={classNames('inline-icon', className)}\n        onClick={onClick}\n    >\n        <path className='color1-fill' fill='#000' fillOpacity='.8' fillRule='nonzero' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCountryFlag = ({ type, className }) => {\n    let IconCountry;\n    if (type) {\n        switch (type) {\n            case 'de':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#333' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#FFCD00' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#F10000' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'es':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#DD172C' mask='url(#b)' d='M0 0h24v4H0zm0 12h24v4H0z' />\n                            <path fill='#FFD133' mask='url(#b)' d='M0 4h24v8H0z' />\n                            <g mask='url(#b)'>\n                                <path fill='#FFEDB1' d='M5.333 7.333h1.334V8H5.333z' />\n                                <path d='M4.054 7.3l.167 2.007a1.138 1.138 0 0 0 1.112 1.026c.566 0 1.065-.461 1.112-1.026L6.613 7.3c.014-.174-.105-.3-.288-.3H4.341c-.176 0-.301.133-.287.3z' stroke='#A41517' strokeWidth='.667' />\n                                <path fill='#A41517' d='M4 8h2.667v.667H6L5.333 10l-.666-1.333H4zM2 6h1.333v4.667H2zm5.333 0h1.333v4.667H7.333zM4 5.333c0-.368.306-.666.673-.666h1.32c.372 0 .674.296.674.666v.33A.33.33 0 0 1 6.34 6H4.327A.327.327 0 0 1 4 5.664v-.33z' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'fr':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#001F9B' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF002D' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'id':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#E12237' mask='url(#b)' d='M0 0h24v8H0z' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 8h24v8H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'it':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#1BB65D' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#E43D4C' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'pl':\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M0 14.16c0 1.01.805 1.827 1.797 1.827h20.406c.992 0 1.797-.818 1.797-1.826V8H0v6.16z' fill='#F44336' />\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84V8h24V1.84C24 .83 23.195.012 22.203.012z' fill='#FFF' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n            case 'pt':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#128415' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF2936' mask='url(#b)' d='M8 0h16v16H8z' />\n                            <circle stroke='#FAF94F' mask='url(#b)' cx='8' cy='8' r='3.5' />\n                            <g mask='url(#b)'>\n                                <path d='M6.5 6.341c0-.188.145-.341.333-.341h2.334c.184 0 .333.152.333.341v2.327C9.5 9.404 8.907 10 8.175 10h-.35C7.093 10 6.5 9.41 6.5 8.668V6.341z' fill='#FFF' />\n                                <path d='M8 8.92c.414 0 .75-1.086.75-1.5a.75.75 0 1 0-1.5 0c0 .414.336 1.5.75 1.5z' fill='#1D50B5' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'ru':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#FFF' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#E53B35' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#0C47B7' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'th':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#F12532' xlinkHref='#a' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 3h24v10H0z' />\n                            <path fill='#322B6C' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'vi':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#EA403F' xlinkHref='#a' />\n                            <path fill='#FFFE4E' mask='url(#b)' d='M12 10.45l-2.939 2.095 1.084-3.442-2.9-2.148 3.609-.033L12 3.5l1.146 3.422 3.61.033-2.901 2.148 1.084 3.442z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_cn':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M7.742 7.186h1.04V13h-1.04V7.186zm7.453 5.77h-.952l-.255-.927.996.032c.244 0 .366-.161.366-.474V6.883h-4.11v-.938h5.15v5.922c0 .723-.399 1.09-1.196 1.09zM9.968 7.64h4.175v4.207H9.968V7.639zm3.2 3.355v-.863h-2.203v.863h2.203zM10.965 9.31h2.203v-.842h-2.203v.842zM9.082 5.503c.576.496 1.019.938 1.329 1.327l-.775.517c-.333-.41-.776-.863-1.33-1.38l.776-.464zm-.3-.874a7.406 7.406 0 0 1-.896 1.23L7 5.298C7.664 4.586 8.13 3.82 8.417 3l1.02.216c-.067.183-.145.356-.211.518h2.746v.895h-1.461c.232.324.42.636.564.917l-.93.334a9.512 9.512 0 0 0-.73-1.251h-.632zm4.707 0a6.6 6.6 0 0 1-.686 1.068l-.886-.561c.543-.658.93-1.37 1.152-2.125l1.007.216c-.066.172-.121.345-.177.507H17v.895h-1.661c.21.291.387.572.531.83l-.93.335a9.04 9.04 0 0 0-.697-1.165h-.754z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_tw':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M8.602 4.413c-.13.151-.26.302-.38.432h3.605c0 .431-.011.83-.033 1.175h.617v.648h-.67l-.098.68h.444v.528h-.563c-.022.065-.033.119-.054.173l.314.237c-.585.291-1.18.54-1.786.744a165.06 165.06 0 0 1 2.23-.075c.454-.227.908-.475 1.374-.734l.725.475a18.267 18.267 0 0 1-4.091 1.683 126.13 126.13 0 0 0 4.177-.248c-.238-.173-.487-.356-.746-.53l.725-.441c1.028.647 1.818 1.208 2.37 1.704l-.812.561a12.63 12.63 0 0 0-.768-.69c-.93.054-1.818.108-2.663.15v1.263c0 .56-.335.852-.995.852h-1.018l-.173-.82c.314.033.617.054.899.054.205 0 .313-.108.313-.302v-1.003c-1.287.065-2.478.108-3.56.14l-.217-.841c.282.01.552.021.823.021.78-.162 1.59-.42 2.446-.766l-2.468.087-.151-.712c.368 0 .617-.033.768-.097a12.58 12.58 0 0 0 1.44-.637c.021-.086.054-.173.075-.248H7.574c.075-.41.14-.81.205-1.208h-.703V6.02h.779c.043-.312.076-.614.097-.916a6.4 6.4 0 0 1-.422.366L7 4.834c.595-.442 1.115-1.047 1.548-1.823l.844.183c-.098.173-.195.345-.292.507h3.181v.712h-3.68zm0 2.168l-.13.766h1.656a7.341 7.341 0 0 0-1.147-.41l.227-.356h-.606zm1.558.766h.671a9.43 9.43 0 0 0 .13-.766h-1.71c.422.12.8.249 1.147.4l-.238.366zm.844-1.219l.033-.766H8.742c-.021.26-.054.518-.086.766h1.504a6.009 6.009 0 0 0-1.017-.399l.249-.356c.39.108.757.26 1.093.432l-.206.323h.725zm2.587-1.337a3.23 3.23 0 0 0 .941 1.424c.347-.41.617-.885.79-1.424h-1.731zm.335 1.985a4.244 4.244 0 0 1-.876-1.316 7.07 7.07 0 0 1-.52.582l-.54-.647c.562-.583 1.049-1.381 1.46-2.395l.877.194c-.108.28-.227.54-.346.788h2.813v.809h-.627c-.195.776-.52 1.413-.953 1.93.498.324 1.093.594 1.786.82l-.465.81c-.78-.28-1.429-.615-1.948-1.004-.542.432-1.202.745-1.96.95l-.475-.745c.714-.172 1.298-.431 1.774-.776zm-.173 4.347c1.082.259 2.078.583 2.976.97l-.519.81a16.903 16.903 0 0 0-2.965-1.025l.508-.755zm-3.798.043l.54.615c-.8.453-1.785.83-2.943 1.133l-.379-.799c1.126-.237 2.056-.56 2.782-.949z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            default: // en\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84v12.322c0 1.008.805 1.826 1.797 1.826h20.406c.992 0 1.797-.818 1.797-1.826V1.839C24 .831 23.195.013 22.203.013z' fill='#0D47A1' />\n                            <path d='M23.975 1.537A1.806 1.806 0 0 0 22.203.013h-.468l-7.666 5.102V.013H9.931v5.102L2.265.013h-.468C.906.013.167.673.025 1.537l6.552 4.361H0v4.204h6.577l-6.552 4.36a1.806 1.806 0 0 0 1.772 1.525h.468l7.666-5.102v5.102h4.138v-5.102l7.666 5.102h.468c.891 0 1.63-.66 1.772-1.524l-6.552-4.361H24V5.898h-6.577l6.552-4.36z' fill='#FFF' />\n                            <path d='M13.241.013V6.74H24v2.52H13.241v6.726H10.76V9.26H0V6.74h10.759V.013h2.482zM1.162 15.87a1.8 1.8 0 0 1-.73-.52l7.956-5.247h1.52L1.162 15.87zm15.075-5.767l7.527 4.963a1.82 1.82 0 0 1-.576.623l-8.471-5.586h1.52zM.19 1.022C.316.767.5.545.725.374l8.378 5.525h-1.52L.19 1.023zm15.399 4.876h-1.52L22.824.125a1.8 1.8 0 0 1 .735.517l-7.97 5.256z' fill='#F44336' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='24' height='16' viewBox='0 0 24 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconCountry}\n        </svg>\n\n    );\n};\n\nIconCountryFlag.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconCountryFlag };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconFlag = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n        <g fillRule='nonzero' fill='none'>\n            <path d='M-6-4h32v32H-6z' />\n            <path className='color1-fill' d='M2 2h18a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2v5a1 1 0 0 1-2 0V1a1 1 0 1 1 2 0v1zm6 2v4h4V4H8zm4 4v4h4V8h-4zm4-4v4h4V4h-4zm0 8v4h4v-4h-4zm-8 0v4h4v-4H8zM4 8v4h4V8H4z' fill='#7F8397' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconFlag };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinimize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#000' fillOpacity='0.8' fillRule='nonzero' d='M0 7h16v2H0z' />\n    </svg>\n);\n\nIconMinimize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMinimize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='14' viewBox='0 0 16 14'>\n        <g fill='none' fillRule='evenodd'>\n            <path fill='#000' fillOpacity='0.16' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2z' />\n            <path fill='#FFF' fillRule='nonzero' d='M1 8.128l2.804 1.557A2.5 2.5 0 0 0 5.018 10h5.964a2.5 2.5 0 0 0 1.214-.315L15 8.128V12.5a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5V8.128zm0-1.144V3.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v3.484L11.71 8.81a1.5 1.5 0 0 1-.728.189H5.018a1.5 1.5 0 0 1-.728-.189L1 6.984zM6.5 8h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0 0 1z' />\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { CSSTransition }     from 'react-transition-group';\nimport { localize }          from '_common/localize';\nimport ContractTypeCell      from 'Modules/Portfolio/Components/contract-type-cell.jsx';\nimport ProgressSlider        from './ProgressSlider';\nimport ResultDetails         from './result-details.jsx';\nimport ResultOverlay         from './result-overlay.jsx';\nimport { getTimePercentage } from './helpers';\nimport Money                 from '../money.jsx';\nimport BinaryLink            from '../../Routes/binary-link.jsx';\nimport { getContractPath }   from '../../Routes/helpers';\nimport Button                from '../../Form/button.jsx';\n\n// TODO: Break into smaller components once design is finalized\nconst PositionsDrawerCard = ({\n    active_position,\n    barrier,\n    className,\n    currency,\n    duration,\n    duration_unit,\n    entry_spot,\n    expiry_time,\n    id,\n    id_sell,\n    indicative,\n    is_valid_to_sell,\n    profit_loss,\n    purchase,\n    purchase_time,\n    onClickSell,\n    onClickRemove,\n    result,\n    sell_time,\n    server_time,\n    status,\n    tick_count,\n    type,\n    underlying_code,\n    underlying_name,\n}) => {\n    const percentage = getTimePercentage(server_time, purchase_time, expiry_time);\n    return (\n        <div className={classNames('positions-drawer-card__wrapper', className)}>\n            <ResultOverlay\n                id={id}\n                onClickRemove={onClickRemove}\n                result={result}\n            />\n            <BinaryLink\n                className={classNames(\n                    'positions-drawer-card', {\n                        'positions-drawer-card--active': (parseInt(active_position) === id),\n                        'positions-drawer-card--green' : (percentage >= 50) && !result,\n                        'positions-drawer-card--orange': (percentage < 50 && percentage >= 20) && !result,\n                        'positions-drawer-card--red'   : (percentage < 20) && !result,\n                    }\n                )}\n                to={getContractPath(id)}\n            >\n                <React.Fragment>\n                    <div className={classNames(\n                        'positions-drawer-card__grid',\n                        'positions-drawer-card__grid-underlying-trade'\n                    )}\n                    >\n                        <div className='positions-drawer-card__underlying-name'>\n                            <div\n                                className={classNames(\n                                    'icons-underlying',\n                                    `icons-underlying__ic-${underlying_code || 'unknown'}`\n                                )}\n                            />\n                            <span className='positions-drawer-card__symbol'>{underlying_name}</span>\n                        </div>\n                        <div className='positions-drawer-card__type'>\n                            <ContractTypeCell type={type} />\n                        </div>\n                    </div>\n                    <ProgressSlider\n                        remaining_time={expiry_time}\n                        percentage={percentage}\n                        ticks_count={tick_count}\n                        has_result={!!(result)}\n                    />\n                    <div className={classNames(\n                        'positions-drawer-card__grid',\n                        'positions-drawer-card__grid-profit-payout'\n                    )}\n                    >\n                        <div className={classNames(\n                            'positions-drawer-card__profit-loss',\n                            'positions-drawer-card__profit-loss-label',\n                        )}\n                        >\n                            {localize('Potential P/L:')}\n                        </div>\n                        <div className={classNames(\n                            'positions-drawer-card__indicative',\n                            'positions-drawer-card__indicative-label',\n                        )}\n                        >\n                            {localize('Potential Payout:')}\n                        </div>\n                        <div className={classNames(\n                            'positions-drawer-card__profit-loss', {\n                                'positions-drawer-card__profit-loss--negative': (profit_loss < 0),\n                                'positions-drawer-card__profit-loss--positive': (profit_loss > 0),\n                            })}\n                        >\n                            <Money amount={Math.abs(profit_loss)} currency={currency} />\n                        </div>\n                        <div className={`positions-drawer-card__indicative positions-drawer-card__indicative--${status}`}>\n                            <Money amount={indicative} currency={currency} />\n                        </div>\n                    </div>\n                    <div className='positions-drawer-card__purchase-price'>\n                        <span className='positions-drawer-card__purchase-label'>\n                            {localize('Purchase price')}\n                        </span>\n                        <Money amount={purchase} currency={currency} />\n                    </div>\n                </React.Fragment>\n            </BinaryLink>\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        className='btn--primary btn--primary--orange'\n                        is_disabled={!is_valid_to_sell}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n            <ResultDetails\n                barrier={barrier}\n                contract_end_time={sell_time}\n                contract_start_time={purchase_time}\n                duration={duration}\n                duration_unit={duration_unit}\n                entry_spot={entry_spot}\n                tick_count={tick_count}\n                has_result={!!(result)}\n                id_sell={id_sell}\n            />\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.string,\n    barrier        : PropTypes.number,\n    className      : PropTypes.string,\n    currency       : PropTypes.string,\n    duration       : PropTypes.number,\n    duration_unit  : PropTypes.string,\n    entry_spot     : PropTypes.number,\n    exit_spot      : PropTypes.number,\n    expiry_time    : PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id              : PropTypes.number,\n    id_sell         : PropTypes.number,\n    indicative      : PropTypes.number,\n    is_valid_to_sell: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.bool,\n    ]),\n    onClickRemove: PropTypes.func,\n    onClickSell  : PropTypes.func,\n    profit_loss  : PropTypes.number,\n    purchase     : PropTypes.number,\n    purchase_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    result   : PropTypes.string,\n    sell_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    server_time    : PropTypes.object,\n    status         : PropTypes.string,\n    tick_count     : PropTypes.number,\n    type           : PropTypes.string,\n    underlying_code: PropTypes.string,\n    underlying_name: PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' className='color1-fill' fill='#2A3052'fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path className='color1-fill' fill='#2A3052'd='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('trade-type-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './positions-progress-slider.jsx';\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    has_result,\n    ticks_count,\n    current_tick,\n    percentage,\n    remaining_time,\n}) => {\n    if (!percentage && !ticks_count || has_result || !remaining_time) return <div className='progress-slider--completed' />;\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {/* TODO: enable ticks slider once it is completed */}\n            {(ticks_count < -1) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={remaining_time} />\n                    </span>\n                    {/* Calculate line width based on percentage of time left */}\n                    <div className='progress-slider__track'>\n                        <div\n                            className={classNames('progress-slider__line', {\n                                'progress-slider__line--green' : (percentage >= 50),\n                                'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                'progress-slider__line--red'   : (percentage < 20),\n                            })}\n                            style={{ width: `${percentage}%` }}\n                        />\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className     : PropTypes.string,\n    current_tick  : PropTypes.number,\n    has_result    : PropTypes.bool,\n    percentage    : PropTypes.number,\n    remaining_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default ProgressSlider;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst ProgressTicks = ({ current_tick, ticks_count }) => {\n    const arr_ticks = [...Array(ticks_count).keys()];\n    return (\n        // TODO: Update and show once design for ticks progress bar is finalized\n        <div style={{ display: 'none' }}>\n            <span className='progress-slider__ticks-caption'>\n                {localize('Tick [_1]', current_tick)}\n            </span>\n            <div className='progress-slider__track--ticks'>\n                <div className='progress-slider__ticks'>\n                    {arr_ticks.map(idx =>\n                        <span\n                            key={idx}\n                            className={classNames('ticks__step', {\n                                'ticks__step--active': (idx + 1) === parseInt(current_tick),\n                                'ticks__step--marked': (idx + 1) < parseInt(current_tick),\n                            })}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconArrow }     from 'Assets/Common';\nimport { localize }      from '_common/localize';\nimport {\n    epochToMoment,\n    toGMTFormat }        from 'Utils/Date';\n\nclass ResultDetails extends React.PureComponent {\n    state = {\n        is_open: false,\n    };\n\n    toggleDetails = () => {\n        this.setState({ is_open: !this.state.is_open });\n    }\n\n    render() {\n        const {\n            barrier,\n            contract_end_time,\n            contract_start_time,\n            duration,\n            duration_unit,\n            entry_spot,\n            has_result,\n            id_sell,\n            tick_count,\n        } = this.props;\n        if (!has_result) return null;\n        return (\n            <React.Fragment>\n                <div className='result-details__separator' />\n                <CSSTransition\n                    in={this.state.is_open}\n                    timeout={250}\n                    classNames={{\n                        enter    : 'result-details__wrapper--enter',\n                        enterDone: 'result-details__wrapper--enter-done',\n                        exit     : 'result-details__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='result-details__wrapper'>\n                        <div className='result-details__grid'>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('Reference ID')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {id_sell}\n                                </span>\n                            </div>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('Duration')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {tick_count ? `${tick_count} ${localize('ticks')}` : `${duration} ${duration_unit}`}\n                                </span>\n                            </div>\n                        </div>\n                        <div className='result-details__grid'>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('Barrier')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {barrier.toFixed(2)}\n                                </span>\n                            </div>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('Entry spot')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {entry_spot.toFixed(2)}\n                                </span>\n                            </div>\n                        </div>\n                        <div className='result-details__grid'>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('Start time')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {toGMTFormat(epochToMoment(contract_start_time))}\n                                </span>\n                            </div>\n                            <div className='result-details__item'>\n                                <span className='result-details__label'>\n                                    {localize('End time')}\n                                </span>\n                                <span className='result-details__value'>\n                                    {toGMTFormat(epochToMoment(contract_end_time))}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </CSSTransition>\n                <div\n                    className={classNames('result-details__toggle', {\n                        'result-details__toggle--is-open': this.state.is_open,\n                    })}\n                    onClick={this.toggleDetails}\n                >\n                    <IconArrow />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nResultDetails.propTypes = {\n    barrier          : PropTypes.number,\n    contract_end_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    contract_start_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration     : PropTypes.number,\n    duration_unit: PropTypes.string,\n    entry_spot   : PropTypes.number,\n    has_result   : PropTypes.bool,\n    id_sell      : PropTypes.number,\n    tick_count   : PropTypes.number,\n};\n\nexport default ResultDetails;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport IconCheck         from 'Images/app_2/portfolio/ic-check.svg';\nimport IconCross         from 'Images/app_2/portfolio/ic-cross.svg';\nimport { localize }      from '_common/localize';\n\nconst ResultOverlay = ({\n    id,\n    onClickRemove,\n    result,\n}) => (\n    <React.Fragment>\n        <CSSTransition\n            in={!!(result)}\n            timeout={250}\n            classNames={{\n                enter    : 'positions-drawer-card__result--enter',\n                enterDone: 'positions-drawer-card__result--enter-done',\n                exit     : 'positions-drawer-card__result--exit',\n            }}\n            unmountOnExit\n        >\n            <div className={classNames('positions-drawer-card__result', {\n                'positions-drawer-card__result--won' : (result === 'won'),\n                'positions-drawer-card__result--lost': (result === 'lost'),\n            })}\n            >\n                <span\n                    className='result__close-btn'\n                    onClick={() => onClickRemove(id)}\n                />\n                <span className={classNames('result__caption', {\n                    'result__caption--won' : (result === 'won'),\n                    'result__caption--lost': (result === 'lost'),\n                }\n                )}\n                >\n                    {\n                        (result === 'won') ?\n                            <React.Fragment>\n                                {localize('won')}\n                                <IconCheck className='result__icon' />\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                {localize('lost')}\n                                <IconCross className='result__icon' />\n                            </React.Fragment>\n                    }\n                </span>\n            </div>\n        </CSSTransition>\n    </React.Fragment>\n);\n\nResultOverlay.propTypes = {\n    id           : PropTypes.number,\n    onClickRemove: PropTypes.func,\n    result       : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"#4BBFAB\" }),\n      React.createElement(\"path\", { fill: \"#FFF\", fillRule: \"nonzero\", d: \"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" })\n    )\n  );\n});","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\n      \"g\",\n      { fill: \"none\", fillRule: \"evenodd\" },\n      React.createElement(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"#E31C4B\", fillRule: \"nonzero\" }),\n      React.createElement(\"path\", { stroke: \"#FFF\", strokeLinecap: \"round\", d: \"M10.5 5.5l-5 5m5 0l-5-5\" })\n    )\n  );\n});","export * from './duration-percentage';\n","import moment from 'moment';\n\n// TODO: Refactor and simplify, handle tick duration\nexport const getTimePercentage = (start_time, purchase_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(purchase_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(start_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) percentage = 1;\n\n    return Math.round(percentage);\n};\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form-layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract-details.jsx';\nimport Digits               from '../../Contract/Containers/digits.jsx';\nimport InfoBox              from '../../Contract/Containers/info-box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_last_digit_stats = ['match_diff', 'even_odd', 'over_under'].includes(this.props.contract_type)\n            && !this.props.is_contract_mode;\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                Digits={<Digits is_trade_page />}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames={{\n                            enter    : 'contract--enter',\n                            enterDone: 'contract--enter-done',\n                            exit     : 'contract--exit',\n                        }}\n                        unmountOnExit\n                    >\n                        <div className='contract__wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    contract_type   : PropTypes.string,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        contract_type    : modules.trade.contract_type,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen-large.jsx';\nimport ScreenSmall  from './screen-small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import classNames           from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract-type-dialog.jsx';\nimport ContractTypeList      from './contract-type-list.jsx';\nimport TradeTypeInfoDialog   from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem     from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open     : false,\n            is_info_dialog_open: false,\n            item               : {},\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(navigationList[nextIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[0]);\n        }\n    };\n\n    handlePrevClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(navigationList[prevIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({ is_info_dialog_open: false, is_dialog_open: false });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getNavigationList = () => {\n        const navigationList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && navigationList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return navigationList;\n    };\n\n    render() {\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={'contract-type-widget'}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': this.state.is_dialog_open,\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <IconTradeCategory category={this.props.value} className='contract-type-widget__icon-wrapper' />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                        handleInfoClick={this.handleInfoClick}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={this.props.is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={this.state.is_info_dialog_open}\n                    title={this.state.item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_mobile={this.props.is_mobile}\n                        item={this.state.item}\n                        navigationList={this.getNavigationList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category, className }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)}>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category : PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    list           : MobxPropTypes.objectOrObservableObject,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconInfoOutline }            from 'Assets/Common';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`contract-type-item ${value === contract.value ? 'contract-type-item--selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <IconTradeCategory category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <IconInfoOutline />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { Scrollbars }       from 'tt-react-custom-scrollbars';\nimport { IconBack }         from 'Assets/Common/icon-back.jsx';\nimport { IconChevronLeft }  from 'Assets/Common/icon-chevron-left.jsx';\nimport { IconChevronRight } from 'Assets/Common/icon-chevron-right.jsx';\nimport { TradeCategories }  from 'Assets/Trading/Categories/trade-categories.jsx';\nimport Button               from 'App/Components/Form/button.jsx';\nimport { localize }         from '_common/localize';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_mobile,\n    item,\n    navigationList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <IconBack />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__gif'>\n            gif explanation\n        </div>\n        <div className='trade-type-info-dialog__content'>\n            <Scrollbars\n                autoHide\n                style={{ height: '100%' }}\n            >\n                <TradeCategories category={item.value} />\n            </Scrollbars>\n        </div>\n        <div>\n            <Button className='trade-type-info-dialog__choose-button' text={localize('Choose')} onClick={() => onSubmitButtonClick(item)} />\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(navigationList)} >\n                <IconChevronLeft />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                {\n                    navigationList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className={classNames('trade-type-info-navigation__circle-button', {\n                                    'trade-type-info-navigation__circle-button--active': contract.value === item.value,\n                                })}\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(navigationList)} >\n                <IconChevronRight />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    navigationList       : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n\nconst TradeCategories = ({ category }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>\n                            { localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }\n                        </p>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to the barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.') }</p>\n                        <p>{ localize('If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to either the Low barrier or the High barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period') }</p>\n                        <p>{ localize('If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.') }</p>\n                        <p>{ localize('If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).') }</p>\n                        <p>{ localize('If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.') }</p>\n                        <p>{ localize('If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Touches\", you win the payout if the market touches the barrier at any time during the contract period.') }</p>\n                        <p>{ localize('If you select \"Does Not Touch\", you win the payout if the market never touches the barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('Asian options settle by comparing the last tick with the average spot over the period.') }</p>\n                        <p>{ localize('If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.') }</p>\n                        <p>{ localize('If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.') }</p>\n                        <p>{ localize('If the last tick is equal to the average of the ticks, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <p>\n                        not found\n                    </p>\n                );\n                break;\n        }\n    }\n    return (\n        <div>\n            {TradeTypeTemplate}\n        </div>\n    );\n};\n\nTradeCategories.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { TradeCategories };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm-element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm-element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    })\n                ))}\n                {popconfirm_element}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    proposal_info,\n}) => (\n    <React.Fragment>\n        {(proposal_info.has_error || !proposal_info.id) ?\n            <div\n                className={classNames({\n                    'trade-container__error': proposal_info.has_error,\n                })}\n            >\n                {proposal_info.message && <span className='trade-container__error-info'>{proposal_info.message}</span>}\n            </div>\n            :\n            <div className='trade-container__price'>\n                <div className='trade-container__price-info'>\n                    <div className='trade-container__price-info-basis'>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                    <div className='trade-container__price-info-value'><Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} /></div>\n                    <div className='trade-container__price-info-movement'>\n                        {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                    </div>\n                </div>\n                <span>\n                    <Tooltip alignment='left' className='trade-container__price-tooltip' classNameIcon='trade-container__price-tooltip-i' icon='info' message={proposal_info.message} />\n                </span>\n            </div>\n        }\n    </React.Fragment>\n);\n\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message-box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon-close.jsx';\nimport PurchaseResult       from './purchase-result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-container__error'>\n            <div className='purchase-container__error-close-btn' onClick={onClick}>\n                <IconClose className='purchase-container__error-close-btn-ic' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-container__error-result'>\n        <div>\n            <strong className='purchase-container__error-result-header'>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Buy Price')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Payout')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error-balance.jsx';\nexport * from './error-general.jsx';\nexport * from './error-login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='purchase-container__error-login-btn btn--secondary btn--secondary--orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-container__error-result'>\n        <span className='purchase-container__error-info'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='purchase-container__error-login-btn btn--secondary btn--secondary--orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p className='purchase-container__error-login-prompt'>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a className='purchase-container__error-login-link' href='javascript:;'><span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase-lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon-lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-container__lock'>\n        <div>\n            <IconLock className='purchase-container__lock-icon' />\n        </div>\n        <h4 className='purchase-container__lock-header'>{localize('Purchase Locked')}</h4>\n        <Button\n            className='purchase-container__lock-button btn--secondary btn--secondary--orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='purchase-container__lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect className='color1-stroke' width='9' height='7' x='.5' y='6.5' stroke='none' rx='1' />\n            <circle className='color1-fill' cx='5' cy='10' r='1' fill='none' />\n            <path className='color1-stroke' stroke='none' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\n// import StartDate from 'Modules/Trading/Components/Form/TradeParams/start-date.jsx';\n\nexport const form_components = [\n    // { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport ButtonToggleMenu          from 'App/Components/Form/button-toggle-menu.jsx';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/InputField';\nimport AllowEquals               from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_allow_equal,\n    is_equal_checked,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames({ 'three-columns': !is_single_currency });\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <div className={amount_container_class}>\n                <ButtonToggleMenu\n                    buttons_arr={basis_list}\n                    className='dropdown--no-margin'\n                    name='basis'\n                    onChange={onChange}\n                    value={basis}\n                />\n                {!is_single_currency &&\n                <Dropdown\n                    className={classNames('no-margin', { 'trade-container__currency-options': !is_single_currency })}\n                    classNameDisplay='trade-container__currency-options--display'\n                    has_symbol\n                    is_alignment_left\n                    is_nativepicker={false}\n                    list={currencies_list}\n                    name='currency'\n                    value={currency}\n                    onChange={onChange}\n                />\n                }\n                <InputField\n                    className={classNames('trade-container__amount', { 'trade-container__amount--has-currency-options': !is_single_currency })}\n                    classNameInlinePrefix='trade-container__currency'\n                    classNameInput='trade-container__input'\n                    currency={currency}\n                    error_messages={validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    id='amount'\n                    inline_prefix={is_single_currency ? currency : null}\n                    is_autocomplete_disabled\n                    is_float\n                    is_incrementable\n                    is_nativepicker={is_nativepicker}\n                    is_negative_disabled\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    type='tel'\n                    value={amount}\n                />\n            </div>\n            <AllowEquals is_allow_equal={is_allow_equal} onChange={onChange} checked={is_equal_checked} />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_allow_equal    : PropTypes.bool,\n    is_equal_checked  : PropTypes.number,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', this.props.classNameDisplay, {\n                        'dropdown__display--clicked'   : this.state.is_list_visible,\n                        'dropdown__display--has-symbol': this.props.has_symbol,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    {this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className={`symbols dropdown__display-symbol symbols--${(this.props.value || '').toLowerCase()}`} />\n                    }\n                    {!this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                    }\n                </div>\n                {\n                    !is_single_option && <IconArrow className={classNames('dropdown__select-arrow', {\n                        'dropdown__select-arrow--left': this.props.is_alignment_left,\n                    })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        handleSelect={this.handleSelect}\n                                        has_symbol={this.props.has_symbol}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                handleSelect={this.handleSelect}\n                                                has_symbol={this.props.has_symbol}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    classNameDisplay : PropTypes.string,\n    has_symbol       : PropTypes.bool,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Tooltip             from 'App/Components/Elements/tooltip.jsx';\nimport { getCurrencyName } from '_common/base/currency_base';\n\nconst Items = ({\n    handleSelect,\n    has_symbol,\n    items,\n    name,\n    value,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={classNames('list__item', {\n                    'list__item--selected': value === item.value,\n                })}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                {!!has_symbol && item.has_tooltip &&\n                <Tooltip alignment='top' className='list__item-tooltip' message={getCurrencyName(item.value)}>\n                    <i><span className={`symbols list__item-tooltip-symbols symbols--${(item.text || '').toLowerCase()}`} /></i>\n                </Tooltip>\n                }\n                {!!has_symbol && !item.has_tooltip &&\n                <span className={`list__item-text symbols symbols--${(item.text || '').toLowerCase()}`} />\n                }\n                {!has_symbol && <span className='list__item-text'>{item.text}</span>}\n            </div>\n        </React.Fragment>\n    ))\n);\n\nItems.propTypes = {\n    handleSelect: PropTypes.func,\n    has_symbol  : PropTypes.bool,\n    name        : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { isCryptocurrency }      from '_common/base/currency_base';\nimport IncrementButtons          from './increment-buttons.jsx';\nimport Input                     from './input.jsx';\nimport Tooltip                   from '../../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    classNameInlinePrefix,\n    classNameInput,\n    classNamePrefix,\n    currency,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_negative_disabled,\n    is_read_only = false,\n    is_signed = false,\n    is_unit_at_right = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    unit,\n    value,\n}) => {\n    const has_error       = error_messages && !!error_messages.length;\n    let has_valid_length  = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (unit) {\n            e.target.value = e.target.value.replace(unit, '').trim();\n        }\n\n        if (e.target.value === value && type !== 'checkbox') {\n            return;\n        }\n\n        if (type === 'number' || type === 'tel') {\n            const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n            const signed_regex = is_signed ? '^([+\\-\\.0-9])' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if (((is_number) || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation || type === 'tel'\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const getDecimals = (val) => {\n        const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n        return array_value && array_value.length > 1 ? array_value[1].length : 0;\n    };\n\n    const incrementValue = () => {\n        if (max_is_disabled) return;\n        let increment_value;\n\n        const decimal_places = value ? getDecimals(value) : 0;\n        const is_crypto      = !!currency && isCryptocurrency(currency);\n\n        if (is_crypto || (!currency && is_float)) {\n            const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n            increment_value = parseFloat(new_value).toFixed(decimal_places);\n        } else {\n            increment_value = parseFloat((+value) + 1).toFixed(decimal_places);\n        }\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const calculateDecrementedValue = () => {\n        let decrement_value;\n\n        const decimal_places = value ? getDecimals(value) : 0;\n        const is_crypto      = !!currency && isCryptocurrency(currency);\n\n        if (is_crypto || (!currency && is_float)) {\n            const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n            decrement_value = parseFloat(new_value).toFixed(decimal_places);\n        } else {\n            decrement_value = parseFloat((+value) - 1).toFixed(decimal_places);\n        }\n        return decrement_value;\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n        const decrement_value = calculateDecrementedValue();\n        if (is_negative_disabled && decrement_value < 0) return;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    let display_value = value;\n\n    if (unit) {\n        display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n    }\n\n    const is_increment_input = is_incrementable && (type === 'number' || type === 'tel');\n\n    const input =\n        <Input\n            changeValue={changeValue}\n            checked={checked}\n            className={classNames(is_increment_input ? 'input-wrapper__input' : '', inline_prefix ? 'input--has-inline-prefix' : '', 'input', { 'input--error': has_error }, classNameInput)}\n            classNameInlinePrefix={classNameInlinePrefix}\n            data_tip={data_tip}\n            data_value={data_value}\n            display_value={display_value}\n            fractional_digits={fractional_digits}\n            has_error={has_error}\n            id={id}\n            inline_prefix={inline_prefix}\n            is_autocomplete_disabled={is_autocomplete_disabled}\n            is_disabled={is_disabled}\n            is_incrementable={is_increment_input}\n            is_read_only={is_read_only}\n            max_length={max_length}\n            name={name}\n            onClick={onClick}\n            onKeyPressed={onKeyPressed}\n            placeholder={placeholder}\n            required={required}\n            type={type}\n        />;\n\n    const increment_buttons =\n        <div className='input-wrapper'>\n            <IncrementButtons\n                max_is_disabled={max_is_disabled}\n                incrementValue={incrementValue}\n                min_is_disabled={min_is_disabled || (is_negative_disabled && calculateDecrementedValue() < 0)}\n                decrementValue={decrementValue}\n            />\n        </div>;\n\n    const input_tooltip =\n        <Tooltip className={classNames('', { 'with-label': label })} alignment='left' message={has_error ? error_messages[0] : null }>\n            {!!label &&\n            <label htmlFor={name} className='input-field__label'>{label}</label>\n            }\n            {!!helper &&\n            <span className='input-field__helper'>{helper}</span>\n            }\n            {is_increment_input &&\n                increment_buttons\n            }\n            {input}\n        </Tooltip>;\n\n    return (\n        <React.Fragment>\n            {!!prefix &&\n                <div className={classNamePrefix}>\n                    <span className={classNames(`${classNamePrefix}--symbol`, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                </div>\n            }\n            <div\n                className={`input-field ${className}`}\n            >\n                {input_tooltip}\n            </div>\n        </React.Fragment>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked                 : PropTypes.number,\n    className               : PropTypes.string,\n    classNameInlinePrefix   : PropTypes.string,\n    classNameInput          : PropTypes.string,\n    classNamePrefix         : PropTypes.string,\n    currency                : PropTypes.string,\n    error_messages          : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits       : PropTypes.number,\n    helper                  : PropTypes.string,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_negative_disabled    : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Button                    from '../button.jsx';\nimport { IconMinus, IconPlus }   from '../../../../Assets/Common';\n\nconst IncrementButtons = ({\n    decrementValue,\n    incrementValue,\n    max_is_disabled,\n    min_is_disabled,\n}) => (\n    <React.Fragment>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--increment'}\n            is_disabled={max_is_disabled}\n            onClick={incrementValue}\n            tabIndex='-1'\n        >\n            <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n        </Button>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--decrement'}\n            is_disabled={min_is_disabled}\n            onClick={decrementValue}\n            tabIndex='-1'\n        >\n            <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n        </Button>\n    </React.Fragment>\n);\n\nIncrementButtons.propTypes = {\n    decrementValue : PropTypes.func,\n    incrementValue : PropTypes.func,\n    max_is_disabled: PropTypes.bool,\n    min_is_disabled: PropTypes.bool,\n};\n\nexport default IncrementButtons;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Input = ({\n    changeValue,\n    checked,\n    className,\n    classNameInlinePrefix,\n    data_value,\n    data_tip,\n    display_value,\n    fractional_digits,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_incrementable,\n    is_read_only,\n    max_length,\n    name,\n    onClick,\n    onKeyPressed,\n    placeholder,\n    required,\n    type,\n}) => (\n    <React.Fragment>\n        {!!inline_prefix &&\n        <div className={classNameInlinePrefix}>\n            <span className={classNames(classNameInlinePrefix ? `${classNameInlinePrefix}--symbol` : '', 'symbols', `symbols--${inline_prefix.toLowerCase()}`)} />\n        </div>\n        }\n        <input\n            autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n            checked={checked ? 'checked' : ''}\n            className={classNames(className)}\n            data-for={`error_tooltip_${name}`}\n            data-tip={data_tip}\n            data-value={data_value}\n            disabled={is_disabled}\n            id={id}\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onChange={changeValue}\n            onClick={onClick}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={display_value || ''}\n        />\n    </React.Fragment>\n);\n\nInput.propTypes = {\n    changeValue          : PropTypes.func,\n    checked              : PropTypes.number,\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    data_tip             : PropTypes.string,\n    data_value           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    display_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    fractional_digits       : PropTypes.number,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onClick                 : PropTypes.func,\n    onKeyPressed            : PropTypes.func,\n    placeholder             : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Input;\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from '_common/localize';\nimport Tooltip        from 'App/Components/Elements/tooltip.jsx';\nimport InputField     from 'App/Components/Form/InputField';\n\nconst AllowEquals = ({\n    is_allow_equal,\n    checked,\n    onChange,\n}) => (\n    !!is_allow_equal &&\n        <div className='allow-equals'>\n            <InputField\n                className='allow-equals__input-field'\n                classNameInput='allow-equals__input trade-container__input'\n                id='allow_equals'\n                name='contract_type'\n                onChange={onChange}\n                value='is_equal'\n                type='checkbox'\n                checked={checked}\n            />\n            <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n            <Tooltip\n                alignment='left'\n                className='allow-equals__tooltip'\n                classNameIcon='allow-equals__tooltip-info'\n                icon='info'\n                message={localize('Win payout if exit spot is also equal to entry spot.')}\n            />\n        </div>\n);\n\nAllowEquals.propTypes = {\n    checked       : PropTypes.number,\n    is_allow_equal: PropTypes.bool,\n    onChange      : PropTypes.func,\n};\n\nexport default AllowEquals;\n","import classNames     from 'classnames';\nimport { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    IconBarrierUp,\n    IconBarrierDown } from 'Assets/Trading/Barriers';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport InputField     from 'App/Components/Form/InputField';\n\nimport { localize }   from '_common/localize';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n    \n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <IconBarrierUp className='trade-container__barriers--up' />\n                        <IconBarrierDown className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","export * from './icon-barrier-up.jsx';\nexport * from './icon-barrier-down.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierUp = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M8.5 4.207V12.5a.5.5 0 1 1-1 0V4.207L4.854 6.854a.5.5 0 1 1-.708-.708l3.5-3.5a.5.5 0 0 1 .708 0l3.5 3.5a.5.5 0 1 1-.708.708L8.5 4.207z'\n        />\n    </svg>\n);\n\nIconBarrierUp.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierUp };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierDown = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M7.5 11.793V3.5a.5.5 0 0 1 1 0v8.293l2.646-2.647a.5.5 0 1 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 11.793z'\n        />\n    </svg>\n);\n\nIconBarrierDown.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierDown };\n","export default from './duration-wrapper.jsx';\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport Duration                 from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : new_duration_value,\n        });\n    }\n\n    componentDidMount() {\n        const current_unit = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration = this.props.getDurationFromUnit(this.props.duration_unit);\n\n        if (this.props.duration_unit !== current_unit) {\n            this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: this.props.duration_unit });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${current_unit}`, value: this.props.duration });\n        }\n    }\n\n    componentWillReact() {\n        const simple_is_missing_duration_unit = !this.props.is_advanced_duration && this.props.simple_duration_unit === 'd' && this.props.duration_units_list.length === 4;\n        const current_duration_unit           = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration                = this.props.getDurationFromUnit(this.props.duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_not_type_duration     = !this.props.is_advanced_duration && this.props.expiry_type !== 'duration';\n        const advanced_has_wrong_expiry       = this.props.is_advanced_duration\n            && this.props.expiry_type !== this.props.advanced_expiry_type && this.props.duration_units_list.length > 1;\n\n        // intercept changes to current contracts duration_units_list - if they are missing change duration_unit and value in trade_store and ui_store\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n            return;\n        }\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (advanced_has_wrong_expiry) {\n            this.props.onChange({ target: { name: 'expiry_type', value: this.props.advanced_expiry_type } });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${this.props.duration_unit}`, value: this.props.duration });\n        }\n    }\n\n    render() {\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_d: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_h: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_m: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_s      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(DurationWrapper);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from '_common/localize';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    validation_errors,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        onChangeUiStore({ name: duration_name, value });\n        onChange({ target: { name, value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    let max_value, min_value;\n    if (duration_min_max[contract_expiry_type]) {\n        max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n    }\n\n    const props = {\n        shared_input: {\n            max_value,\n            min_value,\n            onChange: changeDurationValue,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n            error_messages  : validation_errors.duration || [],\n        },\n    };\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    ticks={10}\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_t      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick-steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    return (\n        <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n            <label className='range-slider__label' htmlFor='range'>\n                <input\n                    id='range'\n                    className='input trade-container__input range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='range-slider__ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '1.6rem' : '1rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span className='range-slider__caption--first'>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span className='range-slider__caption--last'>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active': (idx + 1) === parseInt(value),\n                        'range-slider__ticks-step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { IconArrow }       from 'Assets/Common';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <IconArrow className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                            // validation_errors={validation_errors.expiry_date} TODO: add validation_errors for expiry date\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default AdvancedDuration;\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\n\nconst TradingDatePicker = ({\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const moment_contract_start_date_time =\n        setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (expiry_type === 'duration') {\n        min_date_expiry.add(1, 'day');\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={validation_errors.duration || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={expiry_date}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n    })\n)(TradingDatePicker);\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }             from 'Assets/Common';\nimport InputField           from 'App/Components/Form/InputField';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from '_common/localize';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        this.setState({\n            holidays,\n            weekends,\n        });\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <IconClear\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from '_common/localize';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","export * from './calendar-days.jsx';\nexport * from './calendar-months.jsx';\nexport * from './calendar-years.jsx';\nexport * from './calendar-decades.jsx';\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { padLeft }      from '_common/string_util';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr } from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    subDays,\n    subMonths,\n    toMoment }          from 'Utils/Date';\nimport { localize }     from '_common/localize';\nimport CommonPropTypes  from './types';\nimport Tooltip          from '../../tooltip.jsx';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date)\n            || moment_date.isAfter(addDays(moment_start_date, 1)))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Tooltip\n                        alignment='top'\n                        className='calendar__cell-tooltip'\n                        classNameIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport CommonPropTypes   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\nimport { localize }          from '_common/localize';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport { month_headers }    from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date         : PropTypes.string,\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","export default from './trading-time-picker.jsx';\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime  = setTime(moment_expiry_date.clone(), market_open_times[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n    \n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","export default from './time-picker.jsx';\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../InputField';\nimport { IconClock }     from '../../../../Assets/Common/icon-clock.jsx';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={selected_time}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <IconClock className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h);\n                            const start_time_reset_minute = start_time_moment.clone().minute(0);\n                            const is_hour_enabled = to_compare_moment.isBetween(\n                                start_time_reset_minute,\n                                end_time_moment);\n                            const is_minute_enabled = to_compare_moment.isBetween(\n                                start_time_moment,\n                                end_time_moment,\n                                'minute');\n                            const is_enabled = is_hour_enabled && is_minute_enabled;\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute(Math.round(time.minute() / interval) * interval);\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    let value = selected_time.isBefore(market_open_time)\n        ? market_open_time.isBefore(server_time)\n            ? server_time\n            : market_open_time\n        : selected_time;\n\n    value = getClosestTime(value, 5);\n    return value.format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit: PropTypes.func,\n    duration_t        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n};\n\nexport default SimpleDuration;\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile-widget.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-container'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full-screen-dialog.jsx';\nimport TradeParams      from '../../Containers/trade-params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details-group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport IconTick     from 'Assets/Contract/icon-tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconError } from 'Assets/Common/icon-error.jsx';\nimport { localize }  from '_common/localize';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error__container'>\n            <IconError type={type} />\n            <p className='error__message'>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","export LastDigitPrediction from './last-digit-prediction.jsx';\n","import { observer }       from 'mobx-react';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport DigitDisplay       from './digit-display.jsx';\nimport LastDigitParticles from './last-digit-particles.jsx';\nimport LastDigitPointer   from './last-digit-pointer.jsx';\n\nconst display_array = Array.from(Array(10).keys()); // digits array [0 - 9]\nclass LastDigitPrediction extends React.Component {\n    state = {};\n\n    componentDidMount() {\n        this.node.querySelectorAll('.digits__digit').forEach((el, idx) => {\n            // get offsetLeft of each Digits\n            this.setState({\n                [idx]: el.offsetLeft,\n            });\n        });\n    }\n\n    getBarrier = (num) => {\n        const  { barrier, contract_type } = this.props;\n\n        const barrier_map = {\n            DIGITMATCH: (val) => val === barrier,\n            DIGITDIFF : (val) => val !== barrier,\n            DIGITOVER : (val) => val > barrier,\n            DIGITUNDER: (val) => val < barrier,\n            DIGITODD  : (val) => val % 2,\n            DIGITEVEN : (val) => !(val % 2),\n        };\n\n        return barrier_map[contract_type](num) ? num : null;\n    };\n\n    render() {\n        const { digits_info, is_ended, is_trade_page, status } = this.props;\n        const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n        const latest_digit = digits_array.slice(-1)[0] || {};\n\n        // 'won' or 'lost' status exists after contract expiry\n        const is_won  = is_ended && status === 'won';\n        // need to explicitly have is_lost condition here\n        // because negating is_won would always be true,\n        // but we only need is_lost condition only once we have the 'won' or 'lost' status\n        const is_lost = is_ended && status === 'lost';\n\n        const position = this.state[latest_digit.digit];\n\n        return (\n            <div\n                ref={node => this.node = node}\n                className='digits'\n            >\n                { display_array.map((idx) => (\n                    <DigitDisplay\n                        barrier={this.getBarrier(idx)}\n                        is_lost={is_lost}\n                        is_trade_page={is_trade_page}\n                        is_won={is_won}\n                        key={idx}\n                        latest_digit={latest_digit}\n                        value={idx}\n                    />\n                ))}\n                { latest_digit.digit >= 0 &&\n                    <LastDigitPointer\n                        is_lost={is_lost}\n                        is_won={is_won}\n                        position={position}\n                    />\n                }\n                <LastDigitParticles\n                    is_won={is_won}\n                    position={position}\n                />\n            </div>\n        );\n    }\n}\n\nLastDigitPrediction.propTypes = {\n    barrier      : PropTypes.number,\n    contract_type: PropTypes.string,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n    status       : PropTypes.string,\n};\n\nexport default observer(LastDigitPrediction);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Digit        from './digit.jsx';\nimport DigitSpot    from './digit-spot.jsx';\n\nconst DigitDisplay = ({\n    barrier,\n    is_lost,\n    is_trade_page,\n    is_won,\n    latest_digit,\n    value,\n}) => {\n    const { digit, spot } = latest_digit;\n    const is_latest       = value === digit;\n    const is_selected     = value === barrier;\n\n    return (\n        <div\n            className={classNames('digits__digit', {\n                'digits__digit--win' : is_won && is_latest,\n                'digits__digit--loss': is_lost && is_latest,\n            })}\n        >\n            { is_latest && spot &&\n                <DigitSpot\n                    current_spot={spot}\n                    is_lost={is_lost}\n                    is_won={is_won}\n                />\n            }\n            <Digit\n                is_latest={is_latest}\n                is_lost={is_lost}\n                is_trade_page={is_trade_page}\n                is_selected={is_selected}\n                is_won={is_won}\n                value={value}\n            />\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    barrier      : PropTypes.number,\n    is_lost      : PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won       : PropTypes.bool,\n    latest_digit : PropTypes.object,\n    value        : PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Digit = ({\n    is_latest,\n    is_lost,\n    is_selected,\n    is_trade_page,\n    is_won,\n    value,\n}) => (\n    <span\n        className={classNames('digits__digit-value', {\n            'digits__digit-value--latest'  : is_latest,\n            'digits__digit-value--selected': is_selected,\n            'digits__digit-value--blink'   : is_won && is_latest && is_trade_page,\n            'digits__digit-value--win'     : is_won && is_latest,\n            'digits__digit-value--loss'    : is_lost && is_latest,\n        })}\n    >\n        {value}\n    </span>\n);\n\nDigit.propTypes = {\n    is_latest    : PropTypes.bool,\n    is_lost      : PropTypes.bool,\n    is_selected  : PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won       : PropTypes.bool,\n    value        : PropTypes.number,\n};\n\nexport default Digit;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst DigitSpot = ({\n    current_spot,\n    is_lost,\n    is_won,\n}) => (\n    <div className='digits__digit-spot'>\n        <span className='digits__digit-spot-value'>\n            {current_spot.slice(0, -1)}\n        </span>\n        <span\n            className={classNames('digits__digit-spot-last', {\n                'digits__digit-spot-last--win' : is_won,\n                'digits__digit-spot-last--loss': is_lost,\n            })}\n        >\n            {current_spot.slice(-1)}\n        </span>\n    </div>\n);\n\nDigitSpot.propTypes = {\n    current_spot: PropTypes.string,\n    is_lost     : PropTypes.bool,\n    is_won      : PropTypes.bool,\n};\n\nexport default DigitSpot;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst LastDigitParticles = ({\n    is_won,\n    position,\n}) => (\n    <div\n        className={classNames('digits__particles', {\n            'digits__particles--explode': is_won,\n        })}\n        style={{ marginLeft: position }}\n    >\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n    </div>\n);\n\nLastDigitParticles.propTypes = {\n    is_won  : PropTypes.bool,\n    position: PropTypes.number,\n};\n\nexport default LastDigitParticles;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst LastDigitPointer = ({\n    is_lost,\n    is_won,\n    position,\n}) => (\n    <span\n        className='digits__pointer'\n        style={{ marginLeft: position }}\n    >\n        <IconPriceMove\n            className={classNames('digits__icon', {\n                'digits__icon--win' : is_won,\n                'digits__icon--loss': is_lost,\n            })}\n            classNamePath='digits__icon-color'\n            type='profit'\n        />\n    </span>\n);\n\nLastDigitPointer.propTypes = {\n    is_lost : PropTypes.bool,\n    is_won  : PropTypes.bool,\n    position: PropTypes.number,\n};\n\nexport default LastDigitPointer;\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxExpired  from './info-box-expired.jsx';\nexport InfoBoxGeneral  from './info-box-general.jsx';\nexport InfoBoxLongcode from './info-box-longcode.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport SellInfo     from '../Sell/sell-info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining-time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract-sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell-button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='btn--secondary btn--secondary--green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { IconFlag } from 'Assets/Common';\n\nconst InfoBoxLongcode = ({\n    contract_info,\n}) => (\n    <div className='info-box-longcode'>\n        <IconFlag className='info-box-longcode-icon' />\n        <span className='info-box-longcode-text'>{contract_info.longcode}</span>\n    </div>\n);\n\nInfoBoxLongcode.propTypes = {\n    longcode: PropTypes.string,\n};\n\nexport default observer(InfoBoxLongcode);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport classNames       from 'classnames';\nimport { IconError }    from 'Assets/Common/icon-error.jsx';\nimport { IconInfoBlue } from 'Assets/Common/icon-info-blue.jsx';\nimport { IconWarning }  from 'Assets/Common/icon-warning.jsx';\nimport { IconSuccess }  from 'Assets/Common/icon-success.jsx';\nimport CloseButton      from './close-button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }             from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                { data.type === 'ERROR'   && <IconError className='toast__icon-type' /> }\n                { data.type === 'INFO'    && <IconInfoBlue className='toast__icon-type' /> }\n                { data.type === 'SUCCESS' && <IconSuccess className='toast__icon-type' /> }\n                { data.type === 'WARNING' && <IconWarning className='toast__icon-type' /> }\n            </div>\n            <div className='toast__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({\n    children, is_contract_mode,\n    is_positions_drawer_on,\n}) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-positions-drawer': is_positions_drawer_on,\n            'app-contents--contract-mode'        : is_contract_mode,\n        })}\n    >\n        {/* Calculate height of user screen and offset height of header and footer */}\n        <Scrollbars\n            autoHide\n            style={{ height: 'calc(100vh - 83px)' }}\n        >\n            {children}\n        </Scrollbars>\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_positions_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ modules, ui }) => ({\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_language_dialog_visible,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_settings_dialog_on,\n    network_status,\n    togglePositionsDrawer,\n    toggleSettingsDialog,\n}) => (\n    <React.Fragment>\n        <div className='footer__links footer__links--left'>\n            {\n                is_logged_in &&\n                <TogglePositions\n                    is_positions_drawer_on={is_positions_drawer_on}\n                    togglePositionsDrawer={togglePositionsDrawer}\n                />\n            }\n        </div>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer__links'>\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_language_visible={is_language_dialog_visible}\n                is_settings_visible={is_settings_dialog_on}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePositionsDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        network_status            : common.network_status,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network-status.jsx';\nexport * from './toggle-fullscreen.jsx';\nexport * from './toggle-positions.jsx';\nexport * from './toggle-settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport classNames        from 'classnames';\n\nconst IconPositions = ({ className }) => {\n    const IconType = (\n        <g fill='none' fillRule='evenodd'>\n            <path className='color1-fill color3-fill' fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2zM1 8.128V12.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V8.128l-2.804 1.557a2.5 2.5 0 0 1-1.214.315H5.018a2.5 2.5 0 0 1-1.214-.315L1 8.128zm0-1.144L4.29 8.81A1.5 1.5 0 0 0 5.018 9h5.964a1.5 1.5 0 0 0 .728-.189L15 6.984V3.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v3.484zM6.5 8a.5.5 0 0 1 0-1h3a.5.5 0 0 1 0 1h-3z' />\n        </g>\n    );\n\n    return (\n        <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n            {IconType}\n        </svg>\n    );\n};\n\nIconPositions.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPositions };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPositions } from 'Assets/Footer';\n\nconst TogglePositions = ({\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames('ic-positions', 'footer__link', {\n        'ic-positions--active': is_positions_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n        >\n            <IconPositions className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings-dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer__icon ic-settings__icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames={{\n                    enter    : 'settings-dialog--enter',\n                    enterDone: 'settings-dialog--enter-done',\n                    exit     : 'settings-dialog--exit',\n                }}\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings ic-settings--active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'settings-dialog__container--show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog__container', {\n            'settings-dialog__container--hide': this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-dialog__header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' classNameHeader='settings-dialog__tab-header' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs-item.jsx';\nexport * from './tabs-wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs-wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', `tab-container--${this.props.alignment}`);\n        const tab_header_class = (icon_name) => classNames(\n            this.props.classNameHeader,\n            'tab__header',\n            { 'tab__icon': icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment      : PropTypes.string,\n    classNameHeader: PropTypes.string,\n    list           : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings-chart.jsx';\nexport GeneralSettings  from './settings-general.jsx';\nexport LanguageSettings from './settings-language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings-control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='settings-dialog__tab-content'>\n        <div className='settings-dialog__chart-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconCountryFlag } from 'Assets/Common';\nimport { connect }         from 'Stores/connect';\nimport SettingsControl     from '../../Components/Elements/SettingsDialog/settings-control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='settings-dialog__tab-content'>\n        <div className='settings-dialog__general-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <IconCountryFlag\n                    className={'settings-dialog__language-flag'}\n                    type={(curr_language || 'EN').toLowerCase()}\n                />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language-dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport {\n    IconBack,\n    IconCountryFlag }  from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('settings-dialog__language-dialog-container', {\n        'settings-dialog__language-dialog-container--show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='settings-dialog__language-header' onClick={hide}>\n                <IconBack className='settings-dialog__arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='settings-dialog__language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='settings-dialog__language-row'>\n                            <a className='settings-dialog__language-link' href={getURL(key)} >\n                                <IconCountryFlag\n                                    className={'settings-dialog__language-row-flag settings-dialog__language-flag'}\n                                    type={key.replace(/(\\s|_)/, '-').toLowerCase()}\n                                />\n                                <span className='settings-dialog__language-name'>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { withRouter }  from 'react-router';\nimport { formatMoney } from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    DepositButton,\n    InstallPWAButton,\n    LoginButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    UpgradeButton }    from 'App/Components/Layout/Header';\nimport header_links    from 'App/Constants/header-links';\nimport { connect }     from 'Stores/connect';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    is_virtual,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='header__menu-right'>\n                    <div className='acc-info__container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                className='acc-info__button'\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    is_virtual={is_virtual}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                                { !!(can_upgrade_to && is_virtual) &&\n                                <UpgradeButton className='acc-info__button' />\n                                }\n                                { !(is_virtual) &&\n                                <DepositButton className='acc-info__button' />\n                                }\n                            </React.Fragment>\n                            :\n                            <LoginButton className='acc-info__button' />\n                        }\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    can_upgrade_to           : PropTypes.string,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool,\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    is_virtual               : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func,\n    pwa_prompt_event         : PropTypes.object, // TODO: add click handler\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        can_upgrade_to           : client.can_upgrade_to,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        is_virtual               : client.is_virtual,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account-info.jsx';\nexport * from './deposit-button.jsx';\nexport * from './install-pwa-button.jsx';\nexport * from './login-button.jsx';\nexport * from './upgrade-button.jsx';\nexport * from './menu-links.jsx';\nexport * from './toggle-menu-drawer.jsx';\nexport * from './toggle-notifications-drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    is_virtual,\n    onClickUpgrade,\n    toggleDialog,\n}) => (\n    <div className='acc-info__wrapper'>\n        <div\n            className={classNames('acc-info', {\n                'acc-info--show'      : is_dialog_on,\n                'acc-info--is-virtual': is_virtual,\n            })}\n            onClick={toggleDialog}\n        >\n            <p\n                className='acc-info__id'\n                title={loginid}\n            >\n                {loginid}&nbsp;\n            </p>\n            {\n                typeof balance !== 'undefined' &&\n                <p className='acc-info__balance'>\n                    <span\n                        className={classNames('symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })}\n                    />\n                    {balance}\n                </p>\n            }\n            <IconArrow className='acc-info__select-arrow' is_bold={true} />\n        </div>\n        <CSSTransition\n            in={is_dialog_on}\n            timeout={200}\n            classNames={{\n                enter    : 'acc-switcher__wrapper--enter',\n                enterDone: 'acc-switcher__wrapper--enter-done',\n                exit     : 'acc-switcher__wrapper--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='acc-switcher__wrapper'>\n                <AccountSwitcher\n                    is_visible={is_dialog_on}\n                    toggle={toggleDialog}\n                    is_upgrade_enabled={is_upgrade_enabled}\n                    onClickUpgrade={onClickUpgrade}\n                />\n            </div>\n        </CSSTransition>\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_virtual        : PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account-switcher.jsx';\n","import classNames               from 'classnames';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport { isEmptyObject }        from '_common/utility';\nimport { IconAccountsCurrency } from 'Assets/Header/AccountsCurrency';\nimport { IconLogout }           from 'Assets/Header/Drawer';\nimport { requestLogout }        from 'Services/index';\nimport { connect }              from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggle();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        requestLogout();\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n        // TODO: Once we allow other real accounts (apart from CR), assign correct title and group accounts into list with correct account title/types\n        // e.g - Real, Financial, Gaming, Investment\n        const real_accounts = this.props.account_list.filter(acc => !acc.is_virtual);\n        const vrt_account   = this.props.account_list.find(acc => acc.is_virtual);\n\n        const main_account_title = real_accounts.length > 1 ? localize('Real accounts') : localize('Real account');\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef}>\n                {\n                    // Make sure this block is not rendered if there are no real accounts\n                    !!(this.props.account_list.length && real_accounts.length) &&\n                    <div className='acc-switcher__list-group'>\n                        <span className='acc-switcher__list-title'>\n                            {main_account_title}\n                        </span>\n                        <div className='acc-switcher__accounts'>\n                            {\n                                real_accounts.map((account) => (\n                                    <div\n                                        key={account.loginid}\n                                        className={classNames('acc-switcher__account', {\n                                            'acc-switcher__account--selected': (account.loginid === this.props.account_loginid),\n                                        })}\n                                        onClick={this.doSwitch.bind(this, account.loginid)}\n                                    >\n                                        <span className={'acc-switcher__id'}>\n                                            <IconAccountsCurrency\n                                                className={`acc-switcher__id-icon acc-switcher__id-icon--${account.icon}`}\n                                                type={account.icon}\n                                            />\n                                            {account.loginid}\n                                        </span>\n                                    </div>\n                                ))\n                            }\n                        </div>\n\n                        {   // TODO: Add link to account opening page for upgrade or multi account page for new account.\n                            // Update text below for handling types of account to create :- e.g - Investment\n                            !!(this.props.is_upgrade_enabled && this.props.upgrade_info.can_open_multi) &&\n                            <div className='acc-switcher__new-account'>\n                                <span className='acc-switcher__new-account-title'>{localize('Add new account')}</span>\n                            </div>\n                        }\n                    </div>\n                }\n                {\n                    !isEmptyObject(vrt_account) &&\n                    <div className='acc-switcher__list--virtual'>\n                        <span className='acc-switcher__list-title'>\n                            {localize('Virtual account')}\n                        </span>\n                        <div className='acc-switcher__accounts'>\n                            <div\n                                className={classNames('acc-switcher__account', {\n                                    'acc-switcher__account--selected': (this.props.virtual_loginid === this.props.account_loginid),\n                                })}\n                                onClick={this.doSwitch.bind(this, this.props.virtual_loginid)}\n                            >\n                                <span className={classNames('acc-switcher__id', 'acc-switcher__id--virtual')}>\n                                    {this.props.virtual_loginid}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { !!(this.props.is_upgrade_enabled && this.props.is_virtual) &&\n                <div className='acc-switcher__new-account'>\n                    <span className='acc-switcher__new-account-title'>{localize('Upgrade to Real Account')}</span>\n                </div>\n                }\n                <div className='acc-switcher__logout' onClick={this.handleLogout}>\n                    <span className='acc-switcher__logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='acc-switcher__logout-icon drawer__icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list          : PropTypes.array,\n    account_loginid       : PropTypes.string,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_upgrade_enabled    : PropTypes.bool,\n    is_virtual            : PropTypes.bool,\n    is_visible            : PropTypes.bool,\n    onClickUpgrade        : PropTypes.func,\n    toggle                : PropTypes.func,\n    togglePositionsDrawer : PropTypes.func,\n    upgrade_info          : PropTypes.object,\n    virtual_loginid       : PropTypes.string,\n};\n\nconst account_switcher = connect(\n    ({ client, ui }) => ({\n        account_list          : client.account_list,\n        account_loginid       : client.loginid,\n        is_logged_in          : client.is_logged_in,\n        is_virtual            : client.is_virtual,\n        switchAccount         : client.switchAccount,\n        upgrade_info          : client.upgrade_info,\n        virtual_loginid       : client.virtual_account_loginid,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","export * from './icon_accounts_currency.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconAccountsCurrency = ({ type, className }) => {\n    let IconCurrency;\n    if (type) {\n        switch (type) {\n            case 'aud':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#FFF'>\n                            <path d='M6.853 15.319l.674-.84-1.04.188-.362-1.008-.393 1.008-1.062-.188.675.821-.701.821 1.069-.168.36.988.393-.987 1.09.194zM14.819 16.06l.382-.475-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.606-.095.204.56.222-.56.618.111zM14.819 5.542l.382-.477-.59.107-.205-.57-.222.57-.603-.107.383.466-.397.465.606-.095.204.56.222-.56.618.11zM17.291 8.263l.382-.476-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11zM12.68 9.473l.382-.476-.59.107-.204-.572-.223.572-.602-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11z' />\n                        </g>\n                        <g fill='#283991'>\n                            <path d='M2.099 3.87c-.157.202-.307.41-.448.623h1.07L2.1 3.87zM7.26 9.993h.962l-.963-.962zM4.068 1.947c-.23.169-.45.348-.664.536l.664.663v-1.2zM3.105 9.993h.963V9.03zM9.993 0c-.948 0-1.864.135-2.734.382v2.764L9.993.412V0zM9.993 9.072V7.684H8.606zM.412 9.993l2.31-2.309H.272A10.004 10.004 0 0 0 0 9.994h.412zM8.605 4.493h1.388V3.105z' />\n                        </g>\n                        <g fill='#FFF'>\n                            <path d='M9.993 9.363v-.291L8.606 7.684h1.387v-.496H7.818zM2.722 4.493H1.65c-.107.162-.209.328-.307.497H3.45l-1.25-1.25a9.019 9.019 0 0 0-.1.13l.623.623zM4.068 9.03v.963h.497v-1.69l-1.69 1.69h.23zM7.26.382c-.168.047-.334.099-.497.155v3.336l3.23-3.23v-.23L7.26 3.146V.382zM4.05 7.684l.018-.017.48-.48H.401c-.048.165-.091.33-.13.497h2.45l-2.31 2.31h1.33l2.309-2.31z' />\n                            <path d='M.412 9.993l2.31-2.309-2.31 2.31zM9.993 4.99v-.497H8.605l1.388-1.388v-1.33L6.78 4.99z' />\n                            <path d='M9.993 3.105L8.605 4.493l1.388-1.388zM4.068 3.146l-.664-.663c-.235.207-.461.425-.676.653l1.34 1.34.014.015.483.482V1.605c-.169.11-.335.222-.497.342v1.2zM7.26 9.03l.962.963H9.49L6.763 7.266v2.727h.496z' />\n                        </g>\n                        <path d='M4.068 4.476l.034.034-.034-.034z' fill='#D32030' />\n                        <path d='M8.314 7.684l-.496-.496h2.175V4.99H6.78l-.016.017V4.99h.016l3.214-3.214V.643l-3.23 3.23V.537a9.957 9.957 0 0 0-2.198 1.068v3.368l.017.017h-.017v-.017l-.483-.482.003.002h-.017v-.017l-1.34-1.34c-.184.195-.36.396-.528.605L3.449 4.99H1.344a9.918 9.918 0 0 0-.942 2.198h4.145l.018-.018v.018h-.018l-.479.48v.017h-.017L1.74 9.993h1.134l1.69-1.69v1.69h2.198V7.266L9.49 9.993h.375c.043-.044.087-.089.129-.135v-.495l-1.68-1.679z' fill='#F44336' />\n                        <path fill='#D32030' d='M6.763 3.873l3.23-3.23zM4.092 7.709v-.042l-.041.042zM4.589 7.17l-.042.042h.042zM6.763 5.03l.04-.04h-.04zM4.068 4.517h.04l-.006-.007-.034-.034zM4.606 5.013l-.041-.04v.04z' />\n                    </g>\n                );\n                break;\n            case 'bch':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#8DC351' cx='10' cy='10' r='10' />\n                        <path d='M13.254 6.584c-.485-1.233-1.7-1.344-3.117-1.069l-.505-1.758-1.07.307.492 1.712c-.281.08-.568.169-.852.256L7.708 4.31l-1.07.306.504 1.758c-.23.071-.456.141-.678.205l-.002-.006-1.476.423.328 1.144s.786-.243.777-.224c.433-.124.646.087.75.292l.575 2.003a.951.951 0 0 1 .115-.025l-.113.032.804 2.807c.02.142.002.382-.3.47.017.008-.779.222-.779.222l.155 1.34 1.392-.4c.26-.074.516-.142.766-.213l.51 1.778 1.07-.306-.505-1.76c.287-.075.573-.155.858-.237l.501 1.752 1.07-.307-.508-1.775c1.77-.62 2.899-1.434 2.57-3.169-.263-1.396-1.077-1.82-2.169-1.772.53-.494.758-1.161.401-2.063zm-.406 4.231c.381 1.33-1.937 1.83-2.662 2.04l-.676-2.357c.725-.208 2.94-1.069 3.338.318v-.001zm-1.451-3.181c.346 1.21-1.592 1.612-2.196 1.785l-.613-2.137c.604-.173 2.447-.909 2.809.352z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'btc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#F7931A' cx='10' cy='10' r='10' />\n                        <path d='M14.493 8.762c.196-1.31-.802-2.014-2.165-2.484l.442-1.775-1.08-.269-.431 1.729c-.284-.072-.575-.138-.866-.204l.434-1.74-1.08-.269-.442 1.774c-.235-.053-.466-.106-.69-.162l.001-.006-1.49-.372-.287 1.154s.802.184.785.195c.437.11.516.399.503.629l-.504 2.022a.96.96 0 0 1 .113.035l-.115-.028-.706 2.833c-.054.132-.19.332-.496.256.012.016-.785-.196-.785-.196l-.536 1.237 1.406.35c.262.066.518.135.77.199l-.447 1.795 1.08.269.442-1.775c.295.08.581.153.861.223l-.441 1.767 1.08.27.447-1.792c1.842.349 3.227.208 3.81-1.458.47-1.341-.023-2.116-.992-2.62.706-.163 1.237-.627 1.38-1.587zm-2.469 3.462c-.333 1.342-2.592.616-3.325.434l.594-2.378c.733.183 3.08.545 2.731 1.944zm.335-3.48c-.305 1.22-2.185.6-2.794.447l.537-2.156c.61.152 2.574.435 2.257 1.708z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'dai':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle stroke='#F7B14A' strokeWidth='.625' cx='10' cy='10' r='9.688' />\n                        <path fill='#FFCC80' d='M3.75 10H10v6.25z' />\n                        <path fill='#FFB74D' d='M10 3.75v8.125L3.75 10z' />\n                        <path fill='#FFF' d='M5.625 10L10 5.625v2.5L8.125 10z' />\n                        <path fill='#F7C57B' d='M16.25 10H10v6.25z' />\n                        <path fill='#F7B14A' d='M10 3.75v8.125L16.25 10z' />\n                        <path fill='#FFF' d='M14.375 10L10 5.625v2.5L11.875 10z' />\n                    </g>\n                );\n                break;\n            case 'eth' :\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#EBF0F1' cx='10' cy='10' r='10' />\n                        <g fill='#12100B'>\n                            <path fillOpacity='.8' d='M10.311 2.5v10.353l4.686-2.715z' />\n                            <path fillOpacity='.45' d='M10.311 2.5l-4.686 7.638 4.686 2.718z' />\n                            <path fillOpacity='.8' d='M10.311 13.73v3.767L15 11.01z' />\n                            <path fillOpacity='.45' d='M10.311 17.497v-3.768L5.625 11.01z' />\n                            <path fillOpacity='.6' d='M10.311 12.858l4.686-2.72-4.686-2.093zM5.625 10.137l4.686 2.721V8.045z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'eur':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#F8D12E'>\n                            <path d='M9.976 1.733l.244.75h.789l-.639.464.244.75-.638-.464-.638.464.244-.75-.639-.464h.79zM9.976 15.894l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM13.862 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM16.514 5.604l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM16.577 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.639-.464h.79zM3.534 5.604l.244.75h.788l-.638.464.244.75-.638-.463-.638.463.243-.75-.638-.464h.79zM17.129 8.757l.243.75h.79l-.639.463.244.75-.638-.463-.639.464.244-.75-.638-.464h.789zM2.931 8.757l.244.75h.789l-.639.463.244.75-.638-.463-.638.464.244-.75-.638-.464h.788zM3.448 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.638-.464h.789zM13.977 14.942l.243.75h.79l-.639.464.244.75-.638-.464-.639.464.244-.75-.638-.464h.79zM6.215 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM5.928 14.894l.243.75h.79l-.639.464.244.75-.638-.464-.638.464.243-.75-.638-.464h.789z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'gbp':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <g fill='#283991'>\n                            <path d='M2.067 3.912a9.964 9.964 0 0 0-1.723 3.48h5.203l-3.48-3.48zM19.656 7.391a9.964 9.964 0 0 0-1.723-3.48l-3.48 3.48h5.203zM.344 12.609a9.965 9.965 0 0 0 1.723 3.48l3.48-3.48H.344zM16.088 2.067a9.964 9.964 0 0 0-3.48-1.723v5.203l3.48-3.48zM3.912 17.933a9.964 9.964 0 0 0 3.48 1.723v-5.203l-3.48 3.48zM7.391.344a9.965 9.965 0 0 0-3.48 1.723l3.48 3.48V.344zM12.609 19.656a9.965 9.965 0 0 0 3.48-1.723l-3.48-3.48v5.203zM14.453 12.609l3.48 3.48a9.964 9.964 0 0 0 1.723-3.48h-5.203z' />\n                        </g>\n                        <g fill='#F44336'>\n                            <path d='M19.915 8.696h-8.61V.085a10.1 10.1 0 0 0-2.61 0v8.61H.086a10.1 10.1 0 0 0 0 2.61h8.61v8.61a10.099 10.099 0 0 0 2.61 0v-8.61h8.61a10.099 10.099 0 0 0 0-2.61z' />\n                            <path d='M12.609 12.609l4.462 4.462c.205-.205.401-.42.588-.642l-3.82-3.82h-1.23zM7.391 12.609L2.93 17.07c.205.205.42.401.642.588l3.82-3.82v-1.23zM7.394 7.391L2.932 2.93c-.206.205-.401.42-.588.642l3.82 3.82h1.23zM12.609 7.391L17.07 2.93c-.205-.205-.42-.401-.642-.588l-3.82 3.82v1.23z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'ltc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#BFBBBB' cx='10' cy='10' r='10' />\n                        <path fill='#FFF' d='M6.517 12.009l-.892.346.43-1.724.902-.363L8.258 5h3.206l-.95 3.873.882-.357-.425 1.718-.892.357-.53 2.177h4.826L13.829 15H5.783z' />\n                    </g>\n                );\n                break;\n            case 'usd':\n                IconCurrency = (\n                    <g fill='none' fillRule='evenodd'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <path d='M12.18 1.833h3.583A9.951 9.951 0 0 0 10.578.018h-.308c.906.114 1.323.783 1.91 1.815zm.926 3.628h5.799a9.976 9.976 0 0 0-1.186-1.814h-5.066c.179.564.33 1.173.453 1.814zm6.839 3.629a9.913 9.913 0 0 0-.331-1.814h-6.19c.062.594.103 1.202.123 1.814h6.398zm-.345 3.629a9.885 9.885 0 0 0 .341-1.814h-6.24c-.022.612-.064 1.22-.127 1.814h6.025zm-6.789 3.629h4.865a9.985 9.985 0 0 0 1.203-1.815h-5.61a15.76 15.76 0 0 1-.458 1.815zm-2.818 3.627a9.845 9.845 0 0 0 5.698-1.812h-3.616c-.642 1.122-1.066 1.812-2.082 1.812z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M4.223 1.833h8.288C11.924.8 11.176.132 10.27.018h-.861a9.95 9.95 0 0 0-5.186 1.815zM2.268 3.647A9.983 9.983 0 0 0 1.082 5.46H13.73a15.962 15.962 0 0 0-.453-1.814H2.267zM.041 9.09h14.077c-.02-.612-.062-1.22-.124-1.814H.373A9.9 9.9 0 0 0 .04 9.09zm.346 3.629H13.99a25.53 25.53 0 0 0 .127-1.814H.046a9.87 9.87 0 0 0 .341 1.814zm.721 1.814a9.97 9.97 0 0 0 1.202 1.815h10.952c.18-.564.334-1.173.458-1.815H1.108zm8.462 5.433l.061.002c.12.004.24.007.362.007 1.016 0 1.845-.69 2.487-1.813H4.295a9.843 9.843 0 0 0 5.275 1.804z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M9.787.005A9.99 9.99 0 0 0 .043 9.093h9.744V.005z' fill='#283991' fillRule='nonzero' />\n                        <path fill='#EFEFEF' fillRule='nonzero' d='M2 5.65l.152.468h.493l-.399.289.152.468L2 6.585l-.4.29.153-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.399.289.152.468L2 8.238l-.4.29.153-.468-.399-.29h.493zM3.656 3.17l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.468-.399-.29h.494zm0 1.653l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.469-.399-.289h.494zm0 1.653l.152.468h.493l-.399.29.153.467-.399-.289-.399.29.152-.469-.399-.289h.494zM.742 7.701L.59 7.233l.398-.289H.496L.484 6.91a9.53 9.53 0 0 0-.148.507l.007-.005.399.29zM1.6 5.222l.4-.29.398.29-.152-.468.399-.29h-.493l-.153-.467-.152.468h-.182a9.409 9.409 0 0 0-.099.154l.187.135-.152.468zm2.056-2.769l.399.29-.153-.468.4-.29h-.286a9.92 9.92 0 0 0-.7.573l-.06.185.4-.29zm1.258-.537l.398-.29.4.29-.153-.468.399-.289h-.493l-.021-.063a9.895 9.895 0 0 0-.494.268l.116.084-.152.468zm.398.428l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm1.657-5.786l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.469-.399-.289h.493zm0 1.653l.152.468h.493l-.398.29.152.467-.4-.289-.398.29.152-.469-.399-.289h.493zM8.625.691l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.289h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494z' />\n                    </g>\n                );\n                break;\n            case 'ust':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M10 0c5.523 0 10 4.477 10 10s-4.478 10-10 10S0 15.524 0 10 4.477 0 10 0' fill='#53AE94' />\n                        <path d='M11.234 8.668V7.18h3.402V4.913H5.373V7.18h3.402v1.486c-2.765.127-4.844.675-4.844 1.331 0 .656 2.08 1.204 4.844 1.331v4.765h2.46v-4.765c2.76-.127 4.835-.675 4.835-1.33s-2.075-1.203-4.835-1.33m0 2.256c-.07.004-.426.025-1.22.025-.635 0-1.081-.018-1.239-.026v.002c-2.443-.108-4.266-.534-4.266-1.043 0-.509 1.824-.934 4.266-1.042v1.661c.16.011.618.038 1.25.038.758 0 1.14-.032 1.21-.038V8.84c2.437.109 4.257.534 4.257 1.042 0 .507-1.82.933-4.258 1.041' fill='#FFF' />\n                    </g>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'>\n            {IconCurrency}\n        </svg>\n\n    );\n};\n\nIconAccountsCurrency.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconAccountsCurrency };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path\n            className='color1-fill'\n            fill='#000'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M14.293 8.5H8.5a.5.5 0 0 1 0-1h5.793l-1.647-1.646a.5.5 0 1 1 .708-.708l2.5 2.5a.5.5 0 0 1 0 .708l-2.5 2.5a.5.5 0 1 1-.708-.708L14.293 8.5zM11 10.962a.5.5 0 0 1 1 0v1.692C12 13.4 11.38 14 10.625 14h-5.25C4.619 14 4 13.401 4 12.654V3.346C4 2.6 4.62 2 5.375 2h5.25C11.381 2 12 2.599 12 3.346v1.692a.5.5 0 0 1-1 0V3.346C11 3.16 10.836 3 10.625 3h-5.25C5.165 3 5 3.159 5 3.346v9.308c0 .187.164.346.375.346h5.25c.21 0 .375-.159.375-.346v-1.692z'\n        />\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst DepositButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Deposit')}\n        // TODO: Redirect to Deposit page in Cashier\n        // onClick={redirectToCashierDeposit}\n    />\n);\n\nDepositButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { DepositButton };\n","import classNames   from 'classnames';\nimport React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    className,\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className={classNames(className, 'btn--primary btn--primary--orange')}\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    className   : PropTypes.string,\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='header__navbar-icons header__navbar-icons--binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                        <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}</span>\n                    </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport UILoader           from 'App/Components/Elements/ui-loader.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='login-prompt__icon-svg disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu-drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='header__menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer-item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('drawer__parent-item', {\n            'drawer__parent-item--show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer__items', {\n            'drawer__items--show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer__item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <SwitchButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('header__navbar-icons', `header__navbar-icons--${icon_class}`);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_positions_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePositionsDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer__items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer__icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer__icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer__icon' />}\n                    link_to={routes.statement}\n                />\n                <hr className='hr' />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer__footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer__icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_positions_drawer_on) {\n                        togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePositionsDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { EmptyNotification } from './empty-notification.jsx';\nimport { DrawerItem }        from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <EmptyNotification />\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    list: PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport { IconBell } from 'Assets/Header/NavBar';\n\nconst EmptyNotification = () => (\n    <div className='drawer__no-notifications-container'>\n        <div className='drawer__no-notifications'>\n            <div className='drawer__bell'>\n                <IconBell className='drawer__bell-icon' />\n            </div>\n            <div>\n                <h4 className='drawer__no-notifications-header'>{localize('No Notifications')}</h4>\n                <span className='drawer__no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n            </div>\n        </div>\n    </div>\n);\n\nexport { EmptyNotification };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='header__icon' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        // TODO: Combine portfolio and statement into reports page\n        icon   : <IconStatement className='header__icon' />,\n        text   : localize('Reports'),\n        link_to: routes.statement,\n    },\n];\n\nexport default header_links;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial-of-service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\nimport Button     from 'App/Components/Form/button.jsx';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='full-page-modal__dialog'>\n                    <h1 className='full-page-modal__header'>{title}</h1>\n                    <p className='full-page-modal__content'>{children}</p>\n                    <div className='full-page-modal__footer'>\n                        <Button\n                            className={classNames('full-page-modal__button', 'btn--secondary btn--secondary--orange')}\n                            has_effect\n                            text={cancel_button_text}\n                            onClick={onCancel}\n                        />\n                        <Button\n                            className={classNames('full-page-modal__button', 'btn--primary btn--primary--orange')}\n                            has_effect\n                            text={confirm_button_text}\n                            onClick={onConfirm}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register-service-worker';\nexport { unregister } from './register-service-worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}